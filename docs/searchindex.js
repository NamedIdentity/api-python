Search.setIndex({"docnames": ["autoapi/abacusai/algorithm/index", "autoapi/abacusai/annotation/index", "autoapi/abacusai/annotation_config/index", "autoapi/abacusai/annotation_entry/index", "autoapi/abacusai/annotations_status/index", "autoapi/abacusai/api_class/abstract/index", "autoapi/abacusai/api_class/dataset/index", "autoapi/abacusai/api_class/enums/index", "autoapi/abacusai/api_class/feature_group/index", "autoapi/abacusai/api_class/index", "autoapi/abacusai/api_class/model/index", "autoapi/abacusai/api_class/project/index", "autoapi/abacusai/api_class/python_functions/index", "autoapi/abacusai/api_class/refresh/index", "autoapi/abacusai/api_class/vector_store/index", "autoapi/abacusai/api_client_utils/index", "autoapi/abacusai/api_endpoint/index", "autoapi/abacusai/api_key/index", "autoapi/abacusai/application_connector/index", "autoapi/abacusai/batch_prediction/index", "autoapi/abacusai/batch_prediction_version/index", "autoapi/abacusai/categorical_range_violation/index", "autoapi/abacusai/chat_message/index", "autoapi/abacusai/chat_session/index", "autoapi/abacusai/client/index", "autoapi/abacusai/code_source/index", "autoapi/abacusai/concatenation_config/index", "autoapi/abacusai/cryptography/index", "autoapi/abacusai/custom_loss_function/index", "autoapi/abacusai/custom_metric/index", "autoapi/abacusai/custom_metric_version/index", "autoapi/abacusai/custom_train_function_info/index", "autoapi/abacusai/data_consistency_duplication/index", "autoapi/abacusai/data_metrics/index", "autoapi/abacusai/data_prep_logs/index", "autoapi/abacusai/data_quality_results/index", "autoapi/abacusai/database_connector/index", "autoapi/abacusai/dataset/index", "autoapi/abacusai/dataset_column/index", "autoapi/abacusai/dataset_version/index", "autoapi/abacusai/deployment/index", "autoapi/abacusai/deployment_auth_token/index", "autoapi/abacusai/deployment_conversation/index", "autoapi/abacusai/deployment_conversation_event/index", "autoapi/abacusai/document/index", "autoapi/abacusai/document_annotation/index", "autoapi/abacusai/document_store/index", "autoapi/abacusai/document_store_import/index", "autoapi/abacusai/drift_distribution/index", "autoapi/abacusai/drift_distributions/index", "autoapi/abacusai/eda/index", "autoapi/abacusai/eda_chart_description/index", "autoapi/abacusai/eda_collinearity/index", "autoapi/abacusai/eda_data_consistency/index", "autoapi/abacusai/eda_feature_association/index", "autoapi/abacusai/eda_feature_collinearity/index", "autoapi/abacusai/eda_forecasting_analysis/index", "autoapi/abacusai/eda_version/index", "autoapi/abacusai/embedding_feature_drift_distribution/index", "autoapi/abacusai/execute_feature_group_operation/index", "autoapi/abacusai/feature/index", "autoapi/abacusai/feature_distribution/index", "autoapi/abacusai/feature_drift_summary/index", "autoapi/abacusai/feature_group/index", "autoapi/abacusai/feature_group_export/index", "autoapi/abacusai/feature_group_export_config/index", "autoapi/abacusai/feature_group_export_download_url/index", "autoapi/abacusai/feature_group_lineage/index", "autoapi/abacusai/feature_group_refresh_export_config/index", "autoapi/abacusai/feature_group_template/index", "autoapi/abacusai/feature_group_template_variable_options/index", "autoapi/abacusai/feature_group_version/index", "autoapi/abacusai/feature_importance/index", "autoapi/abacusai/feature_mapping/index", "autoapi/abacusai/feature_record/index", "autoapi/abacusai/file_connector/index", "autoapi/abacusai/file_connector_instructions/index", "autoapi/abacusai/file_connector_verification/index", "autoapi/abacusai/forecasting_analysis_graph_data/index", "autoapi/abacusai/function_logs/index", "autoapi/abacusai/generated_pit_feature_config_option/index", "autoapi/abacusai/graph_dashboard/index", "autoapi/abacusai/index", "autoapi/abacusai/indexing_config/index", "autoapi/abacusai/inferred_feature_mappings/index", "autoapi/abacusai/item_statistics/index", "autoapi/abacusai/llm_code_block/index", "autoapi/abacusai/llm_input/index", "autoapi/abacusai/llm_parameters/index", "autoapi/abacusai/llm_response/index", "autoapi/abacusai/model/index", "autoapi/abacusai/model_artifacts_export/index", "autoapi/abacusai/model_blueprint_export/index", "autoapi/abacusai/model_blueprint_stage/index", "autoapi/abacusai/model_location/index", "autoapi/abacusai/model_metrics/index", "autoapi/abacusai/model_monitor/index", "autoapi/abacusai/model_monitor_org_summary/index", "autoapi/abacusai/model_monitor_summary/index", "autoapi/abacusai/model_monitor_summary_from_org/index", "autoapi/abacusai/model_monitor_version/index", "autoapi/abacusai/model_monitor_version_metric_data/index", "autoapi/abacusai/model_training_type_for_deployment/index", "autoapi/abacusai/model_upload/index", "autoapi/abacusai/model_version/index", "autoapi/abacusai/modification_lock_info/index", "autoapi/abacusai/module/index", "autoapi/abacusai/monitor_alert/index", "autoapi/abacusai/monitor_alert_version/index", "autoapi/abacusai/natural_language_explanation/index", "autoapi/abacusai/nested_feature/index", "autoapi/abacusai/null_violation/index", "autoapi/abacusai/organization_group/index", "autoapi/abacusai/organization_search_result/index", "autoapi/abacusai/pipeline/index", "autoapi/abacusai/pipeline_reference/index", "autoapi/abacusai/pipeline_step/index", "autoapi/abacusai/pipeline_step_version/index", "autoapi/abacusai/pipeline_step_version_logs/index", "autoapi/abacusai/pipeline_step_version_reference/index", "autoapi/abacusai/pipeline_version/index", "autoapi/abacusai/pipeline_version_logs/index", "autoapi/abacusai/point_in_time_feature/index", "autoapi/abacusai/point_in_time_group/index", "autoapi/abacusai/point_in_time_group_feature/index", "autoapi/abacusai/prediction_client/index", "autoapi/abacusai/prediction_dataset/index", "autoapi/abacusai/prediction_feature_group/index", "autoapi/abacusai/prediction_input/index", "autoapi/abacusai/prediction_metric/index", "autoapi/abacusai/prediction_metric_version/index", "autoapi/abacusai/problem_type/index", "autoapi/abacusai/project/index", "autoapi/abacusai/project_config/index", "autoapi/abacusai/project_dataset/index", "autoapi/abacusai/project_validation/index", "autoapi/abacusai/python_function/index", "autoapi/abacusai/python_function_validator/index", "autoapi/abacusai/python_plot_function/index", "autoapi/abacusai/range_violation/index", "autoapi/abacusai/refresh_pipeline_run/index", "autoapi/abacusai/refresh_policy/index", "autoapi/abacusai/refresh_schedule/index", "autoapi/abacusai/resolved_feature_group_template/index", "autoapi/abacusai/return_class/index", "autoapi/abacusai/schema/index", "autoapi/abacusai/streaming_auth_token/index", "autoapi/abacusai/streaming_client/index", "autoapi/abacusai/streaming_connector/index", "autoapi/abacusai/training_config_options/index", "autoapi/abacusai/type_violation/index", "autoapi/abacusai/upload/index", "autoapi/abacusai/upload_part/index", "autoapi/abacusai/use_case/index", "autoapi/abacusai/use_case_requirements/index", "autoapi/abacusai/user/index", "autoapi/abacusai/user_exception/index", "autoapi/abacusai/vector_store/index", "autoapi/abacusai/vector_store_config/index", "autoapi/abacusai/vector_store_lookup_result/index", "autoapi/abacusai/vector_store_version/index", "autoapi/abacusai/webhook/index", "index"], "filenames": ["autoapi/abacusai/algorithm/index.rst", "autoapi/abacusai/annotation/index.rst", "autoapi/abacusai/annotation_config/index.rst", "autoapi/abacusai/annotation_entry/index.rst", "autoapi/abacusai/annotations_status/index.rst", "autoapi/abacusai/api_class/abstract/index.rst", "autoapi/abacusai/api_class/dataset/index.rst", "autoapi/abacusai/api_class/enums/index.rst", "autoapi/abacusai/api_class/feature_group/index.rst", "autoapi/abacusai/api_class/index.rst", "autoapi/abacusai/api_class/model/index.rst", "autoapi/abacusai/api_class/project/index.rst", "autoapi/abacusai/api_class/python_functions/index.rst", "autoapi/abacusai/api_class/refresh/index.rst", "autoapi/abacusai/api_class/vector_store/index.rst", "autoapi/abacusai/api_client_utils/index.rst", "autoapi/abacusai/api_endpoint/index.rst", "autoapi/abacusai/api_key/index.rst", "autoapi/abacusai/application_connector/index.rst", "autoapi/abacusai/batch_prediction/index.rst", "autoapi/abacusai/batch_prediction_version/index.rst", "autoapi/abacusai/categorical_range_violation/index.rst", "autoapi/abacusai/chat_message/index.rst", "autoapi/abacusai/chat_session/index.rst", "autoapi/abacusai/client/index.rst", "autoapi/abacusai/code_source/index.rst", "autoapi/abacusai/concatenation_config/index.rst", "autoapi/abacusai/cryptography/index.rst", "autoapi/abacusai/custom_loss_function/index.rst", "autoapi/abacusai/custom_metric/index.rst", "autoapi/abacusai/custom_metric_version/index.rst", "autoapi/abacusai/custom_train_function_info/index.rst", "autoapi/abacusai/data_consistency_duplication/index.rst", "autoapi/abacusai/data_metrics/index.rst", "autoapi/abacusai/data_prep_logs/index.rst", "autoapi/abacusai/data_quality_results/index.rst", "autoapi/abacusai/database_connector/index.rst", "autoapi/abacusai/dataset/index.rst", "autoapi/abacusai/dataset_column/index.rst", "autoapi/abacusai/dataset_version/index.rst", "autoapi/abacusai/deployment/index.rst", "autoapi/abacusai/deployment_auth_token/index.rst", "autoapi/abacusai/deployment_conversation/index.rst", "autoapi/abacusai/deployment_conversation_event/index.rst", "autoapi/abacusai/document/index.rst", "autoapi/abacusai/document_annotation/index.rst", "autoapi/abacusai/document_store/index.rst", "autoapi/abacusai/document_store_import/index.rst", "autoapi/abacusai/drift_distribution/index.rst", "autoapi/abacusai/drift_distributions/index.rst", "autoapi/abacusai/eda/index.rst", "autoapi/abacusai/eda_chart_description/index.rst", "autoapi/abacusai/eda_collinearity/index.rst", "autoapi/abacusai/eda_data_consistency/index.rst", "autoapi/abacusai/eda_feature_association/index.rst", "autoapi/abacusai/eda_feature_collinearity/index.rst", "autoapi/abacusai/eda_forecasting_analysis/index.rst", "autoapi/abacusai/eda_version/index.rst", "autoapi/abacusai/embedding_feature_drift_distribution/index.rst", "autoapi/abacusai/execute_feature_group_operation/index.rst", "autoapi/abacusai/feature/index.rst", "autoapi/abacusai/feature_distribution/index.rst", "autoapi/abacusai/feature_drift_summary/index.rst", "autoapi/abacusai/feature_group/index.rst", "autoapi/abacusai/feature_group_export/index.rst", "autoapi/abacusai/feature_group_export_config/index.rst", "autoapi/abacusai/feature_group_export_download_url/index.rst", "autoapi/abacusai/feature_group_lineage/index.rst", "autoapi/abacusai/feature_group_refresh_export_config/index.rst", "autoapi/abacusai/feature_group_template/index.rst", "autoapi/abacusai/feature_group_template_variable_options/index.rst", "autoapi/abacusai/feature_group_version/index.rst", "autoapi/abacusai/feature_importance/index.rst", "autoapi/abacusai/feature_mapping/index.rst", "autoapi/abacusai/feature_record/index.rst", "autoapi/abacusai/file_connector/index.rst", "autoapi/abacusai/file_connector_instructions/index.rst", "autoapi/abacusai/file_connector_verification/index.rst", "autoapi/abacusai/forecasting_analysis_graph_data/index.rst", "autoapi/abacusai/function_logs/index.rst", "autoapi/abacusai/generated_pit_feature_config_option/index.rst", "autoapi/abacusai/graph_dashboard/index.rst", "autoapi/abacusai/index.rst", "autoapi/abacusai/indexing_config/index.rst", "autoapi/abacusai/inferred_feature_mappings/index.rst", "autoapi/abacusai/item_statistics/index.rst", "autoapi/abacusai/llm_code_block/index.rst", "autoapi/abacusai/llm_input/index.rst", "autoapi/abacusai/llm_parameters/index.rst", "autoapi/abacusai/llm_response/index.rst", "autoapi/abacusai/model/index.rst", "autoapi/abacusai/model_artifacts_export/index.rst", "autoapi/abacusai/model_blueprint_export/index.rst", "autoapi/abacusai/model_blueprint_stage/index.rst", "autoapi/abacusai/model_location/index.rst", "autoapi/abacusai/model_metrics/index.rst", "autoapi/abacusai/model_monitor/index.rst", "autoapi/abacusai/model_monitor_org_summary/index.rst", "autoapi/abacusai/model_monitor_summary/index.rst", "autoapi/abacusai/model_monitor_summary_from_org/index.rst", "autoapi/abacusai/model_monitor_version/index.rst", "autoapi/abacusai/model_monitor_version_metric_data/index.rst", "autoapi/abacusai/model_training_type_for_deployment/index.rst", "autoapi/abacusai/model_upload/index.rst", "autoapi/abacusai/model_version/index.rst", "autoapi/abacusai/modification_lock_info/index.rst", "autoapi/abacusai/module/index.rst", "autoapi/abacusai/monitor_alert/index.rst", "autoapi/abacusai/monitor_alert_version/index.rst", "autoapi/abacusai/natural_language_explanation/index.rst", "autoapi/abacusai/nested_feature/index.rst", "autoapi/abacusai/null_violation/index.rst", "autoapi/abacusai/organization_group/index.rst", "autoapi/abacusai/organization_search_result/index.rst", "autoapi/abacusai/pipeline/index.rst", "autoapi/abacusai/pipeline_reference/index.rst", "autoapi/abacusai/pipeline_step/index.rst", "autoapi/abacusai/pipeline_step_version/index.rst", "autoapi/abacusai/pipeline_step_version_logs/index.rst", "autoapi/abacusai/pipeline_step_version_reference/index.rst", "autoapi/abacusai/pipeline_version/index.rst", "autoapi/abacusai/pipeline_version_logs/index.rst", "autoapi/abacusai/point_in_time_feature/index.rst", "autoapi/abacusai/point_in_time_group/index.rst", "autoapi/abacusai/point_in_time_group_feature/index.rst", "autoapi/abacusai/prediction_client/index.rst", "autoapi/abacusai/prediction_dataset/index.rst", "autoapi/abacusai/prediction_feature_group/index.rst", "autoapi/abacusai/prediction_input/index.rst", "autoapi/abacusai/prediction_metric/index.rst", "autoapi/abacusai/prediction_metric_version/index.rst", "autoapi/abacusai/problem_type/index.rst", "autoapi/abacusai/project/index.rst", "autoapi/abacusai/project_config/index.rst", "autoapi/abacusai/project_dataset/index.rst", "autoapi/abacusai/project_validation/index.rst", "autoapi/abacusai/python_function/index.rst", "autoapi/abacusai/python_function_validator/index.rst", "autoapi/abacusai/python_plot_function/index.rst", "autoapi/abacusai/range_violation/index.rst", "autoapi/abacusai/refresh_pipeline_run/index.rst", "autoapi/abacusai/refresh_policy/index.rst", "autoapi/abacusai/refresh_schedule/index.rst", "autoapi/abacusai/resolved_feature_group_template/index.rst", "autoapi/abacusai/return_class/index.rst", "autoapi/abacusai/schema/index.rst", "autoapi/abacusai/streaming_auth_token/index.rst", "autoapi/abacusai/streaming_client/index.rst", "autoapi/abacusai/streaming_connector/index.rst", "autoapi/abacusai/training_config_options/index.rst", "autoapi/abacusai/type_violation/index.rst", "autoapi/abacusai/upload/index.rst", "autoapi/abacusai/upload_part/index.rst", "autoapi/abacusai/use_case/index.rst", "autoapi/abacusai/use_case_requirements/index.rst", "autoapi/abacusai/user/index.rst", "autoapi/abacusai/user_exception/index.rst", "autoapi/abacusai/vector_store/index.rst", "autoapi/abacusai/vector_store_config/index.rst", "autoapi/abacusai/vector_store_lookup_result/index.rst", "autoapi/abacusai/vector_store_version/index.rst", "autoapi/abacusai/webhook/index.rst", "index.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.annotation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.annotation_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.annotation_entry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.annotations_status</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.abstract</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.enums</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.feature_group</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.project</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.python_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.refresh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.vector_store</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_client_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_endpoint</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_key</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.application_connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.batch_prediction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.batch_prediction_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.categorical_range_violation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.chat_message</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.chat_session</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.client</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.code_source</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.concatenation_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.cryptography</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.custom_loss_function</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.custom_metric</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.custom_metric_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.custom_train_function_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.data_consistency_duplication</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.data_metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.data_prep_logs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.data_quality_results</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.database_connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.dataset_column</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.dataset_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.deployment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.deployment_auth_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.deployment_conversation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.deployment_conversation_event</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.document</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.document_annotation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.document_store</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.document_store_import</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.drift_distribution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.drift_distributions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_chart_description</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_collinearity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_data_consistency</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_feature_association</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_feature_collinearity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_forecasting_analysis</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.embedding_feature_drift_distribution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.execute_feature_group_operation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_distribution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_drift_summary</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_export</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_export_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_export_download_url</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_lineage</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_refresh_export_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_template</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_template_variable_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_importance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_mapping</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_record</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.file_connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.file_connector_instructions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.file_connector_verification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.forecasting_analysis_graph_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.function_logs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.generated_pit_feature_config_option</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.graph_dashboard</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.indexing_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.inferred_feature_mappings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.item_statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.llm_code_block</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.llm_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.llm_parameters</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.llm_response</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_artifacts_export</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_blueprint_export</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_blueprint_stage</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_location</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor_org_summary</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor_summary</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor_summary_from_org</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor_version_metric_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_training_type_for_deployment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_upload</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.modification_lock_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.module</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.monitor_alert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.monitor_alert_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.natural_language_explanation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.nested_feature</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.null_violation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.organization_group</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.organization_search_result</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_reference</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_step</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_step_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_step_version_logs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_step_version_reference</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_version_logs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.point_in_time_feature</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.point_in_time_group</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.point_in_time_group_feature</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_client</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_feature_group</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_metric</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_metric_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.problem_type</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.project</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.project_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.project_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.project_validation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.python_function</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.python_function_validator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.python_plot_function</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.range_violation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.refresh_pipeline_run</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.refresh_policy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.refresh_schedule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.resolved_feature_group_template</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.return_class</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.schema</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.streaming_auth_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.streaming_client</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.streaming_connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.training_config_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.type_violation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.upload</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.upload_part</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.use_case</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.use_case_requirements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.user</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.user_exception</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.vector_store</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.vector_store_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.vector_store_lookup_result</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.vector_store_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.webhook</span></code>", "Abacus.AI API Client PyDocs"], "terms": {"client": [0, 1, 2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "name": [0, 1, 2, 3, 9, 10, 12, 18, 19, 20, 21, 24, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 63, 68, 69, 71, 72, 73, 78, 79, 80, 81, 82, 90, 92, 93, 94, 96, 100, 101, 104, 106, 107, 108, 110, 111, 112, 114, 116, 117, 118, 120, 122, 123, 124, 125, 131, 132, 134, 136, 137, 138, 139, 141, 143, 145, 147, 148, 149, 150, 153, 154, 155, 157], "none": [0, 1, 2, 3, 4, 9, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "problemtyp": [0, 7, 9, 10, 24, 29, 82, 131, 132, 153], "createdat": [0, 17, 18, 19, 23, 28, 29, 30, 36, 37, 39, 40, 41, 42, 44, 45, 46, 50, 63, 64, 69, 71, 81, 90, 91, 96, 103, 106, 107, 108, 112, 114, 116, 117, 120, 129, 130, 132, 136, 138, 140, 141, 146, 148, 151, 155, 157, 160, 161], "updatedat": [0, 3, 69, 116, 117, 120], "isdefaulten": 0, "traininginputmap": 0, "trainfunctionnam": [0, 24, 82, 90, 132], "predictfunctionnam": [0, 24, 82, 90, 132], "predictmanyfunctionnam": [0, 90], "initializefunctionnam": [0, 90], "configopt": 0, "algorithmid": 0, "usegpu": [0, 90, 104], "codesourc": [0, 25, 28, 30, 63, 71, 90, 104, 106, 136, 138], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "return_class": [0, 1, 2, 3, 4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "abstractapiclass": [0, 1, 2, 3, 4, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "custom": [0, 7, 9, 10, 24, 25, 28, 29, 30, 31, 37, 63, 82, 90, 104, 106, 131, 132, 136], "creat": [0, 5, 6, 8, 9, 10, 11, 13, 17, 18, 19, 20, 23, 24, 28, 29, 30, 36, 37, 39, 40, 41, 42, 44, 46, 47, 50, 52, 54, 60, 63, 64, 69, 71, 81, 82, 90, 91, 94, 96, 100, 103, 104, 106, 107, 108, 110, 112, 114, 116, 117, 120, 125, 129, 130, 132, 136, 138, 140, 141, 142, 146, 148, 151, 157, 160, 161], "paramet": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "apicli": [0, 1, 2, 3, 4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "an": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "authent": [0, 1, 2, 3, 4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "api": [0, 1, 2, 3, 4, 9, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "instanc": [0, 1, 2, 3, 4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "str": [0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 75, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "The": [0, 1, 2, 3, 4, 8, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "type": [0, 1, 2, 3, 4, 5, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "problem": [0, 9, 10, 24, 28, 29, 82, 131, 132, 153], "thi": [0, 1, 2, 3, 4, 5, 7, 9, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "work": [0, 24, 82], "when": [0, 8, 9, 10, 17, 18, 19, 20, 24, 27, 28, 29, 30, 36, 37, 39, 40, 41, 46, 50, 63, 66, 69, 71, 75, 82, 90, 96, 103, 106, 112, 114, 116, 117, 125, 129, 130, 132, 136, 138, 140, 141, 142, 146, 148, 149, 151, 155, 157, 160], "wa": [0, 3, 4, 9, 10, 17, 18, 19, 22, 23, 24, 28, 29, 30, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 63, 64, 69, 71, 81, 82, 84, 90, 91, 96, 103, 106, 107, 108, 112, 114, 116, 117, 120, 129, 130, 132, 136, 138, 140, 141, 146, 148, 151, 157, 159, 160, 161], "last": [0, 8, 9, 10, 24, 37, 39, 82, 86, 90, 116, 117, 142, 149, 151], "updat": [0, 3, 4, 19, 24, 40, 63, 69, 81, 82, 90, 104, 107, 114, 116, 117, 120, 136, 141, 147, 157, 161], "bool": [0, 4, 5, 9, 10, 12, 19, 20, 22, 24, 26, 37, 39, 40, 47, 54, 63, 64, 69, 71, 75, 76, 77, 80, 82, 86, 90, 96, 100, 104, 105, 109, 112, 114, 125, 126, 127, 132, 134, 135, 141, 149, 154], "whether": [0, 4, 9, 10, 12, 22, 24, 37, 39, 63, 71, 82, 86, 90, 96, 104, 105, 109, 114, 125, 132], "train": [0, 9, 10, 19, 20, 21, 24, 31, 34, 37, 40, 48, 49, 50, 58, 61, 62, 63, 82, 90, 92, 95, 96, 100, 102, 104, 111, 125, 131, 132, 135, 139, 140, 149, 150, 154], "default": [0, 9, 10, 19, 24, 39, 40, 63, 71, 80, 82, 90, 103, 104, 112, 125, 126, 127, 132, 149, 151, 157], "dict": [0, 1, 2, 3, 4, 5, 9, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "map": [0, 7, 9, 24, 31, 40, 60, 64, 65, 68, 69, 72, 73, 82, 84, 101, 110, 117, 125, 132, 136, 137, 138, 143, 145, 154], "function": [0, 9, 10, 12, 25, 28, 30, 31, 63, 71, 79, 80, 81, 82, 90, 100, 104, 106, 114, 116, 117, 120, 125, 132, 136, 138], "e": [0, 1, 3, 9, 10, 19, 20, 24, 28, 29, 57, 63, 69, 82, 100, 125], "g": [0, 1, 3, 9, 10, 19, 20, 24, 28, 29, 57, 63, 69, 82, 100, 125], "data": [0, 1, 9, 10, 19, 20, 24, 26, 31, 32, 34, 35, 37, 38, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 71, 73, 74, 78, 82, 84, 85, 90, 97, 98, 99, 100, 101, 104, 110, 125, 132, 145, 146, 147, 150, 151], "config": [0, 2, 4, 5, 8, 9, 10, 12, 14, 24, 26, 31, 37, 40, 63, 64, 68, 69, 71, 82, 83, 90, 92, 96, 100, 104, 125, 132, 133, 143, 149, 157, 158], "found": [0, 9, 10, 20, 24, 63, 82, 90, 132, 147, 157], "sourc": [0, 24, 25, 26, 28, 30, 37, 39, 60, 63, 71, 82, 86, 90, 104, 106, 110, 114, 116, 123, 125, 132, 136, 138], "code": [0, 24, 25, 28, 30, 63, 71, 82, 86, 89, 90, 104, 106, 114, 116, 132, 136, 138], "execut": [0, 24, 59, 63, 79, 82, 90, 114, 125, 132, 136, 137, 141, 142], "model": [0, 9, 19, 20, 21, 24, 25, 34, 40, 43, 50, 57, 62, 63, 72, 82, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 111, 115, 119, 125, 126, 127, 129, 132, 139, 140, 141, 147, 149, 150, 151], "It": [0, 9, 10, 24, 37, 63, 82, 90, 92, 125, 132, 151], "i": [0, 1, 3, 9, 10, 12, 19, 20, 24, 25, 27, 29, 37, 39, 40, 41, 47, 50, 54, 57, 59, 63, 64, 65, 66, 68, 69, 71, 79, 82, 86, 90, 91, 92, 95, 96, 100, 104, 105, 107, 108, 109, 114, 115, 116, 119, 120, 122, 123, 125, 126, 127, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 146, 147, 149, 151, 154, 157, 160, 161], "run": [0, 19, 24, 25, 40, 57, 59, 82, 90, 96, 100, 107, 108, 114, 115, 120, 129, 130, 132, 136, 137, 140, 141, 142], "predict": [0, 7, 9, 10, 16, 19, 20, 21, 24, 40, 41, 48, 49, 61, 62, 82, 90, 95, 96, 97, 98, 100, 101, 104, 111, 115, 119, 125, 126, 127, 128, 129, 130, 132, 139, 140, 141, 150, 151], "through": [0, 9, 10, 24, 82, 90, 113, 132], "batch": [0, 9, 10, 19, 20, 24, 40, 82, 90, 96, 100, 115, 119, 126, 127, 128, 132, 140, 151], "initi": [0, 9, 10, 24, 82, 90, 132, 151], "befor": [0, 4, 9, 10, 24, 37, 63, 82, 90, 93, 125, 132, 151], "us": [0, 4, 5, 6, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 22, 24, 27, 28, 29, 37, 40, 41, 45, 47, 60, 63, 64, 65, 66, 68, 69, 71, 73, 81, 82, 83, 84, 90, 92, 94, 97, 101, 102, 103, 104, 106, 110, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 138, 145, 146, 149, 151, 153, 154, 157, 158], "make": [0, 9, 10, 16, 19, 20, 24, 82, 90, 125, 132], "dataset": [0, 8, 9, 10, 19, 24, 33, 38, 39, 47, 63, 67, 71, 72, 82, 90, 104, 115, 119, 125, 126, 127, 128, 129, 132, 134, 135, 140, 141, 146, 151, 154], "uniqu": [0, 17, 18, 19, 20, 24, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 46, 47, 50, 57, 60, 63, 64, 65, 68, 69, 71, 73, 81, 82, 90, 91, 96, 100, 103, 104, 105, 106, 107, 108, 110, 112, 114, 120, 125, 126, 127, 129, 130, 132, 134, 136, 138, 140, 141, 142, 143, 145, 146, 147, 148, 151, 152, 157, 160, 161], "identifi": [0, 9, 10, 18, 19, 20, 24, 28, 29, 30, 36, 37, 39, 40, 42, 46, 47, 50, 57, 63, 64, 65, 68, 69, 71, 81, 82, 90, 91, 96, 100, 103, 104, 105, 106, 107, 108, 112, 114, 120, 125, 126, 127, 129, 130, 132, 136, 138, 140, 141, 142, 143, 147, 148, 151, 152, 157, 160, 161], "gpu": [0, 9, 10, 24, 82, 90, 104, 132], "info": [0, 3, 24, 71, 82, 95, 99, 100, 104, 138], "about": [0, 1, 9, 10, 19, 20, 24, 28, 30, 31, 63, 81, 82, 97, 104, 105, 106, 107, 112, 116, 125, 132, 136, 138], "__repr__": [0, 1, 2, 3, 4, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "return": [0, 1, 2, 3, 4, 5, 7, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "repr": [0, 1, 2, 3, 4, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "self": [0, 1, 2, 3, 4, 7, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "to_dict": [0, 1, 2, 3, 4, 5, 9, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "get": [0, 1, 2, 3, 4, 9, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "represent": [0, 1, 2, 3, 4, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "valu": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "annotationtyp": 1, "annotationvalu": 1, "store": [1, 3, 9, 10, 14, 19, 24, 40, 44, 45, 46, 47, 63, 82, 90, 104, 125, 132, 157, 158, 159, 160], "A": [1, 9, 12, 15, 17, 18, 19, 20, 22, 23, 24, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 81, 82, 83, 84, 89, 90, 91, 93, 96, 97, 98, 99, 100, 103, 104, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 153, 154, 157, 158, 160, 161], "determin": [1, 9, 10, 24, 37, 63, 72, 82, 104, 125, 129, 132], "how": [1, 9, 10, 24, 31, 37, 48, 49, 56, 61, 69, 82, 132, 134], "interpret": 1, "label": [1, 2, 3, 9, 10, 24, 28, 49, 63, 82, 97, 98, 100, 102, 125, 132], "bound": [1, 24, 37, 45, 63, 82], "box": [1, 7, 9, 24, 37, 45, 54, 82], "etc": [1, 5, 9, 10, 13, 19, 20, 24, 28, 37, 39, 40, 57, 59, 63, 64, 71, 82, 86, 90, 91, 100, 104, 108, 120, 125, 140, 151, 157, 160], "json": [1, 3, 7, 9, 19, 20, 24, 40, 63, 71, 82, 103, 125, 132, 145, 147, 161], "compat": [1, 3, 24, 63, 82, 151], "format": [1, 3, 4, 9, 10, 19, 20, 24, 29, 37, 38, 40, 41, 46, 63, 64, 65, 68, 71, 81, 82, 91, 103, 104, 106, 109, 125, 136, 138, 140, 147, 154], "annotationentri": [3, 24, 63, 82], "featuregroupid": [3, 40, 50, 63, 69, 71, 115, 127, 129, 141], "featurenam": [3, 73], "docid": [3, 24, 82, 125], "featuregrouprowidentifi": 3, "annotationentrymark": 3, "statu": [2, 3, 4, 18, 19, 20, 24, 25, 36, 37, 39, 40, 47, 57, 59, 63, 64, 71, 82, 90, 91, 100, 103, 104, 108, 117, 119, 120, 130, 140, 148, 151, 155, 157, 160], "lockeduntil": 3, "verificationinfo": 3, "annot": [2, 3, 4, 24, 44, 45, 63, 71, 82], "entri": [3, 9, 10, 24, 37, 39, 63, 82, 111], "id": [3, 17, 18, 19, 20, 23, 24, 31, 37, 39, 40, 42, 43, 50, 57, 59, 63, 64, 65, 68, 71, 81, 82, 90, 96, 100, 101, 104, 107, 108, 114, 115, 116, 117, 118, 119, 120, 125, 128, 132, 134, 140, 141, 144, 147, 148, 151, 157, 161], "featur": [1, 2, 3, 4, 8, 9, 10, 19, 20, 21, 24, 25, 26, 31, 33, 37, 38, 40, 48, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 78, 82, 83, 84, 90, 91, 96, 100, 101, 104, 110, 111, 113, 114, 115, 116, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 143, 145, 147, 150, 157, 160], "group": [2, 3, 4, 8, 9, 10, 19, 20, 24, 25, 26, 31, 33, 37, 40, 50, 52, 56, 57, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 82, 83, 90, 91, 96, 100, 101, 104, 105, 110, 112, 113, 114, 115, 116, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 140, 141, 143, 147, 155, 157, 160], "belong": [3, 24, 39, 40, 50, 57, 71, 81, 82, 90, 96, 100, 103, 104, 107, 114, 116, 117, 120, 122, 129, 132, 155], "primari": [3, 24, 32, 53, 56, 63, 82, 83, 132, 155], "document": [3, 4, 9, 10, 24, 37, 45, 46, 47, 63, 73, 82, 90, 114, 116, 125, 132, 134, 145, 157, 159], "kei": [3, 5, 8, 9, 10, 13, 17, 18, 19, 24, 27, 32, 36, 40, 44, 47, 53, 54, 56, 63, 64, 65, 71, 82, 83, 95, 122, 123, 125, 132, 147, 148, 154], "row": [3, 7, 8, 9, 10, 20, 21, 24, 32, 33, 37, 39, 40, 56, 63, 82, 97, 122, 123, 124, 125, 139], "cast": [3, 24, 63, 82], "string": [3, 7, 9, 18, 19, 20, 24, 29, 30, 36, 37, 39, 40, 42, 46, 50, 57, 59, 63, 64, 65, 66, 69, 71, 81, 82, 86, 90, 91, 96, 100, 104, 105, 106, 107, 108, 112, 114, 116, 120, 125, 129, 132, 136, 137, 138, 140, 141, 142, 145, 147, 148, 151, 152, 157, 160, 161], "usual": [3, 24, 63, 82], "most": [3, 8, 9, 10, 21, 24, 82, 125], "recent": [3, 8, 9, 10, 24, 63, 82], "time": [3, 4, 7, 8, 9, 10, 19, 20, 24, 29, 37, 38, 39, 40, 41, 50, 56, 57, 59, 60, 63, 64, 71, 75, 79, 81, 82, 90, 91, 96, 97, 100, 104, 106, 107, 108, 114, 116, 117, 120, 122, 123, 124, 125, 129, 130, 132, 138, 140, 141, 142, 151, 155, 157, 160, 161], "modifi": [3, 24, 63, 82, 105, 112], "creation": [3, 9, 10, 63, 82, 136, 138, 140, 157, 158], "marker": 3, "until": [3, 19, 20, 24, 37, 39, 40, 57, 59, 63, 64, 71, 82, 90, 91, 100, 104, 108, 120, 130, 132, 140, 151, 157, 160], "which": [3, 9, 10, 16, 19, 22, 23, 24, 26, 37, 40, 42, 43, 44, 45, 47, 50, 57, 63, 64, 65, 66, 69, 71, 81, 82, 89, 90, 91, 96, 103, 104, 107, 108, 112, 113, 114, 116, 117, 120, 122, 123, 124, 125, 131, 132, 141, 147, 151, 160], "lock": [3, 24, 63, 82, 105], "edit": [3, 24, 28, 29, 82, 90, 106], "iso": [3, 4, 19, 29, 30, 36, 40, 41, 46, 64, 66, 81, 91, 103, 104, 106, 136, 138, 140], "8601": [3, 4, 19, 29, 30, 36, 40, 41, 46, 64, 66, 81, 91, 103, 104, 106, 136, 138, 140], "verif": [3, 24, 63, 75, 76, 77, 82, 103], "structur": 3, "hold": [3, 132], "annotationsstatu": [4, 24, 63, 82], "total": [4, 9, 10, 20, 24, 32, 82, 97, 125], "done": [4, 24, 50, 63, 82, 137], "inprogress": 4, "todo": [4, 24, 63, 82], "int": [4, 8, 9, 10, 14, 19, 20, 24, 26, 32, 33, 37, 39, 40, 44, 45, 46, 47, 50, 57, 59, 63, 64, 71, 82, 85, 89, 90, 91, 96, 97, 100, 104, 108, 114, 120, 122, 123, 125, 130, 132, 140, 149, 151, 157, 158, 160], "number": [4, 8, 9, 10, 19, 20, 24, 32, 33, 37, 39, 40, 45, 46, 47, 53, 56, 59, 63, 71, 82, 86, 89, 97, 106, 114, 122, 123, 125, 132, 136, 138, 151, 157], "current": [4, 19, 20, 24, 30, 37, 39, 40, 47, 50, 57, 59, 63, 64, 69, 71, 74, 78, 81, 82, 90, 91, 92, 96, 100, 103, 104, 107, 108, 112, 114, 116, 120, 122, 123, 125, 130, 132, 140, 141, 151, 157, 160, 161], "being": [4, 9, 10, 19, 24, 39, 50, 63, 64, 65, 82, 90, 91, 96, 125, 132, 135, 151, 154], "need": [4, 24, 63, 82, 90, 100, 125, 132, 149], "camel_cas": 5, "apiclass": [5, 6, 8, 9, 10, 11, 12, 13, 14, 82], "abc": [5, 6, 8, 9, 10, 11, 13, 24, 82], "helper": [5, 6, 8, 9, 10, 11, 13, 82, 137], "provid": [5, 6, 8, 9, 10, 11, 13, 18, 19, 22, 24, 31, 40, 57, 63, 69, 82, 90, 94, 100, 114, 123, 125, 132, 157, 161], "standard": [5, 6, 8, 9, 10, 11, 13, 79, 82, 85], "wai": [5, 6, 8, 9, 10, 11, 13, 82], "inherit": [5, 6, 8, 9, 10, 11, 13, 82], "__post_init__": [5, 8, 9, 10, 82], "convert": [5, 9, 13, 24, 63, 82, 122, 124, 136, 137], "dictionari": [1, 5, 9, 10, 13, 24, 63, 82, 99, 125, 136, 137, 147, 154, 161], "respons": [5, 9, 10, 13, 23, 24, 27, 39, 71, 82, 86, 87, 89, 125, 132], "ar": [5, 9, 10, 13, 19, 20, 24, 37, 40, 53, 63, 76, 82, 90, 97, 104, 106, 112, 122, 123, 125, 132, 138, 151], "camel": [5, 9, 13, 82], "case": [5, 9, 13, 19, 24, 40, 54, 63, 73, 82, 131, 132, 134, 145, 153, 154], "also": [5, 9, 10, 13, 24, 82, 90], "valid": [5, 9, 10, 13, 24, 25, 37, 38, 63, 69, 82, 86, 90, 114, 116, 125, 132, 135, 136, 137, 143, 149], "field": [5, 9, 10, 13, 19, 20, 24, 30, 37, 39, 40, 47, 50, 57, 59, 63, 64, 69, 71, 81, 82, 90, 91, 96, 100, 104, 107, 108, 112, 114, 116, 120, 125, 132, 140, 141, 149, 151, 157, 160, 161], "receiv": [5, 9, 13, 24, 63, 82], "classmethod": [5, 9, 11, 82, 137], "from_dict": [5, 9, 11, 82], "input_dict": [5, 9, 11, 82], "_apiclassfactori": [5, 8, 9, 10, 13, 82], "config_abstract_class": [5, 9, 10, 13, 82], "config_class_kei": [5, 8, 9, 10, 13, 82], "config_class_map": [5, 8, 9, 10, 13, 82], "apienum": [7, 9, 82], "gener": [7, 9, 10, 24, 37, 57, 63, 80, 82, 89, 124, 125, 137, 151], "enumer": [7, 9, 32, 46, 82], "deriv": [7, 9, 82], "from": [7, 9, 10, 20, 23, 24, 25, 26, 31, 34, 35, 37, 39, 40, 52, 57, 59, 63, 69, 79, 82, 86, 89, 90, 100, 107, 112, 114, 116, 119, 122, 123, 125, 132, 135, 141, 143, 147, 151, 157], "defin": [7, 9, 24, 28, 30, 63, 82, 90, 104, 112, 132, 142], "new": [7, 9, 18, 19, 24, 36, 37, 40, 50, 63, 69, 82, 90, 92, 96, 112, 132, 140, 147, 148], "__eq__": [7, 9, 82, 144], "other": [7, 9, 24, 39, 82, 96, 101, 114, 132, 144], "__hash__": [7, 9, 82], "hash": [7, 9, 24, 82, 151, 152], "samplingmethodtyp": [7, 8, 9, 82], "n_sampl": [7, 8, 9, 82], "percent_sampl": [7, 8, 9, 82], "samplingconfig": [8, 9, 24, 63, 82], "abstract": [6, 8, 9, 10, 11, 12, 13, 14, 24, 82], "sampl": [7, 8, 9, 10, 24, 32, 63, 72, 82], "nsamplingconfig": [8, 9, 82], "distinct": [8, 9, 82], "column": [8, 9, 10, 15, 19, 20, 24, 33, 37, 38, 39, 40, 49, 54, 56, 60, 62, 63, 64, 65, 68, 71, 78, 82, 90, 95, 104, 110, 125, 132, 135, 154], "includ": [8, 9, 10, 19, 20, 24, 37, 39, 40, 57, 63, 69, 71, 81, 82, 90, 92, 98, 103, 125, 132, 143, 157], "specifi": [8, 9, 10, 17, 19, 20, 21, 24, 26, 36, 37, 39, 40, 49, 50, 57, 58, 61, 62, 63, 69, 71, 72, 82, 90, 96, 100, 104, 112, 114, 116, 120, 122, 123, 125, 132, 139, 147, 149, 151, 157], "sampling_method": [8, 9, 82], "sample_count": [8, 9, 82], "key_column": [8, 9, 82], "list": [2, 7, 8, 9, 10, 11, 13, 18, 19, 20, 21, 22, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 67, 68, 69, 70, 71, 76, 78, 81, 82, 83, 89, 90, 93, 95, 96, 98, 99, 100, 101, 104, 105, 112, 114, 116, 117, 120, 121, 122, 123, 125, 128, 129, 131, 132, 135, 136, 137, 140, 141, 145, 147, 149, 151, 154, 155, 157], "": [8, 9, 19, 20, 24, 30, 37, 39, 40, 50, 57, 59, 60, 63, 64, 69, 71, 73, 74, 75, 81, 82, 90, 91, 96, 97, 100, 104, 105, 107, 108, 110, 112, 114, 116, 117, 120, 123, 125, 132, 134, 140, 141, 145, 151, 155, 157, 160, 161], "enum": [8, 9, 10, 12, 13, 14, 19, 24, 36, 71, 82, 104, 112, 130, 132, 153, 154], "percentsamplingconfig": [8, 9, 82], "fraction": [8, 9, 10, 14, 24, 82, 125, 158], "sample_perc": [8, 9, 82], "float": [7, 8, 9, 10, 14, 21, 24, 62, 63, 82, 85, 111, 113, 122, 123, 125, 139, 145, 149, 158, 159], "percentag": [7, 8, 9, 10, 82, 85, 97], "_samplingconfigfactori": [8, 9, 82], "feature_group": [7, 9, 19, 20, 24, 82, 132, 136], "invalid_pandas_column_name_charact": 15, "za": 15, "z0": 15, "9_": 15, "clean_column_nam": [15, 24, 82], "get_clean_function_source_cod": 15, "func": 15, "callabl": [15, 24, 82, 132], "apikei": [17, 24, 82], "apikeyid": 17, "tag": [17, 24, 63, 82, 132], "request": [16, 17, 19, 24, 40, 41, 63, 82, 125, 132, 146, 147, 161], "abacu": [9, 10, 17, 18, 19, 22, 23, 24, 36, 37, 40, 63, 73, 75, 76, 77, 82, 90, 125, 132, 134, 137, 145, 147, 148, 151, 155, 161], "ai": [9, 10, 17, 18, 19, 24, 36, 37, 40, 63, 73, 75, 76, 77, 82, 90, 125, 132, 134, 137, 145, 147, 148, 151, 155, 161], "scope": [17, 24, 82, 132], "specif": [17, 24, 37, 39, 63, 71, 82, 90, 112, 125, 129, 130, 132, 133, 154], "organ": [17, 24, 37, 63, 69, 82, 97, 99, 105, 112, 132, 155], "partial": 17, "obscur": 17, "user": [9, 10, 17, 18, 24, 36, 40, 50, 63, 69, 70, 81, 82, 90, 96, 102, 104, 105, 107, 108, 112, 114, 116, 125, 132, 141, 148, 153, 154], "friendli": [17, 18, 24, 36, 40, 50, 63, 69, 81, 82, 90, 96, 107, 108, 141, 148, 153, 154], "timestamp": [7, 8, 9, 10, 17, 22, 23, 24, 26, 37, 38, 39, 42, 43, 44, 45, 46, 47, 56, 63, 64, 71, 82, 83, 91, 103, 122, 123, 125, 132, 145, 151], "delet": [17, 18, 19, 24, 36, 37, 40, 42, 50, 53, 57, 63, 69, 81, 82, 90, 96, 100, 104, 107, 112, 114, 116, 132, 141, 147, 148, 157, 161], "api_key_id": [17, 24, 82], "applicationconnector": [18, 24, 82], "applicationconnectorid": [18, 25, 37], "servic": [9, 10, 18, 24, 36, 37, 75, 82, 125, 148], "auth": [18, 36, 75, 148], "connector": [18, 19, 20, 24, 25, 36, 37, 40, 63, 64, 65, 68, 71, 75, 77, 82, 90, 91, 148], "extern": [9, 10, 18, 24, 36, 37, 68, 75, 82, 101, 148], "connect": [18, 19, 20, 24, 36, 40, 64, 67, 68, 82, 119, 148], "applic": [7, 9, 18, 24, 25, 28, 29, 37, 63, 75, 82, 90, 125, 132, 141], "non": [18, 36, 148], "secret": [18, 36, 148], "inform": [18, 19, 20, 24, 28, 30, 31, 36, 37, 38, 40, 60, 63, 65, 70, 71, 81, 82, 90, 94, 97, 98, 99, 104, 105, 106, 107, 112, 116, 125, 132, 136, 145, 148, 156], "renam": [18, 19, 24, 36, 40, 50, 82, 90, 96, 132, 148], "application_connector_id": [18, 24, 63, 82, 90], "list_object": [18, 36], "querabl": [18, 24, 36, 82], "object": [9, 10, 18, 19, 20, 24, 30, 36, 37, 39, 40, 50, 57, 59, 63, 64, 65, 68, 69, 71, 76, 81, 82, 87, 90, 91, 96, 98, 99, 100, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 119, 120, 125, 132, 136, 137, 140, 141, 142, 147, 151, 157, 160, 161], "verifi": [18, 24, 27, 36, 75, 76, 77, 82, 148], "check": [18, 24, 36, 40, 63, 82, 125, 148], "can": [9, 10, 16, 18, 24, 36, 40, 63, 69, 70, 78, 82, 90, 92, 122, 124, 125, 131, 132, 140, 141, 143, 148, 154], "access": [18, 24, 36, 76, 82, 125, 148, 157], "batchpredict": [19, 24, 40, 82, 132, 140], "batchpredictionid": [19, 20, 96, 119, 151], "deploymentid": [19, 20, 40, 42, 115, 141, 161], "fileconnectoroutputloc": [19, 20], "globalpredictionarg": [19, 20], "databaseconnectorid": [19, 20, 24, 36, 37, 40, 64, 65, 82], "databaseoutputconfigur": [19, 20], "explan": [19, 20, 24, 40, 63, 82, 90, 109, 125], "fileoutputformat": [19, 20], "connectortyp": [7, 9, 13, 19, 20, 37, 64, 68, 82], "legacyinputloc": [19, 20], "featuregrouptablenam": [19, 37, 134], "summaryfeaturegrouptablenam": 19, "csvinputprefix": [19, 20], "csvpredictionprefix": [19, 20], "csvexplanationsprefix": [19, 20], "outputincludesmetadata": [19, 20], "resultinputcolumn": [19, 20], "modelmonitorid": [19, 96, 100, 107, 115, 129, 141], "modelvers": [19, 20, 24, 40, 43, 82, 90, 91, 92, 95, 100, 103, 104, 119, 132, 140, 151], "algorithm": [9, 10, 19, 20, 24, 40, 79, 82, 90, 104, 106, 131, 132, 136, 138], "batchinput": [19, 20], "latestbatchpredictionvers": 19, "refreshschedul": [19, 37, 40, 50, 63, 90, 96, 129, 142], "given": [8, 9, 10, 19, 20, 24, 30, 37, 39, 40, 50, 55, 57, 59, 63, 64, 71, 81, 82, 88, 90, 91, 96, 99, 100, 104, 107, 108, 114, 116, 117, 118, 120, 121, 125, 130, 132, 136, 137, 140, 141, 147, 151, 157, 160, 161], "deploy": [16, 19, 20, 24, 41, 42, 43, 63, 71, 82, 90, 100, 102, 104, 115, 119, 125, 132, 140, 141, 157, 160, 161], "contain": [2, 19, 20, 24, 32, 40, 53, 63, 64, 67, 78, 81, 82, 90, 104, 107, 112, 113, 114, 116, 122, 123, 125, 132, 147, 151], "where": [9, 10, 19, 20, 24, 40, 60, 63, 82, 100, 104, 125, 132], "written": [19, 20, 64, 65, 91], "argument": [9, 12, 19, 20, 24, 37, 40, 63, 82, 90, 114, 116, 125, 132, 136, 137], "pass": [9, 10, 19, 20, 24, 25, 40, 75, 76, 77, 82, 112, 125, 132, 136, 137], "everi": [19, 20, 24, 40, 63, 82, 125], "call": [16, 19, 20, 24, 30, 31, 37, 39, 40, 50, 57, 59, 63, 64, 69, 71, 81, 82, 90, 91, 96, 100, 102, 104, 107, 108, 112, 114, 116, 120, 130, 132, 140, 141, 151, 157, 160, 161], "databas": [7, 9, 19, 20, 24, 36, 37, 40, 64, 65, 68, 71, 82, 148], "write": [19, 20, 24, 40, 64, 65, 68, 71, 75, 76, 77, 82], "result": [9, 10, 19, 20, 24, 35, 40, 43, 59, 63, 75, 82, 87, 90, 104, 108, 113, 125, 132, 135, 136, 137, 143, 157, 159], "If": [9, 10, 19, 20, 24, 25, 26, 37, 39, 40, 47, 63, 64, 69, 71, 82, 90, 104, 112, 122, 123, 125, 126, 127, 132, 136, 137, 142, 149, 151, 154, 157, 161], "true": [9, 10, 19, 20, 24, 26, 37, 39, 40, 63, 64, 69, 71, 75, 76, 77, 82, 90, 100, 104, 112, 125, 126, 127, 132, 134, 135, 141, 149, 154], "each": [9, 10, 19, 20, 24, 31, 33, 38, 40, 57, 58, 61, 63, 78, 81, 82, 90, 92, 97, 98, 104, 114, 116, 125, 132, 145, 147, 151, 154], "output": [19, 20, 24, 40, 82, 100, 117, 119], "csv": [19, 20, 24, 37, 40, 63, 82, 103], "null": [19, 20, 56, 62, 72, 111, 142, 145], "intern": [19, 20, 25, 101], "consol": [19, 20, 24, 71, 82], "els": [19, 20, 24, 82, 125, 155], "file_connector": [19, 20, 82], "database_connector": [19, 20, 82], "locat": [9, 10, 13, 19, 20, 24, 37, 40, 64, 65, 66, 68, 71, 82, 90, 91, 94, 104, 125, 137], "input": [9, 10, 19, 20, 24, 40, 63, 82, 87, 88, 90, 103, 104, 124, 125, 126, 127, 128, 129, 130, 132, 136, 137, 149], "tabl": [9, 10, 19, 24, 37, 40, 48, 60, 63, 71, 82, 104, 110, 122, 123, 132, 134], "metric": [9, 10, 19, 24, 29, 30, 33, 39, 40, 48, 71, 82, 90, 95, 96, 100, 101, 104, 129, 130, 132, 140, 141], "summari": [19, 21, 24, 61, 62, 82, 96, 97, 98, 99, 111, 125, 139, 150], "prefix": [19, 20, 24, 40, 82], "prepend": [19, 20, 24, 40, 82, 137], "onli": [9, 10, 19, 20, 24, 37, 40, 63, 82, 90, 104, 106, 125, 132, 136, 138, 141, 147], "appli": [9, 10, 19, 20, 24, 40, 50, 63, 82, 90, 96, 125, 132, 141, 143], "start": [7, 9, 10, 19, 20, 24, 37, 40, 50, 57, 63, 79, 82, 86, 90, 96, 100, 104, 108, 122, 123, 125, 130, 140], "version": [8, 9, 10, 19, 20, 24, 29, 30, 33, 37, 39, 40, 47, 50, 52, 53, 55, 56, 57, 63, 64, 66, 71, 82, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 103, 104, 107, 108, 113, 114, 117, 118, 119, 120, 121, 126, 127, 129, 130, 132, 140, 142, 151, 154, 157, 160], "present": [19, 20, 21, 24, 37, 40, 63, 82, 125, 132], "limit": [9, 10, 19, 20, 24, 37, 40, 50, 63, 82, 90, 96, 114, 125, 132, 157], "file": [7, 9, 10, 19, 20, 24, 37, 39, 40, 44, 63, 64, 65, 68, 71, 75, 77, 82, 90, 91, 103, 104, 114, 116, 132, 151], "monitor": [19, 20, 21, 24, 50, 57, 62, 72, 82, 96, 97, 98, 99, 100, 101, 107, 108, 111, 115, 119, 129, 132, 139, 140, 141, 150], "deploi": [19, 20, 24, 40, 82, 90, 125, 132, 157], "predictioninput": [19, 20, 128], "batchpredictionvers": [19, 20, 24, 82, 100], "latest": [4, 9, 10, 19, 24, 29, 37, 40, 50, 52, 55, 56, 63, 82, 90, 96, 107, 114, 129, 157], "refresh": [9, 19, 20, 24, 30, 37, 39, 40, 50, 57, 59, 63, 64, 68, 69, 71, 81, 82, 90, 91, 96, 100, 104, 107, 108, 112, 114, 116, 120, 132, 140, 141, 142, 151, 157, 160, 161], "schedul": [19, 24, 37, 40, 50, 63, 82, 90, 96, 114, 129, 132, 141, 142], "dictat": 19, "next": [9, 10, 19, 24, 37, 50, 63, 82, 90, 96, 114, 129, 141, 142], "job": [19, 20, 24, 40, 64, 82, 91, 129, 130, 132], "descript": [9, 10, 19, 24, 37, 38, 39, 40, 50, 51, 57, 62, 63, 69, 73, 76, 78, 80, 82, 84, 90, 91, 92, 93, 96, 100, 101, 104, 107, 108, 111, 114, 115, 120, 122, 129, 130, 131, 132, 134, 136, 145, 149, 153, 154], "batch_prediction_id": [7, 9, 19, 24, 82, 132], "method": [9, 10, 19, 24, 37, 63, 72, 82, 90, 104, 125, 132, 147], "describ": [19, 20, 24, 25, 30, 37, 39, 40, 49, 50, 52, 53, 55, 57, 59, 61, 63, 64, 69, 71, 81, 82, 90, 91, 96, 100, 104, 107, 108, 112, 114, 116, 117, 120, 125, 132, 136, 140, 141, 142, 151, 157, 160, 161], "associ": [19, 23, 24, 37, 39, 40, 41, 42, 43, 50, 54, 57, 63, 69, 71, 82, 90, 96, 100, 107, 108, 125, 132, 134, 140, 141, 151, 157, 160], "list_vers": [19, 37, 50, 63, 90, 96, 114, 157], "100": [9, 10, 19, 24, 37, 50, 63, 82, 90, 96, 132, 157], "start_after_vers": [19, 24, 37, 50, 63, 82, 90, 96, 157], "retriev": [19, 24, 27, 37, 39, 40, 50, 57, 63, 82, 90, 96, 100, 104, 113, 132, 140, 141, 151, 157], "after": [9, 10, 19, 24, 37, 40, 50, 63, 82, 90, 96, 125, 132], "deployment_id": [7, 9, 19, 24, 40, 82, 90, 125, 132], "global_prediction_arg": [19, 24, 40, 82], "output_format": [19, 24, 40, 82], "csv_input_prefix": [19, 24, 40, 82], "csv_prediction_prefix": [19, 24, 40, 82], "csv_explanations_prefix": [19, 24, 40, 82], "output_includes_metadata": [19, 24, 40, 82], "result_input_column": [19, 24, 40, 82], "shap": [19, 24, 40, 72, 82, 125], "support": [9, 10, 19, 24, 37, 40, 63, 64, 65, 71, 82, 90, 101, 104, 125, 131, 132, 151], "set": [9, 10, 19, 24, 37, 40, 63, 71, 82, 90, 100, 104, 112, 125, 132, 135], "set_file_connector_output": 19, "output_loc": [19, 24, 40, 64, 65, 82, 104], "configur": [19, 24, 40, 50, 63, 65, 68, 82, 90, 92, 96, 100, 104, 107, 108, 124, 125, 132, 141, 147, 157], "set_database_connector_output": 19, "database_connector_id": [9, 13, 19, 24, 36, 37, 40, 71, 82], "database_output_config": [19, 24, 40, 82], "pair": [19, 24, 35, 40, 64, 65, 71, 82, 95, 125, 132, 154], "set_feature_group_output": 19, "table_nam": [19, 24, 40, 63, 71, 82, 104], "ha": [9, 10, 19, 24, 37, 40, 49, 56, 61, 63, 75, 76, 77, 82, 90, 104, 105, 112, 125, 132, 136, 137, 140, 141, 155], "been": [9, 10, 19, 24, 37, 40, 56, 63, 82, 132, 141, 151], "set_output_to_consol": 19, "clear": [19, 24, 82], "both": [19, 24, 82, 118, 125], "set_dataset": 19, "dataset_typ": [19, 24, 82], "dataset_id": [7, 9, 19, 24, 37, 82, 132], "deprec": [19, 24, 63, 82, 125], "legaci": [19, 24, 82], "project": [9, 19, 23, 24, 40, 50, 63, 64, 67, 73, 81, 82, 90, 96, 100, 107, 125, 129, 133, 134, 135, 141, 145, 149, 153, 154], "set_feature_group": 19, "feature_group_typ": [11, 19, 24, 63, 82], "feature_group_id": [7, 9, 11, 19, 24, 63, 82, 90, 132, 147, 157], "repres": [19, 24, 54, 56, 78, 82, 125, 136, 141], "under": [19, 24, 63, 82, 100, 104, 125, 132], "catalog": [9, 10, 19, 24, 82, 103, 125, 147], "attribut": [9, 10, 19, 37, 39, 63, 125, 137, 144], "person": [7, 9, 10, 19, 24, 82, 125], "recommend": [9, 10, 19, 24, 82, 125, 132], "set_dataset_remap": 19, "dataset_id_remap": [19, 24, 82], "For": [19, 24, 40, 49, 54, 61, 63, 64, 65, 71, 82, 90, 104, 114, 116, 125, 132], "purpos": [19, 24, 82, 90, 132, 151], "swap": [19, 24, 82, 128], "out": [9, 10, 19, 20, 24, 37, 39, 40, 57, 59, 63, 64, 71, 72, 79, 82, 90, 91, 100, 104, 108, 120, 125, 130, 140, 151, 157, 160], "replac": [19, 24, 26, 63, 69, 82, 128, 143], "dure": [9, 10, 19, 24, 34, 82, 90, 104, 125, 132, 143], "wait_for_predict": [19, 20], "timeout": [19, 20, 24, 37, 39, 40, 57, 59, 63, 64, 71, 82, 90, 91, 100, 104, 108, 120, 130, 140, 151, 157, 160], "86400": [19, 20], "wait": [19, 20, 24, 37, 39, 40, 57, 59, 63, 64, 71, 82, 90, 91, 100, 104, 108, 120, 130, 140, 151, 157, 160], "readi": [19, 20, 57, 63, 100, 108, 130, 135, 157, 160], "option": [2, 9, 10, 19, 20, 24, 37, 38, 39, 40, 57, 59, 63, 64, 70, 71, 76, 80, 82, 90, 91, 100, 101, 104, 108, 120, 122, 123, 125, 130, 131, 132, 140, 147, 149, 151, 157, 160], "finish": [19, 20, 24, 37, 39, 40, 57, 59, 63, 64, 71, 82, 90, 91, 100, 104, 108, 120, 130, 140, 151, 157, 160], "doesn": [19, 20, 37, 39, 40, 57, 59, 63, 64, 71, 90, 91, 100, 104, 108, 120, 130, 140, 150, 151, 157, 160], "t": [19, 20, 24, 37, 39, 40, 57, 59, 63, 64, 71, 82, 90, 91, 100, 104, 108, 120, 125, 130, 140, 150, 151, 157, 160], "alloc": [19, 20, 24, 37, 39, 40, 57, 59, 63, 64, 71, 82, 90, 91, 100, 104, 108, 120, 130, 132, 140, 151, 157, 160], "said": [19, 20, 37, 39, 40, 57, 59, 63, 64, 71, 90, 91, 100, 104, 108, 120, 130, 140, 151, 157, 160], "wait_for_drift_monitor": [19, 20], "drift": [19, 20, 24, 48, 49, 58, 62, 82, 96, 97, 98, 99, 100, 132], "calcul": [19, 20, 24, 82, 104, 132], "get_statu": [19, 20, 37, 39, 40, 57, 59, 63, 64, 71, 90, 91, 100, 104, 108, 120, 130, 140, 151, 157, 160], "pend": [19, 20, 24, 40, 57, 59, 63, 64, 71, 82, 90, 91, 100, 104, 108, 120, 140, 151, 157, 160], "complet": [19, 20, 24, 37, 39, 40, 57, 59, 63, 64, 71, 82, 90, 91, 100, 104, 108, 120, 130, 140, 151, 157, 160], "create_refresh_polici": [19, 24, 37, 40, 82, 90], "cron": [19, 24, 37, 40, 82, 90, 114, 132, 141, 142], "To": [19, 37, 40, 77, 90], "polici": [19, 24, 37, 39, 40, 76, 82, 90, 114, 132, 140, 141, 142], "style": [19, 24, 37, 40, 82, 90, 114, 125, 132, 141, 142], "refreshpolici": [19, 24, 37, 40, 82, 90, 132, 140, 141], "list_refresh_polici": [19, 24, 37, 40, 82, 90, 132], "describe_output_feature_group": 19, "featuregroup": [19, 24, 37, 63, 71, 82, 90, 104, 113, 128, 132, 141], "driftmonitorstatu": 20, "modelid": [20, 40, 90, 95, 96, 103, 104, 115, 141, 151], "predictionsstartedat": 20, "predictionscompletedat": 20, "databaseoutputerror": [20, 64], "totalpredict": 20, "failedpredict": 20, "error": [7, 9, 20, 24, 25, 39, 40, 47, 57, 59, 63, 64, 71, 76, 79, 82, 84, 100, 104, 108, 117, 119, 120, 130, 135, 136, 137, 142, 143, 156], "driftmonitorerror": 20, "monitorwarn": 20, "databaseoutputtotalwrit": 20, "databaseoutputfailedwrit": 20, "modelmonitorvers": [20, 24, 82, 96, 100, 101, 108, 119], "algonam": [20, 40, 101], "date": [9, 10, 20, 24, 29, 40, 41, 50, 57, 81, 82, 90, 96, 100, 104, 106, 107, 108, 114, 116, 117, 120, 125, 129, 130, 132, 138, 145, 155, 161], "were": [20, 64, 119, 130], "report": [20, 64], "while": [9, 10, 20, 24, 64, 82, 136, 137, 151], "perform": [20, 24, 26, 40, 63, 82, 97, 104, 122, 123, 125, 132], "fail": [20, 24, 25, 39, 40, 47, 57, 59, 64, 71, 82, 97, 100, 104, 108, 117, 120, 130, 151], "relev": [9, 10, 20, 24, 40, 57, 63, 71, 82, 100, 104, 108, 113, 120, 125, 130, 157], "messag": [9, 10, 20, 22, 24, 25, 43, 59, 63, 76, 82, 84, 117, 119, 125, 142, 143], "predcit": 20, "warn": [20, 25], "issu": 20, "integr": [20, 24, 62, 82, 96, 98, 99], "attempt": [20, 24, 37, 82], "mai": [20, 24, 37, 63, 82, 125], "less": [9, 10, 20, 24, 63, 82, 125], "than": [9, 10, 20, 24, 63, 82], "total_predict": 20, "mode": [9, 10, 13, 20, 24, 40, 68, 82], "upsert": [20, 24, 40, 64, 65, 68, 71, 82, 147], "multipl": [9, 10, 20, 24, 82, 114, 132, 140, 147, 154], "share": [20, 90], "same": [9, 10, 20, 24, 47, 63, 82, 90, 123, 125, 132, 151], "get_outliers_for_batch_prediction_featur": [20, 24, 82], "feature_nam": [8, 9, 11, 20, 24, 57, 63, 82, 100, 132], "nested_feature_nam": [11, 20, 24, 63, 82, 100], "outlier": [9, 10, 20, 24, 82, 100], "measur": [20, 24, 48, 62, 82, 100], "singl": [20, 22, 24, 43, 61, 82, 83, 100, 132, 140, 141], "overal": [20, 24, 62, 82, 100, 140], "view": [20, 24, 82, 100, 112], "distribut": [9, 10, 20, 21, 24, 48, 56, 58, 61, 62, 82, 100, 125, 139], "nest": [20, 24, 60, 62, 63, 82, 100, 110, 125, 132], "download_batch_prediction_result_chunk": [20, 24, 82], "offset": [20, 24, 63, 82, 122, 123, 132, 157], "0": [8, 9, 10, 20, 24, 37, 52, 63, 82, 90, 114, 116, 122, 123, 125, 132], "chunk_siz": [9, 14, 20, 24, 82, 132, 157], "10485760": [20, 24, 82], "stream": [7, 9, 20, 24, 37, 40, 63, 64, 82, 134, 146, 147, 148], "read": [20, 24, 82], "maximum": [9, 10, 20, 24, 37, 50, 63, 82, 90, 96, 114, 132, 139], "amount": [9, 10, 20, 24, 56, 82, 125], "get_batch_prediction_connector_error": [20, 24, 82], "ani": [9, 10, 12, 20, 24, 40, 63, 64, 82, 104, 125, 129, 136, 137], "download_result_to_fil": 20, "download": [20, 24, 64, 66, 82], "local": [9, 10, 20, 24, 37, 82, 136, 137], "open": 20, "binari": [20, 24, 82, 125], "tmp": 20, "wb": 20, "drift_monitor_statu": 20, "fals": [20, 24, 39, 40, 47, 63, 71, 82, 90, 100, 104, 125, 132, 135], "categoricalrangeviol": [21, 62], "mostcommonvalu": 21, "freqoutsidetrainingrang": 21, "import": [21, 24, 37, 39, 47, 62, 63, 72, 82, 90, 104, 114, 116, 132, 137, 139, 150], "rang": [8, 9, 10, 21, 24, 49, 58, 61, 62, 63, 82, 125, 139], "mismatch": [21, 62, 139, 150], "numer": [9, 10, 21, 54, 61, 62, 82, 139, 145], "discov": [21, 111, 139, 150], "common": [21, 131], "frequenc": [9, 10, 21, 24, 38, 56, 62, 82, 111, 114, 132, 139, 141], "outsid": 21, "default_serv": [24, 82], "http": [24, 37, 40, 63, 73, 82, 134, 145, 161], "_requests_retry_sess": 24, "retri": [24, 151], "5": [7, 9, 10, 24, 82, 125], "backoff_factor": 24, "1": [9, 10, 24, 63, 82, 90, 114, 116, 125, 132, 151], "status_forcelist": 24, "502": 24, "504": 24, "session": [9, 10, 23, 24, 82, 132], "_discover_service_url": 24, "service_discovery_url": 24, "client_vers": 24, "deployment_token": [24, 82, 125, 157], "_get_service_discovery_url": [], "clientopt": [24, 82, 125, 147], "exception_on_404": [24, 82], "server": [24, 82], "rais": [24, 27, 82, 97, 136, 137, 151], "except": [24, 79, 82, 136, 137, 151, 156], "404": [24, 82], "endpoint": [16, 24, 40, 82, 161], "apiexcept": [24, 82], "http_statu": [24, 82], "__str__": [24, 82], "baseapicli": [24, 82, 125, 147], "api_kei": [24, 82, 112], "client_opt": [24, 82, 125, 147], "skip_version_check": [24, 82], "url": [24, 64, 66, 82, 145], "send": [24, 40, 82, 161], "requet": [24, 82], "skip": [9, 10, 24, 47, 63, 82], "51": [], "_clean_api_object": 24, "obj": 24, "_call_api": 24, "action": [9, 10, 24, 82, 107, 108, 132, 161], "query_param": 24, "bodi": [24, 40, 82, 125, 161], "parse_typ": 24, "streamable_respons": 24, "server_overrid": 24, "_build_class": 24, "_request": 24, "header": [24, 63, 82], "_poll": 24, "wait_stat": [24, 40], "delai": [24, 59, 63, 82, 122, 123], "15": [24, 82, 125], "300": 24, "poll_arg": 24, "status_field": 24, "_validate_pandas_df": 24, "df": [24, 82], "_upload_from_panda": 24, "upload": [9, 10, 24, 37, 39, 47, 63, 82, 90, 103, 125], "_upload_from_spark": 24, "readonlycli": [24, 82], "list_api_kei": [24, 82], "all": [8, 9, 10, 24, 37, 40, 46, 50, 52, 53, 54, 55, 57, 63, 67, 82, 90, 96, 104, 112, 120, 125, 132, 137, 157], "list_organization_us": [24, 82], "who": [24, 63, 82, 112], "have": [9, 10, 24, 40, 48, 63, 82, 104, 120, 125, 132, 151], "invit": [24, 82, 155], "arrai": [24, 63, 82, 90, 132], "describe_us": [24, 82], "email": [24, 63, 82, 105, 112, 145, 155], "address": [24, 63, 75, 82, 125, 155], "admin": [24, 82, 112], "list_organization_group": [24, 82], "within": [8, 9, 24, 32, 53, 54, 57, 63, 82, 125], "organizationgroup": [24, 63, 82, 105, 112, 155], "describe_organization_group": [24, 82], "organization_group_id": [24, 63, 82, 112], "describe_webhook": [24, 82], "webhook_id": [24, 82, 161], "webhook": [24, 40, 82], "target": [9, 10, 24, 40, 56, 62, 63, 82, 95, 132, 161], "list_deployment_webhook": [24, 82], "attach": [24, 37, 40, 63, 82, 114, 132, 161], "list_use_cas": [24, 82], "usecas": [24, 73, 82, 132, 134, 145, 153], "platform": [24, 82, 132], "detail": [9, 10, 24, 63, 73, 82, 100, 134, 145, 151], "pleas": [24, 82], "refer": [24, 37, 38, 39, 50, 57, 63, 81, 82, 100, 103, 104, 114, 115, 116, 117, 119, 120, 125, 132, 145, 151], "describe_problem_typ": [24, 82], "problem_typ": [9, 10, 24, 82], "requir": [9, 12, 24, 25, 63, 71, 82, 90, 103, 114, 116, 125, 126, 127, 131, 132, 149, 154], "describe_use_case_requir": [24, 82], "use_cas": [24, 82], "whose": [9, 10, 24, 63, 82, 147], "along": [9, 10, 24, 63, 82, 132], "usecaserequir": [24, 82, 154], "describe_project": [24, 82], "project_id": [24, 63, 82, 114, 132], "list_project": [24, 82], "start_after_id": [24, 82, 132], "length": [7, 9, 10, 24, 37, 50, 56, 63, 82, 90, 96, 123], "log": [7, 9, 10, 24, 34, 71, 79, 82, 95, 100, 104, 117, 118, 120, 121], "list_project_dataset": [], "its": [24, 37, 39, 40, 50, 56, 63, 82, 90, 91, 96, 104, 105, 113, 125, 132, 147], "projectdataset": 134, "get_schema": [37, 63], "schema": [24, 33, 36, 37, 38, 39, 63, 82, 132], "consist": [24, 32, 50, 53, 57, 82, 132], "validate_project": [24, 82], "miss": [9, 10, 24, 56, 82, 85, 132, 136, 137], "projectvalid": [24, 82, 132, 135], "verify_and_describe_annot": [24, 63, 82], "doc_id": [24, 63, 82, 125], "feature_group_row_identifi": [24, 63, 82], "At": [24, 63, 82], "least": [24, 63, 82, 151], "one": [24, 25, 63, 82, 92, 96, 104, 125, 132, 141, 157], "must": [9, 10, 24, 63, 82, 123, 125, 151], "order": [24, 39, 55, 60, 63, 71, 78, 82, 123, 125, 151], "correct": [24, 63, 82], "get_annotations_statu": [24, 63, 82], "get_feature_group_schema": [24, 82], "describe_feature_group": [24, 37, 82, 132], "describe_feature_group_by_table_nam": [24, 82], "look": [24, 37, 63, 82, 122, 123, 159], "up": [24, 26, 37, 82, 125, 132, 136, 138, 151, 157, 159], "list_feature_group": [24, 82, 132], "feature_group_template_id": [24, 69, 82], "is_including_detached_from_templ": [24, 82], "exclud": [9, 10, 24, 82, 125, 132, 157], "templat": [24, 40, 63, 69, 70, 82, 132, 143, 161], "detach": [24, 63, 82], "list_project_feature_group": [24, 82], "filter_feature_group_us": [24, 82, 132], "filter": [9, 10, 24, 37, 63, 82, 132], "allow": [9, 10, 24, 63, 82, 90, 105, 106, 114, 116, 125, 132, 136, 138], "thei": [9, 10, 24, 40, 63, 82, 90, 132], "possibl": [24, 73, 80, 82, 125, 132, 134, 145], "data_wrangl": [24, 82, 132], "training_input": [24, 82, 132], "batch_prediction_input": [24, 82, 132], "batch_prediction_output": [24, 82, 132], "list_python_function_feature_group": [24, 82], "python": [9, 12, 24, 25, 63, 71, 81, 82, 86, 90, 104, 106, 114, 116, 117, 132, 136, 137, 138], "get_feature_group_version_export_download_url": [24, 64, 82], "feature_group_export_id": [24, 64, 82], "link": [24, 64, 82], "export": [9, 10, 24, 40, 63, 64, 65, 66, 68, 71, 82, 90, 91, 93, 104, 141], "sign": [24, 64, 82], "expir": [24, 64, 66, 75, 82], "featuregroupexportdownloadurl": [24, 64, 66, 82], "describe_feature_group_export": [24, 82], "featuregroupexport": [24, 63, 64, 71, 82], "list_feature_group_export": [24, 82], "get_feature_group_export_connector_error": [24, 82], "io": [24, 63, 82, 125, 151], "bytesio": [24, 82, 125, 151], "list_feature_group_modifi": [24, 82], "modif": [24, 63, 82, 105], "ad": [24, 63, 82, 112, 125, 136, 151], "modificationlockinfo": [24, 63, 82, 105], "get_materialization_log": [24, 71, 82], "feature_group_vers": [24, 40, 63, 82], "stdout": [24, 71, 79, 82, 100, 104, 118], "stderr": [24, 71, 79, 82, 100, 104, 118], "materi": [4, 24, 26, 63, 71, 82, 90, 132], "functionlog": [24, 71, 79, 82, 100, 104], "list_feature_group_vers": [24, 82], "featuregroupvers": [24, 40, 63, 64, 71, 82, 101, 104, 113, 119, 127, 130, 140, 160], "describe_feature_group_vers": [24, 82], "describe_feature_group_templ": [24, 82], "featuregrouptempl": [24, 63, 69, 82, 132], "list_feature_group_templ": [24, 82, 132], "should_include_system_templ": [24, 82], "built": [24, 63, 82, 90, 132], "list_project_feature_group_templ": [24, 82], "should_include_all_system_templ": [24, 82, 132], "till": [24, 82, 132], "suggest_feature_group_template_for_feature_group": [24, 82], "suggest": [24, 63, 82], "gruop": [24, 63, 82], "get_dataset_schema": [24, 82], "definit": [24, 37, 63, 71, 82], "datasetcolumn": [24, 37, 38, 82], "get_file_connector_instruct": [24, 82], "bucket": [24, 37, 75, 76, 77, 82, 104, 151], "write_permiss": [24, 82], "cloud": [9, 10, 24, 40, 71, 76, 82], "storag": [24, 75, 76, 82], "fulli": [9, 10, 24, 82], "qualifi": [9, 10, 24, 82], "uri": [9, 10, 16, 24, 37, 40, 82, 161], "instruct": [24, 82, 90, 132], "step": [9, 10, 24, 82, 114, 116, 117, 118, 119, 120, 121], "full": [24, 37, 39, 40, 50, 57, 76, 82, 90, 96, 100, 104, 132, 151], "invalid": [24, 27, 39, 63, 76, 82, 136, 137, 143], "fileconnectorinstruct": [24, 76, 82], "list_database_connector": [24, 82], "databaseconnector": [24, 36, 82], "list_file_connector": [24, 82], "fileconnector": [24, 75, 82], "list_database_connector_object": [24, 82], "get_database_connector_object_schema": [24, 82], "object_nam": [9, 13, 24, 36, 37, 40, 71, 82], "system": [9, 10, 24, 36, 37, 63, 69, 82, 90, 114, 116, 125, 132, 151], "list_application_connector": [24, 82], "list_application_connector_object": [24, 82], "list_streaming_connector": [24, 82], "correspond": [1, 4, 24, 62, 63, 71, 82, 90, 125, 132, 150], "streamingconnector": [24, 82, 148], "list_streaming_token": [24, 82], "token": [7, 9, 10, 24, 37, 41, 63, 82, 89, 125, 132, 146, 147, 157], "streamingauthtoken": [24, 82, 146], "get_recent_feature_group_streamed_data": [24, 82], "list_upload": [24, 82], "ongo": [24, 82], "describe_upload": [24, 82], "upload_id": [24, 82, 151], "inspect": [24, 37, 39, 82, 151], "part": [9, 10, 24, 37, 82, 90, 114, 116, 120, 125, 132, 151, 152], "larg": [24, 82, 151], "list_dataset": [24, 82], "exclude_stream": [24, 82], "describe_dataset": [24, 63, 82], "describe_dataset_vers": [24, 82], "dataset_vers": [24, 82], "datasetvers": [24, 37, 39, 59, 82, 104, 119, 126, 140, 151], "list_dataset_vers": [24, 82], "get_docstore_docu": [24, 82], "docstor": [24, 82], "get_docstore_imag": [24, 82], "max_width": [24, 82], "max_height": [24, 82], "imag": [9, 10, 24, 82, 125], "rescal": [24, 82], "so": [24, 63, 82, 125], "width": [24, 82], "equal": [9, 10, 24, 63, 82], "preserv": [24, 82, 125], "aspect": [24, 82], "ratio": [9, 10, 24, 82], "height": [24, 82], "describe_train_test_data_split_feature_group": [24, 82, 90], "model_id": [7, 9, 24, 63, 82, 90, 132, 147], "test": [7, 9, 10, 24, 50, 82, 90, 95, 104, 132], "split": [7, 9, 10, 24, 82, 90, 95, 104, 132], "By": [24, 82, 90, 125], "fold": [9, 10, 24, 82, 90, 104, 132], "describe_train_test_data_split_feature_group_vers": [24, 82, 104], "model_vers": [24, 40, 82, 90], "list_model": [24, 82, 132], "describe_model": [24, 82], "set_model_object": [24, 82, 104], "best": [9, 10, 24, 82, 104], "futur": [7, 9, 10, 24, 63, 82, 104, 122, 123, 125], "get_model_metr": [24, 82], "baseline_metr": [24, 82, 90], "baselin": [24, 82, 90, 95], "comparison": [24, 40, 53, 82, 90], "what": [24, 25, 56, 63, 78, 82, 90, 125, 135], "mean": [7, 8, 9, 24, 78, 82, 85, 90], "modelmetr": [24, 82, 90, 95], "list_model_vers": [24, 82], "describe_model_vers": [24, 82], "get_feature_importance_by_model_vers": [24, 82], "variou": [24, 63, 82, 103, 104], "featureimport": [24, 72, 82, 104], "get_training_data_log": [24, 82, 104], "prepar": [24, 34, 82, 104], "datapreplog": [24, 34, 82, 104], "set_default_model_algorithm": [24, 82], "data_cluster_typ": [24, 82, 90], "pin": [24, 82, 90], "cluster": [7, 9, 10, 24, 82, 90, 104, 125, 132], "lead": [24, 82, 90, 125], "get_training_log": [24, 82, 104], "export_custom_model_vers": [24, 82], "bundl": [24, 82, 104], "artifact": [24, 63, 82, 90, 91, 94, 103, 104, 109, 113], "zip": [9, 10, 24, 63, 82, 90, 104], "exampl": [9, 10, 24, 63, 82, 90, 104, 114, 116, 125, 132], "s3": [9, 10, 24, 37, 75, 82, 104], "modelartifactsexport": [24, 82, 90, 91, 104], "describe_model_artifacts_export": [24, 82], "model_artifacts_export_id": [24, 82, 91], "list_model_artifacts_export": [24, 82], "25": [24, 82, 90], "list_model_monitor": [24, 82, 132], "modelmonitor": [24, 82, 96, 101, 132], "describe_model_monitor": [24, 82], "model_monitor_id": [24, 82, 96, 132], "get_prediction_drift": [24, 82, 100], "model_monitor_vers": [24, 82], "driftdistribut": [24, 48, 49, 82, 100], "get_model_monitor_summari": [24, 82], "across": [9, 10, 24, 56, 82, 96, 97], "bia": [7, 9, 24, 82, 96, 98, 99, 125, 132], "violat": [24, 62, 82, 96, 97, 98, 111, 125], "accuraci": [7, 9, 24, 82, 96, 97, 98, 99], "modelmonitorsummari": [24, 82, 96, 98], "list_model_monitor_vers": [24, 82], "describe_model_monitor_vers": [24, 82], "model_monitor_version_metric_data": [24, 82], "metric_typ": [24, 82, 100], "actual_values_to_detail": [24, 82, 100], "decil": [24, 82, 96, 100], "actual": [24, 48, 49, 82, 100], "modelmonitorversionmetricdata": [24, 82, 100, 101], "list_organization_model_monitor": [24, 82], "only_star": [24, 82], "star": [24, 82, 96, 97], "get_model_monitor_chart_from_organ": [24, 82], "chart_typ": [24, 82], "chart": [24, 39, 51, 62, 71, 78, 82, 99, 101], "model_accuraci": [24, 82], "bias_viol": [24, 82], "data_integr": [24, 82], "model_drift": [24, 82], "modelmonitorsummaryfororgan": [24, 82], "modelmonitorsummaryfromorg": [24, 82, 99], "get_model_monitor_summary_from_organ": [24, 82], "consolid": [24, 82], "modelmonitororgsummari": [24, 82, 97], "list_eda": [24, 82, 132], "exploratori": [24, 50, 57, 82, 132], "analysi": [9, 10, 24, 50, 56, 57, 78, 82, 96, 101, 104, 132], "eda": [24, 51, 52, 53, 54, 55, 56, 57, 82, 96, 100, 132], "describe_eda": [24, 82], "eda_id": [24, 50, 82], "list_eda_vers": [24, 82], "edavers": [24, 50, 57, 82], "describe_eda_vers": [24, 82], "eda_vers": [24, 82], "get_eda_collinear": [24, 57, 82], "collinear": [24, 50, 52, 55, 57, 82, 132], "between": [9, 10, 14, 24, 52, 53, 54, 55, 57, 58, 62, 67, 82, 125, 158], "record": [9, 10, 24, 39, 57, 63, 74, 82, 125, 147], "correl": [24, 56, 57, 82], "edacollinear": [24, 52, 57, 82], "get_eda_data_consist": [24, 57, 82], "transformation_featur": [24, 57, 82], "transform": [9, 10, 24, 53, 57, 63, 82, 114, 116], "duplic": [24, 32, 53, 57, 63, 82], "edadataconsist": [24, 53, 57, 82], "get_collinearity_for_featur": [24, 57, 82], "shown": [24, 57, 82], "edafeaturecollinear": [24, 55, 57, 82], "get_feature_associ": [24, 57, 82], "reference_feature_nam": [24, 54, 57, 82], "test_feature_nam": [24, 54, 57, 82], "x": [9, 10, 24, 52, 54, 57, 78, 82], "axi": [24, 52, 54, 57, 78, 82], "plot": [24, 54, 57, 81, 82, 101, 132, 136, 138], "product": [7, 9, 10, 24, 56, 57, 82, 114, 125], "y": [24, 52, 54, 57, 78, 82], "two": [24, 53, 54, 57, 82, 125, 158], "edafeatureassoci": [24, 54, 57, 82], "get_eda_forecasting_analysi": [24, 57, 82], "forecast": [7, 9, 10, 24, 56, 57, 78, 82, 125, 132], "sales_across_tim": [24, 57, 82], "cummulative_contribut": [24, 57, 82], "missing_value_distribut": [24, 57, 82], "history_length": [9, 10, 24, 57, 82], "num_rows_histogram": [24, 57, 82], "product_matur": [24, 57, 82], "edaforecastinganalysi": [24, 56, 57, 82], "describe_monitor_alert": [24, 82], "monitor_alert_id": [24, 82, 107], "alert": [24, 82, 96, 97, 98, 100, 107, 108, 132], "monitoralert": [24, 82, 96, 107, 132], "describe_monitor_alert_vers": [24, 82], "monitor_alert_vers": [24, 82], "monitoralertvers": [24, 82, 100, 107, 108], "list_monitor_alerts_for_monitor": [24, 82, 96], "list_monitor_alert_versions_for_monitor_vers": [24, 82, 100], "get_model_monitoring_log": [24, 82, 100], "get_drift_for_featur": [24, 82, 100], "get_outliers_for_featur": [24, 82, 100], "batch_prediction_vers": [24, 82], "describe_deploy": [24, 82], "list_deploy": [24, 82, 132], "list_deployment_token": [24, 82, 132], "deploymentauthtoken": [24, 41, 82, 132], "get_model_training_types_for_deploy": [24, 82], "modeltrainingtypefordeploy": [24, 82, 90, 102], "describe_refresh_polici": [24, 82], "refresh_policy_id": [24, 82, 141], "describe_refresh_pipeline_run": [24, 82], "refresh_pipeline_run_id": [24, 82, 140], "pipelin": [9, 12, 24, 57, 82, 100, 115, 116, 117, 118, 119, 120, 121, 132, 140, 141, 142], "refreshpipelinerun": [24, 82, 140, 141], "prediction_metric_id": [24, 82, 132], "captur": [24, 82], "instant": [24, 82], "comma": [24, 82, 132, 141], "separ": [9, 10, 24, 82, 125, 132, 141], "list_refresh_pipeline_run": [24, 82, 141], "list_batch_predict": [24, 82, 132], "describe_batch_predict": [24, 82], "list_batch_prediction_vers": [24, 82], "describe_batch_prediction_vers": [24, 82], "describe_python_funct": [24, 82], "pythonfunct": [24, 82, 116, 136], "list_python_funct": [24, 82], "function_typ": [24, 82], "describe_graph_dashboard": [24, 82], "graph_dashboard_id": [24, 81, 82, 136], "graph": [24, 67, 78, 81, 82, 90, 132, 136], "dashboard": [24, 81, 82, 132, 136, 138], "graphdashboard": [24, 81, 82, 132, 136], "list_graph_dashboard": [24, 82, 132], "delete_graph_from_dashboard": [24, 82], "graph_reference_id": [24, 82], "describe_graph_for_dashboard": [24, 82], "pythonplotfunct": [24, 82, 138], "describe_algorithm": [24, 82], "list_algorithm": [24, 82], "queri": [24, 37, 59, 69, 82, 125, 143, 157, 159], "describe_custom_loss_funct": [24, 82], "previous": [24, 40, 63, 82], "regist": [9, 10, 24, 82, 137], "loss": [9, 10, 24, 28, 82, 106], "customlossfunct": [24, 28, 82], "list_custom_loss_funct": [24, 82], "name_prefix": [24, 82], "loss_function_typ": [24, 82], "categori": [24, 28, 54, 82, 125], "search": [24, 43, 82, 113, 125, 157], "describe_custom_metr": [24, 82], "custommetr": [24, 29, 82], "describe_custom_metric_vers": [24, 82], "custom_metric_vers": [24, 82], "custommetricvers": [24, 29, 30, 82], "list_custom_metr": [24, 82], "describe_modul": [24, 82], "list_modul": [24, 82], "get_source_code_info": 24, "train_funct": [24, 82, 132], "predict_funct": [24, 82, 132], "predict_many_funct": [24, 82, 132], "initialize_funct": [24, 82, 132], "common_funct": [24, 82], "get_module_code_from_notebook": 24, "file_path": [24, 82], "include_modul": 24, "source_cod": [24, 82, 114, 116], "included_modul": [24, 82], "create_dataset_from_panda": [24, 82], "feature_group_table_nam": [24, 82], "panda": [24, 59, 63, 71, 82, 90, 104, 114, 116, 132, 136, 137], "datafram": [24, 31, 59, 63, 71, 82, 90, 104, 132, 136, 137], "assign": [9, 10, 24, 28, 29, 30, 63, 82, 90, 125], "automat": [7, 9, 10, 24, 40, 82, 90, 112, 132, 136, 137], "clean": [24, 82], "complaint": [24, 82], "otherwis": [9, 10, 24, 40, 63, 82, 135, 147], "valueerror": [24, 27, 82], "create_dataset_version_from_panda": [24, 82], "table_name_or_id": [24, 82], "exist": [24, 52, 63, 69, 71, 78, 82, 90, 157], "create_feature_group_from_pandas_df": [24, 82], "update_feature_group_from_pandas_df": [24, 82], "create_feature_group_from_spark_df": [24, 82], "spark": [24, 82], "pyspark": [24, 82], "sql": [24, 37, 59, 60, 63, 69, 71, 82, 86, 110, 122, 124, 143], "update_feature_group_from_spark_df": [24, 82], "should_wait_for_upload": [24, 82], "some": [24, 37, 49, 61, 82, 125, 132], "like": [9, 10, 24, 82, 114], "create_spark_df_from_feature_group_vers": [24, 82], "context": [9, 10, 15, 24, 63, 82, 137], "sparksess": [24, 82], "load": [24, 59, 63, 71, 82], "create_model_from_funct": [24, 82, 132], "training_input_t": [9, 10, 24, 82, 90, 132], "cpu_siz": [24, 63, 82, 90, 132], "memori": [24, 37, 63, 71, 82, 90, 104, 132], "training_config": [24, 82, 90, 132], "exclusive_run": [24, 82, 132], "package_requir": [24, 63, 82, 90, 114, 116, 132], "use_gpu": [24, 82, 90, 132], "fucntion": [24, 82], "serial": [24, 82, 132], "mani": [9, 10, 24, 37, 63, 82, 122, 123], "size": [9, 10, 14, 24, 39, 44, 63, 71, 82, 90, 104, 125, 132, 151, 158], "cpu": [24, 63, 71, 82, 90, 104, 132], "gb": [24, 63, 71, 82, 90, 104, 132], "packag": [24, 25, 63, 90, 114, 116, 132], "numpi": [24, 63, 82, 90, 114, 116, 132], "2": [7, 9, 24, 59, 63, 82, 90, 97, 114, 116, 125, 132], "3": [24, 63, 82, 90, 114, 116, 125, 132, 151], "4": [24, 63, 82, 90, 114, 116, 125, 132], "equival": [24, 82], "create_feature_group_from_python_funct": [24, 82], "input_t": [24, 82], "python_function_nam": [24, 63, 82, 137], "python_function_bind": [24, 63, 82], "give": [24, 76, 78, 82], "pythonfunctionargu": [9, 12, 24, 82], "update_python_function_cod": [24, 82], "function_variable_map": [24, 82, 136], "python_funct": [9, 24, 82], "create_algorithm_from_funct": [24, 82], "training_data_parameter_names_map": [24, 82], "training_config_parameter_nam": [24, 82], "config_opt": [24, 82], "is_default_en": [24, 82], "alreadi": [9, 10, 24, 63, 82, 132], "uppercas": [24, 82, 106, 136, 138], "letter": [24, 82, 106, 136, 138], "underscor": [24, 82, 106, 136, 138], "process": [9, 10, 24, 33, 40, 57, 71, 82, 93, 100, 104, 108, 151], "util": [24, 82, 125, 147], "boolean": [7, 9, 24, 54, 82, 145], "update_algorithm_from_funct": [24, 82], "get_train_function_input": [24, 82], "training_table_nam": [24, 82], "training_data_parameter_name_overrid": [24, 82, 132], "training_config_parameter_name_overrid": [24, 82], "custom_algorithm_config": [24, 82, 90, 132], "get_train_function_input_from_model_vers": [24, 82], "particular": [9, 10, 24, 82, 125], "create_custom_loss_funct": [24, 82], "loss_funct": [9, 10, 24, 82], "should": [24, 39, 40, 63, 71, 82, 90, 114, 116, 125, 132], "per": [9, 10, 24, 40, 53, 82, 125], "50": [24, 82, 125], "char": [24, 82], "alphabet": [24, 82], "would": [9, 10, 24, 28, 63, 82], "ex": [24, 82], "regression_dl_tf": [24, 82], "classification_dl_tf": [24, 82], "functor": [24, 82], "take": [9, 10, 24, 37, 82, 125, 136, 137], "y_true": [24, 82], "y_pred": [24, 82], "invalidparametererror": [24, 82], "either": [24, 26, 40, 49, 63, 82, 99, 132, 136, 137], "incompat": [24, 82], "alreadyexistserror": [24, 82], "update_custom_loss_funct": [24, 82], "implement": [24, 82], "datanotfounderror": [24, 82], "create_custom_metric_from_funct": [24, 82], "custom_metric_funct": [24, 82], "evalu": [9, 10, 24, 82, 90], "regress": [7, 9, 24, 28, 29, 82, 125], "newli": [24, 40, 63, 71, 82, 132, 157], "update_custom_metric_from_funct": [24, 82], "create_module_from_notebook": [24, 82], "mark": [9, 10, 22, 24, 40, 82, 151], "notebook": [24, 28, 29, 47, 82, 106, 114, 115, 119, 132, 136, 138, 141], "module_start": [24, 82], "cell": [24, 82], "module_end": [24, 82], "end": [24, 37, 57, 79, 82, 86, 100, 104, 108], "rel": [9, 10, 24, 82, 125], "path": [24, 47, 63, 82, 90, 137], "root": [24, 63, 82, 90], "directori": [24, 63, 82, 90], "n1": [24, 82], "ipynb": [24, 82], "update_module_from_notebook": [24, 82], "import_modul": [24, 82], "reload": [24, 82], "add_user_to_organ": [24, 82], "your": [9, 10, 24, 75, 82, 125, 132, 151], "join": [24, 63, 82, 112, 122, 123, 151, 155], "create_organization_group": [24, 82], "group_nam": [24, 63, 82], "permiss": [24, 75, 76, 77, 82, 112], "default_group": [24, 82], "add_organization_group_permiss": [24, 82], "add": [24, 63, 82, 112, 132, 136], "remove_organization_group_permiss": [24, 82], "remov": [9, 10, 24, 40, 63, 82, 112, 132], "delete_organization_group": [24, 82], "add_user_to_organization_group": [24, 82], "remove_user_from_organization_group": [24, 82], "set_default_organization_group": [24, 82], "delete_api_kei": [24, 82], "remove_user_from_organ": [24, 82], "you": [24, 82, 125, 132], "yourself": [24, 82], "administr": [24, 82], "create_deployment_webhook": [24, 82], "webhook_event_typ": [24, 40, 82, 161], "payload_templ": [24, 40, 82, 161], "post": [24, 40, 82, 161], "One": [24, 40, 63, 72, 82, 125], "deployment_start": [24, 40, 82], "deployment_success": [24, 40, 82], "deployment_fail": [24, 40, 82], "update_webhook": [24, 82], "chang": [9, 10, 24, 48, 49, 53, 61, 63, 82, 109, 125, 137, 149, 161], "event": [9, 10, 24, 37, 82, 161], "payload": [24, 82, 161], "delete_webhook": [24, 82], "create_project": [24, 82], "want": [24, 82, 125, 132], "detect": [9, 10, 24, 37, 38, 60, 82, 125, 145], "fraud": [24, 82, 125], "first": [24, 39, 45, 63, 71, 82, 125, 132], "more": [9, 10, 24, 37, 38, 63, 73, 82, 132, 134, 141, 145], "solv": [24, 82], "our": [24, 82, 125, 151], "guid": [24, 37, 38, 63, 82, 145], "app": [24, 37, 63, 73, 82, 134, 145], "help": [9, 10, 24, 37, 63, 73, 82, 134, 145], "further": [24, 82], "follow": [24, 63, 82, 125, 154], "avail": [9, 10, 24, 40, 62, 63, 82, 112, 132, 143], "choos": [9, 10, 24, 82, 90], "language_detect": [7, 9, 24, 82], "nlp_sentiment": [7, 9, 24, 82], "nlp_qa": [], "nlp_search": [7, 9, 24, 82], "nlp_chat": [24, 82], "nlp_sentence_boundary_detect": [7, 9, 24, 82], "nlp_classif": [7, 9, 24, 82], "nlp_summar": [7, 9, 24, 82], "nlp_document_visu": [7, 9, 24, 82], "embeddings_onli": [24, 82], "model_with_embed": [24, 82], "torch_model": [24, 82], "torch_model_with_embed": [24, 82], "python_model": [24, 82], "notebook_python_model": [24, 82], "docker_model": [24, 82], "docker_model_with_embed": [24, 82], "customer_churn": [24, 82], "energi": [24, 82], "financial_metr": [24, 82], "cumulative_forecast": [7, 9, 10, 24, 82], "fraud_account": [24, 82], "fraud_threat": [24, 82], "fraud_transact": [24, 82], "operations_cloud": [24, 82], "cloud_spend": [24, 82], "timeseries_anomaly_detect": [24, 82], "operations_mainten": [24, 82], "operations_incid": [24, 82], "pers_promot": [24, 82], "feature_stor": [7, 9, 24, 82], "retail": [24, 82], "sales_forecast": [24, 82], "sales_scor": [24, 82], "feed_recommend": [24, 82], "user_rank": [24, 82], "named_entity_recognit": [24, 82], "user_item_affin": [], "user_recommend": [24, 82], "user_rel": [24, 82], "vision": [24, 82, 132], "vision_object_detect": [7, 9, 24, 82], "feature_drift": [24, 82], "generic_forecast": [24, 82], "pretrained_image_text_descript": [24, 82], "pretrained_speech_recognit": [24, 82], "pretrained_style_transf": [24, 82], "pretrained_text_to_image_gener": [24, 82], "theme_analysi": [7, 9, 24, 82], "rename_project": [24, 82], "delete_project": [24, 82], "remain": [9, 10, 24, 82, 132], "activ": [9, 10, 24, 40, 82, 105, 125, 132, 155], "ensur": [24, 63, 82, 132], "stop": [24, 40, 82, 89, 132], "note": [24, 37, 40, 82, 125, 132, 151], "cannot": [24, 40, 82, 83, 90, 104, 112, 132], "recov": [24, 82, 132], "onc": [24, 82, 132], "add_feature_group_to_project": [24, 82], "custom_t": [24, 63, 82], "set_project_feature_group_config": [24, 82], "project_config": [24, 63, 82], "remove_feature_group_from_project": [24, 82], "set_feature_group_typ": [24, 82], "use_feature_group_for_train": [], "use_for_train": [], "variabl": [9, 10, 12, 24, 63, 69, 70, 71, 82, 114, 117, 120, 125, 136, 143], "set_feature_map": [24, 82, 132], "feature_map": [11, 24, 82, 132], "nested_column_nam": [24, 82, 132], "anoth": [24, 63, 82, 132], "move": [24, 82, 132], "featuremap": [24, 60, 73, 82, 84, 110, 132, 145], "set_column_data_typ": 37, "data_typ": [24, 37, 63, 82, 149], "feature_types_url": [], "columnmap": [24, 37, 82], "restrict": [24, 37, 63, 82, 125], "explicitli": [24, 37, 82], "datatyp": [24, 37, 38, 60, 63, 82, 110, 145, 149], "categor": [9, 10, 54, 61, 62, 82, 145], "categorical_list": 145, "text": [7, 9, 10, 14, 22, 24, 25, 43, 69, 82, 125, 145, 158], "label_list": 145, "object_refer": 145, "multicategorical_list": 145, "coordinate_list": 145, "numerical_list": 145, "timestamp_list": 145, "set_column_map": [], "column_map": [], "see": [24, 63, 73, 82, 125, 132, 134, 145, 148, 154], "here": 154, "remove_column_map": [], "made": [24, 82, 90, 125, 132, 137], "add_annot": [24, 82], "annotation_sourc": [24, 82], "ui": [24, 82, 102, 132], "indic": [7, 9, 10, 24, 30, 36, 37, 39, 40, 50, 63, 71, 82, 90, 96, 109], "came": [24, 82], "bulk": [24, 82], "in_progress": [24, 63, 82], "describe_annot": [24, 63, 82], "get_document_to_annot": [24, 63, 82], "get_previ": [24, 63, 82], "fetch": [24, 25, 37, 63, 82, 149], "immedi": [24, 63, 82], "previou": [24, 37, 63, 82], "instead": [9, 10, 24, 63, 69, 82, 125], "create_feature_group": [24, 82], "statement": [24, 63, 82], "form": [24, 82, 125, 132, 147, 151], "create_feature_group_from_templ": [24, 82], "template_bind": [24, 63, 69, 82], "should_attach_feature_group_to_templ": [24, 63, 82], "bind": [24, 63, 69, 82, 143], "overrid": [24, 37, 63, 69, 82, 125, 132], "leav": [9, 10, 24, 37, 72, 82], "create_feature_group_from_funct": [24, 82], "function_source_cod": [24, 63, 82, 90, 132], "function_nam": [24, 63, 82, 114, 116], "input_feature_group": [24, 63, 82], "use_original_csv_nam": [24, 63, 82], "languag": [24, 63, 82, 86, 87, 90, 109, 114, 116, 125, 132], "suppli": [24, 27, 63, 82, 90, 132, 136], "we": [9, 10, 24, 63, 70, 82, 122, 123, 125, 132], "those": [24, 63, 69, 82, 90, 122, 123, 125, 132], "expect": [9, 10, 24, 82, 90, 132, 149], "librari": [24, 63, 82, 90, 114, 116, 132], "section": [24, 63, 82, 90, 114, 116, 132], "origin": [9, 10, 24, 38, 60, 63, 71, 82, 86, 110, 125], "function_argu": [24, 63, 82, 136], "variable_typ": [9, 12, 24, 63, 82, 136], "name_of_feature_group": [24, 63, 82, 136], "create_sampling_feature_group": [24, 82], "sampling_config": [24, 63, 82], "effici": [24, 63, 82], "approxim": [24, 46, 63, 82], "unless": [24, 63, 82, 151], "vari": [24, 63, 82], "slightli": [24, 63, 82], "pre": [24, 63, 82], "human": [24, 63, 82], "readabl": [24, 63, 82], "create_merge_feature_group": [24, 82], "source_feature_group_id": [24, 63, 82], "merge_config": [24, 63, 82], "union": [24, 26, 63, 82], "arg": [24, 25, 82], "merg": [8, 9, 24, 26, 37, 39, 63, 82], "create_transform_feature_group": [24, 82], "transform_config": [24, 63, 82], "aka": [24, 82], "create_snapshot_feature_group": [24, 71, 82], "snapshot": [9, 10, 24, 37, 63, 71, 82], "set_feature_group_sampling_config": [24, 82], "empti": [24, 63, 82], "set_feature_group_merge_config": [24, 82], "mergefeaturegroup": [24, 63, 82], "increment": [8, 9, 24, 37, 39, 63, 82], "rule": [24, 63, 82], "set_feature_group_transform_config": [24, 82], "transformfeaturegroup": [24, 63, 82], "set_feature_group_schema": [24, 82], "point": [9, 10, 24, 26, 60, 63, 71, 82, 122, 123, 124, 125], "properti": [24, 40, 63, 82], "create_featur": [24, 63, 82], "select_express": [24, 63, 82], "select": [9, 10, 24, 37, 54, 55, 63, 70, 82, 90, 104, 125, 132], "express": [9, 10, 24, 63, 82, 122, 124], "add_feature_group_tag": [24, 82], "remove_feature_group_tag": [24, 82], "add_annotatable_featur": [24, 63, 82], "annotation_typ": [24, 63, 82], "annotat": [24, 63, 82], "set_feature_as_annotatable_featur": [24, 63, 82], "feature_group_row_identifier_featur": [24, 63, 82], "doc_id_featur": [24, 63, 82], "unset_feature_as_annotatable_featur": [24, 63, 82], "unset": [24, 63, 82], "add_feature_group_annotation_label": [24, 82], "label_nam": [24, 63, 82], "label_definit": [24, 63, 82], "remove_feature_group_annotation_label": [24, 82], "add_feature_tag": [24, 63, 82], "remove_feature_tag": [24, 63, 82], "create_nested_featur": [24, 63, 82], "using_claus": [24, 63, 82], "where_claus": [24, 63, 82], "order_claus": [24, 63, 82], "logic": [24, 60, 63, 82, 110], "parent": [24, 63, 82], "claus": [24, 60, 63, 82], "update_nested_featur": [24, 63, 82], "new_nested_feature_nam": [24, 63, 82], "delete_nested_featur": [24, 63, 82], "without": [9, 10, 24, 63, 82, 97, 132], "create_point_in_time_featur": [24, 63, 82], "history_table_nam": [24, 63, 82], "aggregation_kei": [24, 63, 82], "timestamp_kei": [24, 63, 82], "historical_timestamp_kei": [24, 63, 82], "lookback_window_second": [24, 63, 82], "lookback_window_lag_second": [24, 63, 82], "lookback_count": [24, 63, 82], "lookback_until_posit": [24, 63, 82], "histor": [24, 63, 82, 122, 123], "window": [9, 10, 24, 49, 58, 61, 62, 63, 82, 122, 123], "spec": [24, 63, 82], "aggreg": [24, 63, 80, 82, 122, 123, 124], "lookbackwindowsecond": [24, 63, 82, 122], "lookbackcount": [24, 63, 82, 122, 123], "second": [24, 37, 40, 56, 63, 82, 122, 123, 125, 151, 157], "histori": [9, 10, 23, 24, 42, 56, 63, 82, 122, 123], "match": [24, 27, 47, 63, 82, 125, 150], "historicaltimefeatur": [24, 63, 82], "greater": [9, 10, 24, 63, 82], "lookbackstartcount": [24, 63, 82], "timefeatur": [24, 63, 82], "consid": [9, 10, 24, 63, 82], "lookbackwindowlagsecond": [24, 63, 82, 122], "ve": [24, 63, 82], "neg": [24, 63, 82, 122, 123], "care": [24, 63, 82], "taken": [24, 63, 82], "onlin": [24, 63, 82], "lookup": [24, 40, 63, 71, 82, 147, 157, 159], "count": [24, 32, 45, 46, 63, 78, 82, 85, 97, 98, 122, 123], "align": [24, 63, 82], "rank": [9, 10, 24, 63, 82, 125], "just": [24, 63, 82], "prior": [24, 63, 82], "lag": [24, 56, 63, 82, 122, 123], "term": [24, 63, 82, 122, 123], "posit": [24, 63, 82, 122, 123, 125, 132, 151], "lookbackuntilposit": [24, 63, 82, 122, 123], "sequenc": [24, 63, 82, 122, 124, 151], "scalar": [9, 10, 24, 63, 82, 122, 124, 125], "past": [24, 63, 82, 122, 123], "closest": [24, 63, 82, 122, 123], "update_point_in_time_featur": [24, 63, 82], "new_feature_nam": [24, 63, 82], "pit": [24, 63, 80, 82], "createpointintimefeatur": [24, 63, 82], "semant": [24, 63, 82], "do": [9, 10, 24, 63, 82], "create_point_in_time_group": [24, 63, 82], "window_kei": [24, 63, 82], "history_window_kei": [24, 63, 82], "history_aggregation_kei": [24, 63, 82], "lookback_window": [24, 63, 82], "lookback_window_lag": [24, 63, 82], "windowkei": [24, 63, 82, 123], "aggregationkei": [24, 63, 82, 122, 123], "lookback": [24, 63, 82], "update_point_in_time_group": [24, 63, 82], "delete_point_in_time_group": [24, 63, 82], "create_point_in_time_group_featur": [24, 63, 82], "update_point_in_time_group_featur": [24, 63, 82], "set_feature_typ": [24, 63, 82], "feature_typ": [24, 63, 82], "reflect": [24, 63, 82], "machin": [24, 63, 72, 82], "learn": [7, 9, 10, 24, 63, 82], "featuretyp": [24, 38, 60, 63, 82, 110, 145], "invalidate_streaming_feature_group_data": [24, 82], "invalid_before_timestamp": [24, 63, 82], "invalidbeforetimestamp": [24, 63, 82], "unix": [24, 26, 37, 63, 82], "concatenate_feature_group_data": [24, 82], "merge_typ": [24, 63, 82], "replace_until_timestamp": [24, 63, 82], "skip_materi": [24, 63, 82], "concaten": [24, 26, 63, 82], "special": [24, 63, 82], "updatetimestampkei": [24, 63, 82, 83], "primarykei": [24, 53, 56, 63, 82, 83], "operand": [24, 63, 82], "oper": [24, 59, 63, 68, 82, 124, 125], "append": [24, 63, 82, 146, 147], "destin": [24, 26, 63, 82], "intersect": [24, 26, 63, 82], "remove_concatenation_config": [24, 63, 82], "set_feature_group_indexing_config": [24, 82], "primary_kei": [24, 63, 82, 132], "update_timestamp_kei": [24, 63, 82], "lookup_kei": [24, 63, 82], "dedupl": [24, 63, 82], "comput": [9, 10, 24, 58, 62, 63, 82, 125, 130, 132], "These": [24, 63, 82], "underli": [24, 38, 63, 82, 109, 131, 145, 153], "update_feature_group": [24, 82], "detach_feature_group_from_templ": [24, 82], "update_feature_group_template_bind": [24, 82], "update_feature_group_python_function_bind": [24, 82], "update_feature_group_python_funct": [24, 82], "update_feature_group_sql_definit": [24, 82], "update_dataset_feature_group_feature_express": [24, 82], "feature_express": [24, 63, 82], "update_feature_group_function_definit": [24, 82], "update_feature_group_zip": [24, 82], "module_nam": [24, 63, 82], "createfeaturegroupfromzip": [24, 63, 82], "update_feature_group_git": [24, 82], "branch_nam": [24, 63, 82, 90], "python_root": [24, 63, 82, 90], "createfeaturegroupfromgit": [24, 63, 82], "git": [24, 63, 82, 90], "branch": [24, 63, 82, 90], "repositori": [24, 63, 82, 90], "top": [9, 10, 24, 63, 82, 90], "level": [24, 63, 82, 90, 132], "update_featur": [24, 63, 82], "new_nam": [24, 63, 82], "export_feature_group_version_to_file_connector": [24, 82], "export_file_format": [9, 13, 24, 71, 82], "overwrit": [24, 71, 82], "export_feature_group_version_to_database_connector": [24, 82], "write_mod": [24, 40, 71, 82], "database_feature_map": [24, 40, 71, 82], "id_column": [9, 13, 24, 40, 71, 82], "additional_id_column": [9, 13, 24, 40, 71, 82], "insert": [24, 40, 63, 64, 65, 71, 82, 147], "addit": [9, 10, 24, 37, 40, 63, 64, 65, 68, 70, 71, 82, 125, 132], "complex": [24, 40, 64, 65, 71, 82], "export_feature_group_version_to_consol": [24, 82], "set_feature_group_modifier_lock": [24, 82], "prevent": [24, 63, 82], "disabl": [9, 10, 24, 40, 63, 82], "enabl": [9, 10, 24, 37, 39, 40, 63, 82, 132], "add_user_to_feature_group_modifi": [24, 82], "add_organization_group_to_feature_group_modifi": [24, 82], "remove_user_from_feature_group_modifi": [24, 82], "remove_organization_group_from_feature_group_modifi": [24, 82], "delete_featur": [24, 63, 82], "delete_feature_group": [24, 82], "create_feature_group_vers": [24, 82], "variable_bind": [24, 63, 82], "create_feature_group_templ": [24, 82], "template_sql": [24, 63, 69, 82], "template_vari": [24, 63, 69, 82], "resolv": [24, 37, 63, 69, 71, 82, 125, 143], "delete_feature_group_templ": [24, 82], "update_feature_group_templ": [24, 82], "preview_feature_group_template_resolut": [24, 82], "should_valid": [24, 69, 82], "assum": [24, 82], "resolvedfeaturegrouptempl": [24, 69, 82, 143], "cancel_upload": [24, 82], "cancel": [24, 82, 151], "upload_part": [24, 82, 151], "part_numb": [24, 82, 151], "part_data": [24, 82, 151], "5gb": [24, 82, 151], "5tb": [24, 82, 151], "5mb": [24, 82, 151], "index": [8, 9, 10, 14, 24, 52, 63, 82, 83, 86, 125, 132, 151, 157, 160, 162], "denot": [24, 82, 86, 151], "textiobas": [24, 63, 82, 125, 151], "multipart": [24, 82, 125, 151], "uploadpart": [24, 82, 151, 152], "encapsul": [24, 82, 151], "etag": [24, 82, 151, 152], "got": [24, 82, 151], "mark_upload_complet": [24, 82], "create_dataset_from_file_connector": [24, 82], "file_format": [24, 37, 40, 82], "refresh_schedul": [24, 40, 82, 132], "csv_delimit": [6, 9, 24, 37, 82], "filename_column": [24, 82], "start_prefix": [24, 82], "until_prefix": [24, 82], "location_date_format": [24, 82], "date_format_lookback_dai": [24, 82], "is_documentset": [24, 37, 82], "merge_file_schema": [24, 37, 82], "amazon": [24, 82], "aw": [24, 82], "bucket1": [24, 82], "dir1": [24, 82], "dir2": [24, 82], "event_d": [24, 82], "yyyi": [24, 82], "mm": [24, 82], "dd": [24, 82], "2021": [24, 82], "08": [24, 82, 125], "02": [24, 82], "utc": [24, 40, 82, 114, 132, 141, 142], "delimit": [24, 37, 82], "inclus": [24, 82, 125], "exclus": [24, 82, 125, 132], "partit": [9, 10, 24, 82], "dir4": [24, 82], "filenam": [24, 82], "parquet": [24, 82], "dai": [9, 10, 24, 37, 56, 82], "back": [7, 9, 24, 31, 82], "06": [24, 82], "04": [24, 82], "signifi": [24, 37, 82], "create_dataset_version_from_file_connector": [24, 82], "try": [24, 37, 82], "create_dataset_from_database_connector": [24, 82], "query_argu": [24, 37, 82], "sql_queri": [24, 37, 82], "timestamp_column": [24, 82], "descend": [24, 55, 82], "create_dataset_from_application_connector": [24, 82], "object_id": [24, 37, 82], "start_timestamp": [24, 37, 82], "end_timestamp": [24, 37, 82], "period": [9, 10, 24, 37, 82, 97], "create_dataset_version_from_database_connector": [24, 82], "create_dataset_version_from_application_connector": [24, 82], "create_dataset_from_upload": [24, 82], "create_dataset_version_from_upload": [24, 82], "create_streaming_dataset": [24, 82], "over": [24, 82], "extend": [24, 82], "snapshot_streaming_data": [24, 37, 82], "set_dataset_column_data_typ": [24, 82], "create_dataset_from_streaming_connector": [24, 82], "streaming_connector_id": [24, 82, 148], "streaming_arg": [24, 82], "set_streaming_retention_polici": [24, 37, 82], "retention_hour": [24, 37, 82], "retention_row_count": [24, 37, 82], "ignore_records_before_timestamp": [24, 37, 82], "retent": [24, 37, 82], "hour": [9, 10, 24, 37, 56, 82], "retain": [24, 37, 82], "cutoff": [24, 37, 82], "ignor": [9, 10, 24, 37, 82, 125], "sent": [22, 24, 37, 43, 82, 125, 161], "rename_database_connector": [24, 82], "rename_application_connector": [24, 82], "verify_database_connector": [24, 82], "verify_file_connector": [24, 82], "fileconnectorverif": [24, 77, 82], "delete_database_connector": [24, 82], "delete_application_connector": [24, 82], "delete_file_connector": [24, 82], "verify_application_connector": [24, 82], "set_azure_blob_connection_str": [24, 82], "connection_str": [24, 82], "azur": [24, 82], "blob": [24, 82, 125], "product_nam": [24, 82], "rolearn": [24, 82], "verify_streaming_connector": [24, 82], "rename_streaming_connector": [24, 82], "delete_streaming_connector": [24, 82], "create_streaming_token": [24, 82], "delete_streaming_token": [24, 82], "streaming_token": [24, 63, 82, 147], "attach_dataset_to_project": [], "let": [24, 82, 125], "engin": [], "know": [24, 82, 125], "remove_dataset_from_project": [], "delete_dataset": [24, 82], "get_training_config_opt": [24, 82, 132], "for_retrain": [24, 82, 132], "current_training_config": [24, 82, 132], "use_cases_url": [24, 82, 132], "retrain": [24, 40, 82, 90, 132], "state": [24, 82, 103, 119, 125, 132], "shall": [24, 82, 132], "trainingconfigopt": [24, 82, 132, 149], "create_train_test_data_split_feature_group": [24, 82, 132], "influenc": [24, 82, 132], "train_model": [24, 82, 132], "custom_algorithm": [7, 9, 10, 24, 82, 90, 132], "custom_algorithms_onli": [24, 82, 132], "builtin_algorithm": [24, 82, 90, 132], "gettrainingconfigopt": [24, 82, 132], "builtin": [24, 82, 132], "create_model_from_python": [24, 82, 132], "train_function_nam": [9, 10, 24, 82, 90, 132], "predict_function_nam": [9, 10, 24, 82, 90, 132], "predict_many_function_nam": [9, 10, 24, 82, 90, 132], "initialize_function_nam": [24, 82, 90, 132], "functionsourcecod": [24, 63, 82, 90, 132], "well": [9, 10, 24, 82, 90, 132], "anyth": [24, 82, 90, 132], "decid": [24, 82, 132], "rename_model": [24, 82], "update_python_model": [24, 82], "update_python_model_zip": [24, 82], "train_module_nam": [9, 10, 24, 82, 90], "predict_module_nam": [9, 10, 24, 82, 90], "trainmodulenam": [24, 82, 90], "predictmodulenam": [24, 82, 90], "respect": [9, 10, 24, 82, 90, 125, 132, 159], "update_python_model_git": [24, 82], "set_model_training_config": [24, 82], "set_model_prediction_param": [24, 82], "prediction_config": [24, 82, 90], "retrain_model": [24, 82], "honor": [24, 82, 90, 125], "delete_model": [24, 82], "delete_model_vers": [24, 82], "export_model_artifact_as_feature_group": [24, 82, 104], "artifact_typ": [24, 82, 104], "evalartifact": [24, 82, 104], "get_custom_train_function_info": [24, 82, 132], "feature_group_names_for_train": [24, 82, 132], "customtrainfunctioninfo": [24, 31, 82, 132], "create_model_monitor": [24, 82, 132], "prediction_feature_group_id": [24, 82, 132], "training_feature_group_id": [24, 82, 132], "target_valu": [24, 82, 132], "target_value_bia": [24, 82, 132], "target_value_perform": [24, 82, 132], "training_feature_map": [24, 82, 132], "feature_group_base_monitor_config": [24, 82, 132], "feature_group_comparison_monitor_config": [24, 82, 132], "pr": [24, 82, 132], "auc": [7, 9, 24, 82, 132], "page": [9, 10, 24, 82, 90, 125, 132], "old": [24, 82, 132], "prod": [7, 9, 24, 82, 132], "curv": [24, 82, 132], "prediction_feature_group": [24, 82, 132], "training_fature_group": [24, 82, 132], "strategi": [9, 10, 24, 82, 132], "rerun_model_monitor": [24, 82], "re": [9, 10, 24, 82, 96, 125], "rename_model_monitor": [24, 82], "delete_model_monitor": [24, 82], "delete_model_monitor_vers": [24, 82], "create_vision_drift_monitor": [24, 82, 132], "training_feature_group": [24, 82, 132], "precis": [7, 9, 10, 24, 82, 132], "recal": [7, 9, 10, 24, 82, 132], "area": [24, 82, 132], "create_eda": [24, 82, 132], "include_collinear": [24, 82, 132], "include_data_consist": [24, 82, 132], "collinearity_kei": [24, 82, 132], "data_consistency_test_config": [24, 82, 132], "data_consistency_reference_config": [24, 82, 132], "forecast_frequ": [9, 10, 24, 82, 132], "item": [7, 9, 10, 24, 56, 78, 82, 103, 125, 132, 147], "In": [24, 63, 71, 78, 82, 132], "hourli": [7, 9, 24, 56, 82, 132], "daili": [7, 9, 24, 56, 82, 132], "weekli": [24, 56, 82, 132], "monthli": [24, 56, 82, 132], "quarterli": [24, 56, 82, 132], "yearli": [7, 9, 24, 56, 82, 132], "rerun_eda": [24, 82], "rerun": [24, 50, 82, 96, 107, 132], "rename_eda": [24, 82], "delete_eda": [24, 82], "delete_eda_vers": [24, 82], "create_monitor_alert": [24, 82, 132], "alert_nam": [24, 82, 107, 132], "condition_config": [24, 82, 107, 132], "action_config": [24, 82, 107, 132], "condit": [24, 82, 107, 108, 132], "update_monitor_alert": [24, 82], "run_monitor_alert": [24, 82], "delete_monitor_alert": [24, 82], "create_deploy": [24, 82], "calls_per_second": [24, 82], "auto_deploi": [24, 82], "enable_batch_streaming_upd": [24, 82], "model_deployment_config": [24, 40, 82], "handl": [9, 10, 24, 40, 82, 90], "flag": [24, 39, 40, 71, 82, 86, 109], "offlin": [24, 82], "background": [24, 40, 82], "cach": [24, 40, 82], "quicker": [24, 40, 82], "create_deployment_token": [24, 82, 132], "update_deploy": [24, 82], "rename_deploy": [24, 82], "set_auto_deploy": [24, 82], "auto": [7, 9, 24, 40, 82], "promot": [24, 40, 82, 125], "compar": [24, 40, 48, 82, 125], "better": [24, 40, 82], "poor": [24, 40, 82], "autodeploi": [24, 40, 82], "set_deployment_model_vers": [24, 82], "serv": [24, 40, 82], "infer": [24, 40, 82, 84, 132], "set_deployment_feature_group_vers": [24, 82], "start_deploy": [24, 82], "restart": [24, 40, 82], "suspend": [24, 40, 82], "stop_deploy": [24, 82], "delete_deploy": [24, 82], "affect": [24, 40, 82], "recover": [24, 40, 82], "delete_deployment_token": [24, 82], "set_deployment_feature_group_export_file_connector_output": [24, 82], "set_deployment_feature_group_export_database_connector_output": [24, 82], "remove_deployment_feature_group_export_output": [24, 82], "refresh_typ": [24, 82, 141], "pattern": [24, 82], "regular": [9, 10, 24, 82], "interv": [24, 82], "delete_refresh_polici": [24, 82], "pause_refresh_polici": [24, 82], "paus": [24, 82, 114, 141, 142], "resume_refresh_polici": [24, 82], "resum": [24, 82, 114, 141], "run_refresh_polici": [24, 82], "forc": [7, 9, 10, 24, 82, 125, 141], "update_refresh_polici": [24, 82], "lookup_featur": [24, 82, 125], "query_data": [24, 82, 125], "limit_result": [24, 82, 125, 157], "result_column": [24, 82, 125], "author": [24, 82, 125], "safe": [24, 82, 125], "embed": [9, 10, 24, 58, 82, 103, 125, 132, 147, 157], "insid": [24, 82, 125], "websit": [24, 82, 125], "user_id": [24, 82, 125], "entiti": [9, 10, 24, 82, 125], "against": [16, 24, 63, 82, 125], "emb": [24, 82, 125], "predict_multipl": [24, 82, 125], "predict_from_dataset": [24, 82, 125], "predict_lead": [24, 82, 125], "explain_predict": [24, 82, 125], "explainer_typ": [24, 82, 125], "probabl": [24, 82, 125], "interact": [9, 10, 24, 82, 125], "own": [24, 82, 125], "incom": [24, 82, 125], "asset": [24, 82, 125], "credit": [24, 82, 125], "score": [24, 82, 113, 125, 159], "wherev": [24, 82, 125], "lead_id": [24, 82, 125], "click": [24, 82, 125], "cart": [24, 82, 125], "Will": [24, 82, 125], "explain": [24, 72, 82, 125], "predict_churn": [24, 82, 125], "churn": [24, 82, 125], "churn_result": [24, 82, 125], "churned_yn": [24, 82, 125], "predict_takeov": [24, 82, 125], "ye": [9, 10, 24, 82, 125], "account_nam": [24, 82, 125], "account_id": [24, 82, 125], "account": [24, 82, 125], "characterist": [24, 82, 125], "login": [24, 82, 125], "durat": [9, 10, 24, 82, 125], "ip": [24, 82, 125], "predict_fraud": [24, 82, 125], "transact": [24, 82, 125], "fraudul": [24, 82, 125], "account_numb": [24, 82, 125], "card": [24, 82, 125], "predict_class": [24, 82, 125], "threshold": [9, 10, 24, 52, 82, 125], "threshold_class": [24, 82, 125], "fixed_featur": [24, 82, 125], "classif": [24, 28, 82, 125], "popular": [9, 10, 24, 82, 125], "upon": [24, 82, 125, 136, 138], "multi": [9, 10, 24, 28, 82, 83, 103, 125, 154], "f1": [24, 82, 125], "optim": [7, 9, 10, 24, 82, 125], "treat": [9, 10, 24, 82, 125], "constant": [24, 82, 125], "delta": [24, 82, 125], "predict_target": [24, 82, 125], "get_anomali": [24, 82, 125], "histogram": [24, 58, 82, 97, 125], "anomali": [7, 9, 10, 24, 82, 125], "8": [7, 9, 24, 82, 125], "99": [24, 82, 125], "is_anomali": [24, 82, 125], "get_forecast": [24, 82, 125], "future_data": [24, 82, 125], "num_predict": [24, 82, 125], "prediction_start": [24, 82, 125], "holiday_yn": [24, 82, 125], "store_id": [24, 82, 125], "item_id": [9, 10, 24, 82, 125, 147], "known": [24, 82, 125], "ahead": [24, 82, 125], "holidai": [9, 10, 24, 82, 125], "nation": [24, 82, 125], "element": [24, 82, 125], "enter": [24, 82, 125], "No": [24, 82, 125], "promo": [24, 82, 125], "2015": [24, 82, 125], "07": [24, 82, 125], "31": [24, 82, 125], "00": [24, 82, 125], "01t00": [24, 82, 125], "mid": [24, 82, 125], "night": [24, 82, 125], "01": [24, 82, 125], "get_k_nearest": [24, 82, 125], "vector": [9, 10, 14, 24, 82, 90, 104, 125, 132, 147, 157, 158, 159, 160], "k": [9, 10, 24, 82, 125], "distanc": [24, 58, 62, 82, 125], "include_scor": [24, 82, 125], "nearest": [7, 9, 24, 82, 125], "neighbor": [24, 82, 125], "find": [24, 82, 125], "alongsid": [24, 82, 125], "get_multiple_k_nearest": [24, 82, 125], "catalogid": [24, 82, 125], "cat0": [24, 82, 125], "20": [9, 10, 24, 82, 125], "euclidean": [24, 82, 125], "getknearest": [24, 82, 125], "get_label": [24, 82, 125], "extract": [24, 37, 82, 125], "get_entities_from_pdf": [24, 82, 125], "pdf": [24, 82, 125], "return_extracted_featur": [24, 82, 125], "recogn": [24, 82, 125], "get_recommend": [24, 82, 125], "num_item": [24, 82, 125], "exclude_item_id": [24, 82, 125], "score_field": [24, 82, 125], "scaling_factor": [24, 82, 125], "restrict_item": [24, 82, 125], "exclude_item": [24, 82, 125], "explore_fract": [24, 82, 125], "user_nam": [24, 82, 125], "exact": [24, 82, 125], "john": [24, 82, 125], "doe": [24, 27, 82, 125, 147], "displai": [24, 54, 59, 63, 71, 80, 82, 92, 93, 101, 125], "sai": [24, 82, 125], "10": [7, 9, 24, 59, 71, 82, 125, 151], "11th": [24, 82, 125], "20th": [24, 82, 125], "toward": [24, 82, 125], "certain": [9, 10, 24, 82, 105, 125], "col0": [24, 82, 125], "value0": [24, 82, 125], "value1": [24, 82, 125], "factor": [9, 10, 24, 82, 125], "bias": [24, 82, 125], "adjust": [24, 82, 125], "vehicletyp": [24, 82, 125], "suv": [24, 82, 125], "sedan": [24, 82, 125], "multipli": [24, 82, 125], "sort": [9, 10, 24, 55, 82, 125], "particularli": [24, 82, 125], "might": [24, 82, 125, 132], "alwai": [24, 82, 90, 125], "come": [24, 82, 125], "demot": [24, 82, 125], "value3": [24, 82, 125], "scenario": [24, 82, 125], "explor": [9, 10, 24, 82, 125], "get_personalized_rank": [24, 82, 125], "preserve_rank": [24, 82, 125], "preserve_unknown_item": [24, 82, 125], "item_cod": [24, 82, 125], "whom": [24, 82, 125], "movie_nam": [24, 82, 125], "desir": [24, 82, 125], "kept": [9, 10, 24, 82, 125, 151], "unchang": [24, 82, 125], "unknown": [9, 10, 24, 82, 125], "rerank": [9, 10, 24, 82, 125], "get_ranked_item": [24, 82, 125], "accord": [24, 82, 125], "prefer": [24, 82, 125], "get_related_item": [24, 82, 125], "relat": [24, 82, 125], "don": [24, 82, 125], "show": [24, 55, 56, 82, 102, 125], "get_chat_respons": [24, 82, 125], "search_result": [], "chat": [9, 10, 22, 23, 24, 82, 125, 132], "continu": [24, 82, 125], "convers": [23, 24, 40, 42, 43, 82, 125], "chronolog": [24, 82, 125], "altern": [24, 82, 125], "is_us": [24, 82, 125], "msg_id": [], "nlpsearchpredict": [], "get_search_result": [24, 82, 125], "secur": [24, 82, 125], "get_senti": [24, 82, 125], "sentiment": [9, 10, 24, 82, 125], "analyz": [24, 57, 82, 125], "get_entail": [24, 82, 125], "classifi": [9, 10, 24, 82, 125], "get_classif": [24, 82, 125], "get_summari": [24, 82, 96, 125], "raw": [24, 25, 82, 89, 125], "predict_languag": [24, 82, 125], "get_assign": [24, 82, 125], "forced_assign": [24, 82, 125], "check_constraint": [24, 82, 125], "constraint": [24, 82, 125], "solut": [24, 82, 125], "predict_with_binary_data": [24, 82, 125], "blob_key_nam": [], "audio": [24, 82, 125], "describe_imag": [24, 82, 125], "top_n": [24, 82, 125], "similar": [24, 82, 125], "candid": [24, 82, 125], "n": [8, 9, 24, 82, 125], "transcribe_audio": [24, 82, 125], "transcrib": [24, 82, 125], "classify_imag": [24, 82, 125], "classify_pdf": [24, 82, 125], "get_objects_from_imag": [24, 82, 125], "transfer_styl": [24, 82, 125], "source_imag": [24, 82, 125], "style_imag": [24, 82, 125], "adopt": [24, 82, 125], "visual": [24, 82, 125], "makeup": [24, 82, 125], "generate_imag": [24, 82, 125], "prompt": [24, 82, 125], "cat": [24, 82, 125], "create_batch_predict": [24, 40, 82], "outputloc": [24, 40, 64, 65, 82, 91], "tablenam": [24, 40, 63, 82], "outputtyp": [24, 40, 82], "enforc": [24, 40, 63, 82], "conjunct": [24, 40, 82], "start_batch_predict": [24, 82], "update_batch_predict": [24, 82], "set_batch_prediction_file_connector_output": [24, 82], "set_batch_prediction_database_connector_output": [24, 82], "set_batch_prediction_feature_group_output": [24, 82], "set_batch_prediction_output_to_consol": [24, 82], "set_batch_prediction_dataset": [24, 82], "set_batch_prediction_feature_group": [24, 82], "set_batch_prediction_dataset_remap": [24, 82], "delete_batch_predict": [24, 82], "add_user_item_interact": [24, 82], "event_typ": [24, 82], "additional_attribut": [24, 82], "upsert_user_attribut": [24, 82], "user_attribut": [24, 82], "upsert_item_attribut": [24, 82], "item_attribut": [24, 82], "add_multiple_user_item_interact": [24, 82], "userid": [24, 82], "itemid": [24, 82, 147], "eventtyp": [24, 82], "additionalattribut": [24, 82], "attribute1": [24, 82], "attribute2": [24, 82], "123": [24, 82], "upsert_multiple_user_attribut": [24, 82], "userattribut": [24, 82], "upsert_multiple_item_attribut": [24, 82], "itemattribut": [24, 82], "upsert_item_embed": [24, 82, 147], "catalog_id": [24, 82, 125, 147], "delete_item_embed": [24, 82, 147], "knn": [24, 82, 147], "upsert_multiple_item_embed": [24, 82, 147], "upsert_data": [24, 63, 82, 147], "append_data": [24, 63, 82, 147], "recordid": [24, 63, 82, 147], "upsert_multiple_data": [24, 63, 82, 147], "append_multiple_data": [24, 63, 82, 147], "create_python_funct": [24, 82], "reusabl": [24, 82], "update_python_funct": [24, 63, 82], "delete_python_funct": [24, 82], "create_graph_dashboard": [24, 82, 132], "python_function_id": [24, 81, 82, 132], "delete_graph_dashboard": [24, 82], "update_graph_dashboard": [24, 82], "add_graph_to_dashboard": [24, 82, 136], "update_graph_to_dashboard": [24, 82], "create_algorithm": [24, 82], "usabl": [24, 82], "predict_mani": [24, 82], "delete_algorithm": [24, 82], "update_algorithm": [24, 82], "list_builtin_algorithm": [24, 82, 132], "create_custom_loss_function_with_source_cod": [24, 82], "loss_function_nam": [24, 82], "loss_function_source_cod": [24, 82], "charact": [24, 82, 86], "fewer": [24, 82], "update_custom_loss_function_with_source_cod": [24, 82], "delete_custom_loss_funct": [24, 82], "create_custom_metr": [24, 82], "custom_metric_function_nam": [24, 82], "update_custom_metr": [24, 82], "delete_custom_metr": [24, 82], "create_modul": [24, 82], "bring": [24, 82], "lower": [24, 82], "delete_modul": [24, 82], "update_modul": [24, 82], "get_notebook_cell_complet": [24, 82], "previous_cel": [24, 82], "completion_typ": [24, 82], "autocomplet": [24, 82], "llm": [9, 10, 24, 63, 82, 86, 88, 89], "previouscel": [24, 82], "markdown": [24, 63, 82], "openai": [7, 9, 24, 82], "notebookcomplet": [24, 82], "sourcetyp": [25, 37], "sourcecod": [25, 90], "applicationconnectorinfo": 25, "packagerequir": 25, "publishingmsg": 25, "file_upload": 25, "application_connector": [25, 82], "pip": 25, "depend": [9, 10, 24, 25, 82, 114, 116, 117], "went": 25, "wrong": 25, "concatenationconfig": [26, 63], "concatenatedt": 26, "mergetyp": 26, "replaceuntiltimestamp": 26, "skipmateri": 26, "verify_respons": 27, "public_kei": 27, "signatur": 27, "public": [27, 82, 125, 147], "get_public_kei": 27, "notebookid": [28, 29, 106, 114, 115, 136, 138, 141], "lossfunctionnam": 28, "lossfunctiontyp": 28, "custommetricid": 29, "latestcustommetricvers": 29, "custommetricfunctionnam": 30, "trainingdataparameternamemap": 31, "schemamap": 31, "traindataparametertofeaturegroupid": 31, "trainingconfig": [9, 10, 24, 31, 82, 90, 132], "dataconsistencydupl": [32, 53], "totalcount": 32, "numdupl": 32, "featurerecord": [32, 74], "datafilt": [], "whereexpress": [], "dataqualityresult": 35, "qualiti": 35, "normal": [9, 10, 35, 82], "stage": [35, 92, 93, 104, 120], "differ": [9, 10, 24, 35, 56, 70, 82, 101, 104, 131], "get_object_schema": 36, "datasetid": [37, 39, 63, 115, 126, 134, 141, 151], "datasourc": 37, "ignorebefor": 37, "ephemer": 37, "lookbackdai": 37, "databaseconnectorconfig": 37, "applicationconnectorconfig": 37, "isdocumentset": 37, "mergefileschema": [37, 39], "latestdatasetvers": 37, "external_servic": 37, "worth": 37, "documentset": 37, "create_version_from_file_connector": 37, "create_version_from_database_connector": 37, "create_version_from_application_connector": 37, "create_version_from_upload": 37, "attach_to_project": [], "remove_from_project": 63, "wait_for_import": [37, 39], "900": [37, 39], "wait_for_inspect": [37, 39], "detecteddatatyp": [38, 60, 145], "detectedfeaturetyp": [38, 60, 145], "originalnam": [38, 60, 110], "validdatatyp": 38, "timeformat": 38, "timestampfrequ": 38, "data_types_url": 38, "rowcount": 39, "incrementalqueriedat": 39, "uploadid": [39, 47, 151], "invalidrecord": 39, "byte": [39, 46, 151], "popul": [39, 47, 64, 140], "deployedat": 40, "projectid": [23, 40, 50, 81, 90, 96, 107, 129, 132, 141], "callspersecond": 40, "region": 40, "batchstreamingupd": 40, "pendingmodelvers": 40, "modeldeploymentconfig": 40, "featuregroupexportconfig": [9, 13, 24, 40, 65, 82, 141], "becam": 40, "elig": [9, 10, 40, 62, 82], "whenev": 40, "switch": 40, "create_webhook": 40, "list_webhook": 40, "set_auto": 40, "set_model_vers": 40, "set_feature_group_vers": 40, "set_feature_group_export_file_connector_output": 40, "set_feature_group_export_database_connector_output": 40, "remove_feature_group_export_output": 40, "wait_for_deploy": 40, "480": 40, "wait_for_pending_deployment_upd": 40, "600": [40, 63, 151], "deploymet": 40, "deploymenttoken": 41, "files": 44, "documnet": 44, "documentannot": [44, 45], "boundingbox": 45, "documentstor": 46, "documentstoreid": [46, 47], "documenttyp": 46, "documentcount": 46, "approximates": 46, "documentstoreimport": 47, "documentstoreimportid": 47, "importingstartedat": 47, "documentsimport": 47, "documentsskip": 47, "replaceexistingfil": 47, "traincolumn": 48, "predictedcolumn": 48, "versu": [48, 49, 61], "featuredistribut": [24, 48, 61, 82, 100], "labeldrift": [49, 97], "predictiondrift": [49, 62], "edaid": [50, 57], "referencefeaturegroupvers": [50, 57], "testfeaturegroupvers": [50, 57], "edaconfig": [50, 96, 100], "latestedavers": 50, "columnnam": [52, 53], "collinearitymatrix": 52, "groupfeaturedict": 52, "collinearitygroup": 52, "columnnamesx": 52, "matrix": 52, "collinearity_group": 52, "7": 52, "transformationcolumnnam": 53, "basedupl": 53, "comparedupl": 53, "dataconsistencydelet": 53, "dataconsistencytransform": 53, "occur": [53, 93, 136, 137], "isscatt": 54, "isboxwhisk": 54, "xaxi": [54, 78], "yaxi": [54, 78], "xaxiscolumnvalu": 54, "yaxiscolumnvalu": 54, "datacolumn": [54, 78], "scatter": 54, "v": [54, 62], "whisker": 54, "vice": 54, "versa": 54, "x_axi": 54, "y_axi": 54, "selectedfeatur": 55, "sortedcolumnnam": 55, "featurecollinear": 55, "forecastingtargetfeatur": 56, "timestampfeatur": 56, "forecastfrequ": 56, "salesacrosstim": 56, "cummulativecontribut": 56, "missingvaluedistribut": 56, "historylength": 56, "numrowshistogram": 56, "productmatur": 56, "could": 56, "forecastinganalysisgraphdata": [56, 78], "averag": [7, 9, 56, 58, 82], "p10": [56, 78, 85], "p90": [56, 78, 85], "median": [7, 9, 56, 78, 82, 85], "sale": 56, "percent": [9, 10, 56, 82], "contribut": [56, 72], "long": 56, "aliv": 56, "edastartedat": 57, "edacompletedat": 57, "wait_for_eda": 57, "1200": [57, 100, 108, 120, 130], "embeddingfeaturedriftdistribut": 58, "jsdistanc": [58, 62], "wsdistanc": [58, 62], "ksstatist": [58, 62], "kl": [58, 62, 97], "diverg": [58, 62, 97], "j": [58, 62], "wasserstein": [58, 62], "kolmogorov": [58, 62], "smirnov": [58, 62], "statist": [24, 39, 58, 61, 62, 71, 79, 82], "selectclaus": [60, 110], "sourcet": [60, 63, 71, 110], "usingclaus": 60, "orderclaus": 60, "whereclaus": 60, "pointintimeinfo": 60, "nestedfeatur": [60, 110], "pointintimefeatur": [60, 122], "featuredriftsummari": 62, "featureindex": 62, "targetcolumn": [62, 95], "dataintegritytimeseri": 62, "nestedsummari": 62, "nullviol": [62, 111], "typeviol": [62, 150], "rangeviol": [62, 139], "catviol": 62, "symmetr": [9, 10, 62, 82], "sum": 62, "discrep": 62, "modificationlock": [63, 105], "featuregroupsourcetyp": 63, "functionnam": [63, 136, 138], "featuregrouptyp": 63, "sqlerror": [63, 143], "latestversionoutd": 63, "referencedfeaturegroup": 63, "lookupkei": [63, 83], "streamingen": 63, "featuregroupus": 63, "mergeconfig": [8, 9, 24, 63, 82], "transformconfig": 63, "cpusiz": [63, 71, 90, 104], "streamingreadi": 63, "featuretag": 63, "modulenam": 63, "templatebind": 63, "featureexpress": 63, "useoriginalcsvnam": [63, 71], "pythonfunctionbind": [63, 71], "pythonfunctionnam": [63, 81], "annotationconfig": [2, 4, 24, 63, 71, 82], "projectconfig": [24, 63, 64, 82, 133], "duplicatefeatur": 63, "pointintimegroup": [63, 71, 123], "indexingconfig": [63, 83], "latestfeaturegroupvers": 63, "outdat": [63, 109], "add_to_project": 63, "set_project_config": 63, "set_typ": 63, "create_sampl": 63, "set_sampling_config": 63, "set_merge_config": 63, "set_transform_config": 63, "set_schema": 63, "add_tag": [63, 132], "remove_tag": [63, 132], "add_annotation_label": 63, "remove_annotation_label": 63, "invalidate_streaming_data": 63, "concatenate_data": 63, "set_indexing_config": 63, "detach_from_templ": 63, "update_template_bind": 63, "update_python_function_bind": 63, "update_sql_definit": 63, "update_dataset_feature_express": 63, "update_function_definit": 63, "update_zip": 63, "update_git": 63, "list_export": 63, "set_modifier_lock": 63, "list_modifi": 63, "add_user_to_modifi": 63, "add_organization_group_to_modifi": 63, "remove_user_from_modifi": 63, "remove_organization_group_from_modifi": 63, "create_vers": [63, 157], "create_templ": 63, "suggest_template_for": 63, "get_recent_streamed_data": 63, "wait_for_dataset": 63, "7200": 63, "wait_for_upload": 63, "wait_for_materi": [63, 71], "wait_for_streaming_readi": 63, "streaming_statu": 63, "load_as_panda": [59, 63, 71], "text_snippet": 63, "ll": 63, "sinc": [9, 10, 63, 82], "lastest": [63, 96], "featuregroupexportid": 64, "fileformat": [64, 65], "objectnam": [64, 65, 68], "writemod": [64, 65, 68], "databasefeaturemap": [64, 65, 68], "idcolumn": [64, 65, 68], "exportcompletedat": [64, 91], "additionalidcolumn": [64, 65, 68], "get_connector_error": 64, "wait_for_result": [59, 64, 71, 91, 160], "3600": [24, 59, 64, 71, 82, 91, 157, 160], "get_result": 64, "downloadurl": 66, "expiresat": 66, "datetim": [9, 10, 66, 82, 145], "featuregrouplineag": 67, "node": 67, "direct": [7, 9, 67, 82], "acycl": 67, "lineag": 67, "featuregrouptemplateid": [69, 143], "issystemtempl": 69, "templatesql": [69, 143], "templatevari": 69, "metadata": [1, 2, 24, 63, 69, 82], "preview_resolut": 69, "featuregrouptemplatevariableopt": 70, "templatevariableopt": 70, "userfeedback": 70, "regard": 70, "export_to_file_connector": 71, "export_to_database_connector": 71, "export_to_consol": 71, "_download_avro_fil": [59, 71], "file_part": [59, 71], "tmp_dir": [59, 71], "max_work": [59, 71], "thread": [59, 71, 151], "shapfeatureimport": 72, "permutationfeatureimport": 72, "nullfeatureimport": 72, "lofofeatureimport": 72, "permut": 72, "writepermiss": [75, 76, 77], "authexpiresat": 75, "eg": [75, 86], "authopt": 76, "itemstatist": [78, 85], "rowwis": 78, "wise": [9, 10, 78, 82], "missing_perc": 78, "standard_devi": 78, "min": [7, 9, 78, 82, 85], "max": [7, 9, 78, 82, 85, 151], "stat": 79, "invoc": 79, "userexcept": [79, 156], "stacktrac": 79, "generatedpitfeatureconfigopt": 80, "displaynam": [80, 93], "short": [80, 151], "graphdashboardid": 81, "pythonfunctionid": [81, 116, 117, 136, 138], "plotreferenceid": 81, "projectnam": 81, "api_class": [24, 82], "annotation_entri": 82, "annotations_statu": 82, "api_client_util": 82, "batch_predict": [82, 141], "categorical_range_viol": 82, "code_sourc": 82, "concatenation_config": 82, "cryptographi": 82, "custom_loss_funct": [9, 10, 82], "custom_metr": [9, 10, 82], "custom_train_function_info": 82, "data_consistency_dupl": 82, "data_filt": [], "data_prep_log": 82, "data_quality_result": 82, "dataset_column": 82, "deployment_auth_token": 82, "document_annot": 82, "document_stor": 82, "document_store_import": 82, "drift_distribut": 82, "eda_collinear": 82, "eda_data_consist": 82, "eda_feature_associ": 82, "eda_feature_collinear": 82, "eda_forecasting_analysi": 82, "embedding_feature_drift_distribut": 82, "feature_drift_summari": 82, "feature_group_export": 82, "feature_group_export_config": [24, 82, 141], "feature_group_export_download_url": 82, "feature_group_lineag": 82, "feature_group_templ": 82, "feature_group_template_variable_opt": 82, "feature_import": 82, "feature_record": 82, "file_connector_instruct": 82, "file_connector_verif": 82, "forecasting_analysis_graph_data": 82, "function_log": 82, "generated_pit_feature_config_opt": 82, "graph_dashboard": 82, "indexing_config": 82, "item_statist": 82, "model_artifacts_export": 82, "model_loc": 82, "model_metr": 82, "model_monitor": [7, 9, 82], "model_monitor_org_summari": 82, "model_monitor_summari": 82, "model_monitor_summary_from_org": 82, "model_training_type_for_deploy": 82, "model_upload": 82, "modification_lock_info": 82, "modul": [9, 82, 162], "monitor_alert": 82, "nested_featur": 82, "null_viol": 82, "organization_group": 82, "point_in_time_featur": 82, "point_in_time_group": 82, "point_in_time_group_featur": 82, "prediction_cli": 82, "prediction_dataset": 82, "prediction_input": 82, "prediction_metr": 82, "prediction_metric_vers": 82, "project_dataset": 82, "project_valid": 82, "python_plot_funct": 82, "range_viol": 82, "refresh_pipeline_run": 82, "refresh_polici": 82, "resolved_feature_group_templ": 82, "streaming_auth_token": 82, "streaming_connector": 82, "training_config_opt": 82, "type_viol": 82, "use_case_requir": 82, "user_except": 82, "predictioncli": [82, 125], "predict_raw": [82, 125], "kwarg": [9, 10, 82, 125, 136, 137], "interfac": [82, 125], "plug": [82, 94, 125], "plai": [82, 94, 125], "arbitrari": [82, 125], "__version__": 82, "conjuct": 83, "missingperc": 85, "stddev": 85, "deviat": 85, "modelconfig": [90, 104], "modelpredictionconfig": [90, 104], "sharedat": 90, "traininginputt": 90, "trainingfeaturegroupid": [90, 96, 104], "ispythonmodel": 90, "defaultalgorithm": [90, 104], "customalgorithmconfig": [90, 104], "restrictedalgorithm": 90, "latestmodelvers": 90, "showcas": 90, "trhough": 90, "regardless": 90, "modelloc": [90, 94], "update_python": 90, "update_python_zip": 90, "update_python_git": 90, "set_training_config": 90, "set_prediction_param": 90, "get_metr": [39, 71, 90], "set_default_algorithm": 90, "list_artifacts_export": 90, "get_training_types_for_deploy": 90, "wait_for_train": [90, 104], "wait_for_evalu": 90, "wait_for_full_automl": [90, 104], "automl": [24, 82, 90, 104, 132], "cycl": [90, 104], "get_automl_statu": 90, "get_train_test_feature_group_as_panda": [90, 104], "modelartifactsexportid": 91, "artifactnam": 94, "baselinemetr": 95, "trainvaltestsplit": 95, "infolog": 95, "val": [9, 10, 82, 95], "predictionfeaturegroupid": 96, "predictionfeaturegroupvers": [96, 100], "trainingfeaturegroupvers": [96, 100], "alertconfig": 96, "biasmetricid": 96, "latestbiasmetricversionid": 96, "predictionmetricid": [96, 129, 130, 141], "latestpredictionmetricversionid": 96, "metricconfig": [96, 100], "featuregroupmonitorconfig": [96, 100], "metrictyp": [96, 100], "monitortyp": 96, "latestmonitormodelvers": 96, "feature_group_monitor": 96, "featuredrift": 97, "dataintegr": [97, 98], "monitordata": 97, "totalstarredmonitor": 97, "modelaccuraci": 98, "modeldrift": 98, "biasviol": 98, "monitoringstartedat": 100, "monitoringcompletedat": 100, "pendingdeploymentid": [100, 104], "faileddeploymentid": [100, 104], "metric_data": 100, "wait_for_monitor": 100, "metricinfo": 101, "metricnam": 101, "metricchart": 101, "othermetr": 101, "actualvaluessupportedfordrilldown": 101, "algo": 101, "drilldown": 101, "backend": 102, "modelupload": 103, "modeluploadid": 103, "embeddingsuploadid": 103, "artifactsuploadid": 103, "verificationsuploadid": 103, "defaultitemsuploadid": 103, "modelfileuploadid": 103, "modelstateuploadid": 103, "inputpreprocessoruploadid": 103, "requirementsuploadid": 103, "resourcesuploadid": 103, "tensorflow": 103, "save": [24, 37, 63, 82, 103], "preprocessor": 103, "resourc": [103, 140], "trainingstartedat": 104, "trainingcompletedat": 104, "automlcomplet": 104, "deployablealgorithm": 104, "bestalgorithm": 104, "featureanalysisstatu": 104, "dataclusterinfo": 104, "lifecycl": [104, 130], "get_feature_importance_bi": 104, "export_custom": 104, "frame": 104, "useremail": 105, "monitoralertid": [107, 108], "conditionconfig": [107, 108], "actionconfig": [107, 108], "conditiondescript": [107, 108], "actiondescript": [107, 108], "latestmonitoralertvers": 107, "alertingstartedat": 108, "alertingcompletedat": 108, "alertresult": 108, "actionstatu": 108, "actionerror": 108, "actionstartedat": 108, "actioncompletedat": 108, "actionfor": 108, "wait_for_monitor_alert": 108, "dataus": 110, "trainingnullfreq": 111, "predictionnullfreq": 111, "anomal": 111, "proport": 111, "organizationgroupid": 112, "groupnam": [112, 122, 123], "defaultgroup": 112, "member": 112, "bill": 112, "invite_us": 112, "add_permiss": 112, "remove_permiss": 112, "add_user_to": 112, "remove_user_from": 112, "set_default": 112, "historytablenam": [122, 123], "timestampkei": 122, "historicaltimestampkei": 122, "lookbackwindow": 123, "lookbackwindowlag": 123, "historywindowkei": 123, "historyaggregationkei": 123, "pointintimegroupfeatur": [123, 124], "pitoperationtyp": 124, "pitoperationconfig": 124, "predictiondataset": [126, 128], "datasettyp": [126, 127, 134, 154], "predictionfeaturegroup": [127, 128], "featuregroupdatasetid": 128, "datasetidremap": 128, "predictionmetr": 129, "predictionmetricconfig": [129, 130], "latestpredictionmetricversiondescript": 129, "predictionmetricvers": [129, 130, 140], "predictionmetriccompletedat": 130, "predictionmetricstartedat": 130, "wait_for_prediction_metric_vers": 130, "requiredfeaturegrouptyp": 131, "optionalfeaturegrouptyp": 131, "usecasessupportcustomalgorithm": 131, "featuregroupsen": [], "attach_dataset": 132, "project_dataset_typ": 132, "remove_dataset": 132, "dataseterror": 135, "columnhint": 135, "keep": [135, 140], "hint": 135, "functionvariablemap": [117, 136, 138], "functiontyp": [136, 138], "spin": [136, 138], "plotnam": 138, "trainingmin": 139, "trainingmax": 139, "predictionmin": 139, "predictionmax": 139, "freqabovetrainingrang": 139, "freqbelowtrainingrang": 139, "minimum": [9, 10, 82, 139], "below": 139, "abov": [9, 10, 82, 139], "refreshpipelinerunid": 140, "refreshpolicyid": [140, 141, 142], "startedat": 140, "completedat": [120, 140], "refreshtyp": [140, 141, 142], "deploymentvers": [119, 140], "track": 140, "span": 140, "them": [9, 10, 82, 140], "trigger": [140, 161], "wait_for_complet": 140, "nextruntim": [114, 141, 142], "lifecyclemsg": 142, "resolvedvari": 143, "resolvedsql": 143, "final": [9, 10, 82, 143], "resolut": 143, "_get_attribute_as_dict": 144, "detectedfeaturemap": 145, "integ": [7, 9, 82, 86, 145], "struct": 145, "streamingtoken": 146, "streamingconnectorid": 148, "valuetyp": 149, "valueopt": 149, "lastmodelvalu": 149, "needsrefresh": 149, "dict_valu": 149, "again": 149, "trainingdatatyp": 150, "predictiondatatyp": 150, "datasetuploadid": 151, "smaller": 151, "backward": 151, "mark_complet": 151, "upload_arg": 151, "backoff": 151, "upload_fil": 151, "chunksiz": [151, 158], "1024": [7, 9, 82, 151], "wait_timeout": 151, "chunk": [8, 9, 10, 14, 24, 82, 132, 151, 158], "worker": 151, "iobas": 151, "stringio": 151, "mb": 151, "_yield_upload_part": 151, "wait_for_join": 151, "md5": 152, "prettynam": 153, "allowedfeaturemap": 154, "allowednestedfeaturemap": 154, "collect": [16, 154], "allowed_feature_typ": 154, "feature_type_enum": 154, "accept": 155, "traceback": 156, "usercod": 156, "webhookid": 161, "webhookeventtyp": 161, "payloadtempl": 161, "abacusai": 162, "pretrained_sequence_classif": [], "set_annotation_status_featur": [24, 63, 82], "simpl": [24, 82, 125], "exactli": [24, 82, 125], "lower_in": [24, 82, 125], "lower_ex": [24, 82, 125], "upper_in": [24, 82, 125], "upper_ex": [24, 82, 125], "limefeatureimport": 72, "ebmfeatureimport": 72, "lime": 72, "boost": [9, 10, 72, 82], "chartnam": 78, "pretrained_use_cas": [], "10th": 85, "percentil": [9, 10, 82, 85], "90th_percentil": 85, "pretrainedusecas": [], "predictionapi": [], "predictionuidisplaytyp": [], "imgsrc": [], "pretrain": [7, 9, 10, 82], "compon": [24, 82], "parsingconfig": [6, 9, 24, 37, 82], "escap": [6, 9, 82], "52": [], "vision_regress": [7, 9, 24, 82], "pretrained_text_classif": [24, 82], "parsing_config": [24, 37, 82], "pars": [24, 37, 82, 86, 89], "get_clust": [24, 82, 125], "score_imag": [24, 82, 125], "edachartdescript": [51, 78], "charttyp": [51, 78], "chartdescript": 78, "eda_chart_descript": 82, "first_cap_r": 5, "all_cap_r": 5, "upper_snake_cas": 5, "snake_cas": 5, "_upper_snake_case_kei": [5, 9, 10, 82], "_support_kwarg": [5, 9, 10, 82], "user_item_scor": [], "affin": [], "anomaly_detect": [7, 9, 10, 82], "anomaly_new": [7, 9, 82], "anomaly_outli": [7, 9, 82], "clustering_timeseri": [7, 9, 10, 24, 82], "named_entity_extract": [7, 9, 10, 82], "nlp_ner": [7, 9, 82], "natural_language_search": [7, 9, 10, 82], "sentence_boundary_detect": [7, 9, 10, 82], "sentiment_detect": [7, 9, 10, 82], "document_classif": [7, 9, 10, 82], "document_summar": [7, 9, 10, 82], "document_visu": [7, 9, 10, 82], "predictive_model": [7, 9, 10, 82], "custom_trained_model": [7, 9, 10, 82], "plug_and_plai": [7, 9, 82], "image_classif": [7, 9, 82], "vision_classif": [7, 9, 82], "object_detect": [7, 9, 82], "image_value_predict": [7, 9, 82], "pretrained_model": [7, 9, 82], "filllog": [7, 9, 82], "backfil": [7, 9, 82], "bfill": [7, 9, 82], "forwardfil": [7, 9, 82], "ffill": [7, 9, 82], "linear": [7, 9, 82], "batchsiz": [7, 9, 10, 82], "batch_8": [7, 9, 82], "batch_16": [7, 9, 82], "16": [7, 9, 82], "batch_32": [7, 9, 82], "32": [7, 9, 82], "batch_64": [7, 9, 82], "64": [7, 9, 82], "batch_128": [7, 9, 82], "128": [7, 9, 82], "batch_256": [7, 9, 82], "256": [7, 9, 82], "batch_384": [7, 9, 82], "384": [7, 9, 82], "batch_512": [7, 9, 82], "512": [7, 9, 82], "batch_740": [7, 9, 82], "740": [7, 9, 82], "batch_1024": [7, 9, 82], "holidaycalendar": [7, 9, 10, 82], "au": [7, 9, 82], "uk": [7, 9, 82], "u": [7, 9, 10, 82], "forecastingobject": [7, 9, 10, 82], "w_c_accuraci": [7, 9, 82], "wape": [7, 9, 82], "mape": [7, 9, 82], "cmape": [7, 9, 82], "rmse": [7, 9, 82], "cv": [7, 9, 82], "coefficient_of_vari": [7, 9, 82], "srmse": [7, 9, 82], "forecastingfrequ": [7, 9, 10, 82], "1h": [7, 9, 82], "1d": [7, 9, 82], "weekly_sunday_start": [7, 9, 82], "1w": [7, 9, 82], "weekly_monday_start": [7, 9, 82], "w": [7, 9, 82], "mon": [7, 9, 82], "weekly_saturday_start": [7, 9, 82], "sat": [7, 9, 82], "month_start": [7, 9, 82], "m": [7, 9, 82], "month_end": [7, 9, 82], "1m": [7, 9, 82], "quarter_start": [7, 9, 82], "q": [7, 9, 82], "quarter_end": [7, 9, 82], "1q": [7, 9, 82], "1y": [7, 9, 82], "forecastingdatasplittyp": [7, 9, 10, 82], "prediction_length": [7, 9, 10, 82], "forecastinglossfunct": [7, 9, 10, 82], "mean_absolute_error": [7, 9, 82], "mae": [7, 9, 82], "normalized_mean_absolute_error": [7, 9, 82], "nmae": [7, 9, 82], "peaks_mean_absolute_error": [7, 9, 82], "peaks_ma": [7, 9, 82], "mean_absolute_percentage_error": [7, 9, 82], "stable_map": [7, 9, 82], "pointwise_accuraci": [7, 9, 82], "root_mean_square_error": [7, 9, 82], "normalized_root_mean_square_error": [7, 9, 82], "nrmse": [7, 9, 82], "asymmetric_mean_absolute_percentage_error": [7, 9, 82], "asymmetric_map": [7, 9, 82], "stable_standardized_mean_absolute_percentage_error": [7, 9, 82], "stable_standardized_mape_with_cmap": [7, 9, 82], "gaussian": [7, 9, 10, 82], "mle_gaussian_loc": [7, 9, 82], "gaussian_full_covari": [7, 9, 82], "mle_gaussfullcov": [7, 9, 82], "guassian_exponenti": [7, 9, 82], "mle_gaussexp": [7, 9, 82], "mix_gaussian": [7, 9, 82], "mle_gaussmix": [7, 9, 82], "weibul": [7, 9, 82], "mle_weibul": [7, 9, 82], "negative_binomi": [7, 9, 82], "mle_negbinom": [7, 9, 82], "log_root_mean_square_error": [7, 9, 82], "log_rms": [7, 9, 82], "forecastinglocalsc": [7, 9, 10, 82], "zscore": [7, 9, 82], "sliding_zscor": [7, 9, 82], "last_point": [7, 9, 82], "lastpoint": [7, 9, 82], "min_max": [7, 9, 82], "minmax": [7, 9, 82], "min_std": [7, 9, 82], "minstd": [7, 9, 82], "robust": [7, 9, 82], "forecastingfillmethod": [7, 9, 82], "middl": [7, 9, 82], "forecastingquanitlesextensionmethod": [7, 9, 10, 82], "quadrat": [7, 9, 82], "ancestral_simul": [7, 9, 82], "simul": [7, 9, 10, 82], "forecastingtrainingconfig": [9, 10, 82], "param": [9, 10, 82, 93], "timestep": [9, 10, 82], "scheme": [9, 10, 82], "sort_object": [9, 10, 82], "probability_quantil": [9, 10, 82], "quantil": [7, 9, 10, 82], "no_validation_set": [], "force_prediction_length": [9, 10, 82], "filter_item": [9, 10, 82], "small": [9, 10, 82], "volum": [9, 10, 82], "enable_cold_start": [9, 10, 82], "cold": [9, 10, 82], "zero": [7, 9, 10, 82], "enable_multiple_backtest": [9, 10, 82], "backtest": [9, 10, 82], "total_backtesting_window": [], "backtest_window_step_s": [], "shift": [9, 10, 82], "full_data_retrain": [9, 10, 82], "type_of_split": [9, 10, 82], "test_by_item": [9, 10, 82], "rather": [9, 10, 82], "test_start": [9, 10, 82], "test_split": [9, 10, 82], "neural": [9, 10, 82], "network": [9, 10, 82], "underprediction_weight": [9, 10, 82], "weight": [9, 10, 82], "underpredict": [9, 10, 82], "disable_networks_without_analytic_quantil": [9, 10, 82], "analyt": [9, 10, 82], "mixtur": [9, 10, 82], "initial_learning_r": [9, 10, 82], "rate": [9, 10, 82], "l2_regularization_factor": [9, 10, 82], "l2": [9, 10, 82], "dropout_r": [9, 10, 82], "dropout": [9, 10, 82], "recurrent_lay": [9, 10, 82], "recurr": [9, 10, 82], "layer": [9, 10, 82], "stack": [9, 10, 82], "recurrent_unit": [9, 10, 82], "unit": [9, 10, 82], "convolutional_lay": [9, 10, 82], "convolut": [9, 10, 82], "convolution_filt": [9, 10, 82], "local_scaling_mod": [9, 10, 82], "nn": [9, 10, 82], "stationari": [9, 10, 82], "high": [9, 10, 82], "dynam": [9, 10, 82], "zero_predictor": [9, 10, 82], "subnetwork": [9, 10, 82], "skip_miss": [9, 10, 82], "rnn": [9, 10, 82], "batch_siz": [9, 10, 82], "forecastingbatchs": [9, 10, 82], "batch_renorm": [9, 10, 82], "renorm": [9, 10, 82], "much": [9, 10, 82], "prediction_step_s": [9, 10, 82], "training_point_overlap": [9, 10, 82], "overlap": [9, 10, 14, 82, 158], "max_scale_context": [9, 10, 82], "scale": [9, 10, 82], "quantiles_extension_method": [9, 10, 82], "extens": [9, 10, 82], "number_of_sampl": [9, 10, 82], "ancestr": [9, 10, 82], "symmetrize_quantil": [9, 10, 82], "use_log_transform": [9, 10, 82], "logarithm": [7, 9, 10, 82], "smooth_histori": [9, 10, 82], "smooth": [9, 10, 82], "low": [9, 10, 82], "timeseri": [9, 10, 24, 82, 125], "prediction_offset": [], "skip_local_scale_target": [9, 10, 82], "timeseries_weight_column": [9, 10, 82], "item_attributes_weight_column": [9, 10, 82], "use_timeseries_weights_in_object": [9, 10, 82], "use_item_weights_in_object": [9, 10, 82], "skip_timeseries_weight_sc": [9, 10, 82], "avoid": [9, 10, 82], "timeseries_loss_weight_column": [9, 10, 82], "use_item_id": [9, 10, 82], "use_all_item_tot": [9, 10, 82], "handle_zeros_as_miss": [], "demand": [9, 10, 82], "datetime_holiday_calendar": [9, 10, 82], "calendar": [9, 10, 82], "augment": [9, 10, 82], "fill_missing_valu": [9, 10, 82], "fill": [9, 10, 82], "enable_clust": [9, 10, 82], "data_split_feature_group_table_nam": [9, 10, 82], "_trainingconfigfactori": [9, 10, 82], "apiendpoint": [16, 24, 82], "predictendpoint": 16, "chatbotrespons": [], "answer": [9, 10, 23, 82], "chathistori": 23, "bot": [], "_cached_endpoint": 24, "61": [], "_get_prediction_endpoint": 24, "_get_streaming_endpoint": 24, "get_api_endpoint": [24, 82], "get_natural_language_explan": [24, 63, 82], "natur": [24, 63, 82, 109], "naturallanguageexplan": [24, 63, 82, 109], "generate_natural_language_explan": [24, 63, 82], "pretrained_instruct_pix2pix": [24, 82], "pretrained_sequence_classification_2": [], "extract_bounding_box": [24, 82], "create_nlp_drift_monitor": [24, 82, 132], "nlp": [9, 10, 24, 82, 132], "set_natural_language_explan": [24, 82], "short_explan": [24, 82], "long_explan": [24, 82], "succinct": [9, 10, 24, 82, 109], "verbos": [24, 82, 109, 125], "query_feature_group_explor": [], "chat_histori": [24, 82], "segment": 22, "block": [86, 89], "extractboundingbox": 37, "seasonalityyear": 56, "seasonalitymonth": 56, "seasonalityweekofyear": 56, "seasonalitydayofyear": 56, "seasonalitydayofmonth": 56, "seasonalitydayofweek": 56, "seasonalityquart": 56, "seasonalityhour": 56, "seasonalityminut": 56, "seasonalitysecond": 56, "autocorrel": 56, "partialautocorrel": 56, "year": 56, "month": 56, "week": 56, "season": 56, "quarter": 56, "minut": 56, "control": 56, "effect": 56, "interven": 56, "averagedrift": 58, "drifttypesvalu": 58, "api_endpoint": 82, "chat_bot_respons": [], "natural_language_explan": 82, "python_function_valid": 82, "streaming_cli": 82, "streamingcli": [82, 147], "shortexplan": 109, "longexplan": 109, "isoutd": 109, "longer": [9, 10, 82, 109], "due": [89, 109], "validate_loc": 136, "environ": [136, 137], "typeerror": [136, 137], "validate_function_loc": 137, "featureannotationconfig": 2, "statusfeatur": 2, "file_path_with_schema": [6, 9, 82], "list_pipelin": [24, 82, 132], "describe_pipeline_vers": [24, 82], "pipeline_vers": [24, 82], "pipelinevers": [24, 82, 114, 117, 120], "describe_pipeline_step": [24, 82], "pipeline_nam": [24, 82], "step_nam": [24, 82, 114], "pipelinestep": [24, 82, 114, 116], "tabular": [24, 82], "create_pipelin": [24, 82], "describe_pipelin": [24, 82], "delete_pipelin": [24, 82], "list_pipeline_vers": [24, 82], "run_pipelin": [24, 82], "pipeline_variable_map": [24, 82, 114], "create_pipeline_step": [24, 82], "step_input_map": [24, 82, 114, 116], "output_variable_map": [24, 82, 114, 116], "step_depend": [24, 82, 114, 116], "ouput": [24, 82, 114, 116], "delete_pipeline_step": [24, 82], "update_pipeline_step": [24, 82], "featuregroupmetr": [], "annotation_config": 82, "feature_group_metr": [], "pipeline_step": [24, 82], "pipeline_step_vers": [24, 82], "multicatalogembeddingsuploadid": 103, "pipelinenam": [114, 116, 120], "pipelineid": [114, 115, 116, 117, 120], "pipelinevariablemap": [114, 120], "pipelinestepid": [116, 117, 118], "stepnam": [116, 117, 118], "stepdepend": [116, 117], "function_id": 116, "pipelinestepvers": [117, 118, 119, 120], "outputvariablemap": [9, 12, 82, 117, 136], "stepvers": 120, "wait_for_pipelin": 120, "_monkeypatch": 137, "sy": 137, "undo": 137, "monkeypatch": 137, "syspath_prepend": 137, "comment": [1, 2, 24, 82], "commentsfeatur": 2, "metadatafeatur": 2, "avro_to_pandas_dtyp": 15, "avro_typ": 15, "get_non_nullable_typ": 15, "chatmessag": [22, 23, 24, 82], "role": [22, 43], "sender": [22, 43], "chatsess": [23, 24, 82, 132], "availableindic": [], "chatsessionid": 23, "chatbot": 23, "chat_session_id": [23, 24, 82], "send_chat_messag": [], "63": [], "execute_async_feature_group_oper": [24, 82], "fg": [24, 82], "executefgoper": [], "download_execute_feature_group_operation_result_part_chunk": [24, 82], "execute_fg_operation_run_id": [], "notebook_id": [24, 82, 132], "get_chat_sess": [24, 82], "evaluate_prompt": [24, 82], "system_messag": [9, 10, 24, 82], "num_output_token": [], "reserv": [], "deem": [], "fit": [], "llmrespons": [24, 82, 89], "search_feature_group": [24, 82], "num_result": [24, 82], "feagur": [24, 82], "llmsearchresult": [], "render_feature_group_data_for_llm": [24, 82], "token_budget": [24, 63, 82], "render_format": [24, 63, 82], "encod": [9, 10, 24, 63, 82, 87, 158], "budget": [24, 63, 82], "compris": [24, 63, 82], "llminput": [24, 63, 82, 87], "query_feature_group_code_gener": [24, 82], "tool": [24, 82], "create_pipeline_step_from_funct": [24, 82], "update_pipeline_step_from_funct": [24, 82], "create_agent_from_funct": [24, 82], "agent_funct": [24, 82], "agent": [9, 10, 24, 82, 90, 125, 132], "host": [24, 82], "update_agent_with_funct": [24, 82], "execute_feature_group_sql": [24, 82], "ai_ag": [7, 9, 10, 24, 82], "zipcod": 145, "save_metadata": [24, 63, 82], "update_annotation_statu": [24, 63, 82], "describe_async_feature_group_oper": [24, 82], "get_execute_feature_group_operation_result_part_count": [24, 82], "monitr": [24, 82], "update_pipelin": [24, 82], "create_chat_sess": [24, 82, 132], "create_ag": [24, 82, 132], "agent_function_nam": [24, 82, 90, 132], "agentfunctionnam": [24, 82, 90, 132], "update_ag": [24, 82, 90], "publish": [24, 82, 90], "render_feature_groups_for_llm": [24, 82], "include_definit": [24, 82], "executefgoperationrunid": [], "wait_for_execut": 59, "render_data_for_llm": 63, "numrow": 33, "numcol": 33, "chat_messag": 82, "chat_sess": 82, "execute_fg_oper": [], "llm_code_block": 82, "llm_input": 82, "llm_respons": 82, "llm_search_result": [], "pipeline_refer": 82, "pipeline_step_version_refer": 82, "llmcodeblock": [86, 89], "soruc": 86, "syntact": 86, "stopreason": 89, "reason": 89, "pipelinerefer": [114, 115], "pipelinereferenceid": 115, "objecttyp": [115, 119], "batchpredictiondescriptionid": 115, "pipelinestepversionrefer": [117, 119], "pipelinestepversionreferenceid": 119, "notebookvers": 119, "execute_ag": [24, 82, 125], "keyword": [24, 82, 125], "paramt": [24, 82, 125], "executefeaturegroupoper": [24, 59, 82], "feature_group_operation_run_id": [24, 82], "keyword_argu": [24, 82, 125], "featuregroupoperationrunid": 59, "execute_feature_group_oper": 82, "wait_for_publish": 90, "return_graph": [24, 82, 90], "set_dataset_database_connector_config": [24, 82], "llm_name": [9, 10, 24, 82], "max_token": [24, 82], "gpt": [24, 82], "turbo": [24, 82], "reach": [24, 82], "moduledepend": 25, "set_database_connector_config": 37, "model_blueprint_export": 82, "model_blueprint_stag": 82, "codeblock": 89, "modelblueprintexport": 92, "currenttrainingconfig": 92, "modelblueprintstag": [92, 93], "blueprint": [92, 93], "predecessor": [92, 93], "stagenam": 93, "directli": 93, "latestpipelinevers": 114, "outputerror": 117, "get_object_from_context": 15, "variable_nam": 15, "return_typ": 15, "_request_context": [24, 82], "get_agent_context_chat_histori": [24, 82], "aiagent": [24, 82], "set_agent_context_chat_histori": [24, 82], "clear_agent_context_chat_histori": [], "clear_agent_context": [24, 82], "add_project_tag": [24, 82], "remove_project_tag": [24, 82], "reference_only_documentset": [24, 82], "get_alternative_assign": [24, 82, 125], "referenceonlydocumentset": 37, "connector_typ": [9, 13, 82], "fileconnectorexportconfig": [9, 13, 82], "databaseconnectorexportconfig": [9, 13, 82], "data_column": [9, 13, 82], "_featuregroupexportconfigfactori": [9, 13, 82], "wish": [24, 82, 132], "unset_pipeline_refresh_schedul": [24, 82], "pipeline_id": [24, 82, 114], "pause_pipeline_refresh_schedul": [24, 82], "resume_pipeline_refresh_schedul": [24, 82], "featuregrouprefreshexportconfig": [68, 141], "exportfileformat": 68, "externalconnectionid": 68, "feature_group_refresh_export_config": 82, "unset_refresh_schedul": 114, "pause_refresh_schedul": 114, "resume_refresh_schedul": 114, "latestupdatedat": 4, "pythonfunctionargumenttyp": [7, 9, 12, 82], "monitor_id": [7, 9, 82], "65": [], "pipeline_step_id": [24, 82, 116], "describe_pipeline_step_by_nam": [24, 82], "update_pipeline_step_by_name_from_funct": [], "chat_config": [24, 82, 125], "specifii": [24, 82, 125], "describe_pipeline_by_nam": [24, 82], "delete_pipeline_step_by_nam": [], "update_pipeline_step_by_nam": [], "trainingdistribut": 61, "predictiondistribut": 61, "numericaltrainingdistribut": 61, "numericalpredictiondistribut": 61, "trainingstatist": 61, "predictionstatist": 61, "typic": 61, "outlin": 68, "feature_distribut": 82, "vector_stor": [9, 10, 82], "vector_store_vers": [24, 82], "create_step": 114, "delete_step_by_nam": [], "update_step_by_nam": [], "describe_step_by_nam": 114, "vectorstor": [24, 82, 132, 157], "vectorstoreid": [157, 160], "trunk": 157, "vectorstorevers": [24, 82, 157, 160], "num": [24, 82, 125], "wait_for_export": 64, "nerobject": [7, 9, 10, 82], "log_loss": [7, 9, 82], "annotations_precis": [7, 9, 82], "annotations_recal": [7, 9, 82], "nermodeltyp": [7, 9, 10, 82], "pretrained_bert": [7, 9, 82], "pretrained_roberta_27": [7, 9, 82], "pretrained_roberta_43": [7, 9, 82], "pretrained_multilingu": [7, 9, 82], "nlpdocumentformat": [7, 9, 10, 82], "doc": [7, 9, 82], "sentimenttyp": [7, 9, 10, 82], "valenc": [7, 9, 82], "emot": [7, 9, 82], "clusteringimputationmethod": [7, 9, 10, 82], "interpol": [7, 9, 82], "python_function_argu": [], "namedentityextractiontrainingconfig": [9, 10, 82], "ner_model_typ": [9, 10, 82], "ner": [9, 10, 82], "test_indicator_column": [], "active_labels_column": [9, 10, 82], "document_format": [9, 10, 82], "include_longform": [9, 10, 82], "longform": [9, 10, 82], "naturallanguagesearchtrainingconfig": [9, 10, 82], "custom_finetuned_model": [], "fine": [], "tune": [], "faster_chat": [], "faster": [9, 10, 82], "num_completion_token": [9, 10, 82], "reduc": [9, 10, 82], "larger_embed": [9, 10, 82], "higher": [9, 10, 82], "dimens": [9, 10, 82], "search_chunk_s": [9, 10, 82], "chunk_overlap_fract": [9, 10, 14, 24, 82, 132, 157], "sentenceboundarydetectiontrainingconfig": [9, 10, 82], "sentimentdetectiontrainingconfig": [9, 10, 82], "sentiment_typ": [9, 10, 82], "compute_metr": [9, 10, 82], "documentclassificationtrainingconfig": [9, 10, 82], "zero_shot_hypothes": [9, 10, 82], "shot": [9, 10, 82], "hypothes": [9, 10, 82], "price": [9, 10, 82], "documentsummarizationtrainingconfig": [9, 10, 82], "documentvisualizationtrainingconfig": [9, 10, 82], "clusteringtrainingconfig": [9, 10, 82], "num_clusters_select": [9, 10, 82], "clusteringtimeseriestrainingconfig": [9, 10, 82], "imput": [9, 10, 82], "is_requir": [9, 12, 82], "pipeline_vari": [9, 12, 82], "66": [], "organizationsearchresult": [24, 82, 113], "organization_search_result": 82, "latestvectorstorevers": 157, "wait_until_readi": [157, 160], "trainable_plug_and_plai": [7, 9, 82], "experimentationmod": [7, 9, 10, 82], "rapid": [7, 9, 10, 82], "thorough": [7, 9, 10, 82], "personalizationtrainingmod": [7, 9, 10, 82], "experiment": [7, 9, 10, 82], "exp": [7, 9, 82], "personalizationobject": [7, 9, 10, 82], "ndcg": [7, 9, 82], "ndcg_5": [7, 9, 82], "ndcg_10": [7, 9, 82], "map_5": [7, 9, 82], "map_10": [7, 9, 82], "mrr": [7, 9, 82], "coverag": [7, 9, 82], "personalizationtrainingconfig": [9, 10, 82], "training_mod": [9, 10, 82], "target_action_typ": [9, 10, 82], "target_action_weight": [9, 10, 82], "session_event_typ": [9, 10, 82], "occurr": [9, 10, 82], "6": [9, 10, 82], "recent_days_for_train": [9, 10, 82], "training_start_d": [9, 10, 82], "timezon": [9, 10, 82], "test_on_user_split": [9, 10, 82], "test_split_on_last_k_item": [9, 10, 82], "global": [9, 10, 82], "test_last_items_length": [9, 10, 82], "test_window_length_hour": [9, 10, 82], "explicit_time_split": [9, 10, 82], "explicit": [9, 10, 82], "boundari": [9, 10, 82], "test_row_ind": [9, 10, 82], "sequential_train": [9, 10, 82], "sequenti": [9, 10, 82], "disable_transform": [9, 10, 82], "disable_gpu": [9, 10, 82], "boo": [9, 10, 82], "filter_histori": [9, 10, 82], "explore_lookback_hour": [9, 10, 82], "max_history_length": [9, 10, 82], "compute_rerank_metr": [9, 10, 82], "item_id_dropout": [9, 10, 82], "randomli": [9, 10, 82], "add_time_featur": [9, 10, 82], "disable_timestamp_scalar_featur": [9, 10, 82], "compute_session_metr": [9, 10, 82], "abl": [9, 10, 82], "max_user_history_len_percentil": [9, 10, 82], "downsample_item_popularity_percentil": [9, 10, 82], "downsampl": [9, 10, 82], "enable_feature_select": [9, 10, 82], "num_backtesting_window": [9, 10, 82], "backtesting_window_step_s": [9, 10, 82], "additional_forecast_kei": [9, 10, 82], "act": [9, 10, 82], "experimentation_mod": [9, 10, 82], "handle_zeros_as_missing_valu": [9, 10, 82], "abacus_internal_model": [9, 10, 82], "question": [9, 10, 82], "index_fract": [9, 10, 82], "cumulativeforecastingtrainingconfig": [9, 10, 82], "historical_frequ": [9, 10, 82], "cumulative_prediction_length": [9, 10, 82], "cumul": [9, 10, 82], "365": [9, 10, 82], "skip_input_transform": [9, 10, 82], "skip_target_transform": [9, 10, 82], "predict_residu": [9, 10, 82], "residu": [9, 10, 82], "anomalydetectiontrainingconfig": [9, 10, 82], "value_high": [9, 10, 82], "unusu": [9, 10, 82], "mixture_of_gaussian": [9, 10, 82], "combin": [9, 10, 24, 82, 132], "variational_autoencod": [9, 10, 82], "variat": [9, 10, 82], "autoencod": [9, 10, 82], "spike_up": [9, 10, 82], "spike_down": [9, 10, 82], "trend_chang": [9, 10, 82], "trend": [9, 10, 82], "themeanalysistrainingconfig": [9, 10, 82], "theme": [9, 10, 82], "aiagenttrainingconfig": [9, 10, 82], "customtrainedmodeltrainingconfig": [9, 10, 82], "max_catalog_s": [9, 10, 82], "max_dimens": [9, 10, 82], "index_output_path": [9, 10, 82], "gc": [9, 10, 82], "docker_image_uri": [9, 10, 82], "docker": [9, 10, 82], "service_port": [9, 10, 82], "port": [9, 10, 82], "request_id": [24, 82], "67": [], "list_chat_sess": [24, 82], "most_recent_per_project": [24, 82], "list_vector_stor": [24, 82, 132], "describe_vector_stor": [24, 82], "vector_store_id": [24, 82, 157], "describe_vector_store_by_nam": [24, 82], "list_vector_store_vers": [24, 82], "describe_vector_store_vers": [24, 82], "create_vector_stor": [24, 82, 132], "cluster_nam": [24, 82, 132], "broken": [24, 82, 132], "togeth": [24, 82, 132], "update_vector_stor": [24, 82], "create_vector_store_vers": [24, 82], "delete_vector_stor": [24, 82], "lookup_vector_stor": [24, 82], "vectorstorelookupresult": [24, 82, 157, 159], "vector_store_lookup_result": 82, "trainedmodeltyp": 104, "regressionobject": [7, 9, 10, 82], "acc": [7, 9, 82], "f1_score": [7, 9, 82], "fscore": [7, 9, 82], "r_squared_coefficient_of_determin": [7, 9, 82], "r": [7, 9, 82], "regressiontreehpomod": [7, 9, 10, 82], "regressionaugmentationstrategi": [7, 9, 10, 82], "smote": [7, 9, 82], "resampl": [7, 9, 82], "regressiontargettransform": [7, 9, 10, 82], "yeo_johnson": [7, 9, 82], "yeo": [7, 9, 82], "johnson": [7, 9, 82], "box_cox": [7, 9, 82], "cox": [7, 9, 82], "regressiontypeofsplit": [7, 9, 10, 82], "random": [7, 9, 82], "timestamp_bas": [7, 9, 82], "row_indicator_bas": [7, 9, 82], "regressiontimesplitmethod": [7, 9, 10, 82], "test_split_percentage_bas": [7, 9, 82], "test_start_timestamp_bas": [7, 9, 82], "regressionlossfunct": [7, 9, 10, 82], "huber": [7, 9, 82], "mse": [7, 9, 82], "squar": [7, 9, 82], "absolut": [7, 9, 82], "msle": [7, 9, 82], "tweedi": [7, 9, 82], "cross_entropi": [7, 9, 82], "cross": [7, 9, 10, 82], "entropi": [7, 9, 82], "focal_cross_entropi": [7, 9, 82], "focal": [7, 9, 82], "regressiontrainingconfig": [9, 10, 82], "tree_hpo_mod": [9, 10, 82], "turn": [9, 10, 82], "off": [9, 10, 82], "disable_test_val_fold": [9, 10, 82], "test_val": [9, 10, 82], "k_fold_cross_valid": [9, 10, 82], "bag": [9, 10, 82], "num_cv_fold": [9, 10, 82], "timestamp_based_splitting_column": [9, 10, 82], "timestamp_based_splitting_method": [9, 10, 82], "test_splitting_timestamp": [9, 10, 82], "sampling_unit_kei": [9, 10, 82], "constrain": [9, 10, 82], "rebalance_class": [9, 10, 82], "invers": [9, 10, 82], "unbalanc": [9, 10, 82], "balanc": [9, 10, 82], "cost": [9, 10, 82], "rare": [9, 10, 82], "rare_class_augmentation_threshold": [9, 10, 82], "frequent": [9, 10, 82], "augmentation_strategi": [9, 10, 82], "deal": [9, 10, 82], "imbal": [9, 10, 82], "training_rows_downsample_ratio": [9, 10, 82], "min_categorical_count": [9, 10, 82], "placehold": [9, 10, 82], "sample_weight": [9, 10, 82], "eval": [9, 10, 82], "numeric_clipping_percentil": [9, 10, 82], "clip": [9, 10, 82], "bottom": [9, 10, 82], "target_transform": [9, 10, 82], "ignore_datetime_featur": [9, 10, 82], "max_text_word": [9, 10, 82], "word": [9, 10, 82], "perform_feature_select": [9, 10, 82], "subset": [9, 10, 82], "feature_selection_intens": [9, 10, 82], "strict": [9, 10, 82], "veri": [9, 10, 82], "lenient": [9, 10, 82], "pretrained_model_nam": [9, 10, 82], "multilingu": [9, 10, 82], "is_multilingu": [9, 10, 82], "loss_paramet": [9, 10, 82], "target_encode_categor": [9, 10, 82], "drop_original_categor": [9, 10, 82], "feed": [9, 10, 82], "mdoel": [9, 10, 82], "customalgorithmtrainingconfig": [9, 10, 82], "github": [9, 10, 82], "repositoti": [9, 10, 82], "optimizationtrainingconfig": [9, 10, 82], "isus": 22, "feedback": 22, "68": [], "get_project_feature_group_config": [24, 82], "describe_project_feature_group": [24, 82], "streaming_evaluate_prompt": [24, 82], "awar": [24, 82], "_get_agent_async_app_request_id": [24, 82], "async": [24, 82], "_get_agent_async_app_cal": [24, 82], "caller": [24, 82], "stream_messag": [24, 82], "print": [], "script": [24, 82], "_stream_llm_call_ui": [], "llm_arg": [24, 82], "_call_aiagent_asyncapp_sync_messag": [24, 82], "asyncapp": [24, 82], "sync": [24, 82], "import_annotation_label": [24, 63, 82], "200": [24, 82, 114], "get_llm_paramet": [24, 82], "parameter": [24, 82], "llmparamet": [24, 82, 88], "get_project_config": 63, "llm_paramet": 82, "_stream_llm_cal": [24, 82], "htmlexplan": 109, "html": 109, "ismaterializationneed": 4, "latestmaterializedannotationconfig": 4, "mergemod": [7, 8, 9, 82], "last_n": [7, 8, 9, 82], "time_window": [7, 8, 9, 82], "lastnmergeconfig": [8, 9, 82], "merge_mod": [8, 9, 82], "num_vers": [8, 9, 82], "timewindowmergeconfig": [8, 9, 82], "timewindow": [8, 9, 82], "time_window_size_m": [8, 9, 82], "max_tim": [8, 9, 82], "_mergeconfigfactori": [8, 9, 82], "featuremappingconfig": 11, "projectfeaturegrouptypemappingsconfig": 11, "69": [], "check_for_materi": [24, 63, 82], "add_constraint": [24, 82, 125], "involv": [24, 82, 125], "rh": [24, 82, 125], "chat_llm": [7, 9, 10, 24, 82], "vectorstoretextencod": [7, 9, 14, 82], "e5": [7, 9, 82], "e5_smal": [7, 9, 82], "sentence_bert": [7, 9, 82], "chatllmtrainingconfig": [9, 10, 82], "temperatur": [9, 10, 82], "vectorstoreconfig": [9, 14, 24, 82, 132, 157, 158], "text_encod": [9, 14, 82], "documentretrieverconfig": [], "71": [24, 82], "infer_feature_map": [24, 82, 132], "inferredfeaturemap": [24, 82, 84, 132], "get_feature_group_version_metr": [24, 82], "selected_column": [24, 39, 71, 82], "include_chart": [24, 39, 71, 82], "include_statist": [24, 39, 71, 82], "datametr": [24, 33, 39, 71, 82], "get_dataset_version_metr": [24, 82], "list_pipeline_version_log": [24, 82], "pipelineversionlog": [24, 82, 120, 121], "get_step_version_log": [24, 82, 117], "pipelinestepversionlog": [24, 82, 117, 118, 121], "get_deployment_convers": [24, 82], "deployment_conversation_id": [24, 42, 82], "deploymentconvers": [24, 40, 42, 82], "list_deployment_convers": [24, 82], "list_document_retriev": [], "documentretriev": [], "describe_document_retriev": [], "document_retriever_id": [], "describe_document_retriever_by_nam": [], "list_document_retriever_vers": [], "documentretrieververs": [], "describe_document_retriever_vers": [], "document_retriever_vers": [], "is_additional_model": [24, 82, 132], "algorithm_training_config": [24, 82, 90, 132], "specifc": [24, 82, 90, 132], "deployment_config": [24, 82], "filter_key_valu": [24, 82, 125], "retriv": [24, 82, 125], "is_prod": [24, 82, 114], "create_deployment_convers": [24, 82], "delete_deployment_convers": [24, 82], "create_document_retriev": [], "document_retriever_config": [], "update_document_retriev": [], "create_document_retriever_vers": [], "delete_document_retriev": [], "lookup_document_retriev": [], "documentretrieverlookupresult": [], "create_convers": 40, "list_convers": 40, "deploymentconversationid": 42, "deploymentconversationev": [42, 43], "searchresult": 43, "documentretrieverid": [], "latestdocumentretrieververs": [], "chunkoverlapfract": 158, "textencod": 158, "consecut": 158, "data_metr": 82, "deployment_convers": 82, "deployment_conversation_ev": 82, "document_retriev": [], "document_retriever_lookup_result": [], "inferred_feature_map": 82, "pipeline_step_version_log": 82, "pipeline_version_log": 82, "vector_store_config": [24, 82, 132, 157], "algorithmmodelconfig": 90, "trainingvectorstorevers": [90, 104], "isprod": 114, "list_log": 120, "steplog": 121}, "objects": {"": [[82, 0, 0, "-", "abacusai"]], "abacusai": [[82, 1, 1, "", "AIAgentTrainingConfig"], [82, 1, 1, "", "AnomalyDetectionTrainingConfig"], [82, 1, 1, "", "ApiClass"], [82, 1, 1, "", "ApiClient"], [82, 1, 1, "", "ApiEnum"], [82, 4, 1, "", "ApiException"], [82, 1, 1, "", "BatchSize"], [82, 1, 1, "", "ChatLLMTrainingConfig"], [82, 1, 1, "", "ClientOptions"], [82, 1, 1, "", "ClusteringImputationMethod"], [82, 1, 1, "", "ClusteringTimeseriesTrainingConfig"], [82, 1, 1, "", "ClusteringTrainingConfig"], [82, 1, 1, "", "ConnectorType"], [82, 1, 1, "", "CumulativeForecastingTrainingConfig"], [82, 1, 1, "", "CustomAlgorithmTrainingConfig"], [82, 1, 1, "", "CustomTrainedModelTrainingConfig"], [82, 1, 1, "", "DatabaseConnectorExportConfig"], [82, 1, 1, "", "DocumentClassificationTrainingConfig"], [82, 1, 1, "", "DocumentSummarizationTrainingConfig"], [82, 1, 1, "", "DocumentVisualizationTrainingConfig"], [82, 1, 1, "", "ExperimentationMode"], [82, 1, 1, "", "FeatureGroupExportConfig"], [82, 1, 1, "", "FileConnectorExportConfig"], [82, 1, 1, "", "FillLogic"], [82, 1, 1, "", "ForecastingDataSplitType"], [82, 1, 1, "", "ForecastingFillMethod"], [82, 1, 1, "", "ForecastingFrequency"], [82, 1, 1, "", "ForecastingLocalScaling"], [82, 1, 1, "", "ForecastingLossFunction"], [82, 1, 1, "", "ForecastingObjective"], [82, 1, 1, "", "ForecastingQuanitlesExtensionMethod"], [82, 1, 1, "", "ForecastingTrainingConfig"], [82, 1, 1, "", "HolidayCalendars"], [82, 1, 1, "", "LastNMergeConfig"], [82, 1, 1, "", "MergeConfig"], [82, 1, 1, "", "MergeMode"], [82, 1, 1, "", "NERModelType"], [82, 1, 1, "", "NERObjective"], [82, 1, 1, "", "NLPDocumentFormat"], [82, 1, 1, "", "NSamplingConfig"], [82, 1, 1, "", "NamedEntityExtractionTrainingConfig"], [82, 1, 1, "", "NaturalLanguageSearchTrainingConfig"], [82, 1, 1, "", "OptimizationTrainingConfig"], [82, 1, 1, "", "OutputVariableMapping"], [82, 1, 1, "", "ParsingConfig"], [82, 1, 1, "", "PercentSamplingConfig"], [82, 1, 1, "", "PersonalizationObjective"], [82, 1, 1, "", "PersonalizationTrainingConfig"], [82, 1, 1, "", "PersonalizationTrainingMode"], [82, 1, 1, "", "PredictionClient"], [82, 1, 1, "", "ProblemType"], [82, 1, 1, "", "PythonFunctionArgument"], [82, 1, 1, "", "PythonFunctionArgumentType"], [82, 1, 1, "", "ReadOnlyClient"], [82, 1, 1, "", "RegressionAugmentationStrategy"], [82, 1, 1, "", "RegressionLossFunction"], [82, 1, 1, "", "RegressionObjective"], [82, 1, 1, "", "RegressionTargetTransform"], [82, 1, 1, "", "RegressionTimeSplitMethod"], [82, 1, 1, "", "RegressionTrainingConfig"], [82, 1, 1, "", "RegressionTreeHPOMode"], [82, 1, 1, "", "RegressionTypeOfSplit"], [82, 1, 1, "", "SamplingConfig"], [82, 1, 1, "", "SamplingMethodType"], [82, 1, 1, "", "SentenceBoundaryDetectionTrainingConfig"], [82, 1, 1, "", "SentimentDetectionTrainingConfig"], [82, 1, 1, "", "SentimentType"], [82, 1, 1, "", "StreamingClient"], [82, 1, 1, "", "ThemeAnalysisTrainingConfig"], [82, 1, 1, "", "TimeWindowMergeConfig"], [82, 1, 1, "", "TrainingConfig"], [82, 1, 1, "", "VectorStoreConfig"], [82, 1, 1, "", "VectorStoreTextEncoder"], [82, 1, 1, "", "_ApiClassFactory"], [82, 1, 1, "", "_FeatureGroupExportConfigFactory"], [82, 1, 1, "", "_MergeConfigFactory"], [82, 1, 1, "", "_SamplingConfigFactory"], [82, 1, 1, "", "_TrainingConfigFactory"], [82, 5, 1, "", "__version__"], [82, 5, 1, "", "_request_context"], [0, 0, 0, "-", "algorithm"], [1, 0, 0, "-", "annotation"], [2, 0, 0, "-", "annotation_config"], [3, 0, 0, "-", "annotation_entry"], [4, 0, 0, "-", "annotations_status"], [9, 0, 0, "-", "api_class"], [15, 0, 0, "-", "api_client_utils"], [16, 0, 0, "-", "api_endpoint"], [17, 0, 0, "-", "api_key"], [18, 0, 0, "-", "application_connector"], [19, 0, 0, "-", "batch_prediction"], [20, 0, 0, "-", "batch_prediction_version"], [21, 0, 0, "-", "categorical_range_violation"], [22, 0, 0, "-", "chat_message"], [23, 0, 0, "-", "chat_session"], [24, 0, 0, "-", "client"], [25, 0, 0, "-", "code_source"], [26, 0, 0, "-", "concatenation_config"], [27, 0, 0, "-", "cryptography"], [28, 0, 0, "-", "custom_loss_function"], [29, 0, 0, "-", "custom_metric"], [30, 0, 0, "-", "custom_metric_version"], [31, 0, 0, "-", "custom_train_function_info"], [32, 0, 0, "-", "data_consistency_duplication"], [33, 0, 0, "-", "data_metrics"], [34, 0, 0, "-", "data_prep_logs"], [35, 0, 0, "-", "data_quality_results"], [36, 0, 0, "-", "database_connector"], [37, 0, 0, "-", "dataset"], [38, 0, 0, "-", "dataset_column"], [39, 0, 0, "-", "dataset_version"], [40, 0, 0, "-", "deployment"], [41, 0, 0, "-", "deployment_auth_token"], [42, 0, 0, "-", "deployment_conversation"], [43, 0, 0, "-", "deployment_conversation_event"], [44, 0, 0, "-", "document"], [45, 0, 0, "-", "document_annotation"], [46, 0, 0, "-", "document_store"], [47, 0, 0, "-", "document_store_import"], [48, 0, 0, "-", "drift_distribution"], [49, 0, 0, "-", "drift_distributions"], [50, 0, 0, "-", "eda"], [51, 0, 0, "-", "eda_chart_description"], [52, 0, 0, "-", "eda_collinearity"], [53, 0, 0, "-", "eda_data_consistency"], [54, 0, 0, "-", "eda_feature_association"], [55, 0, 0, "-", "eda_feature_collinearity"], [56, 0, 0, "-", "eda_forecasting_analysis"], [57, 0, 0, "-", "eda_version"], [58, 0, 0, "-", "embedding_feature_drift_distribution"], [59, 0, 0, "-", "execute_feature_group_operation"], [60, 0, 0, "-", "feature"], [61, 0, 0, "-", "feature_distribution"], [62, 0, 0, "-", "feature_drift_summary"], [63, 0, 0, "-", "feature_group"], [64, 0, 0, "-", "feature_group_export"], [65, 0, 0, "-", "feature_group_export_config"], [66, 0, 0, "-", "feature_group_export_download_url"], [67, 0, 0, "-", "feature_group_lineage"], [68, 0, 0, "-", "feature_group_refresh_export_config"], [69, 0, 0, "-", "feature_group_template"], [70, 0, 0, "-", "feature_group_template_variable_options"], [71, 0, 0, "-", "feature_group_version"], [72, 0, 0, "-", "feature_importance"], [73, 0, 0, "-", "feature_mapping"], [74, 0, 0, "-", "feature_record"], [75, 0, 0, "-", "file_connector"], [76, 0, 0, "-", "file_connector_instructions"], [77, 0, 0, "-", "file_connector_verification"], [78, 0, 0, "-", "forecasting_analysis_graph_data"], [79, 0, 0, "-", "function_logs"], [80, 0, 0, "-", "generated_pit_feature_config_option"], [81, 0, 0, "-", "graph_dashboard"], [83, 0, 0, "-", "indexing_config"], [84, 0, 0, "-", "inferred_feature_mappings"], [85, 0, 0, "-", "item_statistics"], [86, 0, 0, "-", "llm_code_block"], [87, 0, 0, "-", "llm_input"], [88, 0, 0, "-", "llm_parameters"], [89, 0, 0, "-", "llm_response"], [90, 0, 0, "-", "model"], [91, 0, 0, "-", "model_artifacts_export"], [92, 0, 0, "-", "model_blueprint_export"], [93, 0, 0, "-", "model_blueprint_stage"], [94, 0, 0, "-", "model_location"], [95, 0, 0, "-", "model_metrics"], [96, 0, 0, "-", "model_monitor"], [97, 0, 0, "-", "model_monitor_org_summary"], [98, 0, 0, "-", "model_monitor_summary"], [99, 0, 0, "-", "model_monitor_summary_from_org"], [100, 0, 0, "-", "model_monitor_version"], [101, 0, 0, "-", "model_monitor_version_metric_data"], [102, 0, 0, "-", "model_training_type_for_deployment"], [103, 0, 0, "-", "model_upload"], [104, 0, 0, "-", "model_version"], [105, 0, 0, "-", "modification_lock_info"], [106, 0, 0, "-", "module"], [107, 0, 0, "-", "monitor_alert"], [108, 0, 0, "-", "monitor_alert_version"], [109, 0, 0, "-", "natural_language_explanation"], [110, 0, 0, "-", "nested_feature"], [111, 0, 0, "-", "null_violation"], [112, 0, 0, "-", "organization_group"], [113, 0, 0, "-", "organization_search_result"], [114, 0, 0, "-", "pipeline"], [115, 0, 0, "-", "pipeline_reference"], [116, 0, 0, "-", "pipeline_step"], [117, 0, 0, "-", "pipeline_step_version"], [118, 0, 0, "-", "pipeline_step_version_logs"], [119, 0, 0, "-", "pipeline_step_version_reference"], [120, 0, 0, "-", "pipeline_version"], [121, 0, 0, "-", "pipeline_version_logs"], [122, 0, 0, "-", "point_in_time_feature"], [123, 0, 0, "-", "point_in_time_group"], [124, 0, 0, "-", "point_in_time_group_feature"], [125, 0, 0, "-", "prediction_client"], [126, 0, 0, "-", "prediction_dataset"], [127, 0, 0, "-", "prediction_feature_group"], [128, 0, 0, "-", "prediction_input"], [129, 0, 0, "-", "prediction_metric"], [130, 0, 0, "-", "prediction_metric_version"], [131, 0, 0, "-", "problem_type"], [132, 0, 0, "-", "project"], [133, 0, 0, "-", "project_config"], [134, 0, 0, "-", "project_dataset"], [135, 0, 0, "-", "project_validation"], [136, 0, 0, "-", "python_function"], [137, 0, 0, "-", "python_function_validator"], [138, 0, 0, "-", "python_plot_function"], [139, 0, 0, "-", "range_violation"], [140, 0, 0, "-", "refresh_pipeline_run"], [141, 0, 0, "-", "refresh_policy"], [142, 0, 0, "-", "refresh_schedule"], [143, 0, 0, "-", "resolved_feature_group_template"], [144, 0, 0, "-", "return_class"], [145, 0, 0, "-", "schema"], [146, 0, 0, "-", "streaming_auth_token"], [147, 0, 0, "-", "streaming_client"], [148, 0, 0, "-", "streaming_connector"], [149, 0, 0, "-", "training_config_options"], [150, 0, 0, "-", "type_violation"], [151, 0, 0, "-", "upload"], [152, 0, 0, "-", "upload_part"], [153, 0, 0, "-", "use_case"], [154, 0, 0, "-", "use_case_requirements"], [155, 0, 0, "-", "user"], [156, 0, 0, "-", "user_exception"], [157, 0, 0, "-", "vector_store"], [158, 0, 0, "-", "vector_store_config"], [159, 0, 0, "-", "vector_store_lookup_result"], [160, 0, 0, "-", "vector_store_version"], [161, 0, 0, "-", "webhook"]], "abacusai.AIAgentTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "description"]], "abacusai.AnomalyDetectionTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "mixture_of_gaussians"], [82, 3, 1, "", "spike_down"], [82, 3, 1, "", "spike_up"], [82, 3, 1, "", "test_split"], [82, 3, 1, "", "trend_change"], [82, 3, 1, "", "value_high"], [82, 3, 1, "", "variational_autoencoder"]], "abacusai.ApiClass": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "_support_kwargs"], [82, 3, 1, "", "_upper_snake_case_keys"], [82, 2, 1, "", "from_dict"], [82, 2, 1, "", "to_dict"]], "abacusai.ApiClient": [[82, 2, 1, "", "_call_aiagent_asyncapp_sync_message"], [82, 2, 1, "", "_get_agent_async_app_caller"], [82, 2, 1, "", "_get_agent_async_app_request_id"], [82, 2, 1, "", "_stream_llm_call"], [82, 2, 1, "", "add_annotatable_feature"], [82, 2, 1, "", "add_annotation"], [82, 2, 1, "", "add_feature_group_annotation_label"], [82, 2, 1, "", "add_feature_group_tag"], [82, 2, 1, "", "add_feature_group_to_project"], [82, 2, 1, "", "add_feature_tag"], [82, 2, 1, "", "add_graph_to_dashboard"], [82, 2, 1, "", "add_multiple_user_item_interactions"], [82, 2, 1, "", "add_organization_group_permission"], [82, 2, 1, "", "add_organization_group_to_feature_group_modifiers"], [82, 2, 1, "", "add_project_tags"], [82, 2, 1, "", "add_user_item_interaction"], [82, 2, 1, "", "add_user_to_feature_group_modifiers"], [82, 2, 1, "", "add_user_to_organization"], [82, 2, 1, "", "add_user_to_organization_group"], [82, 2, 1, "", "append_data"], [82, 2, 1, "", "append_multiple_data"], [82, 2, 1, "", "cancel_upload"], [82, 2, 1, "", "check_constraints"], [82, 2, 1, "", "classify_image"], [82, 2, 1, "", "classify_pdf"], [82, 2, 1, "", "clear_agent_context"], [82, 2, 1, "", "concatenate_feature_group_data"], [82, 2, 1, "", "create_agent"], [82, 2, 1, "", "create_agent_from_function"], [82, 2, 1, "", "create_algorithm"], [82, 2, 1, "", "create_algorithm_from_function"], [82, 2, 1, "", "create_batch_prediction"], [82, 2, 1, "", "create_chat_session"], [82, 2, 1, "", "create_custom_loss_function"], [82, 2, 1, "", "create_custom_loss_function_with_source_code"], [82, 2, 1, "", "create_custom_metric"], [82, 2, 1, "", "create_custom_metric_from_function"], [82, 2, 1, "", "create_dataset_from_application_connector"], [82, 2, 1, "", "create_dataset_from_database_connector"], [82, 2, 1, "", "create_dataset_from_file_connector"], [82, 2, 1, "", "create_dataset_from_pandas"], [82, 2, 1, "", "create_dataset_from_streaming_connector"], [82, 2, 1, "", "create_dataset_from_upload"], [82, 2, 1, "", "create_dataset_version_from_application_connector"], [82, 2, 1, "", "create_dataset_version_from_database_connector"], [82, 2, 1, "", "create_dataset_version_from_file_connector"], [82, 2, 1, "", "create_dataset_version_from_pandas"], [82, 2, 1, "", "create_dataset_version_from_upload"], [82, 2, 1, "", "create_deployment"], [82, 2, 1, "", "create_deployment_conversation"], [82, 2, 1, "", "create_deployment_token"], [82, 2, 1, "", "create_deployment_webhook"], [82, 2, 1, "", "create_eda"], [82, 2, 1, "", "create_feature"], [82, 2, 1, "", "create_feature_group"], [82, 2, 1, "", "create_feature_group_from_function"], [82, 2, 1, "", "create_feature_group_from_pandas_df"], [82, 2, 1, "", "create_feature_group_from_python_function"], [82, 2, 1, "", "create_feature_group_from_spark_df"], [82, 2, 1, "", "create_feature_group_from_template"], [82, 2, 1, "", "create_feature_group_template"], [82, 2, 1, "", "create_feature_group_version"], [82, 2, 1, "", "create_graph_dashboard"], [82, 2, 1, "", "create_merge_feature_group"], [82, 2, 1, "", "create_model_from_functions"], [82, 2, 1, "", "create_model_from_python"], [82, 2, 1, "", "create_model_monitor"], [82, 2, 1, "", "create_module"], [82, 2, 1, "", "create_module_from_notebook"], [82, 2, 1, "", "create_monitor_alert"], [82, 2, 1, "", "create_nested_feature"], [82, 2, 1, "", "create_nlp_drift_monitor"], [82, 2, 1, "", "create_organization_group"], [82, 2, 1, "", "create_pipeline"], [82, 2, 1, "", "create_pipeline_step"], [82, 2, 1, "", "create_pipeline_step_from_function"], [82, 2, 1, "", "create_point_in_time_feature"], [82, 2, 1, "", "create_point_in_time_group"], [82, 2, 1, "", "create_point_in_time_group_feature"], [82, 2, 1, "", "create_project"], [82, 2, 1, "", "create_python_function"], [82, 2, 1, "", "create_refresh_policy"], [82, 2, 1, "", "create_sampling_feature_group"], [82, 2, 1, "", "create_snapshot_feature_group"], [82, 2, 1, "", "create_spark_df_from_feature_group_version"], [82, 2, 1, "", "create_streaming_dataset"], [82, 2, 1, "", "create_streaming_token"], [82, 2, 1, "", "create_train_test_data_split_feature_group"], [82, 2, 1, "", "create_transform_feature_group"], [82, 2, 1, "", "create_vector_store"], [82, 2, 1, "", "create_vector_store_version"], [82, 2, 1, "", "create_vision_drift_monitor"], [82, 2, 1, "", "delete_algorithm"], [82, 2, 1, "", "delete_api_key"], [82, 2, 1, "", "delete_application_connector"], [82, 2, 1, "", "delete_batch_prediction"], [82, 2, 1, "", "delete_custom_loss_function"], [82, 2, 1, "", "delete_custom_metric"], [82, 2, 1, "", "delete_database_connector"], [82, 2, 1, "", "delete_dataset"], [82, 2, 1, "", "delete_deployment"], [82, 2, 1, "", "delete_deployment_conversation"], [82, 2, 1, "", "delete_deployment_token"], [82, 2, 1, "", "delete_eda"], [82, 2, 1, "", "delete_eda_version"], [82, 2, 1, "", "delete_feature"], [82, 2, 1, "", "delete_feature_group"], [82, 2, 1, "", "delete_feature_group_template"], [82, 2, 1, "", "delete_file_connector"], [82, 2, 1, "", "delete_graph_dashboard"], [82, 2, 1, "", "delete_item_embeddings"], [82, 2, 1, "", "delete_model"], [82, 2, 1, "", "delete_model_monitor"], [82, 2, 1, "", "delete_model_monitor_version"], [82, 2, 1, "", "delete_model_version"], [82, 2, 1, "", "delete_module"], [82, 2, 1, "", "delete_monitor_alert"], [82, 2, 1, "", "delete_nested_feature"], [82, 2, 1, "", "delete_organization_group"], [82, 2, 1, "", "delete_pipeline"], [82, 2, 1, "", "delete_pipeline_step"], [82, 2, 1, "", "delete_point_in_time_group"], [82, 2, 1, "", "delete_project"], [82, 2, 1, "", "delete_python_function"], [82, 2, 1, "", "delete_refresh_policy"], [82, 2, 1, "", "delete_streaming_connector"], [82, 2, 1, "", "delete_streaming_token"], [82, 2, 1, "", "delete_vector_store"], [82, 2, 1, "", "delete_webhook"], [82, 2, 1, "", "describe_annotation"], [82, 2, 1, "", "describe_async_feature_group_operation"], [82, 2, 1, "", "describe_image"], [82, 2, 1, "", "describe_pipeline"], [82, 2, 1, "", "describe_pipeline_by_name"], [82, 2, 1, "", "detach_feature_group_from_template"], [82, 2, 1, "", "evaluate_prompt"], [82, 2, 1, "", "execute_agent"], [82, 2, 1, "", "execute_feature_group_sql"], [82, 2, 1, "", "export_feature_group_version_to_console"], [82, 2, 1, "", "export_feature_group_version_to_database_connector"], [82, 2, 1, "", "export_feature_group_version_to_file_connector"], [82, 2, 1, "", "export_model_artifact_as_feature_group"], [82, 2, 1, "", "generate_image"], [82, 2, 1, "", "get_agent_context_chat_history"], [82, 2, 1, "", "get_alternative_assignments"], [82, 2, 1, "", "get_anomalies"], [82, 2, 1, "", "get_assignments"], [82, 2, 1, "", "get_chat_response"], [82, 2, 1, "", "get_classification"], [82, 2, 1, "", "get_cluster"], [82, 2, 1, "", "get_custom_train_function_info"], [82, 2, 1, "", "get_document_to_annotate"], [82, 2, 1, "", "get_entailment"], [82, 2, 1, "", "get_entities_from_pdf"], [82, 2, 1, "", "get_forecast"], [82, 2, 1, "", "get_k_nearest"], [82, 2, 1, "", "get_labels"], [82, 2, 1, "", "get_llm_parameters"], [82, 2, 1, "", "get_multiple_k_nearest"], [82, 2, 1, "", "get_notebook_cell_completion"], [82, 2, 1, "", "get_objects_from_image"], [82, 2, 1, "", "get_personalized_ranking"], [82, 2, 1, "", "get_ranked_items"], [82, 2, 1, "", "get_recommendations"], [82, 2, 1, "", "get_related_items"], [82, 2, 1, "", "get_search_results"], [82, 2, 1, "", "get_sentiment"], [82, 2, 1, "", "get_summary"], [82, 2, 1, "", "get_train_function_input"], [82, 2, 1, "", "get_train_function_input_from_model_version"], [82, 2, 1, "", "get_training_config_options"], [82, 2, 1, "", "import_annotation_labels"], [82, 2, 1, "", "import_module"], [82, 2, 1, "", "invalidate_streaming_feature_group_data"], [82, 2, 1, "", "is_anomaly"], [82, 2, 1, "", "list_builtin_algorithms"], [82, 2, 1, "", "list_pipeline_versions"], [82, 2, 1, "", "lookup_features"], [82, 2, 1, "", "lookup_vector_store"], [82, 2, 1, "", "mark_upload_complete"], [82, 2, 1, "", "pause_refresh_policy"], [82, 2, 1, "", "predict"], [82, 2, 1, "", "predict_churn"], [82, 2, 1, "", "predict_class"], [82, 2, 1, "", "predict_fraud"], [82, 2, 1, "", "predict_from_datasets"], [82, 2, 1, "", "predict_language"], [82, 2, 1, "", "predict_lead"], [82, 2, 1, "", "predict_multiple"], [82, 2, 1, "", "predict_takeover"], [82, 2, 1, "", "predict_target"], [82, 2, 1, "", "predict_with_binary_data"], [82, 2, 1, "", "preview_feature_group_template_resolution"], [82, 2, 1, "", "remove_concatenation_config"], [82, 2, 1, "", "remove_deployment_feature_group_export_output"], [82, 2, 1, "", "remove_feature_group_annotation_label"], [82, 2, 1, "", "remove_feature_group_from_project"], [82, 2, 1, "", "remove_feature_group_tag"], [82, 2, 1, "", "remove_feature_tag"], [82, 2, 1, "", "remove_organization_group_from_feature_group_modifiers"], [82, 2, 1, "", "remove_organization_group_permission"], [82, 2, 1, "", "remove_project_tags"], [82, 2, 1, "", "remove_user_from_feature_group_modifiers"], [82, 2, 1, "", "remove_user_from_organization"], [82, 2, 1, "", "remove_user_from_organization_group"], [82, 2, 1, "", "rename_application_connector"], [82, 2, 1, "", "rename_database_connector"], [82, 2, 1, "", "rename_deployment"], [82, 2, 1, "", "rename_eda"], [82, 2, 1, "", "rename_model"], [82, 2, 1, "", "rename_model_monitor"], [82, 2, 1, "", "rename_project"], [82, 2, 1, "", "rename_streaming_connector"], [82, 2, 1, "", "render_feature_groups_for_llm"], [82, 2, 1, "", "rerun_eda"], [82, 2, 1, "", "rerun_model_monitor"], [82, 2, 1, "", "resume_refresh_policy"], [82, 2, 1, "", "retrain_model"], [82, 2, 1, "", "run_monitor_alert"], [82, 2, 1, "", "run_pipeline"], [82, 2, 1, "", "run_refresh_policy"], [82, 2, 1, "", "score_image"], [82, 2, 1, "", "set_agent_context_chat_history"], [82, 2, 1, "", "set_annotation_status_feature"], [82, 2, 1, "", "set_auto_deployment"], [82, 2, 1, "", "set_azure_blob_connection_string"], [82, 2, 1, "", "set_batch_prediction_database_connector_output"], [82, 2, 1, "", "set_batch_prediction_dataset"], [82, 2, 1, "", "set_batch_prediction_dataset_remap"], [82, 2, 1, "", "set_batch_prediction_feature_group"], [82, 2, 1, "", "set_batch_prediction_feature_group_output"], [82, 2, 1, "", "set_batch_prediction_file_connector_output"], [82, 2, 1, "", "set_batch_prediction_output_to_console"], [82, 2, 1, "", "set_dataset_column_data_type"], [82, 2, 1, "", "set_default_organization_group"], [82, 2, 1, "", "set_deployment_feature_group_export_database_connector_output"], [82, 2, 1, "", "set_deployment_feature_group_export_file_connector_output"], [82, 2, 1, "", "set_deployment_feature_group_version"], [82, 2, 1, "", "set_deployment_model_version"], [82, 2, 1, "", "set_feature_as_annotatable_feature"], [82, 2, 1, "", "set_feature_group_indexing_config"], [82, 2, 1, "", "set_feature_group_merge_config"], [82, 2, 1, "", "set_feature_group_modifier_lock"], [82, 2, 1, "", "set_feature_group_sampling_config"], [82, 2, 1, "", "set_feature_group_schema"], [82, 2, 1, "", "set_feature_group_transform_config"], [82, 2, 1, "", "set_feature_group_type"], [82, 2, 1, "", "set_feature_mapping"], [82, 2, 1, "", "set_feature_type"], [82, 2, 1, "", "set_model_prediction_params"], [82, 2, 1, "", "set_model_training_config"], [82, 2, 1, "", "set_natural_language_explanation"], [82, 2, 1, "", "set_project_feature_group_config"], [82, 2, 1, "", "set_streaming_retention_policy"], [82, 2, 1, "", "snapshot_streaming_data"], [82, 2, 1, "", "start_batch_prediction"], [82, 2, 1, "", "start_deployment"], [82, 2, 1, "", "stop_deployment"], [82, 2, 1, "", "stream_message"], [82, 2, 1, "", "streaming_evaluate_prompt"], [82, 2, 1, "", "train_model"], [82, 2, 1, "", "transcribe_audio"], [82, 2, 1, "", "transfer_style"], [82, 2, 1, "", "unset_feature_as_annotatable_feature"], [82, 2, 1, "", "update_agent"], [82, 2, 1, "", "update_agent_with_function"], [82, 2, 1, "", "update_algorithm"], [82, 2, 1, "", "update_algorithm_from_function"], [82, 2, 1, "", "update_annotation_status"], [82, 2, 1, "", "update_batch_prediction"], [82, 2, 1, "", "update_custom_loss_function"], [82, 2, 1, "", "update_custom_loss_function_with_source_code"], [82, 2, 1, "", "update_custom_metric"], [82, 2, 1, "", "update_custom_metric_from_function"], [82, 2, 1, "", "update_dataset_feature_group_feature_expression"], [82, 2, 1, "", "update_deployment"], [82, 2, 1, "", "update_feature"], [82, 2, 1, "", "update_feature_group"], [82, 2, 1, "", "update_feature_group_from_pandas_df"], [82, 2, 1, "", "update_feature_group_from_spark_df"], [82, 2, 1, "", "update_feature_group_function_definition"], [82, 2, 1, "", "update_feature_group_git"], [82, 2, 1, "", "update_feature_group_python_function"], [82, 2, 1, "", "update_feature_group_python_function_bindings"], [82, 2, 1, "", "update_feature_group_sql_definition"], [82, 2, 1, "", "update_feature_group_template"], [82, 2, 1, "", "update_feature_group_template_bindings"], [82, 2, 1, "", "update_feature_group_zip"], [82, 2, 1, "", "update_graph_dashboard"], [82, 2, 1, "", "update_graph_to_dashboard"], [82, 2, 1, "", "update_module"], [82, 2, 1, "", "update_module_from_notebook"], [82, 2, 1, "", "update_monitor_alert"], [82, 2, 1, "", "update_nested_feature"], [82, 2, 1, "", "update_pipeline"], [82, 2, 1, "", "update_pipeline_step"], [82, 2, 1, "", "update_pipeline_step_from_function"], [82, 2, 1, "", "update_point_in_time_feature"], [82, 2, 1, "", "update_point_in_time_group"], [82, 2, 1, "", "update_point_in_time_group_feature"], [82, 2, 1, "", "update_python_function"], [82, 2, 1, "", "update_python_function_code"], [82, 2, 1, "", "update_python_model"], [82, 2, 1, "", "update_python_model_git"], [82, 2, 1, "", "update_python_model_zip"], [82, 2, 1, "", "update_refresh_policy"], [82, 2, 1, "", "update_vector_store"], [82, 2, 1, "", "update_webhook"], [82, 2, 1, "", "upload_part"], [82, 2, 1, "", "upsert_data"], [82, 2, 1, "", "upsert_item_attributes"], [82, 2, 1, "", "upsert_item_embeddings"], [82, 2, 1, "", "upsert_multiple_data"], [82, 2, 1, "", "upsert_multiple_item_attributes"], [82, 2, 1, "", "upsert_multiple_item_embeddings"], [82, 2, 1, "", "upsert_multiple_user_attributes"], [82, 2, 1, "", "upsert_user_attributes"], [82, 2, 1, "", "verify_application_connector"], [82, 2, 1, "", "verify_database_connector"], [82, 2, 1, "", "verify_file_connector"], [82, 2, 1, "", "verify_streaming_connector"]], "abacusai.ApiEnum": [[82, 2, 1, "", "__eq__"], [82, 2, 1, "", "__hash__"]], "abacusai.ApiException": [[82, 2, 1, "", "__str__"]], "abacusai.BatchSize": [[82, 3, 1, "", "BATCH_1024"], [82, 3, 1, "", "BATCH_128"], [82, 3, 1, "", "BATCH_16"], [82, 3, 1, "", "BATCH_256"], [82, 3, 1, "", "BATCH_32"], [82, 3, 1, "", "BATCH_384"], [82, 3, 1, "", "BATCH_512"], [82, 3, 1, "", "BATCH_64"], [82, 3, 1, "", "BATCH_740"], [82, 3, 1, "", "BATCH_8"]], "abacusai.ChatLLMTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "llm_name"], [82, 3, 1, "", "num_completion_tokens"], [82, 3, 1, "", "system_message"], [82, 3, 1, "", "temperature"], [82, 3, 1, "", "vector_stores"]], "abacusai.ClusteringImputationMethod": [[82, 3, 1, "", "AUTOMATIC"], [82, 3, 1, "", "INTERPOLATE"], [82, 3, 1, "", "ZEROS"]], "abacusai.ClusteringTimeseriesTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "imputation"], [82, 3, 1, "", "num_clusters_selection"]], "abacusai.ClusteringTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "num_clusters_selection"]], "abacusai.ConnectorType": [[82, 3, 1, "", "APPLICATION"], [82, 3, 1, "", "DATABASE"], [82, 3, 1, "", "FILE"], [82, 3, 1, "", "STREAMING"]], "abacusai.CumulativeForecastingTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "cumulative_prediction_lengths"], [82, 3, 1, "", "historical_frequency"], [82, 3, 1, "", "predict_residuals"], [82, 3, 1, "", "skip_input_transform"], [82, 3, 1, "", "skip_target_transform"], [82, 3, 1, "", "test_split"]], "abacusai.CustomAlgorithmTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "predict_function_name"], [82, 3, 1, "", "predict_many_function_name"], [82, 3, 1, "", "predict_module_name"], [82, 3, 1, "", "test_split"], [82, 3, 1, "", "train_function_name"], [82, 3, 1, "", "train_module_name"], [82, 3, 1, "", "training_input_tables"]], "abacusai.CustomTrainedModelTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "docker_image_uri"], [82, 3, 1, "", "index_output_path"], [82, 3, 1, "", "max_catalog_size"], [82, 3, 1, "", "max_dimension"], [82, 3, 1, "", "service_port"]], "abacusai.DatabaseConnectorExportConfig": [[82, 3, 1, "", "additional_id_columns"], [82, 3, 1, "", "connector_type"], [82, 3, 1, "", "data_columns"], [82, 3, 1, "", "database_connector_id"], [82, 3, 1, "", "id_column"], [82, 3, 1, "", "mode"], [82, 3, 1, "", "object_name"], [82, 2, 1, "", "to_dict"]], "abacusai.DocumentClassificationTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "batch_size"], [82, 3, 1, "", "dropout_rate"], [82, 3, 1, "", "test_split"], [82, 3, 1, "", "zero_shot_hypotheses"]], "abacusai.DocumentSummarizationTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "batch_size"], [82, 3, 1, "", "dropout_rate"], [82, 3, 1, "", "test_split"]], "abacusai.DocumentVisualizationTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "batch_size"], [82, 3, 1, "", "dropout_rate"], [82, 3, 1, "", "test_split"]], "abacusai.ExperimentationMode": [[82, 3, 1, "", "RAPID"], [82, 3, 1, "", "THOROUGH"]], "abacusai.FeatureGroupExportConfig": [[82, 3, 1, "", "connector_type"]], "abacusai.FileConnectorExportConfig": [[82, 3, 1, "", "connector_type"], [82, 3, 1, "", "export_file_format"], [82, 3, 1, "", "location"], [82, 2, 1, "", "to_dict"]], "abacusai.FillLogic": [[82, 3, 1, "", "AVERAGE"], [82, 3, 1, "", "BACKFILL"], [82, 3, 1, "", "CUSTOM"], [82, 3, 1, "", "FORWARDFILL"], [82, 3, 1, "", "LINEAR"], [82, 3, 1, "", "MAX"], [82, 3, 1, "", "MEDIAN"], [82, 3, 1, "", "MIN"], [82, 3, 1, "", "NEAREST"]], "abacusai.ForecastingDataSplitType": [[82, 3, 1, "", "AUTO"], [82, 3, 1, "", "ITEM"], [82, 3, 1, "", "PREDICTION_LENGTH"], [82, 3, 1, "", "TIMESTAMP"]], "abacusai.ForecastingFillMethod": [[82, 3, 1, "", "BACK"], [82, 3, 1, "", "FUTURE"], [82, 3, 1, "", "MIDDLE"]], "abacusai.ForecastingFrequency": [[82, 3, 1, "", "DAILY"], [82, 3, 1, "", "HOURLY"], [82, 3, 1, "", "MONTH_END"], [82, 3, 1, "", "MONTH_START"], [82, 3, 1, "", "QUARTER_END"], [82, 3, 1, "", "QUARTER_START"], [82, 3, 1, "", "WEEKLY_MONDAY_START"], [82, 3, 1, "", "WEEKLY_SATURDAY_START"], [82, 3, 1, "", "WEEKLY_SUNDAY_START"], [82, 3, 1, "", "YEARLY"]], "abacusai.ForecastingLocalScaling": [[82, 3, 1, "", "ITEM"], [82, 3, 1, "", "LAST_POINT"], [82, 3, 1, "", "MIN_MAX"], [82, 3, 1, "", "MIN_STD"], [82, 3, 1, "", "ROBUST"], [82, 3, 1, "", "SLIDING_ZSCORE"], [82, 3, 1, "", "ZSCORE"]], "abacusai.ForecastingLossFunction": [[82, 3, 1, "", "ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [82, 3, 1, "", "CUSTOM"], [82, 3, 1, "", "GAUSSIAN"], [82, 3, 1, "", "GAUSSIAN_FULL_COVARIANCE"], [82, 3, 1, "", "GUASSIAN_EXPONENTIAL"], [82, 3, 1, "", "LOG_ROOT_MEAN_SQUARE_ERROR"], [82, 3, 1, "", "MEAN_ABSOLUTE_ERROR"], [82, 3, 1, "", "MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [82, 3, 1, "", "MIX_GAUSSIANS"], [82, 3, 1, "", "NEGATIVE_BINOMIAL"], [82, 3, 1, "", "NORMALIZED_MEAN_ABSOLUTE_ERROR"], [82, 3, 1, "", "NORMALIZED_ROOT_MEAN_SQUARE_ERROR"], [82, 3, 1, "", "PEAKS_MEAN_ABSOLUTE_ERROR"], [82, 3, 1, "", "POINTWISE_ACCURACY"], [82, 3, 1, "", "ROOT_MEAN_SQUARE_ERROR"], [82, 3, 1, "", "STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [82, 3, 1, "", "WEIBULL"]], "abacusai.ForecastingObjective": [[82, 3, 1, "", "ACCURACY"], [82, 3, 1, "", "BIAS"], [82, 3, 1, "", "CMAPE"], [82, 3, 1, "", "CV"], [82, 3, 1, "", "MAPE"], [82, 3, 1, "", "RMSE"], [82, 3, 1, "", "SRMSE"], [82, 3, 1, "", "WAPE"]], "abacusai.ForecastingQuanitlesExtensionMethod": [[82, 3, 1, "", "ANCESTRAL_SIMULATION"], [82, 3, 1, "", "DIRECT"], [82, 3, 1, "", "QUADRATIC"]], "abacusai.ForecastingTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "additional_forecast_keys"], [82, 3, 1, "", "backtesting_window_step_size"], [82, 3, 1, "", "batch_renormalization"], [82, 3, 1, "", "batch_size"], [82, 3, 1, "", "convolution_filters"], [82, 3, 1, "", "convolutional_layers"], [82, 3, 1, "", "custom_loss_functions"], [82, 3, 1, "", "custom_metrics"], [82, 3, 1, "", "data_split_feature_group_table_name"], [82, 3, 1, "", "datetime_holiday_calendars"], [82, 3, 1, "", "disable_networks_without_analytic_quantiles"], [82, 3, 1, "", "dropout_rate"], [82, 3, 1, "", "enable_clustering"], [82, 3, 1, "", "enable_cold_start"], [82, 3, 1, "", "enable_feature_selection"], [82, 3, 1, "", "enable_multiple_backtests"], [82, 3, 1, "", "experimentation_mode"], [82, 3, 1, "", "fill_missing_values"], [82, 3, 1, "", "filter_items"], [82, 3, 1, "", "force_prediction_length"], [82, 3, 1, "", "forecast_frequency"], [82, 3, 1, "", "full_data_retraining"], [82, 3, 1, "", "handle_zeros_as_missing_values"], [82, 3, 1, "", "history_length"], [82, 3, 1, "", "initial_learning_rate"], [82, 3, 1, "", "item_attributes_weight_column"], [82, 3, 1, "", "l2_regularization_factor"], [82, 3, 1, "", "local_scaling_mode"], [82, 3, 1, "", "loss_function"], [82, 3, 1, "", "max_scale_context"], [82, 3, 1, "", "num_backtesting_windows"], [82, 3, 1, "", "number_of_samples"], [82, 3, 1, "", "objective"], [82, 3, 1, "", "prediction_length"], [82, 3, 1, "", "prediction_step_size"], [82, 3, 1, "", "probability_quantiles"], [82, 3, 1, "", "quantiles_extension_method"], [82, 3, 1, "", "recurrent_layers"], [82, 3, 1, "", "recurrent_units"], [82, 3, 1, "", "skip_local_scale_target"], [82, 3, 1, "", "skip_missing"], [82, 3, 1, "", "skip_timeseries_weight_scaling"], [82, 3, 1, "", "smooth_history"], [82, 3, 1, "", "sort_objective"], [82, 3, 1, "", "symmetrize_quantiles"], [82, 3, 1, "", "test_by_item"], [82, 3, 1, "", "test_split"], [82, 3, 1, "", "test_start"], [82, 3, 1, "", "timeseries_loss_weight_column"], [82, 3, 1, "", "timeseries_weight_column"], [82, 3, 1, "", "training_point_overlap"], [82, 3, 1, "", "type_of_split"], [82, 3, 1, "", "underprediction_weight"], [82, 3, 1, "", "use_all_item_totals"], [82, 3, 1, "", "use_item_id"], [82, 3, 1, "", "use_item_weights_in_objective"], [82, 3, 1, "", "use_log_transforms"], [82, 3, 1, "", "use_timeseries_weights_in_objective"], [82, 3, 1, "", "zero_predictor"]], "abacusai.HolidayCalendars": [[82, 3, 1, "", "AU"], [82, 3, 1, "", "UK"], [82, 3, 1, "", "US"]], "abacusai.LastNMergeConfig": [[82, 3, 1, "", "merge_mode"], [82, 3, 1, "", "num_versions"]], "abacusai.MergeConfig": [[82, 2, 1, "", "__post_init__"]], "abacusai.MergeMode": [[82, 3, 1, "", "LAST_N"], [82, 3, 1, "", "TIME_WINDOW"]], "abacusai.NERModelType": [[82, 3, 1, "", "LEARNED"], [82, 3, 1, "", "PRETRAINED_BERT"], [82, 3, 1, "", "PRETRAINED_MULTILINGUAL"], [82, 3, 1, "", "PRETRAINED_ROBERTA_27"], [82, 3, 1, "", "PRETRAINED_ROBERTA_43"]], "abacusai.NERObjective": [[82, 3, 1, "", "ANNOTATIONS_PRECISION"], [82, 3, 1, "", "ANNOTATIONS_RECALL"], [82, 3, 1, "", "AUC"], [82, 3, 1, "", "LOG_LOSS"], [82, 3, 1, "", "PRECISION"], [82, 3, 1, "", "RECALL"]], "abacusai.NLPDocumentFormat": [[82, 3, 1, "", "AUTO"], [82, 3, 1, "", "DOC"], [82, 3, 1, "", "TEXT"], [82, 3, 1, "", "TOKENS"]], "abacusai.NSamplingConfig": [[82, 3, 1, "", "key_columns"], [82, 3, 1, "", "sample_count"], [82, 3, 1, "", "sampling_method"]], "abacusai.NamedEntityExtractionTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "active_labels_column"], [82, 3, 1, "", "batch_size"], [82, 3, 1, "", "document_format"], [82, 3, 1, "", "dropout_rate"], [82, 3, 1, "", "include_longformer"], [82, 3, 1, "", "ner_model_type"], [82, 3, 1, "", "objective"], [82, 3, 1, "", "sort_objective"], [82, 3, 1, "", "test_row_indicator"], [82, 3, 1, "", "test_split"]], "abacusai.NaturalLanguageSearchTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "abacus_internal_model"], [82, 3, 1, "", "chunk_overlap_fraction"], [82, 3, 1, "", "index_fraction"], [82, 3, 1, "", "larger_embeddings"], [82, 3, 1, "", "num_completion_tokens"], [82, 3, 1, "", "search_chunk_size"]], "abacusai.OptimizationTrainingConfig": [[82, 2, 1, "", "__post_init__"]], "abacusai.OutputVariableMapping": [[82, 3, 1, "", "name"], [82, 3, 1, "", "variable_type"]], "abacusai.ParsingConfig": [[82, 3, 1, "", "csv_delimiter"], [82, 3, 1, "", "escape"], [82, 3, 1, "", "file_path_with_schema"]], "abacusai.PercentSamplingConfig": [[82, 3, 1, "", "key_columns"], [82, 3, 1, "", "sample_percent"], [82, 3, 1, "", "sampling_method"]], "abacusai.PersonalizationObjective": [[82, 3, 1, "", "COVERAGE"], [82, 3, 1, "", "MAP"], [82, 3, 1, "", "MAP_10"], [82, 3, 1, "", "MAP_5"], [82, 3, 1, "", "MRR"], [82, 3, 1, "", "NDCG"], [82, 3, 1, "", "NDCG_10"], [82, 3, 1, "", "NDCG_5"], [82, 3, 1, "", "PERSONALIZATION"]], "abacusai.PersonalizationTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "add_time_features"], [82, 3, 1, "", "batch_size"], [82, 3, 1, "", "compute_rerank_metrics"], [82, 3, 1, "", "compute_session_metrics"], [82, 3, 1, "", "data_split_feature_group_table_name"], [82, 3, 1, "", "disable_gpu"], [82, 3, 1, "", "disable_timestamp_scalar_features"], [82, 3, 1, "", "disable_transformer"], [82, 3, 1, "", "downsample_item_popularity_percentile"], [82, 3, 1, "", "dropout_rate"], [82, 3, 1, "", "explicit_time_split"], [82, 3, 1, "", "explore_lookback_hours"], [82, 3, 1, "", "filter_history"], [82, 3, 1, "", "full_data_retraining"], [82, 3, 1, "", "item_id_dropout"], [82, 3, 1, "", "max_history_length"], [82, 3, 1, "", "max_user_history_len_percentile"], [82, 3, 1, "", "objective"], [82, 3, 1, "", "recent_days_for_training"], [82, 3, 1, "", "sequential_training"], [82, 3, 1, "", "session_event_types"], [82, 3, 1, "", "sort_objective"], [82, 3, 1, "", "target_action_types"], [82, 3, 1, "", "target_action_weights"], [82, 3, 1, "", "test_last_items_length"], [82, 3, 1, "", "test_on_user_split"], [82, 3, 1, "", "test_row_indicator"], [82, 3, 1, "", "test_split"], [82, 3, 1, "", "test_split_on_last_k_items"], [82, 3, 1, "", "test_window_length_hours"], [82, 3, 1, "", "training_mode"], [82, 3, 1, "", "training_start_date"]], "abacusai.PersonalizationTrainingMode": [[82, 3, 1, "", "EXPERIMENTAL"], [82, 3, 1, "", "PRODUCTION"]], "abacusai.PredictionClient": [[82, 2, 1, "", "check_constraints"], [82, 2, 1, "", "classify_image"], [82, 2, 1, "", "classify_pdf"], [82, 2, 1, "", "describe_image"], [82, 2, 1, "", "execute_agent"], [82, 2, 1, "", "generate_image"], [82, 2, 1, "", "get_alternative_assignments"], [82, 2, 1, "", "get_anomalies"], [82, 2, 1, "", "get_assignments"], [82, 2, 1, "", "get_chat_response"], [82, 2, 1, "", "get_classification"], [82, 2, 1, "", "get_cluster"], [82, 2, 1, "", "get_entailment"], [82, 2, 1, "", "get_entities_from_pdf"], [82, 2, 1, "", "get_forecast"], [82, 2, 1, "", "get_k_nearest"], [82, 2, 1, "", "get_labels"], [82, 2, 1, "", "get_multiple_k_nearest"], [82, 2, 1, "", "get_objects_from_image"], [82, 2, 1, "", "get_personalized_ranking"], [82, 2, 1, "", "get_ranked_items"], [82, 2, 1, "", "get_recommendations"], [82, 2, 1, "", "get_related_items"], [82, 2, 1, "", "get_search_results"], [82, 2, 1, "", "get_sentiment"], [82, 2, 1, "", "get_summary"], [82, 2, 1, "", "is_anomaly"], [82, 2, 1, "", "lookup_features"], [82, 2, 1, "", "predict"], [82, 2, 1, "", "predict_churn"], [82, 2, 1, "", "predict_class"], [82, 2, 1, "", "predict_fraud"], [82, 2, 1, "", "predict_from_datasets"], [82, 2, 1, "", "predict_language"], [82, 2, 1, "", "predict_lead"], [82, 2, 1, "", "predict_multiple"], [82, 2, 1, "", "predict_raw"], [82, 2, 1, "", "predict_takeover"], [82, 2, 1, "", "predict_target"], [82, 2, 1, "", "predict_with_binary_data"], [82, 2, 1, "", "score_image"], [82, 2, 1, "", "transcribe_audio"], [82, 2, 1, "", "transfer_style"]], "abacusai.ProblemType": [[82, 3, 1, "", "AI_AGENT"], [82, 3, 1, "", "ANOMALY_DETECTION"], [82, 3, 1, "", "ANOMALY_OUTLIERS"], [82, 3, 1, "", "CHAT_LLM"], [82, 3, 1, "", "CLUSTERING"], [82, 3, 1, "", "CLUSTERING_TIMESERIES"], [82, 3, 1, "", "CUMULATIVE_FORECASTING"], [82, 3, 1, "", "CUSTOM_ALGORITHM"], [82, 3, 1, "", "CUSTOM_TRAINED_MODEL"], [82, 3, 1, "", "DOCUMENT_CLASSIFICATION"], [82, 3, 1, "", "DOCUMENT_SUMMARIZATION"], [82, 3, 1, "", "DOCUMENT_VISUALIZATION"], [82, 3, 1, "", "FEATURE_STORE"], [82, 3, 1, "", "FORECASTING"], [82, 3, 1, "", "IMAGE_CLASSIFICATION"], [82, 3, 1, "", "IMAGE_VALUE_PREDICTION"], [82, 3, 1, "", "LANGUAGE_DETECTION"], [82, 3, 1, "", "MODEL_MONITORING"], [82, 3, 1, "", "NAMED_ENTITY_EXTRACTION"], [82, 3, 1, "", "NATURAL_LANGUAGE_SEARCH"], [82, 3, 1, "", "OBJECT_DETECTION"], [82, 3, 1, "", "OPTIMIZATION"], [82, 3, 1, "", "PERSONALIZATION"], [82, 3, 1, "", "PREDICTIVE_MODELING"], [82, 3, 1, "", "PRETRAINED_MODELS"], [82, 3, 1, "", "SENTENCE_BOUNDARY_DETECTION"], [82, 3, 1, "", "SENTIMENT_DETECTION"], [82, 3, 1, "", "THEME_ANALYSIS"]], "abacusai.PythonFunctionArgument": [[82, 3, 1, "", "is_required"], [82, 3, 1, "", "name"], [82, 3, 1, "", "pipeline_variable"], [82, 3, 1, "", "value"], [82, 3, 1, "", "variable_type"]], "abacusai.PythonFunctionArgumentType": [[82, 3, 1, "", "BATCH_PREDICTION_ID"], [82, 3, 1, "", "BOOLEAN"], [82, 3, 1, "", "DATASET_ID"], [82, 3, 1, "", "DEPLOYMENT_ID"], [82, 3, 1, "", "FEATURE_GROUP"], [82, 3, 1, "", "FEATURE_GROUP_ID"], [82, 3, 1, "", "FLOAT"], [82, 3, 1, "", "INTEGER"], [82, 3, 1, "", "JSON"], [82, 3, 1, "", "LIST"], [82, 3, 1, "", "MODEL_ID"], [82, 3, 1, "", "MONITOR_ID"], [82, 3, 1, "", "STRING"]], "abacusai.ReadOnlyClient": [[82, 2, 1, "", "delete_graph_from_dashboard"], [82, 2, 1, "", "describe_algorithm"], [82, 2, 1, "", "describe_batch_prediction"], [82, 2, 1, "", "describe_batch_prediction_version"], [82, 2, 1, "", "describe_custom_loss_function"], [82, 2, 1, "", "describe_custom_metric"], [82, 2, 1, "", "describe_custom_metric_version"], [82, 2, 1, "", "describe_dataset"], [82, 2, 1, "", "describe_dataset_version"], [82, 2, 1, "", "describe_deployment"], [82, 2, 1, "", "describe_eda"], [82, 2, 1, "", "describe_eda_version"], [82, 2, 1, "", "describe_feature_group"], [82, 2, 1, "", "describe_feature_group_by_table_name"], [82, 2, 1, "", "describe_feature_group_export"], [82, 2, 1, "", "describe_feature_group_template"], [82, 2, 1, "", "describe_feature_group_version"], [82, 2, 1, "", "describe_graph_dashboard"], [82, 2, 1, "", "describe_graph_for_dashboard"], [82, 2, 1, "", "describe_model"], [82, 2, 1, "", "describe_model_artifacts_export"], [82, 2, 1, "", "describe_model_monitor"], [82, 2, 1, "", "describe_model_monitor_version"], [82, 2, 1, "", "describe_model_version"], [82, 2, 1, "", "describe_module"], [82, 2, 1, "", "describe_monitor_alert"], [82, 2, 1, "", "describe_monitor_alert_version"], [82, 2, 1, "", "describe_organization_group"], [82, 2, 1, "", "describe_pipeline_step"], [82, 2, 1, "", "describe_pipeline_step_by_name"], [82, 2, 1, "", "describe_pipeline_version"], [82, 2, 1, "", "describe_problem_type"], [82, 2, 1, "", "describe_project"], [82, 2, 1, "", "describe_project_feature_group"], [82, 2, 1, "", "describe_python_function"], [82, 2, 1, "", "describe_refresh_pipeline_run"], [82, 2, 1, "", "describe_refresh_policy"], [82, 2, 1, "", "describe_train_test_data_split_feature_group"], [82, 2, 1, "", "describe_train_test_data_split_feature_group_version"], [82, 2, 1, "", "describe_upload"], [82, 2, 1, "", "describe_use_case_requirements"], [82, 2, 1, "", "describe_user"], [82, 2, 1, "", "describe_vector_store"], [82, 2, 1, "", "describe_vector_store_by_name"], [82, 2, 1, "", "describe_vector_store_version"], [82, 2, 1, "", "describe_webhook"], [82, 2, 1, "", "download_batch_prediction_result_chunk"], [82, 2, 1, "", "download_execute_feature_group_operation_result_part_chunk"], [82, 2, 1, "", "execute_async_feature_group_operation"], [82, 2, 1, "", "export_custom_model_version"], [82, 2, 1, "", "generate_natural_language_explanation"], [82, 2, 1, "", "get_annotations_status"], [82, 2, 1, "", "get_api_endpoint"], [82, 2, 1, "", "get_batch_prediction_connector_errors"], [82, 2, 1, "", "get_chat_session"], [82, 2, 1, "", "get_collinearity_for_feature"], [82, 2, 1, "", "get_database_connector_object_schema"], [82, 2, 1, "", "get_dataset_schema"], [82, 2, 1, "", "get_dataset_version_metrics"], [82, 2, 1, "", "get_deployment_conversation"], [82, 2, 1, "", "get_docstore_document"], [82, 2, 1, "", "get_docstore_image"], [82, 2, 1, "", "get_drift_for_feature"], [82, 2, 1, "", "get_eda_collinearity"], [82, 2, 1, "", "get_eda_data_consistency"], [82, 2, 1, "", "get_eda_forecasting_analysis"], [82, 2, 1, "", "get_execute_feature_group_operation_result_part_count"], [82, 2, 1, "", "get_feature_association"], [82, 2, 1, "", "get_feature_group_export_connector_errors"], [82, 2, 1, "", "get_feature_group_schema"], [82, 2, 1, "", "get_feature_group_version_export_download_url"], [82, 2, 1, "", "get_feature_group_version_metrics"], [82, 2, 1, "", "get_feature_importance_by_model_version"], [82, 2, 1, "", "get_file_connector_instructions"], [82, 2, 1, "", "get_materialization_logs"], [82, 2, 1, "", "get_model_metrics"], [82, 2, 1, "", "get_model_monitor_chart_from_organization"], [82, 2, 1, "", "get_model_monitor_summary"], [82, 2, 1, "", "get_model_monitor_summary_from_organization"], [82, 2, 1, "", "get_model_monitoring_logs"], [82, 2, 1, "", "get_model_training_types_for_deployment"], [82, 2, 1, "", "get_natural_language_explanation"], [82, 2, 1, "", "get_outliers_for_batch_prediction_feature"], [82, 2, 1, "", "get_outliers_for_feature"], [82, 2, 1, "", "get_prediction_drift"], [82, 2, 1, "", "get_project_feature_group_config"], [82, 2, 1, "", "get_recent_feature_group_streamed_data"], [82, 2, 1, "", "get_step_version_logs"], [82, 2, 1, "", "get_training_data_logs"], [82, 2, 1, "", "get_training_logs"], [82, 2, 1, "", "infer_feature_mappings"], [82, 2, 1, "", "list_algorithms"], [82, 2, 1, "", "list_api_keys"], [82, 2, 1, "", "list_application_connector_objects"], [82, 2, 1, "", "list_application_connectors"], [82, 2, 1, "", "list_batch_prediction_versions"], [82, 2, 1, "", "list_batch_predictions"], [82, 2, 1, "", "list_chat_sessions"], [82, 2, 1, "", "list_custom_loss_functions"], [82, 2, 1, "", "list_custom_metrics"], [82, 2, 1, "", "list_database_connector_objects"], [82, 2, 1, "", "list_database_connectors"], [82, 2, 1, "", "list_dataset_versions"], [82, 2, 1, "", "list_datasets"], [82, 2, 1, "", "list_deployment_conversations"], [82, 2, 1, "", "list_deployment_tokens"], [82, 2, 1, "", "list_deployment_webhooks"], [82, 2, 1, "", "list_deployments"], [82, 2, 1, "", "list_eda"], [82, 2, 1, "", "list_eda_versions"], [82, 2, 1, "", "list_feature_group_exports"], [82, 2, 1, "", "list_feature_group_modifiers"], [82, 2, 1, "", "list_feature_group_templates"], [82, 2, 1, "", "list_feature_group_versions"], [82, 2, 1, "", "list_feature_groups"], [82, 2, 1, "", "list_file_connectors"], [82, 2, 1, "", "list_graph_dashboards"], [82, 2, 1, "", "list_model_artifacts_exports"], [82, 2, 1, "", "list_model_monitor_versions"], [82, 2, 1, "", "list_model_monitors"], [82, 2, 1, "", "list_model_versions"], [82, 2, 1, "", "list_models"], [82, 2, 1, "", "list_modules"], [82, 2, 1, "", "list_monitor_alert_versions_for_monitor_version"], [82, 2, 1, "", "list_monitor_alerts_for_monitor"], [82, 2, 1, "", "list_organization_groups"], [82, 2, 1, "", "list_organization_model_monitors"], [82, 2, 1, "", "list_organization_users"], [82, 2, 1, "", "list_pipeline_version_logs"], [82, 2, 1, "", "list_pipelines"], [82, 2, 1, "", "list_project_feature_group_templates"], [82, 2, 1, "", "list_project_feature_groups"], [82, 2, 1, "", "list_projects"], [82, 2, 1, "", "list_python_function_feature_groups"], [82, 2, 1, "", "list_python_functions"], [82, 2, 1, "", "list_refresh_pipeline_runs"], [82, 2, 1, "", "list_refresh_policies"], [82, 2, 1, "", "list_streaming_connectors"], [82, 2, 1, "", "list_streaming_tokens"], [82, 2, 1, "", "list_uploads"], [82, 2, 1, "", "list_use_cases"], [82, 2, 1, "", "list_vector_store_versions"], [82, 2, 1, "", "list_vector_stores"], [82, 2, 1, "", "model_monitor_version_metric_data"], [82, 2, 1, "", "pause_pipeline_refresh_schedule"], [82, 2, 1, "", "query_feature_group_code_generator"], [82, 2, 1, "", "render_feature_group_data_for_llm"], [82, 2, 1, "", "resume_pipeline_refresh_schedule"], [82, 2, 1, "", "search_feature_groups"], [82, 2, 1, "", "set_dataset_database_connector_config"], [82, 2, 1, "", "set_default_model_algorithm"], [82, 2, 1, "", "set_model_objective"], [82, 2, 1, "", "suggest_feature_group_template_for_feature_group"], [82, 2, 1, "", "unset_pipeline_refresh_schedule"], [82, 2, 1, "", "validate_project"], [82, 2, 1, "", "verify_and_describe_annotation"]], "abacusai.RegressionAugmentationStrategy": [[82, 3, 1, "", "RESAMPLE"], [82, 3, 1, "", "SMOTE"]], "abacusai.RegressionLossFunction": [[82, 3, 1, "", "AUTOMATIC"], [82, 3, 1, "", "CROSS_ENTROPY"], [82, 3, 1, "", "CUSTOM"], [82, 3, 1, "", "FOCAL_CROSS_ENTROPY"], [82, 3, 1, "", "HUBER"], [82, 3, 1, "", "MAE"], [82, 3, 1, "", "MAPE"], [82, 3, 1, "", "MSE"], [82, 3, 1, "", "MSLE"], [82, 3, 1, "", "TWEEDIE"]], "abacusai.RegressionObjective": [[82, 3, 1, "", "ACCURACY"], [82, 3, 1, "", "AUC"], [82, 3, 1, "", "F1_SCORE"], [82, 3, 1, "", "LOG_LOSS"], [82, 3, 1, "", "MAE"], [82, 3, 1, "", "MAPE"], [82, 3, 1, "", "PRECISION"], [82, 3, 1, "", "RECALL"], [82, 3, 1, "", "RMSE"], [82, 3, 1, "", "R_SQUARED_COEFFICIENT_OF_DETERMINATION"], [82, 3, 1, "", "WAPE"]], "abacusai.RegressionTargetTransform": [[82, 3, 1, "", "BOX_COX"], [82, 3, 1, "", "LOG"], [82, 3, 1, "", "QUANTILE"], [82, 3, 1, "", "YEO_JOHNSON"]], "abacusai.RegressionTimeSplitMethod": [[82, 3, 1, "", "TEST_SPLIT_PERCENTAGE_BASED"], [82, 3, 1, "", "TEST_START_TIMESTAMP_BASED"]], "abacusai.RegressionTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "active_labels_column"], [82, 3, 1, "", "augmentation_strategy"], [82, 3, 1, "", "batch_size"], [82, 3, 1, "", "custom_loss_functions"], [82, 3, 1, "", "custom_metrics"], [82, 3, 1, "", "data_split_feature_group_table_name"], [82, 3, 1, "", "disable_test_val_fold"], [82, 3, 1, "", "drop_original_categoricals"], [82, 3, 1, "", "dropout_rate"], [82, 3, 1, "", "feature_selection_intensity"], [82, 3, 1, "", "ignore_datetime_features"], [82, 3, 1, "", "is_multilingual"], [82, 3, 1, "", "k_fold_cross_validation"], [82, 3, 1, "", "loss_function"], [82, 3, 1, "", "loss_parameters"], [82, 3, 1, "", "max_text_words"], [82, 3, 1, "", "min_categorical_count"], [82, 3, 1, "", "num_cv_folds"], [82, 3, 1, "", "numeric_clipping_percentile"], [82, 3, 1, "", "objective"], [82, 3, 1, "", "perform_feature_selection"], [82, 3, 1, "", "pretrained_model_name"], [82, 3, 1, "", "rare_class_augmentation_threshold"], [82, 3, 1, "", "rebalance_classes"], [82, 3, 1, "", "sample_weight"], [82, 3, 1, "", "sampling_unit_keys"], [82, 3, 1, "", "sort_objective"], [82, 3, 1, "", "target_encode_categoricals"], [82, 3, 1, "", "target_transform"], [82, 3, 1, "", "test_row_indicator"], [82, 3, 1, "", "test_split"], [82, 3, 1, "", "test_splitting_timestamp"], [82, 3, 1, "", "timestamp_based_splitting_column"], [82, 3, 1, "", "timestamp_based_splitting_method"], [82, 3, 1, "", "training_rows_downsample_ratio"], [82, 3, 1, "", "tree_hpo_mode"], [82, 3, 1, "", "type_of_split"]], "abacusai.RegressionTreeHPOMode": [[82, 3, 1, "", "RAPID"], [82, 3, 1, "", "THOROUGH"]], "abacusai.RegressionTypeOfSplit": [[82, 3, 1, "", "RANDOM"], [82, 3, 1, "", "ROW_INDICATOR_BASED"], [82, 3, 1, "", "TIMESTAMP_BASED"]], "abacusai.SamplingConfig": [[82, 2, 1, "", "__post_init__"]], "abacusai.SamplingMethodType": [[82, 3, 1, "", "N_SAMPLING"], [82, 3, 1, "", "PERCENT_SAMPLING"]], "abacusai.SentenceBoundaryDetectionTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "batch_size"], [82, 3, 1, "", "dropout_rate"], [82, 3, 1, "", "test_split"]], "abacusai.SentimentDetectionTrainingConfig": [[82, 2, 1, "", "__post_init__"], [82, 3, 1, "", "batch_size"], [82, 3, 1, "", "compute_metrics"], [82, 3, 1, "", "dropout_rate"], [82, 3, 1, "", "sentiment_type"], [82, 3, 1, "", "test_split"]], "abacusai.SentimentType": [[82, 3, 1, "", "EMOTION"], [82, 3, 1, "", "VALENCE"]], "abacusai.StreamingClient": [[82, 2, 1, "", "append_data"], [82, 2, 1, "", "append_multiple_data"], [82, 2, 1, "", "delete_item_embeddings"], [82, 2, 1, "", "upsert_data"], [82, 2, 1, "", "upsert_item_embeddings"], [82, 2, 1, "", "upsert_multiple_data"], [82, 2, 1, "", "upsert_multiple_item_embeddings"]], "abacusai.ThemeAnalysisTrainingConfig": [[82, 2, 1, "", "__post_init__"]], "abacusai.TimeWindowMergeConfig": [[82, 3, 1, "", "feature_name"], [82, 3, 1, "", "merge_mode"], [82, 3, 1, "", "time_window_size_ms"]], "abacusai.TrainingConfig": [[82, 3, 1, "", "_support_kwargs"], [82, 3, 1, "", "_upper_snake_case_keys"], [82, 3, 1, "", "algorithm"], [82, 3, 1, "", "kwargs"], [82, 3, 1, "", "problem_type"]], "abacusai.VectorStoreConfig": [[82, 3, 1, "", "chunk_overlap_fraction"], [82, 3, 1, "", "chunk_size"], [82, 3, 1, "", "text_encoder"]], "abacusai.VectorStoreTextEncoder": [[82, 3, 1, "", "E5"], [82, 3, 1, "", "E5_SMALL"], [82, 3, 1, "", "OPENAI"], [82, 3, 1, "", "SENTENCE_BERT"]], "abacusai._ApiClassFactory": [[82, 3, 1, "", "config_abstract_class"], [82, 3, 1, "", "config_class_key"], [82, 3, 1, "", "config_class_map"], [82, 2, 1, "", "from_dict"]], "abacusai._FeatureGroupExportConfigFactory": [[82, 3, 1, "", "config_abstract_class"], [82, 3, 1, "", "config_class_key"], [82, 3, 1, "", "config_class_map"]], "abacusai._MergeConfigFactory": [[82, 3, 1, "", "config_class_key"], [82, 3, 1, "", "config_class_map"]], "abacusai._SamplingConfigFactory": [[82, 3, 1, "", "config_class_key"], [82, 3, 1, "", "config_class_map"]], "abacusai._TrainingConfigFactory": [[82, 3, 1, "", "config_abstract_class"], [82, 3, 1, "", "config_class_key"], [82, 3, 1, "", "config_class_map"]], "abacusai.algorithm": [[0, 1, 1, "", "Algorithm"]], "abacusai.algorithm.Algorithm": [[0, 2, 1, "", "__repr__"], [0, 2, 1, "", "to_dict"]], "abacusai.annotation": [[1, 1, 1, "", "Annotation"]], "abacusai.annotation.Annotation": [[1, 2, 1, "", "__repr__"], [1, 2, 1, "", "to_dict"]], "abacusai.annotation_config": [[2, 1, 1, "", "AnnotationConfig"]], "abacusai.annotation_config.AnnotationConfig": [[2, 2, 1, "", "__repr__"], [2, 2, 1, "", "to_dict"]], "abacusai.annotation_entry": [[3, 1, 1, "", "AnnotationEntry"]], "abacusai.annotation_entry.AnnotationEntry": [[3, 2, 1, "", "__repr__"], [3, 2, 1, "", "to_dict"]], "abacusai.annotations_status": [[4, 1, 1, "", "AnnotationsStatus"]], "abacusai.annotations_status.AnnotationsStatus": [[4, 2, 1, "", "__repr__"], [4, 2, 1, "", "to_dict"]], "abacusai.api_class": [[9, 1, 1, "", "AIAgentTrainingConfig"], [9, 1, 1, "", "AnomalyDetectionTrainingConfig"], [9, 1, 1, "id34", "ApiClass"], [9, 1, 1, "", "ApiEnum"], [9, 1, 1, "", "BatchSize"], [9, 1, 1, "", "ChatLLMTrainingConfig"], [9, 1, 1, "", "ClusteringImputationMethod"], [9, 1, 1, "", "ClusteringTimeseriesTrainingConfig"], [9, 1, 1, "", "ClusteringTrainingConfig"], [9, 1, 1, "", "ConnectorType"], [9, 1, 1, "", "CumulativeForecastingTrainingConfig"], [9, 1, 1, "", "CustomAlgorithmTrainingConfig"], [9, 1, 1, "", "CustomTrainedModelTrainingConfig"], [9, 1, 1, "", "DatabaseConnectorExportConfig"], [9, 1, 1, "", "DocumentClassificationTrainingConfig"], [9, 1, 1, "", "DocumentSummarizationTrainingConfig"], [9, 1, 1, "", "DocumentVisualizationTrainingConfig"], [9, 1, 1, "", "ExperimentationMode"], [9, 1, 1, "", "FeatureGroupExportConfig"], [9, 1, 1, "", "FileConnectorExportConfig"], [9, 1, 1, "", "FillLogic"], [9, 1, 1, "", "ForecastingDataSplitType"], [9, 1, 1, "", "ForecastingFillMethod"], [9, 1, 1, "", "ForecastingFrequency"], [9, 1, 1, "", "ForecastingLocalScaling"], [9, 1, 1, "", "ForecastingLossFunction"], [9, 1, 1, "", "ForecastingObjective"], [9, 1, 1, "", "ForecastingQuanitlesExtensionMethod"], [9, 1, 1, "", "ForecastingTrainingConfig"], [9, 1, 1, "", "HolidayCalendars"], [9, 1, 1, "", "LastNMergeConfig"], [9, 1, 1, "", "MergeConfig"], [9, 1, 1, "", "MergeMode"], [9, 1, 1, "", "NERModelType"], [9, 1, 1, "", "NERObjective"], [9, 1, 1, "", "NLPDocumentFormat"], [9, 1, 1, "", "NSamplingConfig"], [9, 1, 1, "", "NamedEntityExtractionTrainingConfig"], [9, 1, 1, "", "NaturalLanguageSearchTrainingConfig"], [9, 1, 1, "", "OptimizationTrainingConfig"], [9, 1, 1, "", "OutputVariableMapping"], [9, 1, 1, "", "ParsingConfig"], [9, 1, 1, "", "PercentSamplingConfig"], [9, 1, 1, "", "PersonalizationObjective"], [9, 1, 1, "", "PersonalizationTrainingConfig"], [9, 1, 1, "", "PersonalizationTrainingMode"], [9, 1, 1, "", "ProblemType"], [9, 1, 1, "", "PythonFunctionArgument"], [9, 1, 1, "", "PythonFunctionArgumentType"], [9, 1, 1, "", "RegressionAugmentationStrategy"], [9, 1, 1, "", "RegressionLossFunction"], [9, 1, 1, "", "RegressionObjective"], [9, 1, 1, "", "RegressionTargetTransform"], [9, 1, 1, "", "RegressionTimeSplitMethod"], [9, 1, 1, "", "RegressionTrainingConfig"], [9, 1, 1, "", "RegressionTreeHPOMode"], [9, 1, 1, "", "RegressionTypeOfSplit"], [9, 1, 1, "", "SamplingConfig"], [9, 1, 1, "", "SamplingMethodType"], [9, 1, 1, "", "SentenceBoundaryDetectionTrainingConfig"], [9, 1, 1, "", "SentimentDetectionTrainingConfig"], [9, 1, 1, "", "SentimentType"], [9, 1, 1, "", "ThemeAnalysisTrainingConfig"], [9, 1, 1, "", "TimeWindowMergeConfig"], [9, 1, 1, "", "TrainingConfig"], [9, 1, 1, "", "VectorStoreConfig"], [9, 1, 1, "id40", "VectorStoreTextEncoder"], [9, 1, 1, "id29", "_ApiClassFactory"], [9, 1, 1, "", "_FeatureGroupExportConfigFactory"], [9, 1, 1, "", "_MergeConfigFactory"], [9, 1, 1, "", "_SamplingConfigFactory"], [9, 1, 1, "", "_TrainingConfigFactory"], [5, 0, 0, "-", "abstract"], [6, 0, 0, "-", "dataset"], [7, 0, 0, "-", "enums"], [8, 0, 0, "-", "feature_group"], [10, 0, 0, "-", "model"], [11, 0, 0, "-", "project"], [12, 0, 0, "-", "python_functions"], [13, 0, 0, "-", "refresh"], [14, 0, 0, "-", "vector_store"]], "abacusai.api_class.AIAgentTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "description"]], "abacusai.api_class.AnomalyDetectionTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "mixture_of_gaussians"], [9, 3, 1, "", "spike_down"], [9, 3, 1, "", "spike_up"], [9, 3, 1, "", "test_split"], [9, 3, 1, "", "trend_change"], [9, 3, 1, "", "value_high"], [9, 3, 1, "", "variational_autoencoder"]], "abacusai.api_class.ApiClass": [[9, 2, 1, "id37", "__post_init__"], [9, 3, 1, "id36", "_support_kwargs"], [9, 3, 1, "id35", "_upper_snake_case_keys"], [9, 2, 1, "id39", "from_dict"], [9, 2, 1, "id38", "to_dict"]], "abacusai.api_class.ApiEnum": [[9, 2, 1, "", "__eq__"], [9, 2, 1, "", "__hash__"]], "abacusai.api_class.BatchSize": [[9, 3, 1, "", "BATCH_1024"], [9, 3, 1, "", "BATCH_128"], [9, 3, 1, "", "BATCH_16"], [9, 3, 1, "", "BATCH_256"], [9, 3, 1, "", "BATCH_32"], [9, 3, 1, "", "BATCH_384"], [9, 3, 1, "", "BATCH_512"], [9, 3, 1, "", "BATCH_64"], [9, 3, 1, "", "BATCH_740"], [9, 3, 1, "", "BATCH_8"]], "abacusai.api_class.ChatLLMTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "llm_name"], [9, 3, 1, "", "num_completion_tokens"], [9, 3, 1, "", "system_message"], [9, 3, 1, "", "temperature"], [9, 3, 1, "", "vector_stores"]], "abacusai.api_class.ClusteringImputationMethod": [[9, 3, 1, "", "AUTOMATIC"], [9, 3, 1, "", "INTERPOLATE"], [9, 3, 1, "", "ZEROS"]], "abacusai.api_class.ClusteringTimeseriesTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "imputation"], [9, 3, 1, "", "num_clusters_selection"]], "abacusai.api_class.ClusteringTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "num_clusters_selection"]], "abacusai.api_class.ConnectorType": [[9, 3, 1, "", "APPLICATION"], [9, 3, 1, "", "DATABASE"], [9, 3, 1, "", "FILE"], [9, 3, 1, "", "STREAMING"]], "abacusai.api_class.CumulativeForecastingTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "cumulative_prediction_lengths"], [9, 3, 1, "", "historical_frequency"], [9, 3, 1, "", "predict_residuals"], [9, 3, 1, "", "skip_input_transform"], [9, 3, 1, "", "skip_target_transform"], [9, 3, 1, "", "test_split"]], "abacusai.api_class.CustomAlgorithmTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "predict_function_name"], [9, 3, 1, "", "predict_many_function_name"], [9, 3, 1, "", "predict_module_name"], [9, 3, 1, "", "test_split"], [9, 3, 1, "", "train_function_name"], [9, 3, 1, "", "train_module_name"], [9, 3, 1, "", "training_input_tables"]], "abacusai.api_class.CustomTrainedModelTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "docker_image_uri"], [9, 3, 1, "", "index_output_path"], [9, 3, 1, "", "max_catalog_size"], [9, 3, 1, "", "max_dimension"], [9, 3, 1, "", "service_port"]], "abacusai.api_class.DatabaseConnectorExportConfig": [[9, 3, 1, "", "additional_id_columns"], [9, 3, 1, "", "connector_type"], [9, 3, 1, "", "data_columns"], [9, 3, 1, "", "database_connector_id"], [9, 3, 1, "", "id_column"], [9, 3, 1, "", "mode"], [9, 3, 1, "", "object_name"], [9, 2, 1, "", "to_dict"]], "abacusai.api_class.DocumentClassificationTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "batch_size"], [9, 3, 1, "", "dropout_rate"], [9, 3, 1, "", "test_split"], [9, 3, 1, "", "zero_shot_hypotheses"]], "abacusai.api_class.DocumentSummarizationTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "batch_size"], [9, 3, 1, "", "dropout_rate"], [9, 3, 1, "", "test_split"]], "abacusai.api_class.DocumentVisualizationTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "batch_size"], [9, 3, 1, "", "dropout_rate"], [9, 3, 1, "", "test_split"]], "abacusai.api_class.ExperimentationMode": [[9, 3, 1, "", "RAPID"], [9, 3, 1, "", "THOROUGH"]], "abacusai.api_class.FeatureGroupExportConfig": [[9, 3, 1, "", "connector_type"]], "abacusai.api_class.FileConnectorExportConfig": [[9, 3, 1, "", "connector_type"], [9, 3, 1, "", "export_file_format"], [9, 3, 1, "", "location"], [9, 2, 1, "", "to_dict"]], "abacusai.api_class.FillLogic": [[9, 3, 1, "", "AVERAGE"], [9, 3, 1, "", "BACKFILL"], [9, 3, 1, "", "CUSTOM"], [9, 3, 1, "", "FORWARDFILL"], [9, 3, 1, "", "LINEAR"], [9, 3, 1, "", "MAX"], [9, 3, 1, "", "MEDIAN"], [9, 3, 1, "", "MIN"], [9, 3, 1, "", "NEAREST"]], "abacusai.api_class.ForecastingDataSplitType": [[9, 3, 1, "", "AUTO"], [9, 3, 1, "", "ITEM"], [9, 3, 1, "", "PREDICTION_LENGTH"], [9, 3, 1, "", "TIMESTAMP"]], "abacusai.api_class.ForecastingFillMethod": [[9, 3, 1, "", "BACK"], [9, 3, 1, "", "FUTURE"], [9, 3, 1, "", "MIDDLE"]], "abacusai.api_class.ForecastingFrequency": [[9, 3, 1, "", "DAILY"], [9, 3, 1, "", "HOURLY"], [9, 3, 1, "", "MONTH_END"], [9, 3, 1, "", "MONTH_START"], [9, 3, 1, "", "QUARTER_END"], [9, 3, 1, "", "QUARTER_START"], [9, 3, 1, "", "WEEKLY_MONDAY_START"], [9, 3, 1, "", "WEEKLY_SATURDAY_START"], [9, 3, 1, "", "WEEKLY_SUNDAY_START"], [9, 3, 1, "", "YEARLY"]], "abacusai.api_class.ForecastingLocalScaling": [[9, 3, 1, "", "ITEM"], [9, 3, 1, "", "LAST_POINT"], [9, 3, 1, "", "MIN_MAX"], [9, 3, 1, "", "MIN_STD"], [9, 3, 1, "", "ROBUST"], [9, 3, 1, "", "SLIDING_ZSCORE"], [9, 3, 1, "", "ZSCORE"]], "abacusai.api_class.ForecastingLossFunction": [[9, 3, 1, "", "ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [9, 3, 1, "", "CUSTOM"], [9, 3, 1, "", "GAUSSIAN"], [9, 3, 1, "", "GAUSSIAN_FULL_COVARIANCE"], [9, 3, 1, "", "GUASSIAN_EXPONENTIAL"], [9, 3, 1, "", "LOG_ROOT_MEAN_SQUARE_ERROR"], [9, 3, 1, "", "MEAN_ABSOLUTE_ERROR"], [9, 3, 1, "", "MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [9, 3, 1, "", "MIX_GAUSSIANS"], [9, 3, 1, "", "NEGATIVE_BINOMIAL"], [9, 3, 1, "", "NORMALIZED_MEAN_ABSOLUTE_ERROR"], [9, 3, 1, "", "NORMALIZED_ROOT_MEAN_SQUARE_ERROR"], [9, 3, 1, "", "PEAKS_MEAN_ABSOLUTE_ERROR"], [9, 3, 1, "", "POINTWISE_ACCURACY"], [9, 3, 1, "", "ROOT_MEAN_SQUARE_ERROR"], [9, 3, 1, "", "STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [9, 3, 1, "", "WEIBULL"]], "abacusai.api_class.ForecastingObjective": [[9, 3, 1, "", "ACCURACY"], [9, 3, 1, "", "BIAS"], [9, 3, 1, "", "CMAPE"], [9, 3, 1, "", "CV"], [9, 3, 1, "", "MAPE"], [9, 3, 1, "", "RMSE"], [9, 3, 1, "", "SRMSE"], [9, 3, 1, "", "WAPE"]], "abacusai.api_class.ForecastingQuanitlesExtensionMethod": [[9, 3, 1, "", "ANCESTRAL_SIMULATION"], [9, 3, 1, "", "DIRECT"], [9, 3, 1, "", "QUADRATIC"]], "abacusai.api_class.ForecastingTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "additional_forecast_keys"], [9, 3, 1, "", "backtesting_window_step_size"], [9, 3, 1, "", "batch_renormalization"], [9, 3, 1, "", "batch_size"], [9, 3, 1, "", "convolution_filters"], [9, 3, 1, "", "convolutional_layers"], [9, 3, 1, "", "custom_loss_functions"], [9, 3, 1, "", "custom_metrics"], [9, 3, 1, "", "data_split_feature_group_table_name"], [9, 3, 1, "", "datetime_holiday_calendars"], [9, 3, 1, "", "disable_networks_without_analytic_quantiles"], [9, 3, 1, "", "dropout_rate"], [9, 3, 1, "", "enable_clustering"], [9, 3, 1, "", "enable_cold_start"], [9, 3, 1, "", "enable_feature_selection"], [9, 3, 1, "", "enable_multiple_backtests"], [9, 3, 1, "", "experimentation_mode"], [9, 3, 1, "", "fill_missing_values"], [9, 3, 1, "", "filter_items"], [9, 3, 1, "", "force_prediction_length"], [9, 3, 1, "", "forecast_frequency"], [9, 3, 1, "", "full_data_retraining"], [9, 3, 1, "", "handle_zeros_as_missing_values"], [9, 3, 1, "", "history_length"], [9, 3, 1, "", "initial_learning_rate"], [9, 3, 1, "", "item_attributes_weight_column"], [9, 3, 1, "", "l2_regularization_factor"], [9, 3, 1, "", "local_scaling_mode"], [9, 3, 1, "", "loss_function"], [9, 3, 1, "", "max_scale_context"], [9, 3, 1, "", "num_backtesting_windows"], [9, 3, 1, "", "number_of_samples"], [9, 3, 1, "", "objective"], [9, 3, 1, "", "prediction_length"], [9, 3, 1, "", "prediction_step_size"], [9, 3, 1, "", "probability_quantiles"], [9, 3, 1, "", "quantiles_extension_method"], [9, 3, 1, "", "recurrent_layers"], [9, 3, 1, "", "recurrent_units"], [9, 3, 1, "", "skip_local_scale_target"], [9, 3, 1, "", "skip_missing"], [9, 3, 1, "", "skip_timeseries_weight_scaling"], [9, 3, 1, "", "smooth_history"], [9, 3, 1, "", "sort_objective"], [9, 3, 1, "", "symmetrize_quantiles"], [9, 3, 1, "", "test_by_item"], [9, 3, 1, "", "test_split"], [9, 3, 1, "", "test_start"], [9, 3, 1, "", "timeseries_loss_weight_column"], [9, 3, 1, "", "timeseries_weight_column"], [9, 3, 1, "", "training_point_overlap"], [9, 3, 1, "", "type_of_split"], [9, 3, 1, "", "underprediction_weight"], [9, 3, 1, "", "use_all_item_totals"], [9, 3, 1, "", "use_item_id"], [9, 3, 1, "", "use_item_weights_in_objective"], [9, 3, 1, "", "use_log_transforms"], [9, 3, 1, "", "use_timeseries_weights_in_objective"], [9, 3, 1, "", "zero_predictor"]], "abacusai.api_class.HolidayCalendars": [[9, 3, 1, "", "AU"], [9, 3, 1, "", "UK"], [9, 3, 1, "", "US"]], "abacusai.api_class.LastNMergeConfig": [[9, 3, 1, "", "merge_mode"], [9, 3, 1, "", "num_versions"]], "abacusai.api_class.MergeConfig": [[9, 2, 1, "", "__post_init__"]], "abacusai.api_class.MergeMode": [[9, 3, 1, "", "LAST_N"], [9, 3, 1, "", "TIME_WINDOW"]], "abacusai.api_class.NERModelType": [[9, 3, 1, "", "LEARNED"], [9, 3, 1, "", "PRETRAINED_BERT"], [9, 3, 1, "", "PRETRAINED_MULTILINGUAL"], [9, 3, 1, "", "PRETRAINED_ROBERTA_27"], [9, 3, 1, "", "PRETRAINED_ROBERTA_43"]], "abacusai.api_class.NERObjective": [[9, 3, 1, "", "ANNOTATIONS_PRECISION"], [9, 3, 1, "", "ANNOTATIONS_RECALL"], [9, 3, 1, "", "AUC"], [9, 3, 1, "", "LOG_LOSS"], [9, 3, 1, "", "PRECISION"], [9, 3, 1, "", "RECALL"]], "abacusai.api_class.NLPDocumentFormat": [[9, 3, 1, "", "AUTO"], [9, 3, 1, "", "DOC"], [9, 3, 1, "", "TEXT"], [9, 3, 1, "", "TOKENS"]], "abacusai.api_class.NSamplingConfig": [[9, 3, 1, "", "key_columns"], [9, 3, 1, "", "sample_count"], [9, 3, 1, "", "sampling_method"]], "abacusai.api_class.NamedEntityExtractionTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "active_labels_column"], [9, 3, 1, "", "batch_size"], [9, 3, 1, "", "document_format"], [9, 3, 1, "", "dropout_rate"], [9, 3, 1, "", "include_longformer"], [9, 3, 1, "", "ner_model_type"], [9, 3, 1, "", "objective"], [9, 3, 1, "", "sort_objective"], [9, 3, 1, "", "test_row_indicator"], [9, 3, 1, "", "test_split"]], "abacusai.api_class.NaturalLanguageSearchTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "abacus_internal_model"], [9, 3, 1, "", "chunk_overlap_fraction"], [9, 3, 1, "", "index_fraction"], [9, 3, 1, "", "larger_embeddings"], [9, 3, 1, "", "num_completion_tokens"], [9, 3, 1, "", "search_chunk_size"]], "abacusai.api_class.OptimizationTrainingConfig": [[9, 2, 1, "", "__post_init__"]], "abacusai.api_class.OutputVariableMapping": [[9, 3, 1, "", "name"], [9, 3, 1, "", "variable_type"]], "abacusai.api_class.ParsingConfig": [[9, 3, 1, "", "csv_delimiter"], [9, 3, 1, "", "escape"], [9, 3, 1, "", "file_path_with_schema"]], "abacusai.api_class.PercentSamplingConfig": [[9, 3, 1, "", "key_columns"], [9, 3, 1, "", "sample_percent"], [9, 3, 1, "", "sampling_method"]], "abacusai.api_class.PersonalizationObjective": [[9, 3, 1, "", "COVERAGE"], [9, 3, 1, "", "MAP"], [9, 3, 1, "", "MAP_10"], [9, 3, 1, "", "MAP_5"], [9, 3, 1, "", "MRR"], [9, 3, 1, "", "NDCG"], [9, 3, 1, "", "NDCG_10"], [9, 3, 1, "", "NDCG_5"], [9, 3, 1, "", "PERSONALIZATION"]], "abacusai.api_class.PersonalizationTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "add_time_features"], [9, 3, 1, "", "batch_size"], [9, 3, 1, "", "compute_rerank_metrics"], [9, 3, 1, "", "compute_session_metrics"], [9, 3, 1, "", "data_split_feature_group_table_name"], [9, 3, 1, "", "disable_gpu"], [9, 3, 1, "", "disable_timestamp_scalar_features"], [9, 3, 1, "", "disable_transformer"], [9, 3, 1, "", "downsample_item_popularity_percentile"], [9, 3, 1, "", "dropout_rate"], [9, 3, 1, "", "explicit_time_split"], [9, 3, 1, "", "explore_lookback_hours"], [9, 3, 1, "", "filter_history"], [9, 3, 1, "", "full_data_retraining"], [9, 3, 1, "", "item_id_dropout"], [9, 3, 1, "", "max_history_length"], [9, 3, 1, "", "max_user_history_len_percentile"], [9, 3, 1, "", "objective"], [9, 3, 1, "", "recent_days_for_training"], [9, 3, 1, "", "sequential_training"], [9, 3, 1, "", "session_event_types"], [9, 3, 1, "", "sort_objective"], [9, 3, 1, "", "target_action_types"], [9, 3, 1, "", "target_action_weights"], [9, 3, 1, "", "test_last_items_length"], [9, 3, 1, "", "test_on_user_split"], [9, 3, 1, "", "test_row_indicator"], [9, 3, 1, "", "test_split"], [9, 3, 1, "", "test_split_on_last_k_items"], [9, 3, 1, "", "test_window_length_hours"], [9, 3, 1, "", "training_mode"], [9, 3, 1, "", "training_start_date"]], "abacusai.api_class.PersonalizationTrainingMode": [[9, 3, 1, "", "EXPERIMENTAL"], [9, 3, 1, "", "PRODUCTION"]], "abacusai.api_class.ProblemType": [[9, 3, 1, "", "AI_AGENT"], [9, 3, 1, "", "ANOMALY_DETECTION"], [9, 3, 1, "", "ANOMALY_OUTLIERS"], [9, 3, 1, "", "CHAT_LLM"], [9, 3, 1, "", "CLUSTERING"], [9, 3, 1, "", "CLUSTERING_TIMESERIES"], [9, 3, 1, "", "CUMULATIVE_FORECASTING"], [9, 3, 1, "", "CUSTOM_ALGORITHM"], [9, 3, 1, "", "CUSTOM_TRAINED_MODEL"], [9, 3, 1, "", "DOCUMENT_CLASSIFICATION"], [9, 3, 1, "", "DOCUMENT_SUMMARIZATION"], [9, 3, 1, "", "DOCUMENT_VISUALIZATION"], [9, 3, 1, "", "FEATURE_STORE"], [9, 3, 1, "", "FORECASTING"], [9, 3, 1, "", "IMAGE_CLASSIFICATION"], [9, 3, 1, "", "IMAGE_VALUE_PREDICTION"], [9, 3, 1, "", "LANGUAGE_DETECTION"], [9, 3, 1, "", "MODEL_MONITORING"], [9, 3, 1, "", "NAMED_ENTITY_EXTRACTION"], [9, 3, 1, "", "NATURAL_LANGUAGE_SEARCH"], [9, 3, 1, "", "OBJECT_DETECTION"], [9, 3, 1, "", "OPTIMIZATION"], [9, 3, 1, "", "PERSONALIZATION"], [9, 3, 1, "", "PREDICTIVE_MODELING"], [9, 3, 1, "", "PRETRAINED_MODELS"], [9, 3, 1, "", "SENTENCE_BOUNDARY_DETECTION"], [9, 3, 1, "", "SENTIMENT_DETECTION"], [9, 3, 1, "", "THEME_ANALYSIS"]], "abacusai.api_class.PythonFunctionArgument": [[9, 3, 1, "", "is_required"], [9, 3, 1, "", "name"], [9, 3, 1, "", "pipeline_variable"], [9, 3, 1, "", "value"], [9, 3, 1, "", "variable_type"]], "abacusai.api_class.PythonFunctionArgumentType": [[9, 3, 1, "", "BATCH_PREDICTION_ID"], [9, 3, 1, "", "BOOLEAN"], [9, 3, 1, "", "DATASET_ID"], [9, 3, 1, "", "DEPLOYMENT_ID"], [9, 3, 1, "", "FEATURE_GROUP"], [9, 3, 1, "", "FEATURE_GROUP_ID"], [9, 3, 1, "", "FLOAT"], [9, 3, 1, "", "INTEGER"], [9, 3, 1, "", "JSON"], [9, 3, 1, "", "LIST"], [9, 3, 1, "", "MODEL_ID"], [9, 3, 1, "", "MONITOR_ID"], [9, 3, 1, "", "STRING"]], "abacusai.api_class.RegressionAugmentationStrategy": [[9, 3, 1, "", "RESAMPLE"], [9, 3, 1, "", "SMOTE"]], "abacusai.api_class.RegressionLossFunction": [[9, 3, 1, "", "AUTOMATIC"], [9, 3, 1, "", "CROSS_ENTROPY"], [9, 3, 1, "", "CUSTOM"], [9, 3, 1, "", "FOCAL_CROSS_ENTROPY"], [9, 3, 1, "", "HUBER"], [9, 3, 1, "", "MAE"], [9, 3, 1, "", "MAPE"], [9, 3, 1, "", "MSE"], [9, 3, 1, "", "MSLE"], [9, 3, 1, "", "TWEEDIE"]], "abacusai.api_class.RegressionObjective": [[9, 3, 1, "", "ACCURACY"], [9, 3, 1, "", "AUC"], [9, 3, 1, "", "F1_SCORE"], [9, 3, 1, "", "LOG_LOSS"], [9, 3, 1, "", "MAE"], [9, 3, 1, "", "MAPE"], [9, 3, 1, "", "PRECISION"], [9, 3, 1, "", "RECALL"], [9, 3, 1, "", "RMSE"], [9, 3, 1, "", "R_SQUARED_COEFFICIENT_OF_DETERMINATION"], [9, 3, 1, "", "WAPE"]], "abacusai.api_class.RegressionTargetTransform": [[9, 3, 1, "", "BOX_COX"], [9, 3, 1, "", "LOG"], [9, 3, 1, "", "QUANTILE"], [9, 3, 1, "", "YEO_JOHNSON"]], "abacusai.api_class.RegressionTimeSplitMethod": [[9, 3, 1, "", "TEST_SPLIT_PERCENTAGE_BASED"], [9, 3, 1, "", "TEST_START_TIMESTAMP_BASED"]], "abacusai.api_class.RegressionTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "active_labels_column"], [9, 3, 1, "", "augmentation_strategy"], [9, 3, 1, "", "batch_size"], [9, 3, 1, "", "custom_loss_functions"], [9, 3, 1, "", "custom_metrics"], [9, 3, 1, "", "data_split_feature_group_table_name"], [9, 3, 1, "", "disable_test_val_fold"], [9, 3, 1, "", "drop_original_categoricals"], [9, 3, 1, "", "dropout_rate"], [9, 3, 1, "", "feature_selection_intensity"], [9, 3, 1, "", "ignore_datetime_features"], [9, 3, 1, "", "is_multilingual"], [9, 3, 1, "", "k_fold_cross_validation"], [9, 3, 1, "", "loss_function"], [9, 3, 1, "", "loss_parameters"], [9, 3, 1, "", "max_text_words"], [9, 3, 1, "", "min_categorical_count"], [9, 3, 1, "", "num_cv_folds"], [9, 3, 1, "", "numeric_clipping_percentile"], [9, 3, 1, "", "objective"], [9, 3, 1, "", "perform_feature_selection"], [9, 3, 1, "", "pretrained_model_name"], [9, 3, 1, "", "rare_class_augmentation_threshold"], [9, 3, 1, "", "rebalance_classes"], [9, 3, 1, "", "sample_weight"], [9, 3, 1, "", "sampling_unit_keys"], [9, 3, 1, "", "sort_objective"], [9, 3, 1, "", "target_encode_categoricals"], [9, 3, 1, "", "target_transform"], [9, 3, 1, "", "test_row_indicator"], [9, 3, 1, "", "test_split"], [9, 3, 1, "", "test_splitting_timestamp"], [9, 3, 1, "", "timestamp_based_splitting_column"], [9, 3, 1, "", "timestamp_based_splitting_method"], [9, 3, 1, "", "training_rows_downsample_ratio"], [9, 3, 1, "", "tree_hpo_mode"], [9, 3, 1, "", "type_of_split"]], "abacusai.api_class.RegressionTreeHPOMode": [[9, 3, 1, "", "RAPID"], [9, 3, 1, "", "THOROUGH"]], "abacusai.api_class.RegressionTypeOfSplit": [[9, 3, 1, "", "RANDOM"], [9, 3, 1, "", "ROW_INDICATOR_BASED"], [9, 3, 1, "", "TIMESTAMP_BASED"]], "abacusai.api_class.SamplingConfig": [[9, 2, 1, "", "__post_init__"]], "abacusai.api_class.SamplingMethodType": [[9, 3, 1, "", "N_SAMPLING"], [9, 3, 1, "", "PERCENT_SAMPLING"]], "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "batch_size"], [9, 3, 1, "", "dropout_rate"], [9, 3, 1, "", "test_split"]], "abacusai.api_class.SentimentDetectionTrainingConfig": [[9, 2, 1, "", "__post_init__"], [9, 3, 1, "", "batch_size"], [9, 3, 1, "", "compute_metrics"], [9, 3, 1, "", "dropout_rate"], [9, 3, 1, "", "sentiment_type"], [9, 3, 1, "", "test_split"]], "abacusai.api_class.SentimentType": [[9, 3, 1, "", "EMOTION"], [9, 3, 1, "", "VALENCE"]], "abacusai.api_class.ThemeAnalysisTrainingConfig": [[9, 2, 1, "", "__post_init__"]], "abacusai.api_class.TimeWindowMergeConfig": [[9, 3, 1, "", "feature_name"], [9, 3, 1, "", "merge_mode"], [9, 3, 1, "", "time_window_size_ms"]], "abacusai.api_class.TrainingConfig": [[9, 3, 1, "", "_support_kwargs"], [9, 3, 1, "", "_upper_snake_case_keys"], [9, 3, 1, "", "algorithm"], [9, 3, 1, "", "kwargs"], [9, 3, 1, "", "problem_type"]], "abacusai.api_class.VectorStoreConfig": [[9, 3, 1, "", "chunk_overlap_fraction"], [9, 3, 1, "", "chunk_size"], [9, 3, 1, "", "text_encoder"]], "abacusai.api_class.VectorStoreTextEncoder": [[9, 3, 1, "id42", "E5"], [9, 3, 1, "id43", "E5_SMALL"], [9, 3, 1, "id41", "OPENAI"], [9, 3, 1, "id44", "SENTENCE_BERT"]], "abacusai.api_class._ApiClassFactory": [[9, 3, 1, "id30", "config_abstract_class"], [9, 3, 1, "id31", "config_class_key"], [9, 3, 1, "id32", "config_class_map"], [9, 2, 1, "id33", "from_dict"]], "abacusai.api_class._FeatureGroupExportConfigFactory": [[9, 3, 1, "", "config_abstract_class"], [9, 3, 1, "", "config_class_key"], [9, 3, 1, "", "config_class_map"]], "abacusai.api_class._MergeConfigFactory": [[9, 3, 1, "", "config_class_key"], [9, 3, 1, "", "config_class_map"]], "abacusai.api_class._SamplingConfigFactory": [[9, 3, 1, "", "config_class_key"], [9, 3, 1, "", "config_class_map"]], "abacusai.api_class._TrainingConfigFactory": [[9, 3, 1, "", "config_abstract_class"], [9, 3, 1, "", "config_class_key"], [9, 3, 1, "", "config_class_map"]], "abacusai.api_class.abstract": [[5, 5, 1, "", "ALL_CAP_RE"], [5, 1, 1, "", "ApiClass"], [5, 5, 1, "", "FIRST_CAP_RE"], [5, 1, 1, "", "_ApiClassFactory"], [5, 6, 1, "", "camel_case"], [5, 6, 1, "", "snake_case"], [5, 6, 1, "", "upper_snake_case"]], "abacusai.api_class.abstract.ApiClass": [[5, 2, 1, "", "__post_init__"], [5, 3, 1, "", "_support_kwargs"], [5, 3, 1, "", "_upper_snake_case_keys"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "to_dict"]], "abacusai.api_class.abstract._ApiClassFactory": [[5, 3, 1, "", "config_abstract_class"], [5, 3, 1, "", "config_class_key"], [5, 3, 1, "", "config_class_map"], [5, 2, 1, "", "from_dict"]], "abacusai.api_class.dataset": [[6, 1, 1, "", "ParsingConfig"]], "abacusai.api_class.dataset.ParsingConfig": [[6, 3, 1, "", "csv_delimiter"], [6, 3, 1, "", "escape"], [6, 3, 1, "", "file_path_with_schema"]], "abacusai.api_class.enums": [[7, 1, 1, "", "ApiEnum"], [7, 1, 1, "", "BatchSize"], [7, 1, 1, "", "ClusteringImputationMethod"], [7, 1, 1, "", "ConnectorType"], [7, 1, 1, "", "ExperimentationMode"], [7, 1, 1, "", "FillLogic"], [7, 1, 1, "", "ForecastingDataSplitType"], [7, 1, 1, "", "ForecastingFillMethod"], [7, 1, 1, "", "ForecastingFrequency"], [7, 1, 1, "", "ForecastingLocalScaling"], [7, 1, 1, "", "ForecastingLossFunction"], [7, 1, 1, "", "ForecastingObjective"], [7, 1, 1, "", "ForecastingQuanitlesExtensionMethod"], [7, 1, 1, "", "HolidayCalendars"], [7, 1, 1, "", "MergeMode"], [7, 1, 1, "", "NERModelType"], [7, 1, 1, "", "NERObjective"], [7, 1, 1, "", "NLPDocumentFormat"], [7, 1, 1, "", "PersonalizationObjective"], [7, 1, 1, "", "PersonalizationTrainingMode"], [7, 1, 1, "", "ProblemType"], [7, 1, 1, "", "PythonFunctionArgumentType"], [7, 1, 1, "", "RegressionAugmentationStrategy"], [7, 1, 1, "", "RegressionLossFunction"], [7, 1, 1, "", "RegressionObjective"], [7, 1, 1, "", "RegressionTargetTransform"], [7, 1, 1, "", "RegressionTimeSplitMethod"], [7, 1, 1, "", "RegressionTreeHPOMode"], [7, 1, 1, "", "RegressionTypeOfSplit"], [7, 1, 1, "", "SamplingMethodType"], [7, 1, 1, "", "SentimentType"], [7, 1, 1, "", "VectorStoreTextEncoder"]], "abacusai.api_class.enums.ApiEnum": [[7, 2, 1, "", "__eq__"], [7, 2, 1, "", "__hash__"]], "abacusai.api_class.enums.BatchSize": [[7, 3, 1, "", "BATCH_1024"], [7, 3, 1, "", "BATCH_128"], [7, 3, 1, "", "BATCH_16"], [7, 3, 1, "", "BATCH_256"], [7, 3, 1, "", "BATCH_32"], [7, 3, 1, "", "BATCH_384"], [7, 3, 1, "", "BATCH_512"], [7, 3, 1, "", "BATCH_64"], [7, 3, 1, "", "BATCH_740"], [7, 3, 1, "", "BATCH_8"]], "abacusai.api_class.enums.ClusteringImputationMethod": [[7, 3, 1, "", "AUTOMATIC"], [7, 3, 1, "", "INTERPOLATE"], [7, 3, 1, "", "ZEROS"]], "abacusai.api_class.enums.ConnectorType": [[7, 3, 1, "", "APPLICATION"], [7, 3, 1, "", "DATABASE"], [7, 3, 1, "", "FILE"], [7, 3, 1, "", "STREAMING"]], "abacusai.api_class.enums.ExperimentationMode": [[7, 3, 1, "", "RAPID"], [7, 3, 1, "", "THOROUGH"]], "abacusai.api_class.enums.FillLogic": [[7, 3, 1, "", "AVERAGE"], [7, 3, 1, "", "BACKFILL"], [7, 3, 1, "", "CUSTOM"], [7, 3, 1, "", "FORWARDFILL"], [7, 3, 1, "", "LINEAR"], [7, 3, 1, "", "MAX"], [7, 3, 1, "", "MEDIAN"], [7, 3, 1, "", "MIN"], [7, 3, 1, "", "NEAREST"]], "abacusai.api_class.enums.ForecastingDataSplitType": [[7, 3, 1, "", "AUTO"], [7, 3, 1, "", "ITEM"], [7, 3, 1, "", "PREDICTION_LENGTH"], [7, 3, 1, "", "TIMESTAMP"]], "abacusai.api_class.enums.ForecastingFillMethod": [[7, 3, 1, "", "BACK"], [7, 3, 1, "", "FUTURE"], [7, 3, 1, "", "MIDDLE"]], "abacusai.api_class.enums.ForecastingFrequency": [[7, 3, 1, "", "DAILY"], [7, 3, 1, "", "HOURLY"], [7, 3, 1, "", "MONTH_END"], [7, 3, 1, "", "MONTH_START"], [7, 3, 1, "", "QUARTER_END"], [7, 3, 1, "", "QUARTER_START"], [7, 3, 1, "", "WEEKLY_MONDAY_START"], [7, 3, 1, "", "WEEKLY_SATURDAY_START"], [7, 3, 1, "", "WEEKLY_SUNDAY_START"], [7, 3, 1, "", "YEARLY"]], "abacusai.api_class.enums.ForecastingLocalScaling": [[7, 3, 1, "", "ITEM"], [7, 3, 1, "", "LAST_POINT"], [7, 3, 1, "", "MIN_MAX"], [7, 3, 1, "", "MIN_STD"], [7, 3, 1, "", "ROBUST"], [7, 3, 1, "", "SLIDING_ZSCORE"], [7, 3, 1, "", "ZSCORE"]], "abacusai.api_class.enums.ForecastingLossFunction": [[7, 3, 1, "", "ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [7, 3, 1, "", "CUSTOM"], [7, 3, 1, "", "GAUSSIAN"], [7, 3, 1, "", "GAUSSIAN_FULL_COVARIANCE"], [7, 3, 1, "", "GUASSIAN_EXPONENTIAL"], [7, 3, 1, "", "LOG_ROOT_MEAN_SQUARE_ERROR"], [7, 3, 1, "", "MEAN_ABSOLUTE_ERROR"], [7, 3, 1, "", "MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [7, 3, 1, "", "MIX_GAUSSIANS"], [7, 3, 1, "", "NEGATIVE_BINOMIAL"], [7, 3, 1, "", "NORMALIZED_MEAN_ABSOLUTE_ERROR"], [7, 3, 1, "", "NORMALIZED_ROOT_MEAN_SQUARE_ERROR"], [7, 3, 1, "", "PEAKS_MEAN_ABSOLUTE_ERROR"], [7, 3, 1, "", "POINTWISE_ACCURACY"], [7, 3, 1, "", "ROOT_MEAN_SQUARE_ERROR"], [7, 3, 1, "", "STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [7, 3, 1, "", "WEIBULL"]], "abacusai.api_class.enums.ForecastingObjective": [[7, 3, 1, "", "ACCURACY"], [7, 3, 1, "", "BIAS"], [7, 3, 1, "", "CMAPE"], [7, 3, 1, "", "CV"], [7, 3, 1, "", "MAPE"], [7, 3, 1, "", "RMSE"], [7, 3, 1, "", "SRMSE"], [7, 3, 1, "", "WAPE"]], "abacusai.api_class.enums.ForecastingQuanitlesExtensionMethod": [[7, 3, 1, "", "ANCESTRAL_SIMULATION"], [7, 3, 1, "", "DIRECT"], [7, 3, 1, "", "QUADRATIC"]], "abacusai.api_class.enums.HolidayCalendars": [[7, 3, 1, "", "AU"], [7, 3, 1, "", "UK"], [7, 3, 1, "", "US"]], "abacusai.api_class.enums.MergeMode": [[7, 3, 1, "", "LAST_N"], [7, 3, 1, "", "TIME_WINDOW"]], "abacusai.api_class.enums.NERModelType": [[7, 3, 1, "", "LEARNED"], [7, 3, 1, "", "PRETRAINED_BERT"], [7, 3, 1, "", "PRETRAINED_MULTILINGUAL"], [7, 3, 1, "", "PRETRAINED_ROBERTA_27"], [7, 3, 1, "", "PRETRAINED_ROBERTA_43"]], "abacusai.api_class.enums.NERObjective": [[7, 3, 1, "", "ANNOTATIONS_PRECISION"], [7, 3, 1, "", "ANNOTATIONS_RECALL"], [7, 3, 1, "", "AUC"], [7, 3, 1, "", "LOG_LOSS"], [7, 3, 1, "", "PRECISION"], [7, 3, 1, "", "RECALL"]], "abacusai.api_class.enums.NLPDocumentFormat": [[7, 3, 1, "", "AUTO"], [7, 3, 1, "", "DOC"], [7, 3, 1, "", "TEXT"], [7, 3, 1, "", "TOKENS"]], "abacusai.api_class.enums.PersonalizationObjective": [[7, 3, 1, "", "COVERAGE"], [7, 3, 1, "", "MAP"], [7, 3, 1, "", "MAP_10"], [7, 3, 1, "", "MAP_5"], [7, 3, 1, "", "MRR"], [7, 3, 1, "", "NDCG"], [7, 3, 1, "", "NDCG_10"], [7, 3, 1, "", "NDCG_5"], [7, 3, 1, "", "PERSONALIZATION"]], "abacusai.api_class.enums.PersonalizationTrainingMode": [[7, 3, 1, "", "EXPERIMENTAL"], [7, 3, 1, "", "PRODUCTION"]], "abacusai.api_class.enums.ProblemType": [[7, 3, 1, "", "AI_AGENT"], [7, 3, 1, "", "ANOMALY_DETECTION"], [7, 3, 1, "", "ANOMALY_OUTLIERS"], [7, 3, 1, "", "CHAT_LLM"], [7, 3, 1, "", "CLUSTERING"], [7, 3, 1, "", "CLUSTERING_TIMESERIES"], [7, 3, 1, "", "CUMULATIVE_FORECASTING"], [7, 3, 1, "", "CUSTOM_ALGORITHM"], [7, 3, 1, "", "CUSTOM_TRAINED_MODEL"], [7, 3, 1, "", "DOCUMENT_CLASSIFICATION"], [7, 3, 1, "", "DOCUMENT_SUMMARIZATION"], [7, 3, 1, "", "DOCUMENT_VISUALIZATION"], [7, 3, 1, "", "FEATURE_STORE"], [7, 3, 1, "", "FORECASTING"], [7, 3, 1, "", "IMAGE_CLASSIFICATION"], [7, 3, 1, "", "IMAGE_VALUE_PREDICTION"], [7, 3, 1, "", "LANGUAGE_DETECTION"], [7, 3, 1, "", "MODEL_MONITORING"], [7, 3, 1, "", "NAMED_ENTITY_EXTRACTION"], [7, 3, 1, "", "NATURAL_LANGUAGE_SEARCH"], [7, 3, 1, "", "OBJECT_DETECTION"], [7, 3, 1, "", "OPTIMIZATION"], [7, 3, 1, "", "PERSONALIZATION"], [7, 3, 1, "", "PREDICTIVE_MODELING"], [7, 3, 1, "", "PRETRAINED_MODELS"], [7, 3, 1, "", "SENTENCE_BOUNDARY_DETECTION"], [7, 3, 1, "", "SENTIMENT_DETECTION"], [7, 3, 1, "", "THEME_ANALYSIS"]], "abacusai.api_class.enums.PythonFunctionArgumentType": [[7, 3, 1, "", "BATCH_PREDICTION_ID"], [7, 3, 1, "", "BOOLEAN"], [7, 3, 1, "", "DATASET_ID"], [7, 3, 1, "", "DEPLOYMENT_ID"], [7, 3, 1, "", "FEATURE_GROUP"], [7, 3, 1, "", "FEATURE_GROUP_ID"], [7, 3, 1, "", "FLOAT"], [7, 3, 1, "", "INTEGER"], [7, 3, 1, "", "JSON"], [7, 3, 1, "", "LIST"], [7, 3, 1, "", "MODEL_ID"], [7, 3, 1, "", "MONITOR_ID"], [7, 3, 1, "", "STRING"]], "abacusai.api_class.enums.RegressionAugmentationStrategy": [[7, 3, 1, "", "RESAMPLE"], [7, 3, 1, "", "SMOTE"]], "abacusai.api_class.enums.RegressionLossFunction": [[7, 3, 1, "", "AUTOMATIC"], [7, 3, 1, "", "CROSS_ENTROPY"], [7, 3, 1, "", "CUSTOM"], [7, 3, 1, "", "FOCAL_CROSS_ENTROPY"], [7, 3, 1, "", "HUBER"], [7, 3, 1, "", "MAE"], [7, 3, 1, "", "MAPE"], [7, 3, 1, "", "MSE"], [7, 3, 1, "", "MSLE"], [7, 3, 1, "", "TWEEDIE"]], "abacusai.api_class.enums.RegressionObjective": [[7, 3, 1, "", "ACCURACY"], [7, 3, 1, "", "AUC"], [7, 3, 1, "", "F1_SCORE"], [7, 3, 1, "", "LOG_LOSS"], [7, 3, 1, "", "MAE"], [7, 3, 1, "", "MAPE"], [7, 3, 1, "", "PRECISION"], [7, 3, 1, "", "RECALL"], [7, 3, 1, "", "RMSE"], [7, 3, 1, "", "R_SQUARED_COEFFICIENT_OF_DETERMINATION"], [7, 3, 1, "", "WAPE"]], "abacusai.api_class.enums.RegressionTargetTransform": [[7, 3, 1, "", "BOX_COX"], [7, 3, 1, "", "LOG"], [7, 3, 1, "", "QUANTILE"], [7, 3, 1, "", "YEO_JOHNSON"]], "abacusai.api_class.enums.RegressionTimeSplitMethod": [[7, 3, 1, "", "TEST_SPLIT_PERCENTAGE_BASED"], [7, 3, 1, "", "TEST_START_TIMESTAMP_BASED"]], "abacusai.api_class.enums.RegressionTreeHPOMode": [[7, 3, 1, "", "RAPID"], [7, 3, 1, "", "THOROUGH"]], "abacusai.api_class.enums.RegressionTypeOfSplit": [[7, 3, 1, "", "RANDOM"], [7, 3, 1, "", "ROW_INDICATOR_BASED"], [7, 3, 1, "", "TIMESTAMP_BASED"]], "abacusai.api_class.enums.SamplingMethodType": [[7, 3, 1, "", "N_SAMPLING"], [7, 3, 1, "", "PERCENT_SAMPLING"]], "abacusai.api_class.enums.SentimentType": [[7, 3, 1, "", "EMOTION"], [7, 3, 1, "", "VALENCE"]], "abacusai.api_class.enums.VectorStoreTextEncoder": [[7, 3, 1, "", "E5"], [7, 3, 1, "", "E5_SMALL"], [7, 3, 1, "", "OPENAI"], [7, 3, 1, "", "SENTENCE_BERT"]], "abacusai.api_class.feature_group": [[8, 1, 1, "", "LastNMergeConfig"], [8, 1, 1, "", "MergeConfig"], [8, 1, 1, "", "NSamplingConfig"], [8, 1, 1, "", "PercentSamplingConfig"], [8, 1, 1, "", "SamplingConfig"], [8, 1, 1, "", "TimeWindowMergeConfig"], [8, 1, 1, "", "_MergeConfigFactory"], [8, 1, 1, "", "_SamplingConfigFactory"]], "abacusai.api_class.feature_group.LastNMergeConfig": [[8, 3, 1, "", "merge_mode"], [8, 3, 1, "", "num_versions"]], "abacusai.api_class.feature_group.MergeConfig": [[8, 2, 1, "", "__post_init__"]], "abacusai.api_class.feature_group.NSamplingConfig": [[8, 3, 1, "", "key_columns"], [8, 3, 1, "", "sample_count"], [8, 3, 1, "", "sampling_method"]], "abacusai.api_class.feature_group.PercentSamplingConfig": [[8, 3, 1, "", "key_columns"], [8, 3, 1, "", "sample_percent"], [8, 3, 1, "", "sampling_method"]], "abacusai.api_class.feature_group.SamplingConfig": [[8, 2, 1, "", "__post_init__"]], "abacusai.api_class.feature_group.TimeWindowMergeConfig": [[8, 3, 1, "", "feature_name"], [8, 3, 1, "", "merge_mode"], [8, 3, 1, "", "time_window_size_ms"]], "abacusai.api_class.feature_group._MergeConfigFactory": [[8, 3, 1, "", "config_class_key"], [8, 3, 1, "", "config_class_map"]], "abacusai.api_class.feature_group._SamplingConfigFactory": [[8, 3, 1, "", "config_class_key"], [8, 3, 1, "", "config_class_map"]], "abacusai.api_class.model": [[10, 1, 1, "", "AIAgentTrainingConfig"], [10, 1, 1, "", "AnomalyDetectionTrainingConfig"], [10, 1, 1, "", "ChatLLMTrainingConfig"], [10, 1, 1, "", "ClusteringTimeseriesTrainingConfig"], [10, 1, 1, "", "ClusteringTrainingConfig"], [10, 1, 1, "", "CumulativeForecastingTrainingConfig"], [10, 1, 1, "", "CustomAlgorithmTrainingConfig"], [10, 1, 1, "", "CustomTrainedModelTrainingConfig"], [10, 1, 1, "", "DocumentClassificationTrainingConfig"], [10, 1, 1, "", "DocumentSummarizationTrainingConfig"], [10, 1, 1, "", "DocumentVisualizationTrainingConfig"], [10, 1, 1, "", "ForecastingTrainingConfig"], [10, 1, 1, "", "NamedEntityExtractionTrainingConfig"], [10, 1, 1, "", "NaturalLanguageSearchTrainingConfig"], [10, 1, 1, "", "OptimizationTrainingConfig"], [10, 1, 1, "", "PersonalizationTrainingConfig"], [10, 1, 1, "", "RegressionTrainingConfig"], [10, 1, 1, "", "SentenceBoundaryDetectionTrainingConfig"], [10, 1, 1, "", "SentimentDetectionTrainingConfig"], [10, 1, 1, "", "ThemeAnalysisTrainingConfig"], [10, 1, 1, "", "TrainingConfig"], [10, 1, 1, "", "_TrainingConfigFactory"]], "abacusai.api_class.model.AIAgentTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "description"]], "abacusai.api_class.model.AnomalyDetectionTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "mixture_of_gaussians"], [10, 3, 1, "", "spike_down"], [10, 3, 1, "", "spike_up"], [10, 3, 1, "", "test_split"], [10, 3, 1, "", "trend_change"], [10, 3, 1, "", "value_high"], [10, 3, 1, "", "variational_autoencoder"]], "abacusai.api_class.model.ChatLLMTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "llm_name"], [10, 3, 1, "", "num_completion_tokens"], [10, 3, 1, "", "system_message"], [10, 3, 1, "", "temperature"], [10, 3, 1, "", "vector_stores"]], "abacusai.api_class.model.ClusteringTimeseriesTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "imputation"], [10, 3, 1, "", "num_clusters_selection"]], "abacusai.api_class.model.ClusteringTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "num_clusters_selection"]], "abacusai.api_class.model.CumulativeForecastingTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "cumulative_prediction_lengths"], [10, 3, 1, "", "historical_frequency"], [10, 3, 1, "", "predict_residuals"], [10, 3, 1, "", "skip_input_transform"], [10, 3, 1, "", "skip_target_transform"], [10, 3, 1, "", "test_split"]], "abacusai.api_class.model.CustomAlgorithmTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "predict_function_name"], [10, 3, 1, "", "predict_many_function_name"], [10, 3, 1, "", "predict_module_name"], [10, 3, 1, "", "test_split"], [10, 3, 1, "", "train_function_name"], [10, 3, 1, "", "train_module_name"], [10, 3, 1, "", "training_input_tables"]], "abacusai.api_class.model.CustomTrainedModelTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "docker_image_uri"], [10, 3, 1, "", "index_output_path"], [10, 3, 1, "", "max_catalog_size"], [10, 3, 1, "", "max_dimension"], [10, 3, 1, "", "service_port"]], "abacusai.api_class.model.DocumentClassificationTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "batch_size"], [10, 3, 1, "", "dropout_rate"], [10, 3, 1, "", "test_split"], [10, 3, 1, "", "zero_shot_hypotheses"]], "abacusai.api_class.model.DocumentSummarizationTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "batch_size"], [10, 3, 1, "", "dropout_rate"], [10, 3, 1, "", "test_split"]], "abacusai.api_class.model.DocumentVisualizationTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "batch_size"], [10, 3, 1, "", "dropout_rate"], [10, 3, 1, "", "test_split"]], "abacusai.api_class.model.ForecastingTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "additional_forecast_keys"], [10, 3, 1, "", "backtesting_window_step_size"], [10, 3, 1, "", "batch_renormalization"], [10, 3, 1, "", "batch_size"], [10, 3, 1, "", "convolution_filters"], [10, 3, 1, "", "convolutional_layers"], [10, 3, 1, "", "custom_loss_functions"], [10, 3, 1, "", "custom_metrics"], [10, 3, 1, "", "data_split_feature_group_table_name"], [10, 3, 1, "", "datetime_holiday_calendars"], [10, 3, 1, "", "disable_networks_without_analytic_quantiles"], [10, 3, 1, "", "dropout_rate"], [10, 3, 1, "", "enable_clustering"], [10, 3, 1, "", "enable_cold_start"], [10, 3, 1, "", "enable_feature_selection"], [10, 3, 1, "", "enable_multiple_backtests"], [10, 3, 1, "", "experimentation_mode"], [10, 3, 1, "", "fill_missing_values"], [10, 3, 1, "", "filter_items"], [10, 3, 1, "", "force_prediction_length"], [10, 3, 1, "", "forecast_frequency"], [10, 3, 1, "", "full_data_retraining"], [10, 3, 1, "", "handle_zeros_as_missing_values"], [10, 3, 1, "", "history_length"], [10, 3, 1, "", "initial_learning_rate"], [10, 3, 1, "", "item_attributes_weight_column"], [10, 3, 1, "", "l2_regularization_factor"], [10, 3, 1, "", "local_scaling_mode"], [10, 3, 1, "", "loss_function"], [10, 3, 1, "", "max_scale_context"], [10, 3, 1, "", "num_backtesting_windows"], [10, 3, 1, "", "number_of_samples"], [10, 3, 1, "", "objective"], [10, 3, 1, "", "prediction_length"], [10, 3, 1, "", "prediction_step_size"], [10, 3, 1, "", "probability_quantiles"], [10, 3, 1, "", "quantiles_extension_method"], [10, 3, 1, "", "recurrent_layers"], [10, 3, 1, "", "recurrent_units"], [10, 3, 1, "", "skip_local_scale_target"], [10, 3, 1, "", "skip_missing"], [10, 3, 1, "", "skip_timeseries_weight_scaling"], [10, 3, 1, "", "smooth_history"], [10, 3, 1, "", "sort_objective"], [10, 3, 1, "", "symmetrize_quantiles"], [10, 3, 1, "", "test_by_item"], [10, 3, 1, "", "test_split"], [10, 3, 1, "", "test_start"], [10, 3, 1, "", "timeseries_loss_weight_column"], [10, 3, 1, "", "timeseries_weight_column"], [10, 3, 1, "", "training_point_overlap"], [10, 3, 1, "", "type_of_split"], [10, 3, 1, "", "underprediction_weight"], [10, 3, 1, "", "use_all_item_totals"], [10, 3, 1, "", "use_item_id"], [10, 3, 1, "", "use_item_weights_in_objective"], [10, 3, 1, "", "use_log_transforms"], [10, 3, 1, "", "use_timeseries_weights_in_objective"], [10, 3, 1, "", "zero_predictor"]], "abacusai.api_class.model.NamedEntityExtractionTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "active_labels_column"], [10, 3, 1, "", "batch_size"], [10, 3, 1, "", "document_format"], [10, 3, 1, "", "dropout_rate"], [10, 3, 1, "", "include_longformer"], [10, 3, 1, "", "ner_model_type"], [10, 3, 1, "", "objective"], [10, 3, 1, "", "sort_objective"], [10, 3, 1, "", "test_row_indicator"], [10, 3, 1, "", "test_split"]], "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "abacus_internal_model"], [10, 3, 1, "", "chunk_overlap_fraction"], [10, 3, 1, "", "index_fraction"], [10, 3, 1, "", "larger_embeddings"], [10, 3, 1, "", "num_completion_tokens"], [10, 3, 1, "", "search_chunk_size"]], "abacusai.api_class.model.OptimizationTrainingConfig": [[10, 2, 1, "", "__post_init__"]], "abacusai.api_class.model.PersonalizationTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "add_time_features"], [10, 3, 1, "", "batch_size"], [10, 3, 1, "", "compute_rerank_metrics"], [10, 3, 1, "", "compute_session_metrics"], [10, 3, 1, "", "data_split_feature_group_table_name"], [10, 3, 1, "", "disable_gpu"], [10, 3, 1, "", "disable_timestamp_scalar_features"], [10, 3, 1, "", "disable_transformer"], [10, 3, 1, "", "downsample_item_popularity_percentile"], [10, 3, 1, "", "dropout_rate"], [10, 3, 1, "", "explicit_time_split"], [10, 3, 1, "", "explore_lookback_hours"], [10, 3, 1, "", "filter_history"], [10, 3, 1, "", "full_data_retraining"], [10, 3, 1, "", "item_id_dropout"], [10, 3, 1, "", "max_history_length"], [10, 3, 1, "", "max_user_history_len_percentile"], [10, 3, 1, "", "objective"], [10, 3, 1, "", "recent_days_for_training"], [10, 3, 1, "", "sequential_training"], [10, 3, 1, "", "session_event_types"], [10, 3, 1, "", "sort_objective"], [10, 3, 1, "", "target_action_types"], [10, 3, 1, "", "target_action_weights"], [10, 3, 1, "", "test_last_items_length"], [10, 3, 1, "", "test_on_user_split"], [10, 3, 1, "", "test_row_indicator"], [10, 3, 1, "", "test_split"], [10, 3, 1, "", "test_split_on_last_k_items"], [10, 3, 1, "", "test_window_length_hours"], [10, 3, 1, "", "training_mode"], [10, 3, 1, "", "training_start_date"]], "abacusai.api_class.model.RegressionTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "active_labels_column"], [10, 3, 1, "", "augmentation_strategy"], [10, 3, 1, "", "batch_size"], [10, 3, 1, "", "custom_loss_functions"], [10, 3, 1, "", "custom_metrics"], [10, 3, 1, "", "data_split_feature_group_table_name"], [10, 3, 1, "", "disable_test_val_fold"], [10, 3, 1, "", "drop_original_categoricals"], [10, 3, 1, "", "dropout_rate"], [10, 3, 1, "", "feature_selection_intensity"], [10, 3, 1, "", "ignore_datetime_features"], [10, 3, 1, "", "is_multilingual"], [10, 3, 1, "", "k_fold_cross_validation"], [10, 3, 1, "", "loss_function"], [10, 3, 1, "", "loss_parameters"], [10, 3, 1, "", "max_text_words"], [10, 3, 1, "", "min_categorical_count"], [10, 3, 1, "", "num_cv_folds"], [10, 3, 1, "", "numeric_clipping_percentile"], [10, 3, 1, "", "objective"], [10, 3, 1, "", "perform_feature_selection"], [10, 3, 1, "", "pretrained_model_name"], [10, 3, 1, "", "rare_class_augmentation_threshold"], [10, 3, 1, "", "rebalance_classes"], [10, 3, 1, "", "sample_weight"], [10, 3, 1, "", "sampling_unit_keys"], [10, 3, 1, "", "sort_objective"], [10, 3, 1, "", "target_encode_categoricals"], [10, 3, 1, "", "target_transform"], [10, 3, 1, "", "test_row_indicator"], [10, 3, 1, "", "test_split"], [10, 3, 1, "", "test_splitting_timestamp"], [10, 3, 1, "", "timestamp_based_splitting_column"], [10, 3, 1, "", "timestamp_based_splitting_method"], [10, 3, 1, "", "training_rows_downsample_ratio"], [10, 3, 1, "", "tree_hpo_mode"], [10, 3, 1, "", "type_of_split"]], "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "batch_size"], [10, 3, 1, "", "dropout_rate"], [10, 3, 1, "", "test_split"]], "abacusai.api_class.model.SentimentDetectionTrainingConfig": [[10, 2, 1, "", "__post_init__"], [10, 3, 1, "", "batch_size"], [10, 3, 1, "", "compute_metrics"], [10, 3, 1, "", "dropout_rate"], [10, 3, 1, "", "sentiment_type"], [10, 3, 1, "", "test_split"]], "abacusai.api_class.model.ThemeAnalysisTrainingConfig": [[10, 2, 1, "", "__post_init__"]], "abacusai.api_class.model.TrainingConfig": [[10, 3, 1, "", "_support_kwargs"], [10, 3, 1, "", "_upper_snake_case_keys"], [10, 3, 1, "", "algorithm"], [10, 3, 1, "", "kwargs"], [10, 3, 1, "", "problem_type"]], "abacusai.api_class.model._TrainingConfigFactory": [[10, 3, 1, "", "config_abstract_class"], [10, 3, 1, "", "config_class_key"], [10, 3, 1, "", "config_class_map"]], "abacusai.api_class.project": [[11, 1, 1, "", "FeatureMappingConfig"], [11, 1, 1, "", "ProjectFeatureGroupTypeMappingsConfig"]], "abacusai.api_class.project.FeatureMappingConfig": [[11, 3, 1, "", "feature_mapping"], [11, 3, 1, "", "feature_name"], [11, 3, 1, "", "nested_feature_name"]], "abacusai.api_class.project.ProjectFeatureGroupTypeMappingsConfig": [[11, 3, 1, "", "feature_group_id"], [11, 3, 1, "", "feature_group_type"], [11, 3, 1, "", "feature_mappings"], [11, 2, 1, "", "from_dict"]], "abacusai.api_class.python_functions": [[12, 1, 1, "", "OutputVariableMapping"], [12, 1, 1, "", "PythonFunctionArgument"]], "abacusai.api_class.python_functions.OutputVariableMapping": [[12, 3, 1, "", "name"], [12, 3, 1, "", "variable_type"]], "abacusai.api_class.python_functions.PythonFunctionArgument": [[12, 3, 1, "", "is_required"], [12, 3, 1, "", "name"], [12, 3, 1, "", "pipeline_variable"], [12, 3, 1, "", "value"], [12, 3, 1, "", "variable_type"]], "abacusai.api_class.refresh": [[13, 1, 1, "", "DatabaseConnectorExportConfig"], [13, 1, 1, "", "FeatureGroupExportConfig"], [13, 1, 1, "", "FileConnectorExportConfig"], [13, 1, 1, "", "_FeatureGroupExportConfigFactory"]], "abacusai.api_class.refresh.DatabaseConnectorExportConfig": [[13, 3, 1, "", "additional_id_columns"], [13, 3, 1, "", "connector_type"], [13, 3, 1, "", "data_columns"], [13, 3, 1, "", "database_connector_id"], [13, 3, 1, "", "id_column"], [13, 3, 1, "", "mode"], [13, 3, 1, "", "object_name"], [13, 2, 1, "", "to_dict"]], "abacusai.api_class.refresh.FeatureGroupExportConfig": [[13, 3, 1, "", "connector_type"]], "abacusai.api_class.refresh.FileConnectorExportConfig": [[13, 3, 1, "", "connector_type"], [13, 3, 1, "", "export_file_format"], [13, 3, 1, "", "location"], [13, 2, 1, "", "to_dict"]], "abacusai.api_class.refresh._FeatureGroupExportConfigFactory": [[13, 3, 1, "", "config_abstract_class"], [13, 3, 1, "", "config_class_key"], [13, 3, 1, "", "config_class_map"]], "abacusai.api_class.vector_store": [[14, 1, 1, "", "VectorStoreConfig"]], "abacusai.api_class.vector_store.VectorStoreConfig": [[14, 3, 1, "", "chunk_overlap_fraction"], [14, 3, 1, "", "chunk_size"], [14, 3, 1, "", "text_encoder"]], "abacusai.api_client_utils": [[15, 5, 1, "", "INVALID_PANDAS_COLUMN_NAME_CHARACTERS"], [15, 6, 1, "", "avro_to_pandas_dtype"], [15, 6, 1, "", "clean_column_name"], [15, 6, 1, "", "get_clean_function_source_code"], [15, 6, 1, "", "get_non_nullable_type"], [15, 6, 1, "", "get_object_from_context"]], "abacusai.api_endpoint": [[16, 1, 1, "", "ApiEndpoint"]], "abacusai.api_endpoint.ApiEndpoint": [[16, 2, 1, "", "__repr__"], [16, 2, 1, "", "to_dict"]], "abacusai.api_key": [[17, 1, 1, "", "ApiKey"]], "abacusai.api_key.ApiKey": [[17, 2, 1, "", "__repr__"], [17, 2, 1, "", "delete"], [17, 2, 1, "", "to_dict"]], "abacusai.application_connector": [[18, 1, 1, "", "ApplicationConnector"]], "abacusai.application_connector.ApplicationConnector": [[18, 2, 1, "", "__repr__"], [18, 2, 1, "", "delete"], [18, 2, 1, "", "list_objects"], [18, 2, 1, "", "rename"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "verify"]], "abacusai.batch_prediction": [[19, 1, 1, "", "BatchPrediction"]], "abacusai.batch_prediction.BatchPrediction": [[19, 2, 1, "", "__repr__"], [19, 2, 1, "", "create_refresh_policy"], [19, 2, 1, "", "delete"], [19, 2, 1, "", "describe"], [19, 2, 1, "", "describe_output_feature_group"], [19, 2, 1, "", "get_status"], [19, 2, 1, "", "list_refresh_policies"], [19, 2, 1, "", "list_versions"], [19, 2, 1, "", "refresh"], [19, 2, 1, "", "set_database_connector_output"], [19, 2, 1, "", "set_dataset"], [19, 2, 1, "", "set_dataset_remap"], [19, 2, 1, "", "set_feature_group"], [19, 2, 1, "", "set_feature_group_output"], [19, 2, 1, "", "set_file_connector_output"], [19, 2, 1, "", "set_output_to_console"], [19, 2, 1, "", "start"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "update"], [19, 2, 1, "", "wait_for_drift_monitor"], [19, 2, 1, "", "wait_for_predictions"]], "abacusai.batch_prediction_version": [[20, 1, 1, "", "BatchPredictionVersion"]], "abacusai.batch_prediction_version.BatchPredictionVersion": [[20, 2, 1, "", "__repr__"], [20, 2, 1, "", "describe"], [20, 2, 1, "", "download_batch_prediction_result_chunk"], [20, 2, 1, "", "download_result_to_file"], [20, 2, 1, "", "get_batch_prediction_connector_errors"], [20, 2, 1, "", "get_outliers_for_batch_prediction_feature"], [20, 2, 1, "", "get_status"], [20, 2, 1, "", "refresh"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "wait_for_drift_monitor"], [20, 2, 1, "", "wait_for_predictions"]], "abacusai.categorical_range_violation": [[21, 1, 1, "", "CategoricalRangeViolation"]], "abacusai.categorical_range_violation.CategoricalRangeViolation": [[21, 2, 1, "", "__repr__"], [21, 2, 1, "", "to_dict"]], "abacusai.chat_message": [[22, 1, 1, "", "ChatMessage"]], "abacusai.chat_message.ChatMessage": [[22, 2, 1, "", "__repr__"], [22, 2, 1, "", "to_dict"]], "abacusai.chat_session": [[23, 1, 1, "", "ChatSession"]], "abacusai.chat_session.ChatSession": [[23, 2, 1, "", "__repr__"], [23, 2, 1, "", "get"], [23, 2, 1, "", "to_dict"]], "abacusai.client": [[24, 1, 1, "", "ApiClient"], [24, 4, 1, "", "ApiException"], [24, 1, 1, "", "BaseApiClient"], [24, 1, 1, "", "ClientOptions"], [24, 5, 1, "", "DEFAULT_SERVER"], [24, 1, 1, "", "ReadOnlyClient"], [24, 5, 1, "", "_cached_endpoints"], [24, 6, 1, "", "_discover_service_url"], [24, 5, 1, "", "_request_context"], [24, 6, 1, "", "_requests_retry_session"], [24, 6, 1, "", "get_module_code_from_notebook"], [24, 6, 1, "", "get_source_code_info"], [24, 6, 1, "", "include_modules"]], "abacusai.client.ApiClient": [[24, 2, 1, "", "_call_aiagent_asyncapp_sync_message"], [24, 2, 1, "", "_get_agent_async_app_caller"], [24, 2, 1, "", "_get_agent_async_app_request_id"], [24, 2, 1, "", "_stream_llm_call"], [24, 2, 1, "", "add_annotatable_feature"], [24, 2, 1, "", "add_annotation"], [24, 2, 1, "", "add_feature_group_annotation_label"], [24, 2, 1, "", "add_feature_group_tag"], [24, 2, 1, "", "add_feature_group_to_project"], [24, 2, 1, "", "add_feature_tag"], [24, 2, 1, "", "add_graph_to_dashboard"], [24, 2, 1, "", "add_multiple_user_item_interactions"], [24, 2, 1, "", "add_organization_group_permission"], [24, 2, 1, "", "add_organization_group_to_feature_group_modifiers"], [24, 2, 1, "", "add_project_tags"], [24, 2, 1, "", "add_user_item_interaction"], [24, 2, 1, "", "add_user_to_feature_group_modifiers"], [24, 2, 1, "", "add_user_to_organization"], [24, 2, 1, "", "add_user_to_organization_group"], [24, 2, 1, "", "append_data"], [24, 2, 1, "", "append_multiple_data"], [24, 2, 1, "", "cancel_upload"], [24, 2, 1, "", "check_constraints"], [24, 2, 1, "", "classify_image"], [24, 2, 1, "", "classify_pdf"], [24, 2, 1, "", "clear_agent_context"], [24, 2, 1, "", "concatenate_feature_group_data"], [24, 2, 1, "", "create_agent"], [24, 2, 1, "", "create_agent_from_function"], [24, 2, 1, "", "create_algorithm"], [24, 2, 1, "", "create_algorithm_from_function"], [24, 2, 1, "", "create_batch_prediction"], [24, 2, 1, "", "create_chat_session"], [24, 2, 1, "", "create_custom_loss_function"], [24, 2, 1, "", "create_custom_loss_function_with_source_code"], [24, 2, 1, "", "create_custom_metric"], [24, 2, 1, "", "create_custom_metric_from_function"], [24, 2, 1, "", "create_dataset_from_application_connector"], [24, 2, 1, "", "create_dataset_from_database_connector"], [24, 2, 1, "", "create_dataset_from_file_connector"], [24, 2, 1, "", "create_dataset_from_pandas"], [24, 2, 1, "", "create_dataset_from_streaming_connector"], [24, 2, 1, "", "create_dataset_from_upload"], [24, 2, 1, "", "create_dataset_version_from_application_connector"], [24, 2, 1, "", "create_dataset_version_from_database_connector"], [24, 2, 1, "", "create_dataset_version_from_file_connector"], [24, 2, 1, "", "create_dataset_version_from_pandas"], [24, 2, 1, "", "create_dataset_version_from_upload"], [24, 2, 1, "", "create_deployment"], [24, 2, 1, "", "create_deployment_conversation"], [24, 2, 1, "", "create_deployment_token"], [24, 2, 1, "", "create_deployment_webhook"], [24, 2, 1, "", "create_eda"], [24, 2, 1, "", "create_feature"], [24, 2, 1, "", "create_feature_group"], [24, 2, 1, "", "create_feature_group_from_function"], [24, 2, 1, "", "create_feature_group_from_pandas_df"], [24, 2, 1, "", "create_feature_group_from_python_function"], [24, 2, 1, "", "create_feature_group_from_spark_df"], [24, 2, 1, "", "create_feature_group_from_template"], [24, 2, 1, "", "create_feature_group_template"], [24, 2, 1, "", "create_feature_group_version"], [24, 2, 1, "", "create_graph_dashboard"], [24, 2, 1, "", "create_merge_feature_group"], [24, 2, 1, "", "create_model_from_functions"], [24, 2, 1, "", "create_model_from_python"], [24, 2, 1, "", "create_model_monitor"], [24, 2, 1, "", "create_module"], [24, 2, 1, "", "create_module_from_notebook"], [24, 2, 1, "", "create_monitor_alert"], [24, 2, 1, "", "create_nested_feature"], [24, 2, 1, "", "create_nlp_drift_monitor"], [24, 2, 1, "", "create_organization_group"], [24, 2, 1, "", "create_pipeline"], [24, 2, 1, "", "create_pipeline_step"], [24, 2, 1, "", "create_pipeline_step_from_function"], [24, 2, 1, "", "create_point_in_time_feature"], [24, 2, 1, "", "create_point_in_time_group"], [24, 2, 1, "", "create_point_in_time_group_feature"], [24, 2, 1, "", "create_project"], [24, 2, 1, "", "create_python_function"], [24, 2, 1, "", "create_refresh_policy"], [24, 2, 1, "", "create_sampling_feature_group"], [24, 2, 1, "", "create_snapshot_feature_group"], [24, 2, 1, "", "create_spark_df_from_feature_group_version"], [24, 2, 1, "", "create_streaming_dataset"], [24, 2, 1, "", "create_streaming_token"], [24, 2, 1, "", "create_train_test_data_split_feature_group"], [24, 2, 1, "", "create_transform_feature_group"], [24, 2, 1, "", "create_vector_store"], [24, 2, 1, "", "create_vector_store_version"], [24, 2, 1, "", "create_vision_drift_monitor"], [24, 2, 1, "", "delete_algorithm"], [24, 2, 1, "", "delete_api_key"], [24, 2, 1, "", "delete_application_connector"], [24, 2, 1, "", "delete_batch_prediction"], [24, 2, 1, "", "delete_custom_loss_function"], [24, 2, 1, "", "delete_custom_metric"], [24, 2, 1, "", "delete_database_connector"], [24, 2, 1, "", "delete_dataset"], [24, 2, 1, "", "delete_deployment"], [24, 2, 1, "", "delete_deployment_conversation"], [24, 2, 1, "", "delete_deployment_token"], [24, 2, 1, "", "delete_eda"], [24, 2, 1, "", "delete_eda_version"], [24, 2, 1, "", "delete_feature"], [24, 2, 1, "", "delete_feature_group"], [24, 2, 1, "", "delete_feature_group_template"], [24, 2, 1, "", "delete_file_connector"], [24, 2, 1, "", "delete_graph_dashboard"], [24, 2, 1, "", "delete_item_embeddings"], [24, 2, 1, "", "delete_model"], [24, 2, 1, "", "delete_model_monitor"], [24, 2, 1, "", "delete_model_monitor_version"], [24, 2, 1, "", "delete_model_version"], [24, 2, 1, "", "delete_module"], [24, 2, 1, "", "delete_monitor_alert"], [24, 2, 1, "", "delete_nested_feature"], [24, 2, 1, "", "delete_organization_group"], [24, 2, 1, "", "delete_pipeline"], [24, 2, 1, "", "delete_pipeline_step"], [24, 2, 1, "", "delete_point_in_time_group"], [24, 2, 1, "", "delete_project"], [24, 2, 1, "", "delete_python_function"], [24, 2, 1, "", "delete_refresh_policy"], [24, 2, 1, "", "delete_streaming_connector"], [24, 2, 1, "", "delete_streaming_token"], [24, 2, 1, "", "delete_vector_store"], [24, 2, 1, "", "delete_webhook"], [24, 2, 1, "", "describe_annotation"], [24, 2, 1, "", "describe_async_feature_group_operation"], [24, 2, 1, "", "describe_image"], [24, 2, 1, "", "describe_pipeline"], [24, 2, 1, "", "describe_pipeline_by_name"], [24, 2, 1, "", "detach_feature_group_from_template"], [24, 2, 1, "", "evaluate_prompt"], [24, 2, 1, "", "execute_agent"], [24, 2, 1, "", "execute_feature_group_sql"], [24, 2, 1, "", "export_feature_group_version_to_console"], [24, 2, 1, "", "export_feature_group_version_to_database_connector"], [24, 2, 1, "", "export_feature_group_version_to_file_connector"], [24, 2, 1, "", "export_model_artifact_as_feature_group"], [24, 2, 1, "", "generate_image"], [24, 2, 1, "", "get_agent_context_chat_history"], [24, 2, 1, "", "get_alternative_assignments"], [24, 2, 1, "", "get_anomalies"], [24, 2, 1, "", "get_assignments"], [24, 2, 1, "", "get_chat_response"], [24, 2, 1, "", "get_classification"], [24, 2, 1, "", "get_cluster"], [24, 2, 1, "", "get_custom_train_function_info"], [24, 2, 1, "", "get_document_to_annotate"], [24, 2, 1, "", "get_entailment"], [24, 2, 1, "", "get_entities_from_pdf"], [24, 2, 1, "", "get_forecast"], [24, 2, 1, "", "get_k_nearest"], [24, 2, 1, "", "get_labels"], [24, 2, 1, "", "get_llm_parameters"], [24, 2, 1, "", "get_multiple_k_nearest"], [24, 2, 1, "", "get_notebook_cell_completion"], [24, 2, 1, "", "get_objects_from_image"], [24, 2, 1, "", "get_personalized_ranking"], [24, 2, 1, "", "get_ranked_items"], [24, 2, 1, "", "get_recommendations"], [24, 2, 1, "", "get_related_items"], [24, 2, 1, "", "get_search_results"], [24, 2, 1, "", "get_sentiment"], [24, 2, 1, "", "get_summary"], [24, 2, 1, "", "get_train_function_input"], [24, 2, 1, "", "get_train_function_input_from_model_version"], [24, 2, 1, "", "get_training_config_options"], [24, 2, 1, "", "import_annotation_labels"], [24, 2, 1, "", "import_module"], [24, 2, 1, "", "invalidate_streaming_feature_group_data"], [24, 2, 1, "", "is_anomaly"], [24, 2, 1, "", "list_builtin_algorithms"], [24, 2, 1, "", "list_pipeline_versions"], [24, 2, 1, "", "lookup_features"], [24, 2, 1, "", "lookup_vector_store"], [24, 2, 1, "", "mark_upload_complete"], [24, 2, 1, "", "pause_refresh_policy"], [24, 2, 1, "", "predict"], [24, 2, 1, "", "predict_churn"], [24, 2, 1, "", "predict_class"], [24, 2, 1, "", "predict_fraud"], [24, 2, 1, "", "predict_from_datasets"], [24, 2, 1, "", "predict_language"], [24, 2, 1, "", "predict_lead"], [24, 2, 1, "", "predict_multiple"], [24, 2, 1, "", "predict_takeover"], [24, 2, 1, "", "predict_target"], [24, 2, 1, "", "predict_with_binary_data"], [24, 2, 1, "", "preview_feature_group_template_resolution"], [24, 2, 1, "", "remove_concatenation_config"], [24, 2, 1, "", "remove_deployment_feature_group_export_output"], [24, 2, 1, "", "remove_feature_group_annotation_label"], [24, 2, 1, "", "remove_feature_group_from_project"], [24, 2, 1, "", "remove_feature_group_tag"], [24, 2, 1, "", "remove_feature_tag"], [24, 2, 1, "", "remove_organization_group_from_feature_group_modifiers"], [24, 2, 1, "", "remove_organization_group_permission"], [24, 2, 1, "", "remove_project_tags"], [24, 2, 1, "", "remove_user_from_feature_group_modifiers"], [24, 2, 1, "", "remove_user_from_organization"], [24, 2, 1, "", "remove_user_from_organization_group"], [24, 2, 1, "", "rename_application_connector"], [24, 2, 1, "", "rename_database_connector"], [24, 2, 1, "", "rename_deployment"], [24, 2, 1, "", "rename_eda"], [24, 2, 1, "", "rename_model"], [24, 2, 1, "", "rename_model_monitor"], [24, 2, 1, "", "rename_project"], [24, 2, 1, "", "rename_streaming_connector"], [24, 2, 1, "", "render_feature_groups_for_llm"], [24, 2, 1, "", "rerun_eda"], [24, 2, 1, "", "rerun_model_monitor"], [24, 2, 1, "", "resume_refresh_policy"], [24, 2, 1, "", "retrain_model"], [24, 2, 1, "", "run_monitor_alert"], [24, 2, 1, "", "run_pipeline"], [24, 2, 1, "", "run_refresh_policy"], [24, 2, 1, "", "score_image"], [24, 2, 1, "", "set_agent_context_chat_history"], [24, 2, 1, "", "set_annotation_status_feature"], [24, 2, 1, "", "set_auto_deployment"], [24, 2, 1, "", "set_azure_blob_connection_string"], [24, 2, 1, "", "set_batch_prediction_database_connector_output"], [24, 2, 1, "", "set_batch_prediction_dataset"], [24, 2, 1, "", "set_batch_prediction_dataset_remap"], [24, 2, 1, "", "set_batch_prediction_feature_group"], [24, 2, 1, "", "set_batch_prediction_feature_group_output"], [24, 2, 1, "", "set_batch_prediction_file_connector_output"], [24, 2, 1, "", "set_batch_prediction_output_to_console"], [24, 2, 1, "", "set_dataset_column_data_type"], [24, 2, 1, "", "set_default_organization_group"], [24, 2, 1, "", "set_deployment_feature_group_export_database_connector_output"], [24, 2, 1, "", "set_deployment_feature_group_export_file_connector_output"], [24, 2, 1, "", "set_deployment_feature_group_version"], [24, 2, 1, "", "set_deployment_model_version"], [24, 2, 1, "", "set_feature_as_annotatable_feature"], [24, 2, 1, "", "set_feature_group_indexing_config"], [24, 2, 1, "", "set_feature_group_merge_config"], [24, 2, 1, "", "set_feature_group_modifier_lock"], [24, 2, 1, "", "set_feature_group_sampling_config"], [24, 2, 1, "", "set_feature_group_schema"], [24, 2, 1, "", "set_feature_group_transform_config"], [24, 2, 1, "", "set_feature_group_type"], [24, 2, 1, "", "set_feature_mapping"], [24, 2, 1, "", "set_feature_type"], [24, 2, 1, "", "set_model_prediction_params"], [24, 2, 1, "", "set_model_training_config"], [24, 2, 1, "", "set_natural_language_explanation"], [24, 2, 1, "", "set_project_feature_group_config"], [24, 2, 1, "", "set_streaming_retention_policy"], [24, 2, 1, "", "snapshot_streaming_data"], [24, 2, 1, "", "start_batch_prediction"], [24, 2, 1, "", "start_deployment"], [24, 2, 1, "", "stop_deployment"], [24, 2, 1, "", "stream_message"], [24, 2, 1, "", "streaming_evaluate_prompt"], [24, 2, 1, "", "train_model"], [24, 2, 1, "", "transcribe_audio"], [24, 2, 1, "", "transfer_style"], [24, 2, 1, "", "unset_feature_as_annotatable_feature"], [24, 2, 1, "", "update_agent"], [24, 2, 1, "", "update_agent_with_function"], [24, 2, 1, "", "update_algorithm"], [24, 2, 1, "", "update_algorithm_from_function"], [24, 2, 1, "", "update_annotation_status"], [24, 2, 1, "", "update_batch_prediction"], [24, 2, 1, "", "update_custom_loss_function"], [24, 2, 1, "", "update_custom_loss_function_with_source_code"], [24, 2, 1, "", "update_custom_metric"], [24, 2, 1, "", "update_custom_metric_from_function"], [24, 2, 1, "", "update_dataset_feature_group_feature_expression"], [24, 2, 1, "", "update_deployment"], [24, 2, 1, "", "update_feature"], [24, 2, 1, "", "update_feature_group"], [24, 2, 1, "", "update_feature_group_from_pandas_df"], [24, 2, 1, "", "update_feature_group_from_spark_df"], [24, 2, 1, "", "update_feature_group_function_definition"], [24, 2, 1, "", "update_feature_group_git"], [24, 2, 1, "", "update_feature_group_python_function"], [24, 2, 1, "", "update_feature_group_python_function_bindings"], [24, 2, 1, "", "update_feature_group_sql_definition"], [24, 2, 1, "", "update_feature_group_template"], [24, 2, 1, "", "update_feature_group_template_bindings"], [24, 2, 1, "", "update_feature_group_zip"], [24, 2, 1, "", "update_graph_dashboard"], [24, 2, 1, "", "update_graph_to_dashboard"], [24, 2, 1, "", "update_module"], [24, 2, 1, "", "update_module_from_notebook"], [24, 2, 1, "", "update_monitor_alert"], [24, 2, 1, "", "update_nested_feature"], [24, 2, 1, "", "update_pipeline"], [24, 2, 1, "", "update_pipeline_step"], [24, 2, 1, "", "update_pipeline_step_from_function"], [24, 2, 1, "", "update_point_in_time_feature"], [24, 2, 1, "", "update_point_in_time_group"], [24, 2, 1, "", "update_point_in_time_group_feature"], [24, 2, 1, "", "update_python_function"], [24, 2, 1, "", "update_python_function_code"], [24, 2, 1, "", "update_python_model"], [24, 2, 1, "", "update_python_model_git"], [24, 2, 1, "", "update_python_model_zip"], [24, 2, 1, "", "update_refresh_policy"], [24, 2, 1, "", "update_vector_store"], [24, 2, 1, "", "update_webhook"], [24, 2, 1, "", "upload_part"], [24, 2, 1, "", "upsert_data"], [24, 2, 1, "", "upsert_item_attributes"], [24, 2, 1, "", "upsert_item_embeddings"], [24, 2, 1, "", "upsert_multiple_data"], [24, 2, 1, "", "upsert_multiple_item_attributes"], [24, 2, 1, "", "upsert_multiple_item_embeddings"], [24, 2, 1, "", "upsert_multiple_user_attributes"], [24, 2, 1, "", "upsert_user_attributes"], [24, 2, 1, "", "verify_application_connector"], [24, 2, 1, "", "verify_database_connector"], [24, 2, 1, "", "verify_file_connector"], [24, 2, 1, "", "verify_streaming_connector"]], "abacusai.client.ApiException": [[24, 2, 1, "", "__str__"]], "abacusai.client.BaseApiClient": [[24, 2, 1, "", "_build_class"], [24, 2, 1, "", "_call_api"], [24, 2, 1, "", "_clean_api_objects"], [24, 2, 1, "", "_get_prediction_endpoint"], [24, 2, 1, "", "_get_streaming_endpoint"], [24, 2, 1, "", "_poll"], [24, 2, 1, "", "_request"], [24, 2, 1, "", "_upload_from_pandas"], [24, 2, 1, "", "_upload_from_spark"], [24, 2, 1, "", "_validate_pandas_df"], [24, 3, 1, "", "client_version"]], "abacusai.client.ReadOnlyClient": [[24, 2, 1, "", "delete_graph_from_dashboard"], [24, 2, 1, "", "describe_algorithm"], [24, 2, 1, "", "describe_batch_prediction"], [24, 2, 1, "", "describe_batch_prediction_version"], [24, 2, 1, "", "describe_custom_loss_function"], [24, 2, 1, "", "describe_custom_metric"], [24, 2, 1, "", "describe_custom_metric_version"], [24, 2, 1, "", "describe_dataset"], [24, 2, 1, "", "describe_dataset_version"], [24, 2, 1, "", "describe_deployment"], [24, 2, 1, "", "describe_eda"], [24, 2, 1, "", "describe_eda_version"], [24, 2, 1, "", "describe_feature_group"], [24, 2, 1, "", "describe_feature_group_by_table_name"], [24, 2, 1, "", "describe_feature_group_export"], [24, 2, 1, "", "describe_feature_group_template"], [24, 2, 1, "", "describe_feature_group_version"], [24, 2, 1, "", "describe_graph_dashboard"], [24, 2, 1, "", "describe_graph_for_dashboard"], [24, 2, 1, "", "describe_model"], [24, 2, 1, "", "describe_model_artifacts_export"], [24, 2, 1, "", "describe_model_monitor"], [24, 2, 1, "", "describe_model_monitor_version"], [24, 2, 1, "", "describe_model_version"], [24, 2, 1, "", "describe_module"], [24, 2, 1, "", "describe_monitor_alert"], [24, 2, 1, "", "describe_monitor_alert_version"], [24, 2, 1, "", "describe_organization_group"], [24, 2, 1, "", "describe_pipeline_step"], [24, 2, 1, "", "describe_pipeline_step_by_name"], [24, 2, 1, "", "describe_pipeline_version"], [24, 2, 1, "", "describe_problem_type"], [24, 2, 1, "", "describe_project"], [24, 2, 1, "", "describe_project_feature_group"], [24, 2, 1, "", "describe_python_function"], [24, 2, 1, "", "describe_refresh_pipeline_run"], [24, 2, 1, "", "describe_refresh_policy"], [24, 2, 1, "", "describe_train_test_data_split_feature_group"], [24, 2, 1, "", "describe_train_test_data_split_feature_group_version"], [24, 2, 1, "", "describe_upload"], [24, 2, 1, "", "describe_use_case_requirements"], [24, 2, 1, "", "describe_user"], [24, 2, 1, "", "describe_vector_store"], [24, 2, 1, "", "describe_vector_store_by_name"], [24, 2, 1, "", "describe_vector_store_version"], [24, 2, 1, "", "describe_webhook"], [24, 2, 1, "", "download_batch_prediction_result_chunk"], [24, 2, 1, "", "download_execute_feature_group_operation_result_part_chunk"], [24, 2, 1, "", "execute_async_feature_group_operation"], [24, 2, 1, "", "export_custom_model_version"], [24, 2, 1, "", "generate_natural_language_explanation"], [24, 2, 1, "", "get_annotations_status"], [24, 2, 1, "", "get_api_endpoint"], [24, 2, 1, "", "get_batch_prediction_connector_errors"], [24, 2, 1, "", "get_chat_session"], [24, 2, 1, "", "get_collinearity_for_feature"], [24, 2, 1, "", "get_database_connector_object_schema"], [24, 2, 1, "", "get_dataset_schema"], [24, 2, 1, "", "get_dataset_version_metrics"], [24, 2, 1, "", "get_deployment_conversation"], [24, 2, 1, "", "get_docstore_document"], [24, 2, 1, "", "get_docstore_image"], [24, 2, 1, "", "get_drift_for_feature"], [24, 2, 1, "", "get_eda_collinearity"], [24, 2, 1, "", "get_eda_data_consistency"], [24, 2, 1, "", "get_eda_forecasting_analysis"], [24, 2, 1, "", "get_execute_feature_group_operation_result_part_count"], [24, 2, 1, "", "get_feature_association"], [24, 2, 1, "", "get_feature_group_export_connector_errors"], [24, 2, 1, "", "get_feature_group_schema"], [24, 2, 1, "", "get_feature_group_version_export_download_url"], [24, 2, 1, "", "get_feature_group_version_metrics"], [24, 2, 1, "", "get_feature_importance_by_model_version"], [24, 2, 1, "", "get_file_connector_instructions"], [24, 2, 1, "", "get_materialization_logs"], [24, 2, 1, "", "get_model_metrics"], [24, 2, 1, "", "get_model_monitor_chart_from_organization"], [24, 2, 1, "", "get_model_monitor_summary"], [24, 2, 1, "", "get_model_monitor_summary_from_organization"], [24, 2, 1, "", "get_model_monitoring_logs"], [24, 2, 1, "", "get_model_training_types_for_deployment"], [24, 2, 1, "", "get_natural_language_explanation"], [24, 2, 1, "", "get_outliers_for_batch_prediction_feature"], [24, 2, 1, "", "get_outliers_for_feature"], [24, 2, 1, "", "get_prediction_drift"], [24, 2, 1, "", "get_project_feature_group_config"], [24, 2, 1, "", "get_recent_feature_group_streamed_data"], [24, 2, 1, "", "get_step_version_logs"], [24, 2, 1, "", "get_training_data_logs"], [24, 2, 1, "", "get_training_logs"], [24, 2, 1, "", "infer_feature_mappings"], [24, 2, 1, "", "list_algorithms"], [24, 2, 1, "", "list_api_keys"], [24, 2, 1, "", "list_application_connector_objects"], [24, 2, 1, "", "list_application_connectors"], [24, 2, 1, "", "list_batch_prediction_versions"], [24, 2, 1, "", "list_batch_predictions"], [24, 2, 1, "", "list_chat_sessions"], [24, 2, 1, "", "list_custom_loss_functions"], [24, 2, 1, "", "list_custom_metrics"], [24, 2, 1, "", "list_database_connector_objects"], [24, 2, 1, "", "list_database_connectors"], [24, 2, 1, "", "list_dataset_versions"], [24, 2, 1, "", "list_datasets"], [24, 2, 1, "", "list_deployment_conversations"], [24, 2, 1, "", "list_deployment_tokens"], [24, 2, 1, "", "list_deployment_webhooks"], [24, 2, 1, "", "list_deployments"], [24, 2, 1, "", "list_eda"], [24, 2, 1, "", "list_eda_versions"], [24, 2, 1, "", "list_feature_group_exports"], [24, 2, 1, "", "list_feature_group_modifiers"], [24, 2, 1, "", "list_feature_group_templates"], [24, 2, 1, "", "list_feature_group_versions"], [24, 2, 1, "", "list_feature_groups"], [24, 2, 1, "", "list_file_connectors"], [24, 2, 1, "", "list_graph_dashboards"], [24, 2, 1, "", "list_model_artifacts_exports"], [24, 2, 1, "", "list_model_monitor_versions"], [24, 2, 1, "", "list_model_monitors"], [24, 2, 1, "", "list_model_versions"], [24, 2, 1, "", "list_models"], [24, 2, 1, "", "list_modules"], [24, 2, 1, "", "list_monitor_alert_versions_for_monitor_version"], [24, 2, 1, "", "list_monitor_alerts_for_monitor"], [24, 2, 1, "", "list_organization_groups"], [24, 2, 1, "", "list_organization_model_monitors"], [24, 2, 1, "", "list_organization_users"], [24, 2, 1, "", "list_pipeline_version_logs"], [24, 2, 1, "", "list_pipelines"], [24, 2, 1, "", "list_project_feature_group_templates"], [24, 2, 1, "", "list_project_feature_groups"], [24, 2, 1, "", "list_projects"], [24, 2, 1, "", "list_python_function_feature_groups"], [24, 2, 1, "", "list_python_functions"], [24, 2, 1, "", "list_refresh_pipeline_runs"], [24, 2, 1, "", "list_refresh_policies"], [24, 2, 1, "", "list_streaming_connectors"], [24, 2, 1, "", "list_streaming_tokens"], [24, 2, 1, "", "list_uploads"], [24, 2, 1, "", "list_use_cases"], [24, 2, 1, "", "list_vector_store_versions"], [24, 2, 1, "", "list_vector_stores"], [24, 2, 1, "", "model_monitor_version_metric_data"], [24, 2, 1, "", "pause_pipeline_refresh_schedule"], [24, 2, 1, "", "query_feature_group_code_generator"], [24, 2, 1, "", "render_feature_group_data_for_llm"], [24, 2, 1, "", "resume_pipeline_refresh_schedule"], [24, 2, 1, "", "search_feature_groups"], [24, 2, 1, "", "set_dataset_database_connector_config"], [24, 2, 1, "", "set_default_model_algorithm"], [24, 2, 1, "", "set_model_objective"], [24, 2, 1, "", "suggest_feature_group_template_for_feature_group"], [24, 2, 1, "", "unset_pipeline_refresh_schedule"], [24, 2, 1, "", "validate_project"], [24, 2, 1, "", "verify_and_describe_annotation"]], "abacusai.code_source": [[25, 1, 1, "", "CodeSource"]], "abacusai.code_source.CodeSource": [[25, 2, 1, "", "__repr__"], [25, 2, 1, "", "to_dict"]], "abacusai.concatenation_config": [[26, 1, 1, "", "ConcatenationConfig"]], "abacusai.concatenation_config.ConcatenationConfig": [[26, 2, 1, "", "__repr__"], [26, 2, 1, "", "to_dict"]], "abacusai.cryptography": [[27, 6, 1, "", "get_public_key"], [27, 6, 1, "", "verify_response"]], "abacusai.custom_loss_function": [[28, 1, 1, "", "CustomLossFunction"]], "abacusai.custom_loss_function.CustomLossFunction": [[28, 2, 1, "", "__repr__"], [28, 2, 1, "", "to_dict"]], "abacusai.custom_metric": [[29, 1, 1, "", "CustomMetric"]], "abacusai.custom_metric.CustomMetric": [[29, 2, 1, "", "__repr__"], [29, 2, 1, "", "to_dict"]], "abacusai.custom_metric_version": [[30, 1, 1, "", "CustomMetricVersion"]], "abacusai.custom_metric_version.CustomMetricVersion": [[30, 2, 1, "", "__repr__"], [30, 2, 1, "", "describe"], [30, 2, 1, "", "refresh"], [30, 2, 1, "", "to_dict"]], "abacusai.custom_train_function_info": [[31, 1, 1, "", "CustomTrainFunctionInfo"]], "abacusai.custom_train_function_info.CustomTrainFunctionInfo": [[31, 2, 1, "", "__repr__"], [31, 2, 1, "", "to_dict"]], "abacusai.data_consistency_duplication": [[32, 1, 1, "", "DataConsistencyDuplication"]], "abacusai.data_consistency_duplication.DataConsistencyDuplication": [[32, 2, 1, "", "__repr__"], [32, 2, 1, "", "to_dict"]], "abacusai.data_metrics": [[33, 1, 1, "", "DataMetrics"]], "abacusai.data_metrics.DataMetrics": [[33, 2, 1, "", "__repr__"], [33, 2, 1, "", "to_dict"]], "abacusai.data_prep_logs": [[34, 1, 1, "", "DataPrepLogs"]], "abacusai.data_prep_logs.DataPrepLogs": [[34, 2, 1, "", "__repr__"], [34, 2, 1, "", "to_dict"]], "abacusai.data_quality_results": [[35, 1, 1, "", "DataQualityResults"]], "abacusai.data_quality_results.DataQualityResults": [[35, 2, 1, "", "__repr__"], [35, 2, 1, "", "to_dict"]], "abacusai.database_connector": [[36, 1, 1, "", "DatabaseConnector"]], "abacusai.database_connector.DatabaseConnector": [[36, 2, 1, "", "__repr__"], [36, 2, 1, "", "delete"], [36, 2, 1, "", "get_object_schema"], [36, 2, 1, "", "list_objects"], [36, 2, 1, "", "rename"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "verify"]], "abacusai.dataset": [[37, 1, 1, "", "Dataset"]], "abacusai.dataset.Dataset": [[37, 2, 1, "", "__repr__"], [37, 2, 1, "", "create_refresh_policy"], [37, 2, 1, "", "create_version_from_application_connector"], [37, 2, 1, "", "create_version_from_database_connector"], [37, 2, 1, "", "create_version_from_file_connector"], [37, 2, 1, "", "create_version_from_upload"], [37, 2, 1, "", "delete"], [37, 2, 1, "", "describe"], [37, 2, 1, "", "describe_feature_group"], [37, 2, 1, "", "get_schema"], [37, 2, 1, "", "get_status"], [37, 2, 1, "", "list_refresh_policies"], [37, 2, 1, "", "list_versions"], [37, 2, 1, "", "refresh"], [37, 2, 1, "", "set_column_data_type"], [37, 2, 1, "", "set_database_connector_config"], [37, 2, 1, "", "set_streaming_retention_policy"], [37, 2, 1, "", "snapshot_streaming_data"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "wait_for_import"], [37, 2, 1, "", "wait_for_inspection"]], "abacusai.dataset_column": [[38, 1, 1, "", "DatasetColumn"]], "abacusai.dataset_column.DatasetColumn": [[38, 2, 1, "", "__repr__"], [38, 2, 1, "", "to_dict"]], "abacusai.dataset_version": [[39, 1, 1, "", "DatasetVersion"]], "abacusai.dataset_version.DatasetVersion": [[39, 2, 1, "", "__repr__"], [39, 2, 1, "", "describe"], [39, 2, 1, "", "get_metrics"], [39, 2, 1, "", "get_status"], [39, 2, 1, "", "refresh"], [39, 2, 1, "", "to_dict"], [39, 2, 1, "", "wait_for_import"], [39, 2, 1, "", "wait_for_inspection"]], "abacusai.deployment": [[40, 1, 1, "", "Deployment"]], "abacusai.deployment.Deployment": [[40, 2, 1, "", "__repr__"], [40, 2, 1, "", "create_batch_prediction"], [40, 2, 1, "", "create_conversation"], [40, 2, 1, "", "create_refresh_policy"], [40, 2, 1, "", "create_webhook"], [40, 2, 1, "", "delete"], [40, 2, 1, "", "describe"], [40, 2, 1, "", "get_status"], [40, 2, 1, "", "list_conversations"], [40, 2, 1, "", "list_refresh_policies"], [40, 2, 1, "", "list_webhooks"], [40, 2, 1, "", "refresh"], [40, 2, 1, "", "remove_feature_group_export_output"], [40, 2, 1, "", "rename"], [40, 2, 1, "", "set_auto"], [40, 2, 1, "", "set_feature_group_export_database_connector_output"], [40, 2, 1, "", "set_feature_group_export_file_connector_output"], [40, 2, 1, "", "set_feature_group_version"], [40, 2, 1, "", "set_model_version"], [40, 2, 1, "", "start"], [40, 2, 1, "", "stop"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "update"], [40, 2, 1, "", "wait_for_deployment"], [40, 2, 1, "", "wait_for_pending_deployment_update"]], "abacusai.deployment_auth_token": [[41, 1, 1, "", "DeploymentAuthToken"]], "abacusai.deployment_auth_token.DeploymentAuthToken": [[41, 2, 1, "", "__repr__"], [41, 2, 1, "", "to_dict"]], "abacusai.deployment_conversation": [[42, 1, 1, "", "DeploymentConversation"]], "abacusai.deployment_conversation.DeploymentConversation": [[42, 2, 1, "", "__repr__"], [42, 2, 1, "", "delete"], [42, 2, 1, "", "get"], [42, 2, 1, "", "to_dict"]], "abacusai.deployment_conversation_event": [[43, 1, 1, "", "DeploymentConversationEvent"]], "abacusai.deployment_conversation_event.DeploymentConversationEvent": [[43, 2, 1, "", "__repr__"], [43, 2, 1, "", "to_dict"]], "abacusai.document": [[44, 1, 1, "", "Document"]], "abacusai.document.Document": [[44, 2, 1, "", "__repr__"], [44, 2, 1, "", "to_dict"]], "abacusai.document_annotation": [[45, 1, 1, "", "DocumentAnnotation"]], "abacusai.document_annotation.DocumentAnnotation": [[45, 2, 1, "", "__repr__"], [45, 2, 1, "", "to_dict"]], "abacusai.document_store": [[46, 1, 1, "", "DocumentStore"]], "abacusai.document_store.DocumentStore": [[46, 2, 1, "", "__repr__"], [46, 2, 1, "", "to_dict"]], "abacusai.document_store_import": [[47, 1, 1, "", "DocumentStoreImport"]], "abacusai.document_store_import.DocumentStoreImport": [[47, 2, 1, "", "__repr__"], [47, 2, 1, "", "to_dict"]], "abacusai.drift_distribution": [[48, 1, 1, "", "DriftDistribution"]], "abacusai.drift_distribution.DriftDistribution": [[48, 2, 1, "", "__repr__"], [48, 2, 1, "", "to_dict"]], "abacusai.drift_distributions": [[49, 1, 1, "", "DriftDistributions"]], "abacusai.drift_distributions.DriftDistributions": [[49, 2, 1, "", "__repr__"], [49, 2, 1, "", "to_dict"]], "abacusai.eda": [[50, 1, 1, "", "Eda"]], "abacusai.eda.Eda": [[50, 2, 1, "", "__repr__"], [50, 2, 1, "", "delete"], [50, 2, 1, "", "describe"], [50, 2, 1, "", "list_versions"], [50, 2, 1, "", "refresh"], [50, 2, 1, "", "rename"], [50, 2, 1, "", "rerun"], [50, 2, 1, "", "to_dict"]], "abacusai.eda_chart_description": [[51, 1, 1, "", "EdaChartDescription"]], "abacusai.eda_chart_description.EdaChartDescription": [[51, 2, 1, "", "__repr__"], [51, 2, 1, "", "to_dict"]], "abacusai.eda_collinearity": [[52, 1, 1, "", "EdaCollinearity"]], "abacusai.eda_collinearity.EdaCollinearity": [[52, 2, 1, "", "__repr__"], [52, 2, 1, "", "to_dict"]], "abacusai.eda_data_consistency": [[53, 1, 1, "", "EdaDataConsistency"]], "abacusai.eda_data_consistency.EdaDataConsistency": [[53, 2, 1, "", "__repr__"], [53, 2, 1, "", "to_dict"]], "abacusai.eda_feature_association": [[54, 1, 1, "", "EdaFeatureAssociation"]], "abacusai.eda_feature_association.EdaFeatureAssociation": [[54, 2, 1, "", "__repr__"], [54, 2, 1, "", "to_dict"]], "abacusai.eda_feature_collinearity": [[55, 1, 1, "", "EdaFeatureCollinearity"]], "abacusai.eda_feature_collinearity.EdaFeatureCollinearity": [[55, 2, 1, "", "__repr__"], [55, 2, 1, "", "to_dict"]], "abacusai.eda_forecasting_analysis": [[56, 1, 1, "", "EdaForecastingAnalysis"]], "abacusai.eda_forecasting_analysis.EdaForecastingAnalysis": [[56, 2, 1, "", "__repr__"], [56, 2, 1, "", "to_dict"]], "abacusai.eda_version": [[57, 1, 1, "", "EdaVersion"]], "abacusai.eda_version.EdaVersion": [[57, 2, 1, "", "__repr__"], [57, 2, 1, "", "delete"], [57, 2, 1, "", "describe"], [57, 2, 1, "", "get_collinearity_for_feature"], [57, 2, 1, "", "get_eda_collinearity"], [57, 2, 1, "", "get_eda_data_consistency"], [57, 2, 1, "", "get_eda_forecasting_analysis"], [57, 2, 1, "", "get_feature_association"], [57, 2, 1, "", "get_status"], [57, 2, 1, "", "refresh"], [57, 2, 1, "", "to_dict"], [57, 2, 1, "", "wait_for_eda"]], "abacusai.embedding_feature_drift_distribution": [[58, 1, 1, "", "EmbeddingFeatureDriftDistribution"]], "abacusai.embedding_feature_drift_distribution.EmbeddingFeatureDriftDistribution": [[58, 2, 1, "", "__repr__"], [58, 2, 1, "", "to_dict"]], "abacusai.execute_feature_group_operation": [[59, 1, 1, "", "ExecuteFeatureGroupOperation"]], "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation": [[59, 2, 1, "", "__repr__"], [59, 2, 1, "", "_download_avro_file"], [59, 2, 1, "", "describe"], [59, 2, 1, "", "get_status"], [59, 2, 1, "", "load_as_pandas"], [59, 2, 1, "", "refresh"], [59, 2, 1, "", "to_dict"], [59, 2, 1, "", "wait_for_execution"], [59, 2, 1, "", "wait_for_results"]], "abacusai.feature": [[60, 1, 1, "", "Feature"]], "abacusai.feature.Feature": [[60, 2, 1, "", "__repr__"], [60, 2, 1, "", "to_dict"]], "abacusai.feature_distribution": [[61, 1, 1, "", "FeatureDistribution"]], "abacusai.feature_distribution.FeatureDistribution": [[61, 2, 1, "", "__repr__"], [61, 2, 1, "", "to_dict"]], "abacusai.feature_drift_summary": [[62, 1, 1, "", "FeatureDriftSummary"]], "abacusai.feature_drift_summary.FeatureDriftSummary": [[62, 2, 1, "", "__repr__"], [62, 2, 1, "", "to_dict"]], "abacusai.feature_group": [[63, 1, 1, "", "FeatureGroup"]], "abacusai.feature_group.FeatureGroup": [[63, 2, 1, "", "__repr__"], [63, 2, 1, "", "add_annotatable_feature"], [63, 2, 1, "", "add_annotation_label"], [63, 2, 1, "", "add_feature_tag"], [63, 2, 1, "", "add_organization_group_to_modifiers"], [63, 2, 1, "", "add_tag"], [63, 2, 1, "", "add_to_project"], [63, 2, 1, "", "add_user_to_modifiers"], [63, 2, 1, "", "append_data"], [63, 2, 1, "", "append_multiple_data"], [63, 2, 1, "", "concatenate_data"], [63, 2, 1, "", "create_feature"], [63, 2, 1, "", "create_nested_feature"], [63, 2, 1, "", "create_point_in_time_feature"], [63, 2, 1, "", "create_point_in_time_group"], [63, 2, 1, "", "create_point_in_time_group_feature"], [63, 2, 1, "", "create_sampling"], [63, 2, 1, "", "create_template"], [63, 2, 1, "", "create_version"], [63, 2, 1, "", "delete"], [63, 2, 1, "", "delete_feature"], [63, 2, 1, "", "delete_nested_feature"], [63, 2, 1, "", "delete_point_in_time_group"], [63, 2, 1, "", "describe"], [63, 2, 1, "", "describe_annotation"], [63, 2, 1, "", "describe_dataset"], [63, 2, 1, "", "detach_from_template"], [63, 2, 1, "", "generate_natural_language_explanation"], [63, 2, 1, "", "get_annotations_status"], [63, 2, 1, "", "get_document_to_annotate"], [63, 2, 1, "", "get_natural_language_explanation"], [63, 2, 1, "", "get_project_config"], [63, 2, 1, "", "get_recent_streamed_data"], [63, 2, 1, "", "get_schema"], [63, 2, 1, "", "get_status"], [63, 2, 1, "", "import_annotation_labels"], [63, 2, 1, "", "invalidate_streaming_data"], [63, 2, 1, "", "list_exports"], [63, 2, 1, "", "list_modifiers"], [63, 2, 1, "", "list_versions"], [63, 2, 1, "", "load_as_pandas"], [63, 2, 1, "", "materialize"], [63, 2, 1, "", "refresh"], [63, 2, 1, "", "remove_annotation_label"], [63, 2, 1, "", "remove_concatenation_config"], [63, 2, 1, "", "remove_feature_tag"], [63, 2, 1, "", "remove_from_project"], [63, 2, 1, "", "remove_organization_group_from_modifiers"], [63, 2, 1, "", "remove_tag"], [63, 2, 1, "", "remove_user_from_modifiers"], [63, 2, 1, "", "render_data_for_llm"], [63, 2, 1, "", "set_annotation_status_feature"], [63, 2, 1, "", "set_feature_as_annotatable_feature"], [63, 2, 1, "", "set_feature_type"], [63, 2, 1, "", "set_indexing_config"], [63, 2, 1, "", "set_merge_config"], [63, 2, 1, "", "set_modifier_lock"], [63, 2, 1, "", "set_project_config"], [63, 2, 1, "", "set_sampling_config"], [63, 2, 1, "", "set_schema"], [63, 2, 1, "", "set_transform_config"], [63, 2, 1, "", "set_type"], [63, 2, 1, "", "suggest_template_for"], [63, 2, 1, "", "to_dict"], [63, 2, 1, "", "unset_feature_as_annotatable_feature"], [63, 2, 1, "", "update"], [63, 2, 1, "", "update_annotation_status"], [63, 2, 1, "", "update_dataset_feature_expression"], [63, 2, 1, "", "update_feature"], [63, 2, 1, "", "update_function_definition"], [63, 2, 1, "", "update_git"], [63, 2, 1, "", "update_nested_feature"], [63, 2, 1, "", "update_point_in_time_feature"], [63, 2, 1, "", "update_point_in_time_group"], [63, 2, 1, "", "update_point_in_time_group_feature"], [63, 2, 1, "", "update_python_function"], [63, 2, 1, "", "update_python_function_bindings"], [63, 2, 1, "", "update_sql_definition"], [63, 2, 1, "", "update_template_bindings"], [63, 2, 1, "", "update_zip"], [63, 2, 1, "", "upsert_data"], [63, 2, 1, "", "upsert_multiple_data"], [63, 2, 1, "", "verify_and_describe_annotation"], [63, 2, 1, "", "wait_for_dataset"], [63, 2, 1, "", "wait_for_materialization"], [63, 2, 1, "", "wait_for_streaming_ready"], [63, 2, 1, "", "wait_for_upload"]], "abacusai.feature_group_export": [[64, 1, 1, "", "FeatureGroupExport"]], "abacusai.feature_group_export.FeatureGroupExport": [[64, 2, 1, "", "__repr__"], [64, 2, 1, "", "describe"], [64, 2, 1, "", "get_connector_errors"], [64, 2, 1, "", "get_feature_group_version_export_download_url"], [64, 2, 1, "", "get_results"], [64, 2, 1, "", "get_status"], [64, 2, 1, "", "refresh"], [64, 2, 1, "", "to_dict"], [64, 2, 1, "", "wait_for_export"], [64, 2, 1, "", "wait_for_results"]], "abacusai.feature_group_export_config": [[65, 1, 1, "", "FeatureGroupExportConfig"]], "abacusai.feature_group_export_config.FeatureGroupExportConfig": [[65, 2, 1, "", "__repr__"], [65, 2, 1, "", "to_dict"]], "abacusai.feature_group_export_download_url": [[66, 1, 1, "", "FeatureGroupExportDownloadUrl"]], "abacusai.feature_group_export_download_url.FeatureGroupExportDownloadUrl": [[66, 2, 1, "", "__repr__"], [66, 2, 1, "", "to_dict"]], "abacusai.feature_group_lineage": [[67, 1, 1, "", "FeatureGroupLineage"]], "abacusai.feature_group_lineage.FeatureGroupLineage": [[67, 2, 1, "", "__repr__"], [67, 2, 1, "", "to_dict"]], "abacusai.feature_group_refresh_export_config": [[68, 1, 1, "", "FeatureGroupRefreshExportConfig"]], "abacusai.feature_group_refresh_export_config.FeatureGroupRefreshExportConfig": [[68, 2, 1, "", "__repr__"], [68, 2, 1, "", "to_dict"]], "abacusai.feature_group_template": [[69, 1, 1, "", "FeatureGroupTemplate"]], "abacusai.feature_group_template.FeatureGroupTemplate": [[69, 2, 1, "", "__repr__"], [69, 2, 1, "", "delete"], [69, 2, 1, "", "describe"], [69, 2, 1, "", "preview_resolution"], [69, 2, 1, "", "refresh"], [69, 2, 1, "", "to_dict"], [69, 2, 1, "", "update"]], "abacusai.feature_group_template_variable_options": [[70, 1, 1, "", "FeatureGroupTemplateVariableOptions"]], "abacusai.feature_group_template_variable_options.FeatureGroupTemplateVariableOptions": [[70, 2, 1, "", "__repr__"], [70, 2, 1, "", "to_dict"]], "abacusai.feature_group_version": [[71, 1, 1, "", "FeatureGroupVersion"]], "abacusai.feature_group_version.FeatureGroupVersion": [[71, 2, 1, "", "__repr__"], [71, 2, 1, "", "_download_avro_file"], [71, 2, 1, "", "create_snapshot_feature_group"], [71, 2, 1, "", "describe"], [71, 2, 1, "", "export_to_console"], [71, 2, 1, "", "export_to_database_connector"], [71, 2, 1, "", "export_to_file_connector"], [71, 2, 1, "", "get_materialization_logs"], [71, 2, 1, "", "get_metrics"], [71, 2, 1, "", "get_status"], [71, 2, 1, "", "load_as_pandas"], [71, 2, 1, "", "refresh"], [71, 2, 1, "", "to_dict"], [71, 2, 1, "", "wait_for_materialization"], [71, 2, 1, "", "wait_for_results"]], "abacusai.feature_importance": [[72, 1, 1, "", "FeatureImportance"]], "abacusai.feature_importance.FeatureImportance": [[72, 2, 1, "", "__repr__"], [72, 2, 1, "", "to_dict"]], "abacusai.feature_mapping": [[73, 1, 1, "", "FeatureMapping"]], "abacusai.feature_mapping.FeatureMapping": [[73, 2, 1, "", "__repr__"], [73, 2, 1, "", "to_dict"]], "abacusai.feature_record": [[74, 1, 1, "", "FeatureRecord"]], "abacusai.feature_record.FeatureRecord": [[74, 2, 1, "", "__repr__"], [74, 2, 1, "", "to_dict"]], "abacusai.file_connector": [[75, 1, 1, "", "FileConnector"]], "abacusai.file_connector.FileConnector": [[75, 2, 1, "", "__repr__"], [75, 2, 1, "", "to_dict"]], "abacusai.file_connector_instructions": [[76, 1, 1, "", "FileConnectorInstructions"]], "abacusai.file_connector_instructions.FileConnectorInstructions": [[76, 2, 1, "", "__repr__"], [76, 2, 1, "", "to_dict"]], "abacusai.file_connector_verification": [[77, 1, 1, "", "FileConnectorVerification"]], "abacusai.file_connector_verification.FileConnectorVerification": [[77, 2, 1, "", "__repr__"], [77, 2, 1, "", "to_dict"]], "abacusai.forecasting_analysis_graph_data": [[78, 1, 1, "", "ForecastingAnalysisGraphData"]], "abacusai.forecasting_analysis_graph_data.ForecastingAnalysisGraphData": [[78, 2, 1, "", "__repr__"], [78, 2, 1, "", "to_dict"]], "abacusai.function_logs": [[79, 1, 1, "", "FunctionLogs"]], "abacusai.function_logs.FunctionLogs": [[79, 2, 1, "", "__repr__"], [79, 2, 1, "", "to_dict"]], "abacusai.generated_pit_feature_config_option": [[80, 1, 1, "", "GeneratedPitFeatureConfigOption"]], "abacusai.generated_pit_feature_config_option.GeneratedPitFeatureConfigOption": [[80, 2, 1, "", "__repr__"], [80, 2, 1, "", "to_dict"]], "abacusai.graph_dashboard": [[81, 1, 1, "", "GraphDashboard"]], "abacusai.graph_dashboard.GraphDashboard": [[81, 2, 1, "", "__repr__"], [81, 2, 1, "", "delete"], [81, 2, 1, "", "describe"], [81, 2, 1, "", "refresh"], [81, 2, 1, "", "to_dict"], [81, 2, 1, "", "update"]], "abacusai.indexing_config": [[83, 1, 1, "", "IndexingConfig"]], "abacusai.indexing_config.IndexingConfig": [[83, 2, 1, "", "__repr__"], [83, 2, 1, "", "to_dict"]], "abacusai.inferred_feature_mappings": [[84, 1, 1, "", "InferredFeatureMappings"]], "abacusai.inferred_feature_mappings.InferredFeatureMappings": [[84, 2, 1, "", "__repr__"], [84, 2, 1, "", "to_dict"]], "abacusai.item_statistics": [[85, 1, 1, "", "ItemStatistics"]], "abacusai.item_statistics.ItemStatistics": [[85, 2, 1, "", "__repr__"], [85, 2, 1, "", "to_dict"]], "abacusai.llm_code_block": [[86, 1, 1, "", "LlmCodeBlock"]], "abacusai.llm_code_block.LlmCodeBlock": [[86, 2, 1, "", "__repr__"], [86, 2, 1, "", "to_dict"]], "abacusai.llm_input": [[87, 1, 1, "", "LlmInput"]], "abacusai.llm_input.LlmInput": [[87, 2, 1, "", "__repr__"], [87, 2, 1, "", "to_dict"]], "abacusai.llm_parameters": [[88, 1, 1, "", "LlmParameters"]], "abacusai.llm_parameters.LlmParameters": [[88, 2, 1, "", "__repr__"], [88, 2, 1, "", "to_dict"]], "abacusai.llm_response": [[89, 1, 1, "", "LlmResponse"]], "abacusai.llm_response.LlmResponse": [[89, 2, 1, "", "__repr__"], [89, 2, 1, "", "to_dict"]], "abacusai.model": [[90, 1, 1, "", "Model"]], "abacusai.model.Model": [[90, 2, 1, "", "__repr__"], [90, 2, 1, "", "create_refresh_policy"], [90, 2, 1, "", "delete"], [90, 2, 1, "", "describe"], [90, 2, 1, "", "describe_train_test_data_split_feature_group"], [90, 2, 1, "", "get_metrics"], [90, 2, 1, "", "get_status"], [90, 2, 1, "", "get_train_test_feature_group_as_pandas"], [90, 2, 1, "", "get_training_types_for_deployment"], [90, 2, 1, "", "list_artifacts_exports"], [90, 2, 1, "", "list_refresh_policies"], [90, 2, 1, "", "list_versions"], [90, 2, 1, "", "refresh"], [90, 2, 1, "", "rename"], [90, 2, 1, "", "retrain"], [90, 2, 1, "", "set_default_algorithm"], [90, 2, 1, "", "set_prediction_params"], [90, 2, 1, "", "set_training_config"], [90, 2, 1, "", "to_dict"], [90, 2, 1, "", "update_agent"], [90, 2, 1, "", "update_python"], [90, 2, 1, "", "update_python_git"], [90, 2, 1, "", "update_python_zip"], [90, 2, 1, "", "wait_for_evaluation"], [90, 2, 1, "", "wait_for_full_automl"], [90, 2, 1, "", "wait_for_publish"], [90, 2, 1, "", "wait_for_training"]], "abacusai.model_artifacts_export": [[91, 1, 1, "", "ModelArtifactsExport"]], "abacusai.model_artifacts_export.ModelArtifactsExport": [[91, 2, 1, "", "__repr__"], [91, 2, 1, "", "describe"], [91, 2, 1, "", "get_status"], [91, 2, 1, "", "refresh"], [91, 2, 1, "", "to_dict"], [91, 2, 1, "", "wait_for_results"]], "abacusai.model_blueprint_export": [[92, 1, 1, "", "ModelBlueprintExport"]], "abacusai.model_blueprint_export.ModelBlueprintExport": [[92, 2, 1, "", "__repr__"], [92, 2, 1, "", "to_dict"]], "abacusai.model_blueprint_stage": [[93, 1, 1, "", "ModelBlueprintStage"]], "abacusai.model_blueprint_stage.ModelBlueprintStage": [[93, 2, 1, "", "__repr__"], [93, 2, 1, "", "to_dict"]], "abacusai.model_location": [[94, 1, 1, "", "ModelLocation"]], "abacusai.model_location.ModelLocation": [[94, 2, 1, "", "__repr__"], [94, 2, 1, "", "to_dict"]], "abacusai.model_metrics": [[95, 1, 1, "", "ModelMetrics"]], "abacusai.model_metrics.ModelMetrics": [[95, 2, 1, "", "__repr__"], [95, 2, 1, "", "to_dict"]], "abacusai.model_monitor": [[96, 1, 1, "", "ModelMonitor"]], "abacusai.model_monitor.ModelMonitor": [[96, 2, 1, "", "__repr__"], [96, 2, 1, "", "delete"], [96, 2, 1, "", "describe"], [96, 2, 1, "", "get_summary"], [96, 2, 1, "", "list_monitor_alerts_for_monitor"], [96, 2, 1, "", "list_versions"], [96, 2, 1, "", "refresh"], [96, 2, 1, "", "rename"], [96, 2, 1, "", "rerun"], [96, 2, 1, "", "to_dict"]], "abacusai.model_monitor_org_summary": [[97, 1, 1, "", "ModelMonitorOrgSummary"]], "abacusai.model_monitor_org_summary.ModelMonitorOrgSummary": [[97, 2, 1, "", "__repr__"], [97, 2, 1, "", "to_dict"]], "abacusai.model_monitor_summary": [[98, 1, 1, "", "ModelMonitorSummary"]], "abacusai.model_monitor_summary.ModelMonitorSummary": [[98, 2, 1, "", "__repr__"], [98, 2, 1, "", "to_dict"]], "abacusai.model_monitor_summary_from_org": [[99, 1, 1, "", "ModelMonitorSummaryFromOrg"]], "abacusai.model_monitor_summary_from_org.ModelMonitorSummaryFromOrg": [[99, 2, 1, "", "__repr__"], [99, 2, 1, "", "to_dict"]], "abacusai.model_monitor_version": [[100, 1, 1, "", "ModelMonitorVersion"]], "abacusai.model_monitor_version.ModelMonitorVersion": [[100, 2, 1, "", "__repr__"], [100, 2, 1, "", "delete"], [100, 2, 1, "", "describe"], [100, 2, 1, "", "get_drift_for_feature"], [100, 2, 1, "", "get_model_monitoring_logs"], [100, 2, 1, "", "get_outliers_for_feature"], [100, 2, 1, "", "get_prediction_drift"], [100, 2, 1, "", "get_status"], [100, 2, 1, "", "list_monitor_alert_versions_for_monitor_version"], [100, 2, 1, "", "metric_data"], [100, 2, 1, "", "refresh"], [100, 2, 1, "", "to_dict"], [100, 2, 1, "", "wait_for_monitor"]], "abacusai.model_monitor_version_metric_data": [[101, 1, 1, "", "ModelMonitorVersionMetricData"]], "abacusai.model_monitor_version_metric_data.ModelMonitorVersionMetricData": [[101, 2, 1, "", "__repr__"], [101, 2, 1, "", "to_dict"]], "abacusai.model_training_type_for_deployment": [[102, 1, 1, "", "ModelTrainingTypeForDeployment"]], "abacusai.model_training_type_for_deployment.ModelTrainingTypeForDeployment": [[102, 2, 1, "", "__repr__"], [102, 2, 1, "", "to_dict"]], "abacusai.model_upload": [[103, 1, 1, "", "ModelUpload"]], "abacusai.model_upload.ModelUpload": [[103, 2, 1, "", "__repr__"], [103, 2, 1, "", "to_dict"]], "abacusai.model_version": [[104, 1, 1, "", "ModelVersion"]], "abacusai.model_version.ModelVersion": [[104, 2, 1, "", "__repr__"], [104, 2, 1, "", "delete"], [104, 2, 1, "", "describe"], [104, 2, 1, "", "describe_train_test_data_split_feature_group_version"], [104, 2, 1, "", "export_custom"], [104, 2, 1, "", "export_model_artifact_as_feature_group"], [104, 2, 1, "", "get_feature_importance_by"], [104, 2, 1, "", "get_status"], [104, 2, 1, "", "get_train_test_feature_group_as_pandas"], [104, 2, 1, "", "get_training_data_logs"], [104, 2, 1, "", "get_training_logs"], [104, 2, 1, "", "refresh"], [104, 2, 1, "", "set_model_objective"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "wait_for_full_automl"], [104, 2, 1, "", "wait_for_training"]], "abacusai.modification_lock_info": [[105, 1, 1, "", "ModificationLockInfo"]], "abacusai.modification_lock_info.ModificationLockInfo": [[105, 2, 1, "", "__repr__"], [105, 2, 1, "", "to_dict"]], "abacusai.module": [[106, 1, 1, "", "Module"]], "abacusai.module.Module": [[106, 2, 1, "", "__repr__"], [106, 2, 1, "", "to_dict"]], "abacusai.monitor_alert": [[107, 1, 1, "", "MonitorAlert"]], "abacusai.monitor_alert.MonitorAlert": [[107, 2, 1, "", "__repr__"], [107, 2, 1, "", "delete"], [107, 2, 1, "", "describe"], [107, 2, 1, "", "refresh"], [107, 2, 1, "", "run"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "update"]], "abacusai.monitor_alert_version": [[108, 1, 1, "", "MonitorAlertVersion"]], "abacusai.monitor_alert_version.MonitorAlertVersion": [[108, 2, 1, "", "__repr__"], [108, 2, 1, "", "describe"], [108, 2, 1, "", "get_status"], [108, 2, 1, "", "refresh"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "wait_for_monitor_alert"]], "abacusai.natural_language_explanation": [[109, 1, 1, "", "NaturalLanguageExplanation"]], "abacusai.natural_language_explanation.NaturalLanguageExplanation": [[109, 2, 1, "", "__repr__"], [109, 2, 1, "", "to_dict"]], "abacusai.nested_feature": [[110, 1, 1, "", "NestedFeature"]], "abacusai.nested_feature.NestedFeature": [[110, 2, 1, "", "__repr__"], [110, 2, 1, "", "to_dict"]], "abacusai.null_violation": [[111, 1, 1, "", "NullViolation"]], "abacusai.null_violation.NullViolation": [[111, 2, 1, "", "__repr__"], [111, 2, 1, "", "to_dict"]], "abacusai.organization_group": [[112, 1, 1, "", "OrganizationGroup"]], "abacusai.organization_group.OrganizationGroup": [[112, 2, 1, "", "__repr__"], [112, 2, 1, "", "add_permission"], [112, 2, 1, "", "add_user_to"], [112, 2, 1, "", "delete"], [112, 2, 1, "", "describe"], [112, 2, 1, "", "refresh"], [112, 2, 1, "", "remove_permission"], [112, 2, 1, "", "remove_user_from"], [112, 2, 1, "", "set_default"], [112, 2, 1, "", "to_dict"]], "abacusai.organization_search_result": [[113, 1, 1, "", "OrganizationSearchResult"]], "abacusai.organization_search_result.OrganizationSearchResult": [[113, 2, 1, "", "__repr__"], [113, 2, 1, "", "to_dict"]], "abacusai.pipeline": [[114, 1, 1, "", "Pipeline"]], "abacusai.pipeline.Pipeline": [[114, 2, 1, "", "__repr__"], [114, 2, 1, "", "create_step"], [114, 2, 1, "", "delete"], [114, 2, 1, "", "describe"], [114, 2, 1, "", "describe_step_by_name"], [114, 2, 1, "", "list_versions"], [114, 2, 1, "", "pause_refresh_schedule"], [114, 2, 1, "", "refresh"], [114, 2, 1, "", "resume_refresh_schedule"], [114, 2, 1, "", "run"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "unset_refresh_schedule"], [114, 2, 1, "", "update"]], "abacusai.pipeline_reference": [[115, 1, 1, "", "PipelineReference"]], "abacusai.pipeline_reference.PipelineReference": [[115, 2, 1, "", "__repr__"], [115, 2, 1, "", "to_dict"]], "abacusai.pipeline_step": [[116, 1, 1, "", "PipelineStep"]], "abacusai.pipeline_step.PipelineStep": [[116, 2, 1, "", "__repr__"], [116, 2, 1, "", "delete"], [116, 2, 1, "", "describe"], [116, 2, 1, "", "refresh"], [116, 2, 1, "", "to_dict"], [116, 2, 1, "", "update"]], "abacusai.pipeline_step_version": [[117, 1, 1, "", "PipelineStepVersion"]], "abacusai.pipeline_step_version.PipelineStepVersion": [[117, 2, 1, "", "__repr__"], [117, 2, 1, "", "get_step_version_logs"], [117, 2, 1, "", "to_dict"]], "abacusai.pipeline_step_version_logs": [[118, 1, 1, "", "PipelineStepVersionLogs"]], "abacusai.pipeline_step_version_logs.PipelineStepVersionLogs": [[118, 2, 1, "", "__repr__"], [118, 2, 1, "", "to_dict"]], "abacusai.pipeline_step_version_reference": [[119, 1, 1, "", "PipelineStepVersionReference"]], "abacusai.pipeline_step_version_reference.PipelineStepVersionReference": [[119, 2, 1, "", "__repr__"], [119, 2, 1, "", "to_dict"]], "abacusai.pipeline_version": [[120, 1, 1, "", "PipelineVersion"]], "abacusai.pipeline_version.PipelineVersion": [[120, 2, 1, "", "__repr__"], [120, 2, 1, "", "describe"], [120, 2, 1, "", "get_status"], [120, 2, 1, "", "list_logs"], [120, 2, 1, "", "refresh"], [120, 2, 1, "", "to_dict"], [120, 2, 1, "", "wait_for_pipeline"]], "abacusai.pipeline_version_logs": [[121, 1, 1, "", "PipelineVersionLogs"]], "abacusai.pipeline_version_logs.PipelineVersionLogs": [[121, 2, 1, "", "__repr__"], [121, 2, 1, "", "to_dict"]], "abacusai.point_in_time_feature": [[122, 1, 1, "", "PointInTimeFeature"]], "abacusai.point_in_time_feature.PointInTimeFeature": [[122, 2, 1, "", "__repr__"], [122, 2, 1, "", "to_dict"]], "abacusai.point_in_time_group": [[123, 1, 1, "", "PointInTimeGroup"]], "abacusai.point_in_time_group.PointInTimeGroup": [[123, 2, 1, "", "__repr__"], [123, 2, 1, "", "to_dict"]], "abacusai.point_in_time_group_feature": [[124, 1, 1, "", "PointInTimeGroupFeature"]], "abacusai.point_in_time_group_feature.PointInTimeGroupFeature": [[124, 2, 1, "", "__repr__"], [124, 2, 1, "", "to_dict"]], "abacusai.prediction_client": [[125, 1, 1, "", "PredictionClient"]], "abacusai.prediction_client.PredictionClient": [[125, 2, 1, "", "check_constraints"], [125, 2, 1, "", "classify_image"], [125, 2, 1, "", "classify_pdf"], [125, 2, 1, "", "describe_image"], [125, 2, 1, "", "execute_agent"], [125, 2, 1, "", "generate_image"], [125, 2, 1, "", "get_alternative_assignments"], [125, 2, 1, "", "get_anomalies"], [125, 2, 1, "", "get_assignments"], [125, 2, 1, "", "get_chat_response"], [125, 2, 1, "", "get_classification"], [125, 2, 1, "", "get_cluster"], [125, 2, 1, "", "get_entailment"], [125, 2, 1, "", "get_entities_from_pdf"], [125, 2, 1, "", "get_forecast"], [125, 2, 1, "", "get_k_nearest"], [125, 2, 1, "", "get_labels"], [125, 2, 1, "", "get_multiple_k_nearest"], [125, 2, 1, "", "get_objects_from_image"], [125, 2, 1, "", "get_personalized_ranking"], [125, 2, 1, "", "get_ranked_items"], [125, 2, 1, "", "get_recommendations"], [125, 2, 1, "", "get_related_items"], [125, 2, 1, "", "get_search_results"], [125, 2, 1, "", "get_sentiment"], [125, 2, 1, "", "get_summary"], [125, 2, 1, "", "is_anomaly"], [125, 2, 1, "", "lookup_features"], [125, 2, 1, "", "predict"], [125, 2, 1, "", "predict_churn"], [125, 2, 1, "", "predict_class"], [125, 2, 1, "", "predict_fraud"], [125, 2, 1, "", "predict_from_datasets"], [125, 2, 1, "", "predict_language"], [125, 2, 1, "", "predict_lead"], [125, 2, 1, "", "predict_multiple"], [125, 2, 1, "", "predict_raw"], [125, 2, 1, "", "predict_takeover"], [125, 2, 1, "", "predict_target"], [125, 2, 1, "", "predict_with_binary_data"], [125, 2, 1, "", "score_image"], [125, 2, 1, "", "transcribe_audio"], [125, 2, 1, "", "transfer_style"]], "abacusai.prediction_dataset": [[126, 1, 1, "", "PredictionDataset"]], "abacusai.prediction_dataset.PredictionDataset": [[126, 2, 1, "", "__repr__"], [126, 2, 1, "", "to_dict"]], "abacusai.prediction_feature_group": [[127, 1, 1, "", "PredictionFeatureGroup"]], "abacusai.prediction_feature_group.PredictionFeatureGroup": [[127, 2, 1, "", "__repr__"], [127, 2, 1, "", "to_dict"]], "abacusai.prediction_input": [[128, 1, 1, "", "PredictionInput"]], "abacusai.prediction_input.PredictionInput": [[128, 2, 1, "", "__repr__"], [128, 2, 1, "", "to_dict"]], "abacusai.prediction_metric": [[129, 1, 1, "", "PredictionMetric"]], "abacusai.prediction_metric.PredictionMetric": [[129, 2, 1, "", "__repr__"], [129, 2, 1, "", "to_dict"]], "abacusai.prediction_metric_version": [[130, 1, 1, "", "PredictionMetricVersion"]], "abacusai.prediction_metric_version.PredictionMetricVersion": [[130, 2, 1, "", "__repr__"], [130, 2, 1, "", "get_status"], [130, 2, 1, "", "to_dict"], [130, 2, 1, "", "wait_for_prediction_metric_version"]], "abacusai.problem_type": [[131, 1, 1, "", "ProblemType"]], "abacusai.problem_type.ProblemType": [[131, 2, 1, "", "__repr__"], [131, 2, 1, "", "to_dict"]], "abacusai.project": [[132, 1, 1, "", "Project"]], "abacusai.project.Project": [[132, 2, 1, "", "__repr__"], [132, 2, 1, "", "add_tags"], [132, 2, 1, "", "attach_dataset"], [132, 2, 1, "", "create_agent"], [132, 2, 1, "", "create_chat_session"], [132, 2, 1, "", "create_deployment_token"], [132, 2, 1, "", "create_eda"], [132, 2, 1, "", "create_graph_dashboard"], [132, 2, 1, "", "create_model_from_functions"], [132, 2, 1, "", "create_model_from_python"], [132, 2, 1, "", "create_model_monitor"], [132, 2, 1, "", "create_monitor_alert"], [132, 2, 1, "", "create_nlp_drift_monitor"], [132, 2, 1, "", "create_train_test_data_split_feature_group"], [132, 2, 1, "", "create_vector_store"], [132, 2, 1, "", "create_vision_drift_monitor"], [132, 2, 1, "", "delete"], [132, 2, 1, "", "describe"], [132, 2, 1, "", "describe_feature_group"], [132, 2, 1, "", "get_custom_train_function_info"], [132, 2, 1, "", "get_training_config_options"], [132, 2, 1, "", "infer_feature_mappings"], [132, 2, 1, "", "list_batch_predictions"], [132, 2, 1, "", "list_builtin_algorithms"], [132, 2, 1, "", "list_deployment_tokens"], [132, 2, 1, "", "list_deployments"], [132, 2, 1, "", "list_eda"], [132, 2, 1, "", "list_feature_group_templates"], [132, 2, 1, "", "list_feature_groups"], [132, 2, 1, "", "list_graph_dashboards"], [132, 2, 1, "", "list_model_monitors"], [132, 2, 1, "", "list_models"], [132, 2, 1, "", "list_pipelines"], [132, 2, 1, "", "list_refresh_policies"], [132, 2, 1, "", "list_vector_stores"], [132, 2, 1, "", "refresh"], [132, 2, 1, "", "remove_dataset"], [132, 2, 1, "", "remove_tags"], [132, 2, 1, "", "rename"], [132, 2, 1, "", "set_feature_mapping"], [132, 2, 1, "", "to_dict"], [132, 2, 1, "", "train_model"], [132, 2, 1, "", "validate"]], "abacusai.project_config": [[133, 1, 1, "", "ProjectConfig"]], "abacusai.project_config.ProjectConfig": [[133, 2, 1, "", "__repr__"], [133, 2, 1, "", "to_dict"]], "abacusai.project_dataset": [[134, 1, 1, "", "ProjectDataset"]], "abacusai.project_dataset.ProjectDataset": [[134, 2, 1, "", "__repr__"], [134, 2, 1, "", "to_dict"]], "abacusai.project_validation": [[135, 1, 1, "", "ProjectValidation"]], "abacusai.project_validation.ProjectValidation": [[135, 2, 1, "", "__repr__"], [135, 2, 1, "", "to_dict"]], "abacusai.python_function": [[136, 1, 1, "", "PythonFunction"]], "abacusai.python_function.PythonFunction": [[136, 2, 1, "", "__repr__"], [136, 2, 1, "", "add_graph_to_dashboard"], [136, 2, 1, "", "to_dict"], [136, 2, 1, "", "validate_locally"]], "abacusai.python_function_validator": [[137, 1, 1, "", "_MonkeyPatch"], [137, 6, 1, "", "validate_function_locally"]], "abacusai.python_function_validator._MonkeyPatch": [[137, 2, 1, "", "context"], [137, 2, 1, "", "syspath_prepend"], [137, 2, 1, "", "undo"]], "abacusai.python_plot_function": [[138, 1, 1, "", "PythonPlotFunction"]], "abacusai.python_plot_function.PythonPlotFunction": [[138, 2, 1, "", "__repr__"], [138, 2, 1, "", "to_dict"]], "abacusai.range_violation": [[139, 1, 1, "", "RangeViolation"]], "abacusai.range_violation.RangeViolation": [[139, 2, 1, "", "__repr__"], [139, 2, 1, "", "to_dict"]], "abacusai.refresh_pipeline_run": [[140, 1, 1, "", "RefreshPipelineRun"]], "abacusai.refresh_pipeline_run.RefreshPipelineRun": [[140, 2, 1, "", "__repr__"], [140, 2, 1, "", "describe"], [140, 2, 1, "", "get_status"], [140, 2, 1, "", "refresh"], [140, 2, 1, "", "to_dict"], [140, 2, 1, "", "wait_for_complete"]], "abacusai.refresh_policy": [[141, 1, 1, "", "RefreshPolicy"]], "abacusai.refresh_policy.RefreshPolicy": [[141, 2, 1, "", "__repr__"], [141, 2, 1, "", "delete"], [141, 2, 1, "", "describe"], [141, 2, 1, "", "list_refresh_pipeline_runs"], [141, 2, 1, "", "pause"], [141, 2, 1, "", "refresh"], [141, 2, 1, "", "resume"], [141, 2, 1, "", "run"], [141, 2, 1, "", "to_dict"], [141, 2, 1, "", "update"]], "abacusai.refresh_schedule": [[142, 1, 1, "", "RefreshSchedule"]], "abacusai.refresh_schedule.RefreshSchedule": [[142, 2, 1, "", "__repr__"], [142, 2, 1, "", "to_dict"]], "abacusai.resolved_feature_group_template": [[143, 1, 1, "", "ResolvedFeatureGroupTemplate"]], "abacusai.resolved_feature_group_template.ResolvedFeatureGroupTemplate": [[143, 2, 1, "", "__repr__"], [143, 2, 1, "", "to_dict"]], "abacusai.return_class": [[144, 1, 1, "", "AbstractApiClass"]], "abacusai.return_class.AbstractApiClass": [[144, 2, 1, "", "__eq__"], [144, 2, 1, "", "_get_attribute_as_dict"]], "abacusai.schema": [[145, 1, 1, "", "Schema"]], "abacusai.schema.Schema": [[145, 2, 1, "", "__repr__"], [145, 2, 1, "", "to_dict"]], "abacusai.streaming_auth_token": [[146, 1, 1, "", "StreamingAuthToken"]], "abacusai.streaming_auth_token.StreamingAuthToken": [[146, 2, 1, "", "__repr__"], [146, 2, 1, "", "to_dict"]], "abacusai.streaming_client": [[147, 1, 1, "", "StreamingClient"]], "abacusai.streaming_client.StreamingClient": [[147, 2, 1, "", "append_data"], [147, 2, 1, "", "append_multiple_data"], [147, 2, 1, "", "delete_item_embeddings"], [147, 2, 1, "", "upsert_data"], [147, 2, 1, "", "upsert_item_embeddings"], [147, 2, 1, "", "upsert_multiple_data"], [147, 2, 1, "", "upsert_multiple_item_embeddings"]], "abacusai.streaming_connector": [[148, 1, 1, "", "StreamingConnector"]], "abacusai.streaming_connector.StreamingConnector": [[148, 2, 1, "", "__repr__"], [148, 2, 1, "", "delete"], [148, 2, 1, "", "rename"], [148, 2, 1, "", "to_dict"], [148, 2, 1, "", "verify"]], "abacusai.training_config_options": [[149, 1, 1, "", "TrainingConfigOptions"]], "abacusai.training_config_options.TrainingConfigOptions": [[149, 2, 1, "", "__repr__"], [149, 2, 1, "", "to_dict"]], "abacusai.type_violation": [[150, 1, 1, "", "TypeViolation"]], "abacusai.type_violation.TypeViolation": [[150, 2, 1, "", "__repr__"], [150, 2, 1, "", "to_dict"]], "abacusai.upload": [[151, 1, 1, "", "Upload"]], "abacusai.upload.Upload": [[151, 2, 1, "", "__repr__"], [151, 2, 1, "", "_yield_upload_part"], [151, 2, 1, "", "cancel"], [151, 2, 1, "", "describe"], [151, 2, 1, "", "get_status"], [151, 2, 1, "", "mark_complete"], [151, 2, 1, "", "part"], [151, 2, 1, "", "refresh"], [151, 2, 1, "", "to_dict"], [151, 2, 1, "", "upload_file"], [151, 2, 1, "", "upload_part"], [151, 2, 1, "", "wait_for_join"]], "abacusai.upload_part": [[152, 1, 1, "", "UploadPart"]], "abacusai.upload_part.UploadPart": [[152, 2, 1, "", "__repr__"], [152, 2, 1, "", "to_dict"]], "abacusai.use_case": [[153, 1, 1, "", "UseCase"]], "abacusai.use_case.UseCase": [[153, 2, 1, "", "__repr__"], [153, 2, 1, "", "to_dict"]], "abacusai.use_case_requirements": [[154, 1, 1, "", "UseCaseRequirements"]], "abacusai.use_case_requirements.UseCaseRequirements": [[154, 2, 1, "", "__repr__"], [154, 2, 1, "", "to_dict"]], "abacusai.user": [[155, 1, 1, "", "User"]], "abacusai.user.User": [[155, 2, 1, "", "__repr__"], [155, 2, 1, "", "to_dict"]], "abacusai.user_exception": [[156, 1, 1, "", "UserException"]], "abacusai.user_exception.UserException": [[156, 2, 1, "", "__repr__"], [156, 2, 1, "", "to_dict"]], "abacusai.vector_store": [[157, 1, 1, "", "VectorStore"]], "abacusai.vector_store.VectorStore": [[157, 2, 1, "", "__repr__"], [157, 2, 1, "", "create_version"], [157, 2, 1, "", "delete"], [157, 2, 1, "", "describe"], [157, 2, 1, "", "get_status"], [157, 2, 1, "", "list_versions"], [157, 2, 1, "", "lookup"], [157, 2, 1, "", "refresh"], [157, 2, 1, "", "to_dict"], [157, 2, 1, "", "update"], [157, 2, 1, "", "wait_until_ready"]], "abacusai.vector_store_config": [[158, 1, 1, "", "VectorStoreConfig"]], "abacusai.vector_store_config.VectorStoreConfig": [[158, 2, 1, "", "__repr__"], [158, 2, 1, "", "to_dict"]], "abacusai.vector_store_lookup_result": [[159, 1, 1, "", "VectorStoreLookupResult"]], "abacusai.vector_store_lookup_result.VectorStoreLookupResult": [[159, 2, 1, "", "__repr__"], [159, 2, 1, "", "to_dict"]], "abacusai.vector_store_version": [[160, 1, 1, "", "VectorStoreVersion"]], "abacusai.vector_store_version.VectorStoreVersion": [[160, 2, 1, "", "__repr__"], [160, 2, 1, "", "describe"], [160, 2, 1, "", "get_status"], [160, 2, 1, "", "refresh"], [160, 2, 1, "", "to_dict"], [160, 2, 1, "", "wait_for_results"], [160, 2, 1, "", "wait_until_ready"]], "abacusai.webhook": [[161, 1, 1, "", "Webhook"]], "abacusai.webhook.Webhook": [[161, 2, 1, "", "__repr__"], [161, 2, 1, "", "delete"], [161, 2, 1, "", "describe"], [161, 2, 1, "", "refresh"], [161, 2, 1, "", "to_dict"], [161, 2, 1, "", "update"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:data", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "data", "Python data"], "6": ["py", "function", "Python function"]}, "titleterms": {"abacusai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "algorithm": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "annot": 1, "annotation_entri": 3, "annotations_statu": 4, "api_class": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "abstract": 5, "function": [5, 15, 24, 27, 137], "enum": 7, "feature_group": [8, 63], "submodul": [9, 82], "packag": [9, 82], "api_client_util": 15, "attribut": [5, 15, 24, 82], "api_kei": 17, "application_connector": 18, "batch_predict": 19, "batch_prediction_vers": 20, "categorical_range_viol": 21, "client": [24, 162], "code_sourc": 25, "concatenation_config": 26, "cryptographi": 27, "custom_loss_funct": 28, "custom_metr": 29, "custom_metric_vers": 30, "custom_train_function_info": 31, "data_consistency_dupl": 32, "data_filt": [], "data_prep_log": 34, "data_quality_result": 35, "database_connector": 36, "dataset": [6, 37], "dataset_column": 38, "dataset_vers": 39, "deploy": 40, "deployment_auth_token": 41, "document": 44, "document_annot": 45, "document_stor": 46, "document_store_import": 47, "drift_distribut": [48, 49], "eda": 50, "eda_collinear": 52, "eda_data_consist": 53, "eda_feature_associ": 54, "eda_feature_collinear": 55, "eda_forecasting_analysi": 56, "eda_vers": 57, "embedding_feature_drift_distribut": 58, "featur": 60, "feature_drift_summari": 62, "feature_group_export": 64, "feature_group_export_config": 65, "feature_group_export_download_url": 66, "feature_group_lineag": 67, "feature_group_templ": 69, "feature_group_template_variable_opt": 70, "feature_group_vers": 71, "feature_import": 72, "feature_record": 74, "file_connector": 75, "file_connector_instruct": 76, "file_connector_verif": 77, "forecasting_analysis_graph_data": 78, "function_log": 79, "generated_pit_feature_config_opt": 80, "graph_dashboard": 81, "subpackag": 82, "indexing_config": 83, "item_statist": 85, "model": [10, 90], "model_artifacts_export": 91, "model_loc": 94, "model_metr": 95, "model_monitor": 96, "model_monitor_org_summari": 97, "model_monitor_summari": 98, "model_monitor_summary_from_org": 99, "model_monitor_vers": 100, "model_monitor_version_metric_data": 101, "model_training_type_for_deploy": 102, "model_upload": 103, "model_vers": 104, "modification_lock_info": 105, "monitor_alert": 107, "monitor_alert_vers": 108, "nested_featur": 110, "null_viol": 111, "organization_group": 112, "point_in_time_featur": 122, "point_in_time_group": 123, "point_in_time_group_featur": 124, "prediction_cli": 125, "prediction_dataset": 126, "prediction_feature_group": 127, "prediction_input": 128, "prediction_metr": 129, "prediction_metric_vers": 130, "problem_typ": 131, "project": [11, 132], "project_dataset": 134, "project_valid": 135, "python_funct": [12, 136], "python_plot_funct": 138, "range_viol": 139, "refresh_pipeline_run": 140, "refresh_polici": 141, "refresh_schedul": 142, "resolved_feature_group_templ": 143, "return_class": 144, "schema": 145, "streaming_auth_token": 146, "streaming_connector": 148, "training_config_opt": 149, "type_viol": 150, "upload": 151, "upload_part": 152, "use_cas": 153, "use_case_requir": 154, "user": 155, "user_except": 156, "webhook": 161, "abacu": 162, "ai": 162, "api": 162, "pydoc": 162, "indic": 162, "pretrained_use_cas": [], "eda_chart_descript": 51, "api_endpoint": 16, "chat_bot_respons": [], "natural_language_explan": 109, "python_function_valid": 137, "streaming_cli": 147, "annotation_config": 2, "feature_group_metr": [], "pipelin": 114, "pipeline_step": 116, "pipeline_step_vers": 117, "pipeline_vers": 120, "chat_messag": 22, "chat_sess": 23, "execute_fg_oper": [], "llm_code_block": 86, "llm_input": 87, "llm_respons": 89, "llm_search_result": [], "pipeline_refer": 115, "pipeline_step_version_refer": 119, "execute_feature_group_oper": 59, "model_blueprint_export": 92, "model_blueprint_stag": 93, "refresh": 13, "feature_group_refresh_export_config": 68, "feature_distribut": 61, "vector_stor": [14, 157], "vector_store_vers": 160, "python_function_argu": [], "organization_search_result": 113, "vector_store_lookup_result": 159, "llm_paramet": 88, "project_config": 133, "data_metr": 33, "deployment_convers": 42, "deployment_conversation_ev": 43, "document_retriev": [], "document_retriever_config": [], "document_retriever_lookup_result": [], "document_retriever_vers": [], "feature_map": 73, "inferred_feature_map": 84, "pipeline_step_version_log": 118, "pipeline_version_log": 121, "vector_store_config": 158}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Abacus.AI API Client PyDocs": [[162, "abacus-ai-api-client-pydocs"]], "Indices": [[162, "indices"]], "abacusai.algorithm": [[0, "module-abacusai.algorithm"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [100, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [112, "module-contents"], [113, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [121, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"]], "Classes": [[0, "classes"], [1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [68, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [128, "classes"], [129, "classes"], [130, "classes"], [131, "classes"], [132, "classes"], [133, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"], [154, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"]], "abacusai.annotation": [[1, "module-abacusai.annotation"]], "abacusai.annotation_config": [[2, "module-abacusai.annotation_config"]], "abacusai.annotation_entry": [[3, "module-abacusai.annotation_entry"]], "abacusai.annotations_status": [[4, "module-abacusai.annotations_status"]], "abacusai.api_class.abstract": [[5, "module-abacusai.api_class.abstract"]], "Functions": [[5, "functions"], [15, "functions"], [24, "functions"], [27, "functions"], [137, "functions"]], "Attributes": [[5, "attributes"], [15, "attributes"], [24, "attributes"], [82, "attributes"]], "abacusai.api_class.dataset": [[6, "module-abacusai.api_class.dataset"]], "abacusai.api_class.enums": [[7, "module-abacusai.api_class.enums"]], "abacusai.api_class.feature_group": [[8, "module-abacusai.api_class.feature_group"]], "abacusai.api_class": [[9, "module-abacusai.api_class"]], "Submodules": [[9, "submodules"], [82, "submodules"]], "Package Contents": [[9, "package-contents"], [82, "package-contents"]], "abacusai.api_class.model": [[10, "module-abacusai.api_class.model"]], "abacusai.api_class.project": [[11, "module-abacusai.api_class.project"]], "abacusai.api_class.python_functions": [[12, "module-abacusai.api_class.python_functions"]], "abacusai.api_class.refresh": [[13, "module-abacusai.api_class.refresh"]], "abacusai.api_class.vector_store": [[14, "module-abacusai.api_class.vector_store"]], "abacusai.api_client_utils": [[15, "module-abacusai.api_client_utils"]], "abacusai.api_endpoint": [[16, "module-abacusai.api_endpoint"]], "abacusai.api_key": [[17, "module-abacusai.api_key"]], "abacusai.application_connector": [[18, "module-abacusai.application_connector"]], "abacusai.batch_prediction": [[19, "module-abacusai.batch_prediction"]], "abacusai.batch_prediction_version": [[20, "module-abacusai.batch_prediction_version"]], "abacusai.categorical_range_violation": [[21, "module-abacusai.categorical_range_violation"]], "abacusai.chat_message": [[22, "module-abacusai.chat_message"]], "abacusai.chat_session": [[23, "module-abacusai.chat_session"]], "abacusai.client": [[24, "module-abacusai.client"]], "abacusai.code_source": [[25, "module-abacusai.code_source"]], "abacusai.concatenation_config": [[26, "module-abacusai.concatenation_config"]], "abacusai.cryptography": [[27, "module-abacusai.cryptography"]], "abacusai.custom_loss_function": [[28, "module-abacusai.custom_loss_function"]], "abacusai.custom_metric": [[29, "module-abacusai.custom_metric"]], "abacusai.custom_metric_version": [[30, "module-abacusai.custom_metric_version"]], "abacusai.custom_train_function_info": [[31, "module-abacusai.custom_train_function_info"]], "abacusai.data_consistency_duplication": [[32, "module-abacusai.data_consistency_duplication"]], "abacusai.data_metrics": [[33, "module-abacusai.data_metrics"]], "abacusai.data_prep_logs": [[34, "module-abacusai.data_prep_logs"]], "abacusai.data_quality_results": [[35, "module-abacusai.data_quality_results"]], "abacusai.database_connector": [[36, "module-abacusai.database_connector"]], "abacusai.dataset": [[37, "module-abacusai.dataset"]], "abacusai.dataset_column": [[38, "module-abacusai.dataset_column"]], "abacusai.dataset_version": [[39, "module-abacusai.dataset_version"]], "abacusai.deployment": [[40, "module-abacusai.deployment"]], "abacusai.deployment_auth_token": [[41, "module-abacusai.deployment_auth_token"]], "abacusai.deployment_conversation": [[42, "module-abacusai.deployment_conversation"]], "abacusai.deployment_conversation_event": [[43, "module-abacusai.deployment_conversation_event"]], "abacusai.document": [[44, "module-abacusai.document"]], "abacusai.document_annotation": [[45, "module-abacusai.document_annotation"]], "abacusai.document_store": [[46, "module-abacusai.document_store"]], "abacusai.document_store_import": [[47, "module-abacusai.document_store_import"]], "abacusai.drift_distribution": [[48, "module-abacusai.drift_distribution"]], "abacusai.drift_distributions": [[49, "module-abacusai.drift_distributions"]], "abacusai.eda": [[50, "module-abacusai.eda"]], "abacusai.eda_chart_description": [[51, "module-abacusai.eda_chart_description"]], "abacusai.eda_collinearity": [[52, "module-abacusai.eda_collinearity"]], "abacusai.eda_data_consistency": [[53, "module-abacusai.eda_data_consistency"]], "abacusai.eda_feature_association": [[54, "module-abacusai.eda_feature_association"]], "abacusai.eda_feature_collinearity": [[55, "module-abacusai.eda_feature_collinearity"]], "abacusai.eda_forecasting_analysis": [[56, "module-abacusai.eda_forecasting_analysis"]], "abacusai.eda_version": [[57, "module-abacusai.eda_version"]], "abacusai.embedding_feature_drift_distribution": [[58, "module-abacusai.embedding_feature_drift_distribution"]], "abacusai.execute_feature_group_operation": [[59, "module-abacusai.execute_feature_group_operation"]], "abacusai.feature": [[60, "module-abacusai.feature"]], "abacusai.feature_distribution": [[61, "module-abacusai.feature_distribution"]], "abacusai.feature_drift_summary": [[62, "module-abacusai.feature_drift_summary"]], "abacusai.feature_group": [[63, "module-abacusai.feature_group"]], "abacusai.feature_group_export": [[64, "module-abacusai.feature_group_export"]], "abacusai.feature_group_export_config": [[65, "module-abacusai.feature_group_export_config"]], "abacusai.feature_group_export_download_url": [[66, "module-abacusai.feature_group_export_download_url"]], "abacusai.feature_group_lineage": [[67, "module-abacusai.feature_group_lineage"]], "abacusai.feature_group_refresh_export_config": [[68, "module-abacusai.feature_group_refresh_export_config"]], "abacusai.feature_group_template": [[69, "module-abacusai.feature_group_template"]], "abacusai.feature_group_template_variable_options": [[70, "module-abacusai.feature_group_template_variable_options"]], "abacusai.feature_group_version": [[71, "module-abacusai.feature_group_version"]], "abacusai.feature_importance": [[72, "module-abacusai.feature_importance"]], "abacusai.feature_mapping": [[73, "module-abacusai.feature_mapping"]], "abacusai.feature_record": [[74, "module-abacusai.feature_record"]], "abacusai.file_connector": [[75, "module-abacusai.file_connector"]], "abacusai.file_connector_instructions": [[76, "module-abacusai.file_connector_instructions"]], "abacusai.file_connector_verification": [[77, "module-abacusai.file_connector_verification"]], "abacusai.forecasting_analysis_graph_data": [[78, "module-abacusai.forecasting_analysis_graph_data"]], "abacusai.function_logs": [[79, "module-abacusai.function_logs"]], "abacusai.generated_pit_feature_config_option": [[80, "module-abacusai.generated_pit_feature_config_option"]], "abacusai.graph_dashboard": [[81, "module-abacusai.graph_dashboard"]], "abacusai": [[82, "module-abacusai"]], "Subpackages": [[82, "subpackages"]], "abacusai.indexing_config": [[83, "module-abacusai.indexing_config"]], "abacusai.inferred_feature_mappings": [[84, "module-abacusai.inferred_feature_mappings"]], "abacusai.item_statistics": [[85, "module-abacusai.item_statistics"]], "abacusai.llm_code_block": [[86, "module-abacusai.llm_code_block"]], "abacusai.llm_input": [[87, "module-abacusai.llm_input"]], "abacusai.llm_parameters": [[88, "module-abacusai.llm_parameters"]], "abacusai.llm_response": [[89, "module-abacusai.llm_response"]], "abacusai.model": [[90, "module-abacusai.model"]], "abacusai.model_artifacts_export": [[91, "module-abacusai.model_artifacts_export"]], "abacusai.model_blueprint_export": [[92, "module-abacusai.model_blueprint_export"]], "abacusai.model_blueprint_stage": [[93, "module-abacusai.model_blueprint_stage"]], "abacusai.model_location": [[94, "module-abacusai.model_location"]], "abacusai.model_metrics": [[95, "module-abacusai.model_metrics"]], "abacusai.model_monitor": [[96, "module-abacusai.model_monitor"]], "abacusai.model_monitor_org_summary": [[97, "module-abacusai.model_monitor_org_summary"]], "abacusai.model_monitor_summary": [[98, "module-abacusai.model_monitor_summary"]], "abacusai.model_monitor_summary_from_org": [[99, "module-abacusai.model_monitor_summary_from_org"]], "abacusai.model_monitor_version": [[100, "module-abacusai.model_monitor_version"]], "abacusai.model_monitor_version_metric_data": [[101, "module-abacusai.model_monitor_version_metric_data"]], "abacusai.model_training_type_for_deployment": [[102, "module-abacusai.model_training_type_for_deployment"]], "abacusai.model_upload": [[103, "module-abacusai.model_upload"]], "abacusai.model_version": [[104, "module-abacusai.model_version"]], "abacusai.modification_lock_info": [[105, "module-abacusai.modification_lock_info"]], "abacusai.module": [[106, "module-abacusai.module"]], "abacusai.monitor_alert": [[107, "module-abacusai.monitor_alert"]], "abacusai.monitor_alert_version": [[108, "module-abacusai.monitor_alert_version"]], "abacusai.natural_language_explanation": [[109, "module-abacusai.natural_language_explanation"]], "abacusai.nested_feature": [[110, "module-abacusai.nested_feature"]], "abacusai.null_violation": [[111, "module-abacusai.null_violation"]], "abacusai.organization_group": [[112, "module-abacusai.organization_group"]], "abacusai.organization_search_result": [[113, "module-abacusai.organization_search_result"]], "abacusai.pipeline": [[114, "module-abacusai.pipeline"]], "abacusai.pipeline_reference": [[115, "module-abacusai.pipeline_reference"]], "abacusai.pipeline_step": [[116, "module-abacusai.pipeline_step"]], "abacusai.pipeline_step_version": [[117, "module-abacusai.pipeline_step_version"]], "abacusai.pipeline_step_version_logs": [[118, "module-abacusai.pipeline_step_version_logs"]], "abacusai.pipeline_step_version_reference": [[119, "module-abacusai.pipeline_step_version_reference"]], "abacusai.pipeline_version": [[120, "module-abacusai.pipeline_version"]], "abacusai.pipeline_version_logs": [[121, "module-abacusai.pipeline_version_logs"]], "abacusai.point_in_time_feature": [[122, "module-abacusai.point_in_time_feature"]], "abacusai.point_in_time_group": [[123, "module-abacusai.point_in_time_group"]], "abacusai.point_in_time_group_feature": [[124, "module-abacusai.point_in_time_group_feature"]], "abacusai.prediction_client": [[125, "module-abacusai.prediction_client"]], "abacusai.prediction_dataset": [[126, "module-abacusai.prediction_dataset"]], "abacusai.prediction_feature_group": [[127, "module-abacusai.prediction_feature_group"]], "abacusai.prediction_input": [[128, "module-abacusai.prediction_input"]], "abacusai.prediction_metric": [[129, "module-abacusai.prediction_metric"]], "abacusai.prediction_metric_version": [[130, "module-abacusai.prediction_metric_version"]], "abacusai.problem_type": [[131, "module-abacusai.problem_type"]], "abacusai.project": [[132, "module-abacusai.project"]], "abacusai.project_config": [[133, "module-abacusai.project_config"]], "abacusai.project_dataset": [[134, "module-abacusai.project_dataset"]], "abacusai.project_validation": [[135, "module-abacusai.project_validation"]], "abacusai.python_function": [[136, "module-abacusai.python_function"]], "abacusai.python_function_validator": [[137, "module-abacusai.python_function_validator"]], "abacusai.python_plot_function": [[138, "module-abacusai.python_plot_function"]], "abacusai.range_violation": [[139, "module-abacusai.range_violation"]], "abacusai.refresh_pipeline_run": [[140, "module-abacusai.refresh_pipeline_run"]], "abacusai.refresh_policy": [[141, "module-abacusai.refresh_policy"]], "abacusai.refresh_schedule": [[142, "module-abacusai.refresh_schedule"]], "abacusai.resolved_feature_group_template": [[143, "module-abacusai.resolved_feature_group_template"]], "abacusai.return_class": [[144, "module-abacusai.return_class"]], "abacusai.schema": [[145, "module-abacusai.schema"]], "abacusai.streaming_auth_token": [[146, "module-abacusai.streaming_auth_token"]], "abacusai.streaming_client": [[147, "module-abacusai.streaming_client"]], "abacusai.streaming_connector": [[148, "module-abacusai.streaming_connector"]], "abacusai.training_config_options": [[149, "module-abacusai.training_config_options"]], "abacusai.type_violation": [[150, "module-abacusai.type_violation"]], "abacusai.upload": [[151, "module-abacusai.upload"]], "abacusai.upload_part": [[152, "module-abacusai.upload_part"]], "abacusai.use_case": [[153, "module-abacusai.use_case"]], "abacusai.use_case_requirements": [[154, "module-abacusai.use_case_requirements"]], "abacusai.user": [[155, "module-abacusai.user"]], "abacusai.user_exception": [[156, "module-abacusai.user_exception"]], "abacusai.vector_store": [[157, "module-abacusai.vector_store"]], "abacusai.vector_store_config": [[158, "module-abacusai.vector_store_config"]], "abacusai.vector_store_lookup_result": [[159, "module-abacusai.vector_store_lookup_result"]], "abacusai.vector_store_version": [[160, "module-abacusai.vector_store_version"]], "abacusai.webhook": [[161, "module-abacusai.webhook"]]}, "indexentries": {"algorithm (class in abacusai.algorithm)": [[0, "abacusai.algorithm.Algorithm"]], "__repr__() (abacusai.algorithm.algorithm method)": [[0, "abacusai.algorithm.Algorithm.__repr__"]], "abacusai.algorithm": [[0, "module-abacusai.algorithm"]], "module": [[0, "module-abacusai.algorithm"], [1, "module-abacusai.annotation"], [2, "module-abacusai.annotation_config"], [3, "module-abacusai.annotation_entry"], [4, "module-abacusai.annotations_status"], [5, "module-abacusai.api_class.abstract"], [6, "module-abacusai.api_class.dataset"], [7, "module-abacusai.api_class.enums"], [8, "module-abacusai.api_class.feature_group"], [9, "module-abacusai.api_class"], [10, "module-abacusai.api_class.model"], [11, "module-abacusai.api_class.project"], [12, "module-abacusai.api_class.python_functions"], [13, "module-abacusai.api_class.refresh"], [14, "module-abacusai.api_class.vector_store"], [15, "module-abacusai.api_client_utils"], [16, "module-abacusai.api_endpoint"], [17, "module-abacusai.api_key"], [18, "module-abacusai.application_connector"], [19, "module-abacusai.batch_prediction"], [20, "module-abacusai.batch_prediction_version"], [21, "module-abacusai.categorical_range_violation"], [22, "module-abacusai.chat_message"], [23, "module-abacusai.chat_session"], [24, "module-abacusai.client"], [25, "module-abacusai.code_source"], [26, "module-abacusai.concatenation_config"], [27, "module-abacusai.cryptography"], [28, "module-abacusai.custom_loss_function"], [29, "module-abacusai.custom_metric"], [30, "module-abacusai.custom_metric_version"], [31, "module-abacusai.custom_train_function_info"], [32, "module-abacusai.data_consistency_duplication"], [33, "module-abacusai.data_metrics"], [34, "module-abacusai.data_prep_logs"], [35, "module-abacusai.data_quality_results"], [36, "module-abacusai.database_connector"], [37, "module-abacusai.dataset"], [38, "module-abacusai.dataset_column"], [39, "module-abacusai.dataset_version"], [40, "module-abacusai.deployment"], [41, "module-abacusai.deployment_auth_token"], [42, "module-abacusai.deployment_conversation"], [43, "module-abacusai.deployment_conversation_event"], [44, "module-abacusai.document"], [45, "module-abacusai.document_annotation"], [46, "module-abacusai.document_store"], [47, "module-abacusai.document_store_import"], [48, "module-abacusai.drift_distribution"], [49, "module-abacusai.drift_distributions"], [50, "module-abacusai.eda"], [51, "module-abacusai.eda_chart_description"], [52, "module-abacusai.eda_collinearity"], [53, "module-abacusai.eda_data_consistency"], [54, "module-abacusai.eda_feature_association"], [55, "module-abacusai.eda_feature_collinearity"], [56, "module-abacusai.eda_forecasting_analysis"], [57, "module-abacusai.eda_version"], [58, "module-abacusai.embedding_feature_drift_distribution"], [59, "module-abacusai.execute_feature_group_operation"], [60, "module-abacusai.feature"], [61, "module-abacusai.feature_distribution"], [62, "module-abacusai.feature_drift_summary"], [63, "module-abacusai.feature_group"], [64, "module-abacusai.feature_group_export"], [65, "module-abacusai.feature_group_export_config"], [66, "module-abacusai.feature_group_export_download_url"], [67, "module-abacusai.feature_group_lineage"], [68, "module-abacusai.feature_group_refresh_export_config"], [69, "module-abacusai.feature_group_template"], [70, "module-abacusai.feature_group_template_variable_options"], [71, "module-abacusai.feature_group_version"], [72, "module-abacusai.feature_importance"], [73, "module-abacusai.feature_mapping"], [74, "module-abacusai.feature_record"], [75, "module-abacusai.file_connector"], [76, "module-abacusai.file_connector_instructions"], [77, "module-abacusai.file_connector_verification"], [78, "module-abacusai.forecasting_analysis_graph_data"], [79, "module-abacusai.function_logs"], [80, "module-abacusai.generated_pit_feature_config_option"], [81, "module-abacusai.graph_dashboard"], [82, "module-abacusai"], [83, "module-abacusai.indexing_config"], [84, "module-abacusai.inferred_feature_mappings"], [85, "module-abacusai.item_statistics"], [86, "module-abacusai.llm_code_block"], [87, "module-abacusai.llm_input"], [88, "module-abacusai.llm_parameters"], [89, "module-abacusai.llm_response"], [90, "module-abacusai.model"], [91, "module-abacusai.model_artifacts_export"], [92, "module-abacusai.model_blueprint_export"], [93, "module-abacusai.model_blueprint_stage"], [94, "module-abacusai.model_location"], [95, "module-abacusai.model_metrics"], [96, "module-abacusai.model_monitor"], [97, "module-abacusai.model_monitor_org_summary"], [98, "module-abacusai.model_monitor_summary"], [99, "module-abacusai.model_monitor_summary_from_org"], [100, "module-abacusai.model_monitor_version"], [101, "module-abacusai.model_monitor_version_metric_data"], [102, "module-abacusai.model_training_type_for_deployment"], [103, "module-abacusai.model_upload"], [104, "module-abacusai.model_version"], [105, "module-abacusai.modification_lock_info"], [106, "module-abacusai.module"], [107, "module-abacusai.monitor_alert"], [108, "module-abacusai.monitor_alert_version"], [109, "module-abacusai.natural_language_explanation"], [110, "module-abacusai.nested_feature"], [111, "module-abacusai.null_violation"], [112, "module-abacusai.organization_group"], [113, "module-abacusai.organization_search_result"], [114, "module-abacusai.pipeline"], [115, "module-abacusai.pipeline_reference"], [116, "module-abacusai.pipeline_step"], [117, "module-abacusai.pipeline_step_version"], [118, "module-abacusai.pipeline_step_version_logs"], [119, "module-abacusai.pipeline_step_version_reference"], [120, "module-abacusai.pipeline_version"], [121, "module-abacusai.pipeline_version_logs"], [122, "module-abacusai.point_in_time_feature"], [123, "module-abacusai.point_in_time_group"], [124, "module-abacusai.point_in_time_group_feature"], [125, "module-abacusai.prediction_client"], [126, "module-abacusai.prediction_dataset"], [127, "module-abacusai.prediction_feature_group"], [128, "module-abacusai.prediction_input"], [129, "module-abacusai.prediction_metric"], [130, "module-abacusai.prediction_metric_version"], [131, "module-abacusai.problem_type"], [132, "module-abacusai.project"], [133, "module-abacusai.project_config"], [134, "module-abacusai.project_dataset"], [135, "module-abacusai.project_validation"], [136, "module-abacusai.python_function"], [137, "module-abacusai.python_function_validator"], [138, "module-abacusai.python_plot_function"], [139, "module-abacusai.range_violation"], [140, "module-abacusai.refresh_pipeline_run"], [141, "module-abacusai.refresh_policy"], [142, "module-abacusai.refresh_schedule"], [143, "module-abacusai.resolved_feature_group_template"], [144, "module-abacusai.return_class"], [145, "module-abacusai.schema"], [146, "module-abacusai.streaming_auth_token"], [147, "module-abacusai.streaming_client"], [148, "module-abacusai.streaming_connector"], [149, "module-abacusai.training_config_options"], [150, "module-abacusai.type_violation"], [151, "module-abacusai.upload"], [152, "module-abacusai.upload_part"], [153, "module-abacusai.use_case"], [154, "module-abacusai.use_case_requirements"], [155, "module-abacusai.user"], [156, "module-abacusai.user_exception"], [157, "module-abacusai.vector_store"], [158, "module-abacusai.vector_store_config"], [159, "module-abacusai.vector_store_lookup_result"], [160, "module-abacusai.vector_store_version"], [161, "module-abacusai.webhook"]], "to_dict() (abacusai.algorithm.algorithm method)": [[0, "abacusai.algorithm.Algorithm.to_dict"]], "annotation (class in abacusai.annotation)": [[1, "abacusai.annotation.Annotation"]], "__repr__() (abacusai.annotation.annotation method)": [[1, "abacusai.annotation.Annotation.__repr__"]], "abacusai.annotation": [[1, "module-abacusai.annotation"]], "to_dict() (abacusai.annotation.annotation method)": [[1, "abacusai.annotation.Annotation.to_dict"]], "annotationconfig (class in abacusai.annotation_config)": [[2, "abacusai.annotation_config.AnnotationConfig"]], "__repr__() (abacusai.annotation_config.annotationconfig method)": [[2, "abacusai.annotation_config.AnnotationConfig.__repr__"]], "abacusai.annotation_config": [[2, "module-abacusai.annotation_config"]], "to_dict() (abacusai.annotation_config.annotationconfig method)": [[2, "abacusai.annotation_config.AnnotationConfig.to_dict"]], "annotationentry (class in abacusai.annotation_entry)": [[3, "abacusai.annotation_entry.AnnotationEntry"]], "__repr__() (abacusai.annotation_entry.annotationentry method)": [[3, "abacusai.annotation_entry.AnnotationEntry.__repr__"]], "abacusai.annotation_entry": [[3, "module-abacusai.annotation_entry"]], "to_dict() (abacusai.annotation_entry.annotationentry method)": [[3, "abacusai.annotation_entry.AnnotationEntry.to_dict"]], "annotationsstatus (class in abacusai.annotations_status)": [[4, "abacusai.annotations_status.AnnotationsStatus"]], "__repr__() (abacusai.annotations_status.annotationsstatus method)": [[4, "abacusai.annotations_status.AnnotationsStatus.__repr__"]], "abacusai.annotations_status": [[4, "module-abacusai.annotations_status"]], "to_dict() (abacusai.annotations_status.annotationsstatus method)": [[4, "abacusai.annotations_status.AnnotationsStatus.to_dict"]], "all_cap_re (in module abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.ALL_CAP_RE"]], "apiclass (class in abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.ApiClass"]], "first_cap_re (in module abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.FIRST_CAP_RE"]], "_apiclassfactory (class in abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract._ApiClassFactory"]], "__post_init__() (abacusai.api_class.abstract.apiclass method)": [[5, "abacusai.api_class.abstract.ApiClass.__post_init__"]], "_support_kwargs (abacusai.api_class.abstract.apiclass attribute)": [[5, "abacusai.api_class.abstract.ApiClass._support_kwargs"]], "_upper_snake_case_keys (abacusai.api_class.abstract.apiclass attribute)": [[5, "abacusai.api_class.abstract.ApiClass._upper_snake_case_keys"]], "abacusai.api_class.abstract": [[5, "module-abacusai.api_class.abstract"]], "camel_case() (in module abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.camel_case"]], "config_abstract_class (abacusai.api_class.abstract._apiclassfactory attribute)": [[5, "abacusai.api_class.abstract._ApiClassFactory.config_abstract_class"]], "config_class_key (abacusai.api_class.abstract._apiclassfactory attribute)": [[5, "abacusai.api_class.abstract._ApiClassFactory.config_class_key"]], "config_class_map (abacusai.api_class.abstract._apiclassfactory attribute)": [[5, "abacusai.api_class.abstract._ApiClassFactory.config_class_map"]], "from_dict() (abacusai.api_class.abstract.apiclass class method)": [[5, "abacusai.api_class.abstract.ApiClass.from_dict"]], "from_dict() (abacusai.api_class.abstract._apiclassfactory class method)": [[5, "abacusai.api_class.abstract._ApiClassFactory.from_dict"]], "snake_case() (in module abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.snake_case"]], "to_dict() (abacusai.api_class.abstract.apiclass method)": [[5, "abacusai.api_class.abstract.ApiClass.to_dict"]], "upper_snake_case() (in module abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.upper_snake_case"]], "parsingconfig (class in abacusai.api_class.dataset)": [[6, "abacusai.api_class.dataset.ParsingConfig"]], "abacusai.api_class.dataset": [[6, "module-abacusai.api_class.dataset"]], "csv_delimiter (abacusai.api_class.dataset.parsingconfig attribute)": [[6, "abacusai.api_class.dataset.ParsingConfig.csv_delimiter"]], "escape (abacusai.api_class.dataset.parsingconfig attribute)": [[6, "abacusai.api_class.dataset.ParsingConfig.escape"]], "file_path_with_schema (abacusai.api_class.dataset.parsingconfig attribute)": [[6, "abacusai.api_class.dataset.ParsingConfig.file_path_with_schema"]], "accuracy (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.ACCURACY"]], "accuracy (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.ACCURACY"]], "ai_agent (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.AI_AGENT"]], "ancestral_simulation (abacusai.api_class.enums.forecastingquanitlesextensionmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingQuanitlesExtensionMethod.ANCESTRAL_SIMULATION"]], "annotations_precision (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.ANNOTATIONS_PRECISION"]], "annotations_recall (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.ANNOTATIONS_RECALL"]], "anomaly_detection (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.ANOMALY_DETECTION"]], "anomaly_outliers (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.ANOMALY_OUTLIERS"]], "application (abacusai.api_class.enums.connectortype attribute)": [[7, "abacusai.api_class.enums.ConnectorType.APPLICATION"]], "asymmetric_mean_absolute_percentage_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "au (abacusai.api_class.enums.holidaycalendars attribute)": [[7, "abacusai.api_class.enums.HolidayCalendars.AU"]], "auc (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.AUC"]], "auc (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.AUC"]], "auto (abacusai.api_class.enums.forecastingdatasplittype attribute)": [[7, "abacusai.api_class.enums.ForecastingDataSplitType.AUTO"]], "auto (abacusai.api_class.enums.nlpdocumentformat attribute)": [[7, "abacusai.api_class.enums.NLPDocumentFormat.AUTO"]], "automatic (abacusai.api_class.enums.clusteringimputationmethod attribute)": [[7, "abacusai.api_class.enums.ClusteringImputationMethod.AUTOMATIC"]], "automatic (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.AUTOMATIC"]], "average (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.AVERAGE"]], "apienum (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ApiEnum"]], "back (abacusai.api_class.enums.forecastingfillmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingFillMethod.BACK"]], "backfill (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.BACKFILL"]], "batch_1024 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_1024"]], "batch_128 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_128"]], "batch_16 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_16"]], "batch_256 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_256"]], "batch_32 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_32"]], "batch_384 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_384"]], "batch_512 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_512"]], "batch_64 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_64"]], "batch_740 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_740"]], "batch_8 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_8"]], "batch_prediction_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.BATCH_PREDICTION_ID"]], "bias (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.BIAS"]], "boolean (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.BOOLEAN"]], "box_cox (abacusai.api_class.enums.regressiontargettransform attribute)": [[7, "abacusai.api_class.enums.RegressionTargetTransform.BOX_COX"]], "batchsize (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.BatchSize"]], "chat_llm (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.CHAT_LLM"]], "clustering (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.CLUSTERING"]], "clustering_timeseries (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.CLUSTERING_TIMESERIES"]], "cmape (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.CMAPE"]], "coverage (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.COVERAGE"]], "cross_entropy (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.CROSS_ENTROPY"]], "cumulative_forecasting (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.CUMULATIVE_FORECASTING"]], "custom (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.CUSTOM"]], "custom (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.CUSTOM"]], "custom (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.CUSTOM"]], "custom_algorithm (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.CUSTOM_ALGORITHM"]], "custom_trained_model (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.CUSTOM_TRAINED_MODEL"]], "cv (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.CV"]], "clusteringimputationmethod (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ClusteringImputationMethod"]], "connectortype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ConnectorType"]], "daily (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.DAILY"]], "database (abacusai.api_class.enums.connectortype attribute)": [[7, "abacusai.api_class.enums.ConnectorType.DATABASE"]], "dataset_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.DATASET_ID"]], "deployment_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.DEPLOYMENT_ID"]], "direct (abacusai.api_class.enums.forecastingquanitlesextensionmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingQuanitlesExtensionMethod.DIRECT"]], "doc (abacusai.api_class.enums.nlpdocumentformat attribute)": [[7, "abacusai.api_class.enums.NLPDocumentFormat.DOC"]], "document_classification (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.DOCUMENT_CLASSIFICATION"]], "document_summarization (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.DOCUMENT_SUMMARIZATION"]], "document_visualization (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.DOCUMENT_VISUALIZATION"]], "e5 (abacusai.api_class.enums.vectorstoretextencoder attribute)": [[7, "abacusai.api_class.enums.VectorStoreTextEncoder.E5"]], "e5_small (abacusai.api_class.enums.vectorstoretextencoder attribute)": [[7, "abacusai.api_class.enums.VectorStoreTextEncoder.E5_SMALL"]], "emotion (abacusai.api_class.enums.sentimenttype attribute)": [[7, "abacusai.api_class.enums.SentimentType.EMOTION"]], "experimental (abacusai.api_class.enums.personalizationtrainingmode attribute)": [[7, "abacusai.api_class.enums.PersonalizationTrainingMode.EXPERIMENTAL"]], "experimentationmode (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ExperimentationMode"]], "f1_score (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.F1_SCORE"]], "feature_group (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.FEATURE_GROUP"]], "feature_group_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.FEATURE_GROUP_ID"]], "feature_store (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.FEATURE_STORE"]], "file (abacusai.api_class.enums.connectortype attribute)": [[7, "abacusai.api_class.enums.ConnectorType.FILE"]], "float (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.FLOAT"]], "focal_cross_entropy (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.FOCAL_CROSS_ENTROPY"]], "forecasting (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.FORECASTING"]], "forwardfill (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.FORWARDFILL"]], "future (abacusai.api_class.enums.forecastingfillmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingFillMethod.FUTURE"]], "filllogic (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.FillLogic"]], "forecastingdatasplittype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingDataSplitType"]], "forecastingfillmethod (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingFillMethod"]], "forecastingfrequency (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingFrequency"]], "forecastinglocalscaling (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling"]], "forecastinglossfunction (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingLossFunction"]], "forecastingobjective (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingObjective"]], "forecastingquanitlesextensionmethod (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingQuanitlesExtensionMethod"]], "gaussian (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.GAUSSIAN"]], "gaussian_full_covariance (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.GAUSSIAN_FULL_COVARIANCE"]], "guassian_exponential (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.GUASSIAN_EXPONENTIAL"]], "hourly (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.HOURLY"]], "huber (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.HUBER"]], "holidaycalendars (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.HolidayCalendars"]], "image_classification (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.IMAGE_CLASSIFICATION"]], "image_value_prediction (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.IMAGE_VALUE_PREDICTION"]], "integer (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.INTEGER"]], "interpolate (abacusai.api_class.enums.clusteringimputationmethod attribute)": [[7, "abacusai.api_class.enums.ClusteringImputationMethod.INTERPOLATE"]], "item (abacusai.api_class.enums.forecastingdatasplittype attribute)": [[7, "abacusai.api_class.enums.ForecastingDataSplitType.ITEM"]], "item (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.ITEM"]], "json (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.JSON"]], "language_detection (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.LANGUAGE_DETECTION"]], "last_n (abacusai.api_class.enums.mergemode attribute)": [[7, "abacusai.api_class.enums.MergeMode.LAST_N"]], "last_point (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.LAST_POINT"]], "learned (abacusai.api_class.enums.nermodeltype attribute)": [[7, "abacusai.api_class.enums.NERModelType.LEARNED"]], "linear (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.LINEAR"]], "list (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.LIST"]], "log (abacusai.api_class.enums.regressiontargettransform attribute)": [[7, "abacusai.api_class.enums.RegressionTargetTransform.LOG"]], "log_loss (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.LOG_LOSS"]], "log_loss (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.LOG_LOSS"]], "log_root_mean_square_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.LOG_ROOT_MEAN_SQUARE_ERROR"]], "mae (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.MAE"]], "mae (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.MAE"]], "map (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.MAP"]], "mape (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.MAPE"]], "mape (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.MAPE"]], "mape (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.MAPE"]], "map_10 (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.MAP_10"]], "map_5 (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.MAP_5"]], "max (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.MAX"]], "mean_absolute_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.MEAN_ABSOLUTE_ERROR"]], "mean_absolute_percentage_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "median (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.MEDIAN"]], "middle (abacusai.api_class.enums.forecastingfillmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingFillMethod.MIDDLE"]], "min (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.MIN"]], "min_max (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.MIN_MAX"]], "min_std (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.MIN_STD"]], "mix_gaussians (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.MIX_GAUSSIANS"]], "model_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.MODEL_ID"]], "model_monitoring (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.MODEL_MONITORING"]], "monitor_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.MONITOR_ID"]], "month_end (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.MONTH_END"]], "month_start (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.MONTH_START"]], "mrr (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.MRR"]], "mse (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.MSE"]], "msle (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.MSLE"]], "mergemode (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.MergeMode"]], "named_entity_extraction (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.NAMED_ENTITY_EXTRACTION"]], "natural_language_search (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.NATURAL_LANGUAGE_SEARCH"]], "ndcg (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.NDCG"]], "ndcg_10 (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.NDCG_10"]], "ndcg_5 (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.NDCG_5"]], "nearest (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.NEAREST"]], "negative_binomial (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.NEGATIVE_BINOMIAL"]], "nermodeltype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.NERModelType"]], "nerobjective (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.NERObjective"]], "nlpdocumentformat (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.NLPDocumentFormat"]], "normalized_mean_absolute_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.NORMALIZED_MEAN_ABSOLUTE_ERROR"]], "normalized_root_mean_square_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.NORMALIZED_ROOT_MEAN_SQUARE_ERROR"]], "n_sampling (abacusai.api_class.enums.samplingmethodtype attribute)": [[7, "abacusai.api_class.enums.SamplingMethodType.N_SAMPLING"]], "object_detection (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.OBJECT_DETECTION"]], "openai (abacusai.api_class.enums.vectorstoretextencoder attribute)": [[7, "abacusai.api_class.enums.VectorStoreTextEncoder.OPENAI"]], "optimization (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.OPTIMIZATION"]], "peaks_mean_absolute_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.PEAKS_MEAN_ABSOLUTE_ERROR"]], "percent_sampling (abacusai.api_class.enums.samplingmethodtype attribute)": [[7, "abacusai.api_class.enums.SamplingMethodType.PERCENT_SAMPLING"]], "personalization (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.PERSONALIZATION"]], "personalization (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.PERSONALIZATION"]], "pointwise_accuracy (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.POINTWISE_ACCURACY"]], "precision (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.PRECISION"]], "precision (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.PRECISION"]], "prediction_length (abacusai.api_class.enums.forecastingdatasplittype attribute)": [[7, "abacusai.api_class.enums.ForecastingDataSplitType.PREDICTION_LENGTH"]], "predictive_modeling (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.PREDICTIVE_MODELING"]], "pretrained_bert (abacusai.api_class.enums.nermodeltype attribute)": [[7, "abacusai.api_class.enums.NERModelType.PRETRAINED_BERT"]], "pretrained_models (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.PRETRAINED_MODELS"]], "pretrained_multilingual (abacusai.api_class.enums.nermodeltype attribute)": [[7, "abacusai.api_class.enums.NERModelType.PRETRAINED_MULTILINGUAL"]], "pretrained_roberta_27 (abacusai.api_class.enums.nermodeltype attribute)": [[7, "abacusai.api_class.enums.NERModelType.PRETRAINED_ROBERTA_27"]], "pretrained_roberta_43 (abacusai.api_class.enums.nermodeltype attribute)": [[7, "abacusai.api_class.enums.NERModelType.PRETRAINED_ROBERTA_43"]], "production (abacusai.api_class.enums.personalizationtrainingmode attribute)": [[7, "abacusai.api_class.enums.PersonalizationTrainingMode.PRODUCTION"]], "personalizationobjective (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.PersonalizationObjective"]], "personalizationtrainingmode (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.PersonalizationTrainingMode"]], "problemtype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ProblemType"]], "pythonfunctionargumenttype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType"]], "quadratic (abacusai.api_class.enums.forecastingquanitlesextensionmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingQuanitlesExtensionMethod.QUADRATIC"]], "quantile (abacusai.api_class.enums.regressiontargettransform attribute)": [[7, "abacusai.api_class.enums.RegressionTargetTransform.QUANTILE"]], "quarter_end (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.QUARTER_END"]], "quarter_start (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.QUARTER_START"]], "random (abacusai.api_class.enums.regressiontypeofsplit attribute)": [[7, "abacusai.api_class.enums.RegressionTypeOfSplit.RANDOM"]], "rapid (abacusai.api_class.enums.experimentationmode attribute)": [[7, "abacusai.api_class.enums.ExperimentationMode.RAPID"]], "rapid (abacusai.api_class.enums.regressiontreehpomode attribute)": [[7, "abacusai.api_class.enums.RegressionTreeHPOMode.RAPID"]], "recall (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.RECALL"]], "recall (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.RECALL"]], "resample (abacusai.api_class.enums.regressionaugmentationstrategy attribute)": [[7, "abacusai.api_class.enums.RegressionAugmentationStrategy.RESAMPLE"]], "rmse (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.RMSE"]], "rmse (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.RMSE"]], "robust (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.ROBUST"]], "root_mean_square_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.ROOT_MEAN_SQUARE_ERROR"]], "row_indicator_based (abacusai.api_class.enums.regressiontypeofsplit attribute)": [[7, "abacusai.api_class.enums.RegressionTypeOfSplit.ROW_INDICATOR_BASED"]], "r_squared_coefficient_of_determination (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.R_SQUARED_COEFFICIENT_OF_DETERMINATION"]], "regressionaugmentationstrategy (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionAugmentationStrategy"]], "regressionlossfunction (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionLossFunction"]], "regressionobjective (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionObjective"]], "regressiontargettransform (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionTargetTransform"]], "regressiontimesplitmethod (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionTimeSplitMethod"]], "regressiontreehpomode (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionTreeHPOMode"]], "regressiontypeofsplit (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionTypeOfSplit"]], "sentence_bert (abacusai.api_class.enums.vectorstoretextencoder attribute)": [[7, "abacusai.api_class.enums.VectorStoreTextEncoder.SENTENCE_BERT"]], "sentence_boundary_detection (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.SENTENCE_BOUNDARY_DETECTION"]], "sentiment_detection (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.SENTIMENT_DETECTION"]], "sliding_zscore (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.SLIDING_ZSCORE"]], "smote (abacusai.api_class.enums.regressionaugmentationstrategy attribute)": [[7, "abacusai.api_class.enums.RegressionAugmentationStrategy.SMOTE"]], "srmse (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.SRMSE"]], "stable_standardized_mean_absolute_percentage_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "streaming (abacusai.api_class.enums.connectortype attribute)": [[7, "abacusai.api_class.enums.ConnectorType.STREAMING"]], "string (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.STRING"]], "samplingmethodtype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.SamplingMethodType"]], "sentimenttype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.SentimentType"]], "test_split_percentage_based (abacusai.api_class.enums.regressiontimesplitmethod attribute)": [[7, "abacusai.api_class.enums.RegressionTimeSplitMethod.TEST_SPLIT_PERCENTAGE_BASED"]], "test_start_timestamp_based (abacusai.api_class.enums.regressiontimesplitmethod attribute)": [[7, "abacusai.api_class.enums.RegressionTimeSplitMethod.TEST_START_TIMESTAMP_BASED"]], "text (abacusai.api_class.enums.nlpdocumentformat attribute)": [[7, "abacusai.api_class.enums.NLPDocumentFormat.TEXT"]], "theme_analysis (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.THEME_ANALYSIS"]], "thorough (abacusai.api_class.enums.experimentationmode attribute)": [[7, "abacusai.api_class.enums.ExperimentationMode.THOROUGH"]], "thorough (abacusai.api_class.enums.regressiontreehpomode attribute)": [[7, "abacusai.api_class.enums.RegressionTreeHPOMode.THOROUGH"]], "timestamp (abacusai.api_class.enums.forecastingdatasplittype attribute)": [[7, "abacusai.api_class.enums.ForecastingDataSplitType.TIMESTAMP"]], "timestamp_based (abacusai.api_class.enums.regressiontypeofsplit attribute)": [[7, "abacusai.api_class.enums.RegressionTypeOfSplit.TIMESTAMP_BASED"]], "time_window (abacusai.api_class.enums.mergemode attribute)": [[7, "abacusai.api_class.enums.MergeMode.TIME_WINDOW"]], "tokens (abacusai.api_class.enums.nlpdocumentformat attribute)": [[7, "abacusai.api_class.enums.NLPDocumentFormat.TOKENS"]], "tweedie (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.TWEEDIE"]], "uk (abacusai.api_class.enums.holidaycalendars attribute)": [[7, "abacusai.api_class.enums.HolidayCalendars.UK"]], "us (abacusai.api_class.enums.holidaycalendars attribute)": [[7, "abacusai.api_class.enums.HolidayCalendars.US"]], "valence (abacusai.api_class.enums.sentimenttype attribute)": [[7, "abacusai.api_class.enums.SentimentType.VALENCE"]], "vectorstoretextencoder (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.VectorStoreTextEncoder"]], "wape (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.WAPE"]], "wape (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.WAPE"]], "weekly_monday_start (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.WEEKLY_MONDAY_START"]], "weekly_saturday_start (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.WEEKLY_SATURDAY_START"]], "weekly_sunday_start (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.WEEKLY_SUNDAY_START"]], "weibull (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.WEIBULL"]], "yearly (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.YEARLY"]], "yeo_johnson (abacusai.api_class.enums.regressiontargettransform attribute)": [[7, "abacusai.api_class.enums.RegressionTargetTransform.YEO_JOHNSON"]], "zeros (abacusai.api_class.enums.clusteringimputationmethod attribute)": [[7, "abacusai.api_class.enums.ClusteringImputationMethod.ZEROS"]], "zscore (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.ZSCORE"]], "__eq__() (abacusai.api_class.enums.apienum method)": [[7, "abacusai.api_class.enums.ApiEnum.__eq__"]], "__hash__() (abacusai.api_class.enums.apienum method)": [[7, "abacusai.api_class.enums.ApiEnum.__hash__"]], "abacusai.api_class.enums": [[7, "module-abacusai.api_class.enums"]], "lastnmergeconfig (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group.LastNMergeConfig"]], "mergeconfig (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group.MergeConfig"]], "nsamplingconfig (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group.NSamplingConfig"]], "percentsamplingconfig (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group.PercentSamplingConfig"]], "samplingconfig (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group.SamplingConfig"]], "timewindowmergeconfig (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group.TimeWindowMergeConfig"]], "_mergeconfigfactory (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group._MergeConfigFactory"]], "_samplingconfigfactory (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group._SamplingConfigFactory"]], "__post_init__() (abacusai.api_class.feature_group.mergeconfig method)": [[8, "abacusai.api_class.feature_group.MergeConfig.__post_init__"]], "__post_init__() (abacusai.api_class.feature_group.samplingconfig method)": [[8, "abacusai.api_class.feature_group.SamplingConfig.__post_init__"]], "abacusai.api_class.feature_group": [[8, "module-abacusai.api_class.feature_group"]], "config_class_key (abacusai.api_class.feature_group._mergeconfigfactory attribute)": [[8, "abacusai.api_class.feature_group._MergeConfigFactory.config_class_key"]], "config_class_key (abacusai.api_class.feature_group._samplingconfigfactory attribute)": [[8, "abacusai.api_class.feature_group._SamplingConfigFactory.config_class_key"]], "config_class_map (abacusai.api_class.feature_group._mergeconfigfactory attribute)": [[8, "abacusai.api_class.feature_group._MergeConfigFactory.config_class_map"]], "config_class_map (abacusai.api_class.feature_group._samplingconfigfactory attribute)": [[8, "abacusai.api_class.feature_group._SamplingConfigFactory.config_class_map"]], "feature_name (abacusai.api_class.feature_group.timewindowmergeconfig attribute)": [[8, "abacusai.api_class.feature_group.TimeWindowMergeConfig.feature_name"]], "key_columns (abacusai.api_class.feature_group.nsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.NSamplingConfig.key_columns"]], "key_columns (abacusai.api_class.feature_group.percentsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.PercentSamplingConfig.key_columns"]], "merge_mode (abacusai.api_class.feature_group.lastnmergeconfig attribute)": [[8, "abacusai.api_class.feature_group.LastNMergeConfig.merge_mode"]], "merge_mode (abacusai.api_class.feature_group.timewindowmergeconfig attribute)": [[8, "abacusai.api_class.feature_group.TimeWindowMergeConfig.merge_mode"]], "num_versions (abacusai.api_class.feature_group.lastnmergeconfig attribute)": [[8, "abacusai.api_class.feature_group.LastNMergeConfig.num_versions"]], "sample_count (abacusai.api_class.feature_group.nsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.NSamplingConfig.sample_count"]], "sample_percent (abacusai.api_class.feature_group.percentsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.PercentSamplingConfig.sample_percent"]], "sampling_method (abacusai.api_class.feature_group.nsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.NSamplingConfig.sampling_method"]], "sampling_method (abacusai.api_class.feature_group.percentsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.PercentSamplingConfig.sampling_method"]], "time_window_size_ms (abacusai.api_class.feature_group.timewindowmergeconfig attribute)": [[8, "abacusai.api_class.feature_group.TimeWindowMergeConfig.time_window_size_ms"]], "accuracy (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.ACCURACY"]], "accuracy (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.ACCURACY"]], "aiagenttrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.AIAgentTrainingConfig"]], "ai_agent (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.AI_AGENT"]], "ancestral_simulation (abacusai.api_class.forecastingquanitlesextensionmethod attribute)": [[9, "abacusai.api_class.ForecastingQuanitlesExtensionMethod.ANCESTRAL_SIMULATION"]], "annotations_precision (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.ANNOTATIONS_PRECISION"]], "annotations_recall (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.ANNOTATIONS_RECALL"]], "anomaly_detection (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.ANOMALY_DETECTION"]], "anomaly_outliers (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.ANOMALY_OUTLIERS"]], "application (abacusai.api_class.connectortype attribute)": [[9, "abacusai.api_class.ConnectorType.APPLICATION"]], "asymmetric_mean_absolute_percentage_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "au (abacusai.api_class.holidaycalendars attribute)": [[9, "abacusai.api_class.HolidayCalendars.AU"]], "auc (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.AUC"]], "auc (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.AUC"]], "auto (abacusai.api_class.forecastingdatasplittype attribute)": [[9, "abacusai.api_class.ForecastingDataSplitType.AUTO"]], "auto (abacusai.api_class.nlpdocumentformat attribute)": [[9, "abacusai.api_class.NLPDocumentFormat.AUTO"]], "automatic (abacusai.api_class.clusteringimputationmethod attribute)": [[9, "abacusai.api_class.ClusteringImputationMethod.AUTOMATIC"]], "automatic (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.AUTOMATIC"]], "average (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.AVERAGE"]], "anomalydetectiontrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig"]], "apiclass (class in abacusai.api_class)": [[9, "abacusai.api_class.ApiClass"], [9, "id0"], [9, "id17"], [9, "id23"], [9, "id34"], [9, "id6"]], "apienum (class in abacusai.api_class)": [[9, "abacusai.api_class.ApiEnum"]], "back (abacusai.api_class.forecastingfillmethod attribute)": [[9, "abacusai.api_class.ForecastingFillMethod.BACK"]], "backfill (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.BACKFILL"]], "batch_1024 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_1024"]], "batch_128 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_128"]], "batch_16 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_16"]], "batch_256 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_256"]], "batch_32 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_32"]], "batch_384 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_384"]], "batch_512 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_512"]], "batch_64 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_64"]], "batch_740 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_740"]], "batch_8 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_8"]], "batch_prediction_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.BATCH_PREDICTION_ID"]], "bias (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.BIAS"]], "boolean (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.BOOLEAN"]], "box_cox (abacusai.api_class.regressiontargettransform attribute)": [[9, "abacusai.api_class.RegressionTargetTransform.BOX_COX"]], "batchsize (class in abacusai.api_class)": [[9, "abacusai.api_class.BatchSize"]], "chat_llm (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.CHAT_LLM"]], "clustering (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.CLUSTERING"]], "clustering_timeseries (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.CLUSTERING_TIMESERIES"]], "cmape (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.CMAPE"]], "coverage (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.COVERAGE"]], "cross_entropy (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.CROSS_ENTROPY"]], "cumulative_forecasting (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.CUMULATIVE_FORECASTING"]], "custom (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.CUSTOM"]], "custom (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.CUSTOM"]], "custom (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.CUSTOM"]], "custom_algorithm (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.CUSTOM_ALGORITHM"]], "custom_trained_model (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.CUSTOM_TRAINED_MODEL"]], "cv (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.CV"]], "chatllmtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.ChatLLMTrainingConfig"]], "clusteringimputationmethod (class in abacusai.api_class)": [[9, "abacusai.api_class.ClusteringImputationMethod"]], "clusteringtimeseriestrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.ClusteringTimeseriesTrainingConfig"]], "clusteringtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.ClusteringTrainingConfig"]], "connectortype (class in abacusai.api_class)": [[9, "abacusai.api_class.ConnectorType"]], "cumulativeforecastingtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig"]], "customalgorithmtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig"]], "customtrainedmodeltrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig"]], "daily (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.DAILY"]], "database (abacusai.api_class.connectortype attribute)": [[9, "abacusai.api_class.ConnectorType.DATABASE"]], "dataset_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.DATASET_ID"]], "deployment_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.DEPLOYMENT_ID"]], "direct (abacusai.api_class.forecastingquanitlesextensionmethod attribute)": [[9, "abacusai.api_class.ForecastingQuanitlesExtensionMethod.DIRECT"]], "doc (abacusai.api_class.nlpdocumentformat attribute)": [[9, "abacusai.api_class.NLPDocumentFormat.DOC"]], "document_classification (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.DOCUMENT_CLASSIFICATION"]], "document_summarization (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.DOCUMENT_SUMMARIZATION"]], "document_visualization (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.DOCUMENT_VISUALIZATION"]], "databaseconnectorexportconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig"]], "documentclassificationtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig"]], "documentsummarizationtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.DocumentSummarizationTrainingConfig"]], "documentvisualizationtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.DocumentVisualizationTrainingConfig"]], "e5 (abacusai.api_class.vectorstoretextencoder attribute)": [[9, "abacusai.api_class.VectorStoreTextEncoder.E5"], [9, "id42"]], "e5_small (abacusai.api_class.vectorstoretextencoder attribute)": [[9, "abacusai.api_class.VectorStoreTextEncoder.E5_SMALL"], [9, "id43"]], "emotion (abacusai.api_class.sentimenttype attribute)": [[9, "abacusai.api_class.SentimentType.EMOTION"]], "experimental (abacusai.api_class.personalizationtrainingmode attribute)": [[9, "abacusai.api_class.PersonalizationTrainingMode.EXPERIMENTAL"]], "experimentationmode (class in abacusai.api_class)": [[9, "abacusai.api_class.ExperimentationMode"]], "f1_score (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.F1_SCORE"]], "feature_group (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.FEATURE_GROUP"]], "feature_group_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.FEATURE_GROUP_ID"]], "feature_store (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.FEATURE_STORE"]], "file (abacusai.api_class.connectortype attribute)": [[9, "abacusai.api_class.ConnectorType.FILE"]], "float (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.FLOAT"]], "focal_cross_entropy (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.FOCAL_CROSS_ENTROPY"]], "forecasting (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.FORECASTING"]], "forwardfill (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.FORWARDFILL"]], "future (abacusai.api_class.forecastingfillmethod attribute)": [[9, "abacusai.api_class.ForecastingFillMethod.FUTURE"]], "featuregroupexportconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.FeatureGroupExportConfig"]], "fileconnectorexportconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.FileConnectorExportConfig"]], "filllogic (class in abacusai.api_class)": [[9, "abacusai.api_class.FillLogic"]], "forecastingdatasplittype (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingDataSplitType"]], "forecastingfillmethod (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingFillMethod"]], "forecastingfrequency (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingFrequency"]], "forecastinglocalscaling (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingLocalScaling"]], "forecastinglossfunction (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingLossFunction"]], "forecastingobjective (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingObjective"]], "forecastingquanitlesextensionmethod (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingQuanitlesExtensionMethod"]], "forecastingtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingTrainingConfig"]], "gaussian (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.GAUSSIAN"]], "gaussian_full_covariance (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.GAUSSIAN_FULL_COVARIANCE"]], "guassian_exponential (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.GUASSIAN_EXPONENTIAL"]], "hourly (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.HOURLY"]], "huber (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.HUBER"]], "holidaycalendars (class in abacusai.api_class)": [[9, "abacusai.api_class.HolidayCalendars"]], "image_classification (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.IMAGE_CLASSIFICATION"]], "image_value_prediction (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.IMAGE_VALUE_PREDICTION"]], "integer (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.INTEGER"]], "interpolate (abacusai.api_class.clusteringimputationmethod attribute)": [[9, "abacusai.api_class.ClusteringImputationMethod.INTERPOLATE"]], "item (abacusai.api_class.forecastingdatasplittype attribute)": [[9, "abacusai.api_class.ForecastingDataSplitType.ITEM"]], "item (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.ITEM"]], "json (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.JSON"]], "language_detection (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.LANGUAGE_DETECTION"]], "last_n (abacusai.api_class.mergemode attribute)": [[9, "abacusai.api_class.MergeMode.LAST_N"]], "last_point (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.LAST_POINT"]], "learned (abacusai.api_class.nermodeltype attribute)": [[9, "abacusai.api_class.NERModelType.LEARNED"]], "linear (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.LINEAR"]], "list (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.LIST"]], "log (abacusai.api_class.regressiontargettransform attribute)": [[9, "abacusai.api_class.RegressionTargetTransform.LOG"]], "log_loss (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.LOG_LOSS"]], "log_loss (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.LOG_LOSS"]], "log_root_mean_square_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.LOG_ROOT_MEAN_SQUARE_ERROR"]], "lastnmergeconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.LastNMergeConfig"]], "mae (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.MAE"]], "mae (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.MAE"]], "map (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.MAP"]], "mape (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.MAPE"]], "mape (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.MAPE"]], "mape (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.MAPE"]], "map_10 (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.MAP_10"]], "map_5 (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.MAP_5"]], "max (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.MAX"]], "mean_absolute_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.MEAN_ABSOLUTE_ERROR"]], "mean_absolute_percentage_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "median (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.MEDIAN"]], "middle (abacusai.api_class.forecastingfillmethod attribute)": [[9, "abacusai.api_class.ForecastingFillMethod.MIDDLE"]], "min (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.MIN"]], "min_max (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.MIN_MAX"]], "min_std (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.MIN_STD"]], "mix_gaussians (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.MIX_GAUSSIANS"]], "model_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.MODEL_ID"]], "model_monitoring (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.MODEL_MONITORING"]], "monitor_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.MONITOR_ID"]], "month_end (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.MONTH_END"]], "month_start (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.MONTH_START"]], "mrr (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.MRR"]], "mse (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.MSE"]], "msle (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.MSLE"]], "mergeconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.MergeConfig"]], "mergemode (class in abacusai.api_class)": [[9, "abacusai.api_class.MergeMode"]], "named_entity_extraction (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.NAMED_ENTITY_EXTRACTION"]], "natural_language_search (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.NATURAL_LANGUAGE_SEARCH"]], "ndcg (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.NDCG"]], "ndcg_10 (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.NDCG_10"]], "ndcg_5 (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.NDCG_5"]], "nearest (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.NEAREST"]], "negative_binomial (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.NEGATIVE_BINOMIAL"]], "nermodeltype (class in abacusai.api_class)": [[9, "abacusai.api_class.NERModelType"]], "nerobjective (class in abacusai.api_class)": [[9, "abacusai.api_class.NERObjective"]], "nlpdocumentformat (class in abacusai.api_class)": [[9, "abacusai.api_class.NLPDocumentFormat"]], "normalized_mean_absolute_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.NORMALIZED_MEAN_ABSOLUTE_ERROR"]], "normalized_root_mean_square_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.NORMALIZED_ROOT_MEAN_SQUARE_ERROR"]], "nsamplingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.NSamplingConfig"]], "n_sampling (abacusai.api_class.samplingmethodtype attribute)": [[9, "abacusai.api_class.SamplingMethodType.N_SAMPLING"]], "namedentityextractiontrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig"]], "naturallanguagesearchtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig"]], "object_detection (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.OBJECT_DETECTION"]], "openai (abacusai.api_class.vectorstoretextencoder attribute)": [[9, "abacusai.api_class.VectorStoreTextEncoder.OPENAI"], [9, "id41"]], "optimization (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.OPTIMIZATION"]], "optimizationtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.OptimizationTrainingConfig"]], "outputvariablemapping (class in abacusai.api_class)": [[9, "abacusai.api_class.OutputVariableMapping"]], "peaks_mean_absolute_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.PEAKS_MEAN_ABSOLUTE_ERROR"]], "percent_sampling (abacusai.api_class.samplingmethodtype attribute)": [[9, "abacusai.api_class.SamplingMethodType.PERCENT_SAMPLING"]], "personalization (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.PERSONALIZATION"]], "personalization (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.PERSONALIZATION"]], "pointwise_accuracy (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.POINTWISE_ACCURACY"]], "precision (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.PRECISION"]], "precision (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.PRECISION"]], "prediction_length (abacusai.api_class.forecastingdatasplittype attribute)": [[9, "abacusai.api_class.ForecastingDataSplitType.PREDICTION_LENGTH"]], "predictive_modeling (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.PREDICTIVE_MODELING"]], "pretrained_bert (abacusai.api_class.nermodeltype attribute)": [[9, "abacusai.api_class.NERModelType.PRETRAINED_BERT"]], "pretrained_models (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.PRETRAINED_MODELS"]], "pretrained_multilingual (abacusai.api_class.nermodeltype attribute)": [[9, "abacusai.api_class.NERModelType.PRETRAINED_MULTILINGUAL"]], "pretrained_roberta_27 (abacusai.api_class.nermodeltype attribute)": [[9, "abacusai.api_class.NERModelType.PRETRAINED_ROBERTA_27"]], "pretrained_roberta_43 (abacusai.api_class.nermodeltype attribute)": [[9, "abacusai.api_class.NERModelType.PRETRAINED_ROBERTA_43"]], "production (abacusai.api_class.personalizationtrainingmode attribute)": [[9, "abacusai.api_class.PersonalizationTrainingMode.PRODUCTION"]], "parsingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.ParsingConfig"]], "percentsamplingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.PercentSamplingConfig"]], "personalizationobjective (class in abacusai.api_class)": [[9, "abacusai.api_class.PersonalizationObjective"]], "personalizationtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.PersonalizationTrainingConfig"]], "personalizationtrainingmode (class in abacusai.api_class)": [[9, "abacusai.api_class.PersonalizationTrainingMode"]], "problemtype (class in abacusai.api_class)": [[9, "abacusai.api_class.ProblemType"]], "pythonfunctionargument (class in abacusai.api_class)": [[9, "abacusai.api_class.PythonFunctionArgument"]], "pythonfunctionargumenttype (class in abacusai.api_class)": [[9, "abacusai.api_class.PythonFunctionArgumentType"]], "quadratic (abacusai.api_class.forecastingquanitlesextensionmethod attribute)": [[9, "abacusai.api_class.ForecastingQuanitlesExtensionMethod.QUADRATIC"]], "quantile (abacusai.api_class.regressiontargettransform attribute)": [[9, "abacusai.api_class.RegressionTargetTransform.QUANTILE"]], "quarter_end (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.QUARTER_END"]], "quarter_start (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.QUARTER_START"]], "random (abacusai.api_class.regressiontypeofsplit attribute)": [[9, "abacusai.api_class.RegressionTypeOfSplit.RANDOM"]], "rapid (abacusai.api_class.experimentationmode attribute)": [[9, "abacusai.api_class.ExperimentationMode.RAPID"]], "rapid (abacusai.api_class.regressiontreehpomode attribute)": [[9, "abacusai.api_class.RegressionTreeHPOMode.RAPID"]], "recall (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.RECALL"]], "recall (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.RECALL"]], "resample (abacusai.api_class.regressionaugmentationstrategy attribute)": [[9, "abacusai.api_class.RegressionAugmentationStrategy.RESAMPLE"]], "rmse (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.RMSE"]], "rmse (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.RMSE"]], "robust (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.ROBUST"]], "root_mean_square_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.ROOT_MEAN_SQUARE_ERROR"]], "row_indicator_based (abacusai.api_class.regressiontypeofsplit attribute)": [[9, "abacusai.api_class.RegressionTypeOfSplit.ROW_INDICATOR_BASED"]], "r_squared_coefficient_of_determination (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.R_SQUARED_COEFFICIENT_OF_DETERMINATION"]], "regressionaugmentationstrategy (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionAugmentationStrategy"]], "regressionlossfunction (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionLossFunction"]], "regressionobjective (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionObjective"]], "regressiontargettransform (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionTargetTransform"]], "regressiontimesplitmethod (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionTimeSplitMethod"]], "regressiontrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionTrainingConfig"]], "regressiontreehpomode (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionTreeHPOMode"]], "regressiontypeofsplit (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionTypeOfSplit"]], "sentence_bert (abacusai.api_class.vectorstoretextencoder attribute)": [[9, "abacusai.api_class.VectorStoreTextEncoder.SENTENCE_BERT"], [9, "id44"]], "sentence_boundary_detection (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.SENTENCE_BOUNDARY_DETECTION"]], "sentiment_detection (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.SENTIMENT_DETECTION"]], "sliding_zscore (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.SLIDING_ZSCORE"]], "smote (abacusai.api_class.regressionaugmentationstrategy attribute)": [[9, "abacusai.api_class.RegressionAugmentationStrategy.SMOTE"]], "srmse (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.SRMSE"]], "stable_standardized_mean_absolute_percentage_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "streaming (abacusai.api_class.connectortype attribute)": [[9, "abacusai.api_class.ConnectorType.STREAMING"]], "string (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.STRING"]], "samplingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.SamplingConfig"]], "samplingmethodtype (class in abacusai.api_class)": [[9, "abacusai.api_class.SamplingMethodType"]], "sentenceboundarydetectiontrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig"]], "sentimentdetectiontrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig"]], "sentimenttype (class in abacusai.api_class)": [[9, "abacusai.api_class.SentimentType"]], "test_split_percentage_based (abacusai.api_class.regressiontimesplitmethod attribute)": [[9, "abacusai.api_class.RegressionTimeSplitMethod.TEST_SPLIT_PERCENTAGE_BASED"]], "test_start_timestamp_based (abacusai.api_class.regressiontimesplitmethod attribute)": [[9, "abacusai.api_class.RegressionTimeSplitMethod.TEST_START_TIMESTAMP_BASED"]], "text (abacusai.api_class.nlpdocumentformat attribute)": [[9, "abacusai.api_class.NLPDocumentFormat.TEXT"]], "theme_analysis (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.THEME_ANALYSIS"]], "thorough (abacusai.api_class.experimentationmode attribute)": [[9, "abacusai.api_class.ExperimentationMode.THOROUGH"]], "thorough (abacusai.api_class.regressiontreehpomode attribute)": [[9, "abacusai.api_class.RegressionTreeHPOMode.THOROUGH"]], "timestamp (abacusai.api_class.forecastingdatasplittype attribute)": [[9, "abacusai.api_class.ForecastingDataSplitType.TIMESTAMP"]], "timestamp_based (abacusai.api_class.regressiontypeofsplit attribute)": [[9, "abacusai.api_class.RegressionTypeOfSplit.TIMESTAMP_BASED"]], "time_window (abacusai.api_class.mergemode attribute)": [[9, "abacusai.api_class.MergeMode.TIME_WINDOW"]], "tokens (abacusai.api_class.nlpdocumentformat attribute)": [[9, "abacusai.api_class.NLPDocumentFormat.TOKENS"]], "tweedie (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.TWEEDIE"]], "themeanalysistrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.ThemeAnalysisTrainingConfig"]], "timewindowmergeconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.TimeWindowMergeConfig"]], "trainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.TrainingConfig"]], "uk (abacusai.api_class.holidaycalendars attribute)": [[9, "abacusai.api_class.HolidayCalendars.UK"]], "us (abacusai.api_class.holidaycalendars attribute)": [[9, "abacusai.api_class.HolidayCalendars.US"]], "valence (abacusai.api_class.sentimenttype attribute)": [[9, "abacusai.api_class.SentimentType.VALENCE"]], "vectorstoreconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.VectorStoreConfig"]], "vectorstoretextencoder (class in abacusai.api_class)": [[9, "abacusai.api_class.VectorStoreTextEncoder"], [9, "id40"]], "wape (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.WAPE"]], "wape (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.WAPE"]], "weekly_monday_start (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.WEEKLY_MONDAY_START"]], "weekly_saturday_start (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.WEEKLY_SATURDAY_START"]], "weekly_sunday_start (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.WEEKLY_SUNDAY_START"]], "weibull (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.WEIBULL"]], "yearly (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.YEARLY"]], "yeo_johnson (abacusai.api_class.regressiontargettransform attribute)": [[9, "abacusai.api_class.RegressionTargetTransform.YEO_JOHNSON"]], "zeros (abacusai.api_class.clusteringimputationmethod attribute)": [[9, "abacusai.api_class.ClusteringImputationMethod.ZEROS"]], "zscore (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.ZSCORE"]], "_apiclassfactory (class in abacusai.api_class)": [[9, "abacusai.api_class._ApiClassFactory"], [9, "id12"], [9, "id29"]], "_featuregroupexportconfigfactory (class in abacusai.api_class)": [[9, "abacusai.api_class._FeatureGroupExportConfigFactory"]], "_mergeconfigfactory (class in abacusai.api_class)": [[9, "abacusai.api_class._MergeConfigFactory"]], "_samplingconfigfactory (class in abacusai.api_class)": [[9, "abacusai.api_class._SamplingConfigFactory"]], "_trainingconfigfactory (class in abacusai.api_class)": [[9, "abacusai.api_class._TrainingConfigFactory"]], "__eq__() (abacusai.api_class.apienum method)": [[9, "abacusai.api_class.ApiEnum.__eq__"]], "__hash__() (abacusai.api_class.apienum method)": [[9, "abacusai.api_class.ApiEnum.__hash__"]], "__post_init__() (abacusai.api_class.aiagenttrainingconfig method)": [[9, "abacusai.api_class.AIAgentTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.anomalydetectiontrainingconfig method)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.apiclass method)": [[9, "abacusai.api_class.ApiClass.__post_init__"], [9, "id20"], [9, "id26"], [9, "id3"], [9, "id37"], [9, "id9"]], "__post_init__() (abacusai.api_class.chatllmtrainingconfig method)": [[9, "abacusai.api_class.ChatLLMTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.clusteringtimeseriestrainingconfig method)": [[9, "abacusai.api_class.ClusteringTimeseriesTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.clusteringtrainingconfig method)": [[9, "abacusai.api_class.ClusteringTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.cumulativeforecastingtrainingconfig method)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.customalgorithmtrainingconfig method)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.customtrainedmodeltrainingconfig method)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.documentclassificationtrainingconfig method)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.documentsummarizationtrainingconfig method)": [[9, "abacusai.api_class.DocumentSummarizationTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.documentvisualizationtrainingconfig method)": [[9, "abacusai.api_class.DocumentVisualizationTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.forecastingtrainingconfig method)": [[9, "abacusai.api_class.ForecastingTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.mergeconfig method)": [[9, "abacusai.api_class.MergeConfig.__post_init__"]], "__post_init__() (abacusai.api_class.namedentityextractiontrainingconfig method)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.naturallanguagesearchtrainingconfig method)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.optimizationtrainingconfig method)": [[9, "abacusai.api_class.OptimizationTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.personalizationtrainingconfig method)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.regressiontrainingconfig method)": [[9, "abacusai.api_class.RegressionTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.samplingconfig method)": [[9, "abacusai.api_class.SamplingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.sentenceboundarydetectiontrainingconfig method)": [[9, "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.sentimentdetectiontrainingconfig method)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.themeanalysistrainingconfig method)": [[9, "abacusai.api_class.ThemeAnalysisTrainingConfig.__post_init__"]], "_support_kwargs (abacusai.api_class.apiclass attribute)": [[9, "abacusai.api_class.ApiClass._support_kwargs"], [9, "id19"], [9, "id2"], [9, "id25"], [9, "id36"], [9, "id8"]], "_support_kwargs (abacusai.api_class.trainingconfig attribute)": [[9, "abacusai.api_class.TrainingConfig._support_kwargs"]], "_upper_snake_case_keys (abacusai.api_class.apiclass attribute)": [[9, "abacusai.api_class.ApiClass._upper_snake_case_keys"], [9, "id1"], [9, "id18"], [9, "id24"], [9, "id35"], [9, "id7"]], "_upper_snake_case_keys (abacusai.api_class.trainingconfig attribute)": [[9, "abacusai.api_class.TrainingConfig._upper_snake_case_keys"]], "abacus_internal_model (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.abacus_internal_model"]], "abacusai.api_class": [[9, "module-abacusai.api_class"]], "active_labels_column (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.active_labels_column"]], "active_labels_column (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.active_labels_column"]], "add_time_features (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.add_time_features"]], "additional_forecast_keys (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.additional_forecast_keys"]], "additional_id_columns (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.additional_id_columns"]], "algorithm (abacusai.api_class.trainingconfig attribute)": [[9, "abacusai.api_class.TrainingConfig.algorithm"]], "augmentation_strategy (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.augmentation_strategy"]], "backtesting_window_step_size (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.backtesting_window_step_size"]], "batch_renormalization (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.batch_renormalization"]], "batch_size (abacusai.api_class.documentclassificationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.documentsummarizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentSummarizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.documentvisualizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentVisualizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.sentenceboundarydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.batch_size"]], "chunk_overlap_fraction (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.chunk_overlap_fraction"]], "chunk_overlap_fraction (abacusai.api_class.vectorstoreconfig attribute)": [[9, "abacusai.api_class.VectorStoreConfig.chunk_overlap_fraction"]], "chunk_size (abacusai.api_class.vectorstoreconfig attribute)": [[9, "abacusai.api_class.VectorStoreConfig.chunk_size"]], "compute_metrics (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.compute_metrics"]], "compute_rerank_metrics (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.compute_rerank_metrics"]], "compute_session_metrics (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.compute_session_metrics"]], "config_abstract_class (abacusai.api_class._apiclassfactory attribute)": [[9, "abacusai.api_class._ApiClassFactory.config_abstract_class"], [9, "id13"], [9, "id30"]], "config_abstract_class (abacusai.api_class._featuregroupexportconfigfactory attribute)": [[9, "abacusai.api_class._FeatureGroupExportConfigFactory.config_abstract_class"]], "config_abstract_class (abacusai.api_class._trainingconfigfactory attribute)": [[9, "abacusai.api_class._TrainingConfigFactory.config_abstract_class"]], "config_class_key (abacusai.api_class._apiclassfactory attribute)": [[9, "abacusai.api_class._ApiClassFactory.config_class_key"], [9, "id14"], [9, "id31"]], "config_class_key (abacusai.api_class._featuregroupexportconfigfactory attribute)": [[9, "abacusai.api_class._FeatureGroupExportConfigFactory.config_class_key"]], "config_class_key (abacusai.api_class._mergeconfigfactory attribute)": [[9, "abacusai.api_class._MergeConfigFactory.config_class_key"]], "config_class_key (abacusai.api_class._samplingconfigfactory attribute)": [[9, "abacusai.api_class._SamplingConfigFactory.config_class_key"]], "config_class_key (abacusai.api_class._trainingconfigfactory attribute)": [[9, "abacusai.api_class._TrainingConfigFactory.config_class_key"]], "config_class_map (abacusai.api_class._apiclassfactory attribute)": [[9, "abacusai.api_class._ApiClassFactory.config_class_map"], [9, "id15"], [9, "id32"]], "config_class_map (abacusai.api_class._featuregroupexportconfigfactory attribute)": [[9, "abacusai.api_class._FeatureGroupExportConfigFactory.config_class_map"]], "config_class_map (abacusai.api_class._mergeconfigfactory attribute)": [[9, "abacusai.api_class._MergeConfigFactory.config_class_map"]], "config_class_map (abacusai.api_class._samplingconfigfactory attribute)": [[9, "abacusai.api_class._SamplingConfigFactory.config_class_map"]], "config_class_map (abacusai.api_class._trainingconfigfactory attribute)": [[9, "abacusai.api_class._TrainingConfigFactory.config_class_map"]], "connector_type (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.connector_type"]], "connector_type (abacusai.api_class.featuregroupexportconfig attribute)": [[9, "abacusai.api_class.FeatureGroupExportConfig.connector_type"]], "connector_type (abacusai.api_class.fileconnectorexportconfig attribute)": [[9, "abacusai.api_class.FileConnectorExportConfig.connector_type"]], "convolution_filters (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.convolution_filters"]], "convolutional_layers (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.convolutional_layers"]], "csv_delimiter (abacusai.api_class.parsingconfig attribute)": [[9, "abacusai.api_class.ParsingConfig.csv_delimiter"]], "cumulative_prediction_lengths (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.cumulative_prediction_lengths"]], "custom_loss_functions (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.custom_loss_functions"]], "custom_loss_functions (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.custom_loss_functions"]], "custom_metrics (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.custom_metrics"]], "custom_metrics (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.custom_metrics"]], "data_columns (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.data_columns"]], "data_split_feature_group_table_name (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.data_split_feature_group_table_name"]], "database_connector_id (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.database_connector_id"]], "datetime_holiday_calendars (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.datetime_holiday_calendars"]], "description (abacusai.api_class.aiagenttrainingconfig attribute)": [[9, "abacusai.api_class.AIAgentTrainingConfig.description"]], "disable_gpu (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.disable_gpu"]], "disable_networks_without_analytic_quantiles (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.disable_networks_without_analytic_quantiles"]], "disable_test_val_fold (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.disable_test_val_fold"]], "disable_timestamp_scalar_features (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.disable_timestamp_scalar_features"]], "disable_transformer (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.disable_transformer"]], "docker_image_uri (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.docker_image_uri"]], "document_format (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.document_format"]], "downsample_item_popularity_percentile (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.downsample_item_popularity_percentile"]], "drop_original_categoricals (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.drop_original_categoricals"]], "dropout_rate (abacusai.api_class.documentclassificationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.documentsummarizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentSummarizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.documentvisualizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentVisualizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.sentenceboundarydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.dropout_rate"]], "enable_clustering (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.enable_clustering"]], "enable_cold_start (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.enable_cold_start"]], "enable_feature_selection (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.enable_feature_selection"]], "enable_multiple_backtests (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.enable_multiple_backtests"]], "escape (abacusai.api_class.parsingconfig attribute)": [[9, "abacusai.api_class.ParsingConfig.escape"]], "experimentation_mode (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.experimentation_mode"]], "explicit_time_split (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.explicit_time_split"]], "explore_lookback_hours (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.explore_lookback_hours"]], "export_file_format (abacusai.api_class.fileconnectorexportconfig attribute)": [[9, "abacusai.api_class.FileConnectorExportConfig.export_file_format"]], "feature_name (abacusai.api_class.timewindowmergeconfig attribute)": [[9, "abacusai.api_class.TimeWindowMergeConfig.feature_name"]], "feature_selection_intensity (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.feature_selection_intensity"]], "file_path_with_schema (abacusai.api_class.parsingconfig attribute)": [[9, "abacusai.api_class.ParsingConfig.file_path_with_schema"]], "fill_missing_values (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.fill_missing_values"]], "filter_history (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.filter_history"]], "filter_items (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.filter_items"]], "force_prediction_length (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.force_prediction_length"]], "forecast_frequency (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.forecast_frequency"]], "from_dict() (abacusai.api_class.apiclass class method)": [[9, "abacusai.api_class.ApiClass.from_dict"], [9, "id11"], [9, "id22"], [9, "id28"], [9, "id39"], [9, "id5"]], "from_dict() (abacusai.api_class._apiclassfactory class method)": [[9, "abacusai.api_class._ApiClassFactory.from_dict"], [9, "id16"], [9, "id33"]], "full_data_retraining (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.full_data_retraining"]], "full_data_retraining (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.full_data_retraining"]], "handle_zeros_as_missing_values (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.handle_zeros_as_missing_values"]], "historical_frequency (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.historical_frequency"]], "history_length (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.history_length"]], "id_column (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.id_column"]], "ignore_datetime_features (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.ignore_datetime_features"]], "imputation (abacusai.api_class.clusteringtimeseriestrainingconfig attribute)": [[9, "abacusai.api_class.ClusteringTimeseriesTrainingConfig.imputation"]], "include_longformer (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.include_longformer"]], "index_fraction (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.index_fraction"]], "index_output_path (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.index_output_path"]], "initial_learning_rate (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.initial_learning_rate"]], "is_multilingual (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.is_multilingual"]], "is_required (abacusai.api_class.pythonfunctionargument attribute)": [[9, "abacusai.api_class.PythonFunctionArgument.is_required"]], "item_attributes_weight_column (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.item_attributes_weight_column"]], "item_id_dropout (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.item_id_dropout"]], "k_fold_cross_validation (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.k_fold_cross_validation"]], "key_columns (abacusai.api_class.nsamplingconfig attribute)": [[9, "abacusai.api_class.NSamplingConfig.key_columns"]], "key_columns (abacusai.api_class.percentsamplingconfig attribute)": [[9, "abacusai.api_class.PercentSamplingConfig.key_columns"]], "kwargs (abacusai.api_class.trainingconfig attribute)": [[9, "abacusai.api_class.TrainingConfig.kwargs"]], "l2_regularization_factor (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.l2_regularization_factor"]], "larger_embeddings (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.larger_embeddings"]], "llm_name (abacusai.api_class.chatllmtrainingconfig attribute)": [[9, "abacusai.api_class.ChatLLMTrainingConfig.llm_name"]], "local_scaling_mode (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.local_scaling_mode"]], "location (abacusai.api_class.fileconnectorexportconfig attribute)": [[9, "abacusai.api_class.FileConnectorExportConfig.location"]], "loss_function (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.loss_function"]], "loss_function (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.loss_function"]], "loss_parameters (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.loss_parameters"]], "max_catalog_size (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.max_catalog_size"]], "max_dimension (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.max_dimension"]], "max_history_length (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.max_history_length"]], "max_scale_context (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.max_scale_context"]], "max_text_words (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.max_text_words"]], "max_user_history_len_percentile (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.max_user_history_len_percentile"]], "merge_mode (abacusai.api_class.lastnmergeconfig attribute)": [[9, "abacusai.api_class.LastNMergeConfig.merge_mode"]], "merge_mode (abacusai.api_class.timewindowmergeconfig attribute)": [[9, "abacusai.api_class.TimeWindowMergeConfig.merge_mode"]], "min_categorical_count (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.min_categorical_count"]], "mixture_of_gaussians (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.mixture_of_gaussians"]], "mode (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.mode"]], "name (abacusai.api_class.outputvariablemapping attribute)": [[9, "abacusai.api_class.OutputVariableMapping.name"]], "name (abacusai.api_class.pythonfunctionargument attribute)": [[9, "abacusai.api_class.PythonFunctionArgument.name"]], "ner_model_type (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.ner_model_type"]], "num_backtesting_windows (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.num_backtesting_windows"]], "num_clusters_selection (abacusai.api_class.clusteringtimeseriestrainingconfig attribute)": [[9, "abacusai.api_class.ClusteringTimeseriesTrainingConfig.num_clusters_selection"]], "num_clusters_selection (abacusai.api_class.clusteringtrainingconfig attribute)": [[9, "abacusai.api_class.ClusteringTrainingConfig.num_clusters_selection"]], "num_completion_tokens (abacusai.api_class.chatllmtrainingconfig attribute)": [[9, "abacusai.api_class.ChatLLMTrainingConfig.num_completion_tokens"]], "num_completion_tokens (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.num_completion_tokens"]], "num_cv_folds (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.num_cv_folds"]], "num_versions (abacusai.api_class.lastnmergeconfig attribute)": [[9, "abacusai.api_class.LastNMergeConfig.num_versions"]], "number_of_samples (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.number_of_samples"]], "numeric_clipping_percentile (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.numeric_clipping_percentile"]], "object_name (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.object_name"]], "objective (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.objective"]], "objective (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.objective"]], "objective (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.objective"]], "objective (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.objective"]], "perform_feature_selection (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.perform_feature_selection"]], "pipeline_variable (abacusai.api_class.pythonfunctionargument attribute)": [[9, "abacusai.api_class.PythonFunctionArgument.pipeline_variable"]], "predict_function_name (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.predict_function_name"]], "predict_many_function_name (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.predict_many_function_name"]], "predict_module_name (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.predict_module_name"]], "predict_residuals (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.predict_residuals"]], "prediction_length (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.prediction_length"]], "prediction_step_size (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.prediction_step_size"]], "pretrained_model_name (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.pretrained_model_name"]], "probability_quantiles (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.probability_quantiles"]], "problem_type (abacusai.api_class.trainingconfig attribute)": [[9, "abacusai.api_class.TrainingConfig.problem_type"]], "quantiles_extension_method (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.quantiles_extension_method"]], "rare_class_augmentation_threshold (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.rare_class_augmentation_threshold"]], "rebalance_classes (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.rebalance_classes"]], "recent_days_for_training (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.recent_days_for_training"]], "recurrent_layers (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.recurrent_layers"]], "recurrent_units (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.recurrent_units"]], "sample_count (abacusai.api_class.nsamplingconfig attribute)": [[9, "abacusai.api_class.NSamplingConfig.sample_count"]], "sample_percent (abacusai.api_class.percentsamplingconfig attribute)": [[9, "abacusai.api_class.PercentSamplingConfig.sample_percent"]], "sample_weight (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.sample_weight"]], "sampling_method (abacusai.api_class.nsamplingconfig attribute)": [[9, "abacusai.api_class.NSamplingConfig.sampling_method"]], "sampling_method (abacusai.api_class.percentsamplingconfig attribute)": [[9, "abacusai.api_class.PercentSamplingConfig.sampling_method"]], "sampling_unit_keys (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.sampling_unit_keys"]], "search_chunk_size (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.search_chunk_size"]], "sentiment_type (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.sentiment_type"]], "sequential_training (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.sequential_training"]], "service_port (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.service_port"]], "session_event_types (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.session_event_types"]], "skip_input_transform (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.skip_input_transform"]], "skip_local_scale_target (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.skip_local_scale_target"]], "skip_missing (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.skip_missing"]], "skip_target_transform (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.skip_target_transform"]], "skip_timeseries_weight_scaling (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.skip_timeseries_weight_scaling"]], "smooth_history (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.smooth_history"]], "sort_objective (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.sort_objective"]], "spike_down (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.spike_down"]], "spike_up (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.spike_up"]], "symmetrize_quantiles (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.symmetrize_quantiles"]], "system_message (abacusai.api_class.chatllmtrainingconfig attribute)": [[9, "abacusai.api_class.ChatLLMTrainingConfig.system_message"]], "target_action_types (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.target_action_types"]], "target_action_weights (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.target_action_weights"]], "target_encode_categoricals (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.target_encode_categoricals"]], "target_transform (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.target_transform"]], "temperature (abacusai.api_class.chatllmtrainingconfig attribute)": [[9, "abacusai.api_class.ChatLLMTrainingConfig.temperature"]], "test_by_item (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.test_by_item"]], "test_last_items_length (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_last_items_length"]], "test_on_user_split (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_on_user_split"]], "test_row_indicator (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.test_row_indicator"]], "test_split (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.test_split"]], "test_split (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.test_split"]], "test_split (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.test_split"]], "test_split (abacusai.api_class.documentclassificationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig.test_split"]], "test_split (abacusai.api_class.documentsummarizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentSummarizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.documentvisualizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentVisualizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.test_split"]], "test_split (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.test_split"]], "test_split (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.test_split"]], "test_split (abacusai.api_class.sentenceboundarydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig.test_split"]], "test_split (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.test_split"]], "test_split_on_last_k_items (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_split_on_last_k_items"]], "test_splitting_timestamp (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.test_splitting_timestamp"]], "test_start (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.test_start"]], "test_window_length_hours (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_window_length_hours"]], "text_encoder (abacusai.api_class.vectorstoreconfig attribute)": [[9, "abacusai.api_class.VectorStoreConfig.text_encoder"]], "time_window_size_ms (abacusai.api_class.timewindowmergeconfig attribute)": [[9, "abacusai.api_class.TimeWindowMergeConfig.time_window_size_ms"]], "timeseries_loss_weight_column (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.timeseries_loss_weight_column"]], "timeseries_weight_column (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.timeseries_weight_column"]], "timestamp_based_splitting_column (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.timestamp_based_splitting_column"]], "timestamp_based_splitting_method (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.timestamp_based_splitting_method"]], "to_dict() (abacusai.api_class.apiclass method)": [[9, "abacusai.api_class.ApiClass.to_dict"], [9, "id10"], [9, "id21"], [9, "id27"], [9, "id38"], [9, "id4"]], "to_dict() (abacusai.api_class.databaseconnectorexportconfig method)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.to_dict"]], "to_dict() (abacusai.api_class.fileconnectorexportconfig method)": [[9, "abacusai.api_class.FileConnectorExportConfig.to_dict"]], "train_function_name (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.train_function_name"]], "train_module_name (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.train_module_name"]], "training_input_tables (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.training_input_tables"]], "training_mode (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.training_mode"]], "training_point_overlap (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.training_point_overlap"]], "training_rows_downsample_ratio (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.training_rows_downsample_ratio"]], "training_start_date (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.training_start_date"]], "tree_hpo_mode (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.tree_hpo_mode"]], "trend_change (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.trend_change"]], "type_of_split (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.type_of_split"]], "type_of_split (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.type_of_split"]], "underprediction_weight (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.underprediction_weight"]], "use_all_item_totals (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.use_all_item_totals"]], "use_item_id (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.use_item_id"]], "use_item_weights_in_objective (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.use_item_weights_in_objective"]], "use_log_transforms (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.use_log_transforms"]], "use_timeseries_weights_in_objective (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.use_timeseries_weights_in_objective"]], "value (abacusai.api_class.pythonfunctionargument attribute)": [[9, "abacusai.api_class.PythonFunctionArgument.value"]], "value_high (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.value_high"]], "variable_type (abacusai.api_class.outputvariablemapping attribute)": [[9, "abacusai.api_class.OutputVariableMapping.variable_type"]], "variable_type (abacusai.api_class.pythonfunctionargument attribute)": [[9, "abacusai.api_class.PythonFunctionArgument.variable_type"]], "variational_autoencoder (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.variational_autoencoder"]], "vector_stores (abacusai.api_class.chatllmtrainingconfig attribute)": [[9, "abacusai.api_class.ChatLLMTrainingConfig.vector_stores"]], "zero_predictor (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.zero_predictor"]], "zero_shot_hypotheses (abacusai.api_class.documentclassificationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig.zero_shot_hypotheses"]], "aiagenttrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.AIAgentTrainingConfig"]], "anomalydetectiontrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig"]], "chatllmtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.ChatLLMTrainingConfig"]], "clusteringtimeseriestrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.ClusteringTimeseriesTrainingConfig"]], "clusteringtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.ClusteringTrainingConfig"]], "cumulativeforecastingtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig"]], "customalgorithmtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig"]], "customtrainedmodeltrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig"]], "documentclassificationtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig"]], "documentsummarizationtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.DocumentSummarizationTrainingConfig"]], "documentvisualizationtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.DocumentVisualizationTrainingConfig"]], "forecastingtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig"]], "namedentityextractiontrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig"]], "naturallanguagesearchtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig"]], "optimizationtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.OptimizationTrainingConfig"]], "personalizationtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig"]], "regressiontrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.RegressionTrainingConfig"]], "sentenceboundarydetectiontrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig"]], "sentimentdetectiontrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig"]], "themeanalysistrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.ThemeAnalysisTrainingConfig"]], "trainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.TrainingConfig"]], "_trainingconfigfactory (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model._TrainingConfigFactory"]], "__post_init__() (abacusai.api_class.model.aiagenttrainingconfig method)": [[10, "abacusai.api_class.model.AIAgentTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.anomalydetectiontrainingconfig method)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.chatllmtrainingconfig method)": [[10, "abacusai.api_class.model.ChatLLMTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.clusteringtimeseriestrainingconfig method)": [[10, "abacusai.api_class.model.ClusteringTimeseriesTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.clusteringtrainingconfig method)": [[10, "abacusai.api_class.model.ClusteringTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.cumulativeforecastingtrainingconfig method)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.customalgorithmtrainingconfig method)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.customtrainedmodeltrainingconfig method)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.documentclassificationtrainingconfig method)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.documentsummarizationtrainingconfig method)": [[10, "abacusai.api_class.model.DocumentSummarizationTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.documentvisualizationtrainingconfig method)": [[10, "abacusai.api_class.model.DocumentVisualizationTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.forecastingtrainingconfig method)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.namedentityextractiontrainingconfig method)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.naturallanguagesearchtrainingconfig method)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.optimizationtrainingconfig method)": [[10, "abacusai.api_class.model.OptimizationTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.personalizationtrainingconfig method)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.regressiontrainingconfig method)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.sentenceboundarydetectiontrainingconfig method)": [[10, "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.sentimentdetectiontrainingconfig method)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.__post_init__"]], "__post_init__() (abacusai.api_class.model.themeanalysistrainingconfig method)": [[10, "abacusai.api_class.model.ThemeAnalysisTrainingConfig.__post_init__"]], "_support_kwargs (abacusai.api_class.model.trainingconfig attribute)": [[10, "abacusai.api_class.model.TrainingConfig._support_kwargs"]], "_upper_snake_case_keys (abacusai.api_class.model.trainingconfig attribute)": [[10, "abacusai.api_class.model.TrainingConfig._upper_snake_case_keys"]], "abacus_internal_model (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.abacus_internal_model"]], "abacusai.api_class.model": [[10, "module-abacusai.api_class.model"]], "active_labels_column (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.active_labels_column"]], "active_labels_column (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.active_labels_column"]], "add_time_features (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.add_time_features"]], "additional_forecast_keys (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.additional_forecast_keys"]], "algorithm (abacusai.api_class.model.trainingconfig attribute)": [[10, "abacusai.api_class.model.TrainingConfig.algorithm"]], "augmentation_strategy (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.augmentation_strategy"]], "backtesting_window_step_size (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.backtesting_window_step_size"]], "batch_renormalization (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.batch_renormalization"]], "batch_size (abacusai.api_class.model.documentclassificationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.documentsummarizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentSummarizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.documentvisualizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentVisualizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.sentenceboundarydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.batch_size"]], "chunk_overlap_fraction (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.chunk_overlap_fraction"]], "compute_metrics (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.compute_metrics"]], "compute_rerank_metrics (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.compute_rerank_metrics"]], "compute_session_metrics (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.compute_session_metrics"]], "config_abstract_class (abacusai.api_class.model._trainingconfigfactory attribute)": [[10, "abacusai.api_class.model._TrainingConfigFactory.config_abstract_class"]], "config_class_key (abacusai.api_class.model._trainingconfigfactory attribute)": [[10, "abacusai.api_class.model._TrainingConfigFactory.config_class_key"]], "config_class_map (abacusai.api_class.model._trainingconfigfactory attribute)": [[10, "abacusai.api_class.model._TrainingConfigFactory.config_class_map"]], "convolution_filters (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.convolution_filters"]], "convolutional_layers (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.convolutional_layers"]], "cumulative_prediction_lengths (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.cumulative_prediction_lengths"]], "custom_loss_functions (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.custom_loss_functions"]], "custom_loss_functions (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.custom_loss_functions"]], "custom_metrics (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.custom_metrics"]], "custom_metrics (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.custom_metrics"]], "data_split_feature_group_table_name (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.data_split_feature_group_table_name"]], "datetime_holiday_calendars (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.datetime_holiday_calendars"]], "description (abacusai.api_class.model.aiagenttrainingconfig attribute)": [[10, "abacusai.api_class.model.AIAgentTrainingConfig.description"]], "disable_gpu (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.disable_gpu"]], "disable_networks_without_analytic_quantiles (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.disable_networks_without_analytic_quantiles"]], "disable_test_val_fold (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.disable_test_val_fold"]], "disable_timestamp_scalar_features (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.disable_timestamp_scalar_features"]], "disable_transformer (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.disable_transformer"]], "docker_image_uri (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.docker_image_uri"]], "document_format (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.document_format"]], "downsample_item_popularity_percentile (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.downsample_item_popularity_percentile"]], "drop_original_categoricals (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.drop_original_categoricals"]], "dropout_rate (abacusai.api_class.model.documentclassificationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.documentsummarizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentSummarizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.documentvisualizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentVisualizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.sentenceboundarydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.dropout_rate"]], "enable_clustering (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.enable_clustering"]], "enable_cold_start (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.enable_cold_start"]], "enable_feature_selection (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.enable_feature_selection"]], "enable_multiple_backtests (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.enable_multiple_backtests"]], "experimentation_mode (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.experimentation_mode"]], "explicit_time_split (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.explicit_time_split"]], "explore_lookback_hours (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.explore_lookback_hours"]], "feature_selection_intensity (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.feature_selection_intensity"]], "fill_missing_values (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.fill_missing_values"]], "filter_history (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.filter_history"]], "filter_items (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.filter_items"]], "force_prediction_length (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.force_prediction_length"]], "forecast_frequency (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.forecast_frequency"]], "full_data_retraining (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.full_data_retraining"]], "full_data_retraining (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.full_data_retraining"]], "handle_zeros_as_missing_values (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.handle_zeros_as_missing_values"]], "historical_frequency (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.historical_frequency"]], "history_length (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.history_length"]], "ignore_datetime_features (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.ignore_datetime_features"]], "imputation (abacusai.api_class.model.clusteringtimeseriestrainingconfig attribute)": [[10, "abacusai.api_class.model.ClusteringTimeseriesTrainingConfig.imputation"]], "include_longformer (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.include_longformer"]], "index_fraction (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.index_fraction"]], "index_output_path (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.index_output_path"]], "initial_learning_rate (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.initial_learning_rate"]], "is_multilingual (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.is_multilingual"]], "item_attributes_weight_column (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.item_attributes_weight_column"]], "item_id_dropout (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.item_id_dropout"]], "k_fold_cross_validation (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.k_fold_cross_validation"]], "kwargs (abacusai.api_class.model.trainingconfig attribute)": [[10, "abacusai.api_class.model.TrainingConfig.kwargs"]], "l2_regularization_factor (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.l2_regularization_factor"]], "larger_embeddings (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.larger_embeddings"]], "llm_name (abacusai.api_class.model.chatllmtrainingconfig attribute)": [[10, "abacusai.api_class.model.ChatLLMTrainingConfig.llm_name"]], "local_scaling_mode (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.local_scaling_mode"]], "loss_function (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.loss_function"]], "loss_function (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.loss_function"]], "loss_parameters (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.loss_parameters"]], "max_catalog_size (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.max_catalog_size"]], "max_dimension (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.max_dimension"]], "max_history_length (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.max_history_length"]], "max_scale_context (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.max_scale_context"]], "max_text_words (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.max_text_words"]], "max_user_history_len_percentile (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.max_user_history_len_percentile"]], "min_categorical_count (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.min_categorical_count"]], "mixture_of_gaussians (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.mixture_of_gaussians"]], "ner_model_type (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.ner_model_type"]], "num_backtesting_windows (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.num_backtesting_windows"]], "num_clusters_selection (abacusai.api_class.model.clusteringtimeseriestrainingconfig attribute)": [[10, "abacusai.api_class.model.ClusteringTimeseriesTrainingConfig.num_clusters_selection"]], "num_clusters_selection (abacusai.api_class.model.clusteringtrainingconfig attribute)": [[10, "abacusai.api_class.model.ClusteringTrainingConfig.num_clusters_selection"]], "num_completion_tokens (abacusai.api_class.model.chatllmtrainingconfig attribute)": [[10, "abacusai.api_class.model.ChatLLMTrainingConfig.num_completion_tokens"]], "num_completion_tokens (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.num_completion_tokens"]], "num_cv_folds (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.num_cv_folds"]], "number_of_samples (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.number_of_samples"]], "numeric_clipping_percentile (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.numeric_clipping_percentile"]], "objective (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.objective"]], "objective (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.objective"]], "objective (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.objective"]], "objective (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.objective"]], "perform_feature_selection (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.perform_feature_selection"]], "predict_function_name (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.predict_function_name"]], "predict_many_function_name (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.predict_many_function_name"]], "predict_module_name (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.predict_module_name"]], "predict_residuals (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.predict_residuals"]], "prediction_length (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.prediction_length"]], "prediction_step_size (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.prediction_step_size"]], "pretrained_model_name (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.pretrained_model_name"]], "probability_quantiles (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.probability_quantiles"]], "problem_type (abacusai.api_class.model.trainingconfig attribute)": [[10, "abacusai.api_class.model.TrainingConfig.problem_type"]], "quantiles_extension_method (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.quantiles_extension_method"]], "rare_class_augmentation_threshold (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.rare_class_augmentation_threshold"]], "rebalance_classes (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.rebalance_classes"]], "recent_days_for_training (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.recent_days_for_training"]], "recurrent_layers (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.recurrent_layers"]], "recurrent_units (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.recurrent_units"]], "sample_weight (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.sample_weight"]], "sampling_unit_keys (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.sampling_unit_keys"]], "search_chunk_size (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.search_chunk_size"]], "sentiment_type (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.sentiment_type"]], "sequential_training (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.sequential_training"]], "service_port (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.service_port"]], "session_event_types (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.session_event_types"]], "skip_input_transform (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.skip_input_transform"]], "skip_local_scale_target (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.skip_local_scale_target"]], "skip_missing (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.skip_missing"]], "skip_target_transform (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.skip_target_transform"]], "skip_timeseries_weight_scaling (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.skip_timeseries_weight_scaling"]], "smooth_history (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.smooth_history"]], "sort_objective (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.sort_objective"]], "spike_down (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.spike_down"]], "spike_up (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.spike_up"]], "symmetrize_quantiles (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.symmetrize_quantiles"]], "system_message (abacusai.api_class.model.chatllmtrainingconfig attribute)": [[10, "abacusai.api_class.model.ChatLLMTrainingConfig.system_message"]], "target_action_types (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.target_action_types"]], "target_action_weights (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.target_action_weights"]], "target_encode_categoricals (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.target_encode_categoricals"]], "target_transform (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.target_transform"]], "temperature (abacusai.api_class.model.chatllmtrainingconfig attribute)": [[10, "abacusai.api_class.model.ChatLLMTrainingConfig.temperature"]], "test_by_item (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.test_by_item"]], "test_last_items_length (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_last_items_length"]], "test_on_user_split (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_on_user_split"]], "test_row_indicator (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.test_row_indicator"]], "test_split (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.documentclassificationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.documentsummarizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentSummarizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.documentvisualizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentVisualizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.sentenceboundarydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.test_split"]], "test_split_on_last_k_items (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_split_on_last_k_items"]], "test_splitting_timestamp (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.test_splitting_timestamp"]], "test_start (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.test_start"]], "test_window_length_hours (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_window_length_hours"]], "timeseries_loss_weight_column (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.timeseries_loss_weight_column"]], "timeseries_weight_column (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.timeseries_weight_column"]], "timestamp_based_splitting_column (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.timestamp_based_splitting_column"]], "timestamp_based_splitting_method (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.timestamp_based_splitting_method"]], "train_function_name (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.train_function_name"]], "train_module_name (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.train_module_name"]], "training_input_tables (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.training_input_tables"]], "training_mode (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.training_mode"]], "training_point_overlap (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.training_point_overlap"]], "training_rows_downsample_ratio (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.training_rows_downsample_ratio"]], "training_start_date (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.training_start_date"]], "tree_hpo_mode (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.tree_hpo_mode"]], "trend_change (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.trend_change"]], "type_of_split (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.type_of_split"]], "type_of_split (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.type_of_split"]], "underprediction_weight (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.underprediction_weight"]], "use_all_item_totals (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.use_all_item_totals"]], "use_item_id (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.use_item_id"]], "use_item_weights_in_objective (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.use_item_weights_in_objective"]], "use_log_transforms (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.use_log_transforms"]], "use_timeseries_weights_in_objective (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.use_timeseries_weights_in_objective"]], "value_high (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.value_high"]], "variational_autoencoder (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.variational_autoencoder"]], "vector_stores (abacusai.api_class.model.chatllmtrainingconfig attribute)": [[10, "abacusai.api_class.model.ChatLLMTrainingConfig.vector_stores"]], "zero_predictor (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.zero_predictor"]], "zero_shot_hypotheses (abacusai.api_class.model.documentclassificationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig.zero_shot_hypotheses"]], "featuremappingconfig (class in abacusai.api_class.project)": [[11, "abacusai.api_class.project.FeatureMappingConfig"]], "projectfeaturegrouptypemappingsconfig (class in abacusai.api_class.project)": [[11, "abacusai.api_class.project.ProjectFeatureGroupTypeMappingsConfig"]], "abacusai.api_class.project": [[11, "module-abacusai.api_class.project"]], "feature_group_id (abacusai.api_class.project.projectfeaturegrouptypemappingsconfig attribute)": [[11, "abacusai.api_class.project.ProjectFeatureGroupTypeMappingsConfig.feature_group_id"]], "feature_group_type (abacusai.api_class.project.projectfeaturegrouptypemappingsconfig attribute)": [[11, "abacusai.api_class.project.ProjectFeatureGroupTypeMappingsConfig.feature_group_type"]], "feature_mapping (abacusai.api_class.project.featuremappingconfig attribute)": [[11, "abacusai.api_class.project.FeatureMappingConfig.feature_mapping"]], "feature_mappings (abacusai.api_class.project.projectfeaturegrouptypemappingsconfig attribute)": [[11, "abacusai.api_class.project.ProjectFeatureGroupTypeMappingsConfig.feature_mappings"]], "feature_name (abacusai.api_class.project.featuremappingconfig attribute)": [[11, "abacusai.api_class.project.FeatureMappingConfig.feature_name"]], "from_dict() (abacusai.api_class.project.projectfeaturegrouptypemappingsconfig class method)": [[11, "abacusai.api_class.project.ProjectFeatureGroupTypeMappingsConfig.from_dict"]], "nested_feature_name (abacusai.api_class.project.featuremappingconfig attribute)": [[11, "abacusai.api_class.project.FeatureMappingConfig.nested_feature_name"]], "outputvariablemapping (class in abacusai.api_class.python_functions)": [[12, "abacusai.api_class.python_functions.OutputVariableMapping"]], "pythonfunctionargument (class in abacusai.api_class.python_functions)": [[12, "abacusai.api_class.python_functions.PythonFunctionArgument"]], "abacusai.api_class.python_functions": [[12, "module-abacusai.api_class.python_functions"]], "is_required (abacusai.api_class.python_functions.pythonfunctionargument attribute)": [[12, "abacusai.api_class.python_functions.PythonFunctionArgument.is_required"]], "name (abacusai.api_class.python_functions.outputvariablemapping attribute)": [[12, "abacusai.api_class.python_functions.OutputVariableMapping.name"]], "name (abacusai.api_class.python_functions.pythonfunctionargument attribute)": [[12, "abacusai.api_class.python_functions.PythonFunctionArgument.name"]], "pipeline_variable (abacusai.api_class.python_functions.pythonfunctionargument attribute)": [[12, "abacusai.api_class.python_functions.PythonFunctionArgument.pipeline_variable"]], "value (abacusai.api_class.python_functions.pythonfunctionargument attribute)": [[12, "abacusai.api_class.python_functions.PythonFunctionArgument.value"]], "variable_type (abacusai.api_class.python_functions.outputvariablemapping attribute)": [[12, "abacusai.api_class.python_functions.OutputVariableMapping.variable_type"]], "variable_type (abacusai.api_class.python_functions.pythonfunctionargument attribute)": [[12, "abacusai.api_class.python_functions.PythonFunctionArgument.variable_type"]], "databaseconnectorexportconfig (class in abacusai.api_class.refresh)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig"]], "featuregroupexportconfig (class in abacusai.api_class.refresh)": [[13, "abacusai.api_class.refresh.FeatureGroupExportConfig"]], "fileconnectorexportconfig (class in abacusai.api_class.refresh)": [[13, "abacusai.api_class.refresh.FileConnectorExportConfig"]], "_featuregroupexportconfigfactory (class in abacusai.api_class.refresh)": [[13, "abacusai.api_class.refresh._FeatureGroupExportConfigFactory"]], "abacusai.api_class.refresh": [[13, "module-abacusai.api_class.refresh"]], "additional_id_columns (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.additional_id_columns"]], "config_abstract_class (abacusai.api_class.refresh._featuregroupexportconfigfactory attribute)": [[13, "abacusai.api_class.refresh._FeatureGroupExportConfigFactory.config_abstract_class"]], "config_class_key (abacusai.api_class.refresh._featuregroupexportconfigfactory attribute)": [[13, "abacusai.api_class.refresh._FeatureGroupExportConfigFactory.config_class_key"]], "config_class_map (abacusai.api_class.refresh._featuregroupexportconfigfactory attribute)": [[13, "abacusai.api_class.refresh._FeatureGroupExportConfigFactory.config_class_map"]], "connector_type (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.connector_type"]], "connector_type (abacusai.api_class.refresh.featuregroupexportconfig attribute)": [[13, "abacusai.api_class.refresh.FeatureGroupExportConfig.connector_type"]], "connector_type (abacusai.api_class.refresh.fileconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.FileConnectorExportConfig.connector_type"]], "data_columns (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.data_columns"]], "database_connector_id (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.database_connector_id"]], "export_file_format (abacusai.api_class.refresh.fileconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.FileConnectorExportConfig.export_file_format"]], "id_column (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.id_column"]], "location (abacusai.api_class.refresh.fileconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.FileConnectorExportConfig.location"]], "mode (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.mode"]], "object_name (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.object_name"]], "to_dict() (abacusai.api_class.refresh.databaseconnectorexportconfig method)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.to_dict"]], "to_dict() (abacusai.api_class.refresh.fileconnectorexportconfig method)": [[13, "abacusai.api_class.refresh.FileConnectorExportConfig.to_dict"]], "vectorstoreconfig (class in abacusai.api_class.vector_store)": [[14, "abacusai.api_class.vector_store.VectorStoreConfig"]], "abacusai.api_class.vector_store": [[14, "module-abacusai.api_class.vector_store"]], "chunk_overlap_fraction (abacusai.api_class.vector_store.vectorstoreconfig attribute)": [[14, "abacusai.api_class.vector_store.VectorStoreConfig.chunk_overlap_fraction"]], "chunk_size (abacusai.api_class.vector_store.vectorstoreconfig attribute)": [[14, "abacusai.api_class.vector_store.VectorStoreConfig.chunk_size"]], "text_encoder (abacusai.api_class.vector_store.vectorstoreconfig attribute)": [[14, "abacusai.api_class.vector_store.VectorStoreConfig.text_encoder"]], "invalid_pandas_column_name_characters (in module abacusai.api_client_utils)": [[15, "abacusai.api_client_utils.INVALID_PANDAS_COLUMN_NAME_CHARACTERS"]], "abacusai.api_client_utils": [[15, "module-abacusai.api_client_utils"]], "avro_to_pandas_dtype() (in module abacusai.api_client_utils)": [[15, "abacusai.api_client_utils.avro_to_pandas_dtype"]], "clean_column_name() (in module abacusai.api_client_utils)": [[15, "abacusai.api_client_utils.clean_column_name"]], "get_clean_function_source_code() (in module abacusai.api_client_utils)": [[15, "abacusai.api_client_utils.get_clean_function_source_code"]], "get_non_nullable_type() (in module abacusai.api_client_utils)": [[15, "abacusai.api_client_utils.get_non_nullable_type"]], "get_object_from_context() (in module abacusai.api_client_utils)": [[15, "abacusai.api_client_utils.get_object_from_context"]], "apiendpoint (class in abacusai.api_endpoint)": [[16, "abacusai.api_endpoint.ApiEndpoint"]], "__repr__() (abacusai.api_endpoint.apiendpoint method)": [[16, "abacusai.api_endpoint.ApiEndpoint.__repr__"]], "abacusai.api_endpoint": [[16, "module-abacusai.api_endpoint"]], "to_dict() (abacusai.api_endpoint.apiendpoint method)": [[16, "abacusai.api_endpoint.ApiEndpoint.to_dict"]], "apikey (class in abacusai.api_key)": [[17, "abacusai.api_key.ApiKey"]], "__repr__() (abacusai.api_key.apikey method)": [[17, "abacusai.api_key.ApiKey.__repr__"]], "abacusai.api_key": [[17, "module-abacusai.api_key"]], "delete() (abacusai.api_key.apikey method)": [[17, "abacusai.api_key.ApiKey.delete"]], "to_dict() (abacusai.api_key.apikey method)": [[17, "abacusai.api_key.ApiKey.to_dict"]], "applicationconnector (class in abacusai.application_connector)": [[18, "abacusai.application_connector.ApplicationConnector"]], "__repr__() (abacusai.application_connector.applicationconnector method)": [[18, "abacusai.application_connector.ApplicationConnector.__repr__"]], "abacusai.application_connector": [[18, "module-abacusai.application_connector"]], "delete() (abacusai.application_connector.applicationconnector method)": [[18, "abacusai.application_connector.ApplicationConnector.delete"]], "list_objects() (abacusai.application_connector.applicationconnector method)": [[18, "abacusai.application_connector.ApplicationConnector.list_objects"]], "rename() (abacusai.application_connector.applicationconnector method)": [[18, "abacusai.application_connector.ApplicationConnector.rename"]], "to_dict() (abacusai.application_connector.applicationconnector method)": [[18, "abacusai.application_connector.ApplicationConnector.to_dict"]], "verify() (abacusai.application_connector.applicationconnector method)": [[18, "abacusai.application_connector.ApplicationConnector.verify"]], "batchprediction (class in abacusai.batch_prediction)": [[19, "abacusai.batch_prediction.BatchPrediction"]], "__repr__() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.__repr__"]], "abacusai.batch_prediction": [[19, "module-abacusai.batch_prediction"]], "create_refresh_policy() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.create_refresh_policy"]], "delete() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.delete"]], "describe() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.describe"]], "describe_output_feature_group() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.describe_output_feature_group"]], "get_status() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.get_status"]], "list_refresh_policies() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.list_refresh_policies"]], "list_versions() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.list_versions"]], "refresh() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.refresh"]], "set_database_connector_output() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.set_database_connector_output"]], "set_dataset() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.set_dataset"]], "set_dataset_remap() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.set_dataset_remap"]], "set_feature_group() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.set_feature_group"]], "set_feature_group_output() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.set_feature_group_output"]], "set_file_connector_output() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.set_file_connector_output"]], "set_output_to_console() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.set_output_to_console"]], "start() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.start"]], "to_dict() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.to_dict"]], "update() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.update"]], "wait_for_drift_monitor() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.wait_for_drift_monitor"]], "wait_for_predictions() (abacusai.batch_prediction.batchprediction method)": [[19, "abacusai.batch_prediction.BatchPrediction.wait_for_predictions"]], "batchpredictionversion (class in abacusai.batch_prediction_version)": [[20, "abacusai.batch_prediction_version.BatchPredictionVersion"]], "__repr__() (abacusai.batch_prediction_version.batchpredictionversion method)": [[20, "abacusai.batch_prediction_version.BatchPredictionVersion.__repr__"]], "abacusai.batch_prediction_version": [[20, "module-abacusai.batch_prediction_version"]], "describe() (abacusai.batch_prediction_version.batchpredictionversion method)": [[20, "abacusai.batch_prediction_version.BatchPredictionVersion.describe"]], "download_batch_prediction_result_chunk() (abacusai.batch_prediction_version.batchpredictionversion method)": [[20, "abacusai.batch_prediction_version.BatchPredictionVersion.download_batch_prediction_result_chunk"]], "download_result_to_file() (abacusai.batch_prediction_version.batchpredictionversion method)": [[20, "abacusai.batch_prediction_version.BatchPredictionVersion.download_result_to_file"]], "get_batch_prediction_connector_errors() (abacusai.batch_prediction_version.batchpredictionversion method)": [[20, "abacusai.batch_prediction_version.BatchPredictionVersion.get_batch_prediction_connector_errors"]], "get_outliers_for_batch_prediction_feature() (abacusai.batch_prediction_version.batchpredictionversion method)": [[20, "abacusai.batch_prediction_version.BatchPredictionVersion.get_outliers_for_batch_prediction_feature"]], "get_status() (abacusai.batch_prediction_version.batchpredictionversion method)": [[20, "abacusai.batch_prediction_version.BatchPredictionVersion.get_status"]], "refresh() (abacusai.batch_prediction_version.batchpredictionversion method)": [[20, "abacusai.batch_prediction_version.BatchPredictionVersion.refresh"]], "to_dict() (abacusai.batch_prediction_version.batchpredictionversion method)": [[20, "abacusai.batch_prediction_version.BatchPredictionVersion.to_dict"]], "wait_for_drift_monitor() (abacusai.batch_prediction_version.batchpredictionversion method)": [[20, "abacusai.batch_prediction_version.BatchPredictionVersion.wait_for_drift_monitor"]], "wait_for_predictions() (abacusai.batch_prediction_version.batchpredictionversion method)": [[20, "abacusai.batch_prediction_version.BatchPredictionVersion.wait_for_predictions"]], "categoricalrangeviolation (class in abacusai.categorical_range_violation)": [[21, "abacusai.categorical_range_violation.CategoricalRangeViolation"]], "__repr__() (abacusai.categorical_range_violation.categoricalrangeviolation method)": [[21, "abacusai.categorical_range_violation.CategoricalRangeViolation.__repr__"]], "abacusai.categorical_range_violation": [[21, "module-abacusai.categorical_range_violation"]], "to_dict() (abacusai.categorical_range_violation.categoricalrangeviolation method)": [[21, "abacusai.categorical_range_violation.CategoricalRangeViolation.to_dict"]], "chatmessage (class in abacusai.chat_message)": [[22, "abacusai.chat_message.ChatMessage"]], "__repr__() (abacusai.chat_message.chatmessage method)": [[22, "abacusai.chat_message.ChatMessage.__repr__"]], "abacusai.chat_message": [[22, "module-abacusai.chat_message"]], "to_dict() (abacusai.chat_message.chatmessage method)": [[22, "abacusai.chat_message.ChatMessage.to_dict"]], "chatsession (class in abacusai.chat_session)": [[23, "abacusai.chat_session.ChatSession"]], "__repr__() (abacusai.chat_session.chatsession method)": [[23, "abacusai.chat_session.ChatSession.__repr__"]], "abacusai.chat_session": [[23, "module-abacusai.chat_session"]], "get() (abacusai.chat_session.chatsession method)": [[23, "abacusai.chat_session.ChatSession.get"]], "to_dict() (abacusai.chat_session.chatsession method)": [[23, "abacusai.chat_session.ChatSession.to_dict"]], "apiclient (class in abacusai.client)": [[24, "abacusai.client.ApiClient"]], "apiexception": [[24, "abacusai.client.ApiException"], [82, "abacusai.ApiException"]], "baseapiclient (class in abacusai.client)": [[24, "abacusai.client.BaseApiClient"]], "clientoptions (class in abacusai.client)": [[24, "abacusai.client.ClientOptions"]], "default_server (in module abacusai.client)": [[24, "abacusai.client.DEFAULT_SERVER"]], "readonlyclient (class in abacusai.client)": [[24, "abacusai.client.ReadOnlyClient"]], "__str__() (abacusai.client.apiexception method)": [[24, "abacusai.client.ApiException.__str__"]], "_build_class() (abacusai.client.baseapiclient method)": [[24, "abacusai.client.BaseApiClient._build_class"]], "_cached_endpoints (in module abacusai.client)": [[24, "abacusai.client._cached_endpoints"]], "_call_aiagent_asyncapp_sync_message() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient._call_aiagent_asyncapp_sync_message"]], "_call_api() (abacusai.client.baseapiclient method)": [[24, "abacusai.client.BaseApiClient._call_api"]], "_clean_api_objects() (abacusai.client.baseapiclient method)": [[24, "abacusai.client.BaseApiClient._clean_api_objects"]], "_discover_service_url() (in module abacusai.client)": [[24, "abacusai.client._discover_service_url"]], "_get_agent_async_app_caller() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient._get_agent_async_app_caller"]], "_get_agent_async_app_request_id() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient._get_agent_async_app_request_id"]], "_get_prediction_endpoint() (abacusai.client.baseapiclient method)": [[24, "abacusai.client.BaseApiClient._get_prediction_endpoint"]], "_get_streaming_endpoint() (abacusai.client.baseapiclient method)": [[24, "abacusai.client.BaseApiClient._get_streaming_endpoint"]], "_poll() (abacusai.client.baseapiclient method)": [[24, "abacusai.client.BaseApiClient._poll"]], "_request() (abacusai.client.baseapiclient method)": [[24, "abacusai.client.BaseApiClient._request"]], "_request_context (in module abacusai.client)": [[24, "abacusai.client._request_context"]], "_requests_retry_session() (in module abacusai.client)": [[24, "abacusai.client._requests_retry_session"]], "_stream_llm_call() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient._stream_llm_call"]], "_upload_from_pandas() (abacusai.client.baseapiclient method)": [[24, "abacusai.client.BaseApiClient._upload_from_pandas"]], "_upload_from_spark() (abacusai.client.baseapiclient method)": [[24, "abacusai.client.BaseApiClient._upload_from_spark"]], "_validate_pandas_df() (abacusai.client.baseapiclient method)": [[24, "abacusai.client.BaseApiClient._validate_pandas_df"]], "abacusai.client": [[24, "module-abacusai.client"]], "add_annotatable_feature() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.add_annotatable_feature"]], "add_annotation() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.add_annotation"]], "add_feature_group_annotation_label() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.add_feature_group_annotation_label"]], "add_feature_group_tag() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.add_feature_group_tag"]], "add_feature_group_to_project() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.add_feature_group_to_project"]], "add_feature_tag() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.add_feature_tag"]], "add_graph_to_dashboard() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.add_graph_to_dashboard"]], "add_multiple_user_item_interactions() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.add_multiple_user_item_interactions"]], "add_organization_group_permission() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.add_organization_group_permission"]], "add_organization_group_to_feature_group_modifiers() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.add_organization_group_to_feature_group_modifiers"]], "add_project_tags() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.add_project_tags"]], "add_user_item_interaction() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.add_user_item_interaction"]], "add_user_to_feature_group_modifiers() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.add_user_to_feature_group_modifiers"]], "add_user_to_organization() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.add_user_to_organization"]], "add_user_to_organization_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.add_user_to_organization_group"]], "append_data() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.append_data"]], "append_multiple_data() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.append_multiple_data"]], "cancel_upload() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.cancel_upload"]], "check_constraints() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.check_constraints"]], "classify_image() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.classify_image"]], "classify_pdf() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.classify_pdf"]], "clear_agent_context() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.clear_agent_context"]], "client_version (abacusai.client.baseapiclient attribute)": [[24, "abacusai.client.BaseApiClient.client_version"]], "concatenate_feature_group_data() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.concatenate_feature_group_data"]], "create_agent() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_agent"]], "create_agent_from_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_agent_from_function"]], "create_algorithm() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_algorithm"]], "create_algorithm_from_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_algorithm_from_function"]], "create_batch_prediction() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_batch_prediction"]], "create_chat_session() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_chat_session"]], "create_custom_loss_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_custom_loss_function"]], "create_custom_loss_function_with_source_code() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_custom_loss_function_with_source_code"]], "create_custom_metric() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_custom_metric"]], "create_custom_metric_from_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_custom_metric_from_function"]], "create_dataset_from_application_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_dataset_from_application_connector"]], "create_dataset_from_database_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_dataset_from_database_connector"]], "create_dataset_from_file_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_dataset_from_file_connector"]], "create_dataset_from_pandas() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_dataset_from_pandas"]], "create_dataset_from_streaming_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_dataset_from_streaming_connector"]], "create_dataset_from_upload() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_dataset_from_upload"]], "create_dataset_version_from_application_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_dataset_version_from_application_connector"]], "create_dataset_version_from_database_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_dataset_version_from_database_connector"]], "create_dataset_version_from_file_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_dataset_version_from_file_connector"]], "create_dataset_version_from_pandas() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_dataset_version_from_pandas"]], "create_dataset_version_from_upload() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_dataset_version_from_upload"]], "create_deployment() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_deployment"]], "create_deployment_conversation() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_deployment_conversation"]], "create_deployment_token() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_deployment_token"]], "create_deployment_webhook() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_deployment_webhook"]], "create_eda() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_eda"]], "create_feature() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_feature"]], "create_feature_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_feature_group"]], "create_feature_group_from_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_feature_group_from_function"]], "create_feature_group_from_pandas_df() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_feature_group_from_pandas_df"]], "create_feature_group_from_python_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_feature_group_from_python_function"]], "create_feature_group_from_spark_df() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_feature_group_from_spark_df"]], "create_feature_group_from_template() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_feature_group_from_template"]], "create_feature_group_template() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_feature_group_template"]], "create_feature_group_version() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_feature_group_version"]], "create_graph_dashboard() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_graph_dashboard"]], "create_merge_feature_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_merge_feature_group"]], "create_model_from_functions() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_model_from_functions"]], "create_model_from_python() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_model_from_python"]], "create_model_monitor() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_model_monitor"]], "create_module() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_module"]], "create_module_from_notebook() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_module_from_notebook"]], "create_monitor_alert() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_monitor_alert"]], "create_nested_feature() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_nested_feature"]], "create_nlp_drift_monitor() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_nlp_drift_monitor"]], "create_organization_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_organization_group"]], "create_pipeline() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_pipeline"]], "create_pipeline_step() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_pipeline_step"]], "create_pipeline_step_from_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_pipeline_step_from_function"]], "create_point_in_time_feature() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_point_in_time_feature"]], "create_point_in_time_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_point_in_time_group"]], "create_point_in_time_group_feature() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_point_in_time_group_feature"]], "create_project() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_project"]], "create_python_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_python_function"]], "create_refresh_policy() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_refresh_policy"]], "create_sampling_feature_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_sampling_feature_group"]], "create_snapshot_feature_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_snapshot_feature_group"]], "create_spark_df_from_feature_group_version() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_spark_df_from_feature_group_version"]], "create_streaming_dataset() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_streaming_dataset"]], "create_streaming_token() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_streaming_token"]], "create_train_test_data_split_feature_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_train_test_data_split_feature_group"]], "create_transform_feature_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_transform_feature_group"]], "create_vector_store() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_vector_store"]], "create_vector_store_version() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_vector_store_version"]], "create_vision_drift_monitor() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.create_vision_drift_monitor"]], "delete_algorithm() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_algorithm"]], "delete_api_key() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_api_key"]], "delete_application_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_application_connector"]], "delete_batch_prediction() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_batch_prediction"]], "delete_custom_loss_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_custom_loss_function"]], "delete_custom_metric() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_custom_metric"]], "delete_database_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_database_connector"]], "delete_dataset() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_dataset"]], "delete_deployment() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_deployment"]], "delete_deployment_conversation() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_deployment_conversation"]], "delete_deployment_token() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_deployment_token"]], "delete_eda() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_eda"]], "delete_eda_version() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_eda_version"]], "delete_feature() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_feature"]], "delete_feature_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_feature_group"]], "delete_feature_group_template() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_feature_group_template"]], "delete_file_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_file_connector"]], "delete_graph_dashboard() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_graph_dashboard"]], "delete_graph_from_dashboard() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.delete_graph_from_dashboard"]], "delete_item_embeddings() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_item_embeddings"]], "delete_model() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_model"]], "delete_model_monitor() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_model_monitor"]], "delete_model_monitor_version() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_model_monitor_version"]], "delete_model_version() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_model_version"]], "delete_module() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_module"]], "delete_monitor_alert() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_monitor_alert"]], "delete_nested_feature() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_nested_feature"]], "delete_organization_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_organization_group"]], "delete_pipeline() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_pipeline"]], "delete_pipeline_step() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_pipeline_step"]], "delete_point_in_time_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_point_in_time_group"]], "delete_project() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_project"]], "delete_python_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_python_function"]], "delete_refresh_policy() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_refresh_policy"]], "delete_streaming_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_streaming_connector"]], "delete_streaming_token() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_streaming_token"]], "delete_vector_store() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_vector_store"]], "delete_webhook() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.delete_webhook"]], "describe_algorithm() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_algorithm"]], "describe_annotation() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.describe_annotation"]], "describe_async_feature_group_operation() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.describe_async_feature_group_operation"]], "describe_batch_prediction() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_batch_prediction"]], "describe_batch_prediction_version() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_batch_prediction_version"]], "describe_custom_loss_function() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_custom_loss_function"]], "describe_custom_metric() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_custom_metric"]], "describe_custom_metric_version() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_custom_metric_version"]], "describe_dataset() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_dataset"]], "describe_dataset_version() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_dataset_version"]], "describe_deployment() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_deployment"]], "describe_eda() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_eda"]], "describe_eda_version() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_eda_version"]], "describe_feature_group() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_feature_group"]], "describe_feature_group_by_table_name() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_feature_group_by_table_name"]], "describe_feature_group_export() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_feature_group_export"]], "describe_feature_group_template() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_feature_group_template"]], "describe_feature_group_version() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_feature_group_version"]], "describe_graph_dashboard() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_graph_dashboard"]], "describe_graph_for_dashboard() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_graph_for_dashboard"]], "describe_image() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.describe_image"]], "describe_model() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_model"]], "describe_model_artifacts_export() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_model_artifacts_export"]], "describe_model_monitor() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_model_monitor"]], "describe_model_monitor_version() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_model_monitor_version"]], "describe_model_version() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_model_version"]], "describe_module() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_module"]], "describe_monitor_alert() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_monitor_alert"]], "describe_monitor_alert_version() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_monitor_alert_version"]], "describe_organization_group() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_organization_group"]], "describe_pipeline() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.describe_pipeline"]], "describe_pipeline_by_name() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.describe_pipeline_by_name"]], "describe_pipeline_step() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_pipeline_step"]], "describe_pipeline_step_by_name() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_pipeline_step_by_name"]], "describe_pipeline_version() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_pipeline_version"]], "describe_problem_type() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_problem_type"]], "describe_project() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_project"]], "describe_project_feature_group() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_project_feature_group"]], "describe_python_function() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_python_function"]], "describe_refresh_pipeline_run() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_refresh_pipeline_run"]], "describe_refresh_policy() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_refresh_policy"]], "describe_train_test_data_split_feature_group() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_train_test_data_split_feature_group"]], "describe_train_test_data_split_feature_group_version() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_train_test_data_split_feature_group_version"]], "describe_upload() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_upload"]], "describe_use_case_requirements() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_use_case_requirements"]], "describe_user() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_user"]], "describe_vector_store() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_vector_store"]], "describe_vector_store_by_name() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_vector_store_by_name"]], "describe_vector_store_version() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_vector_store_version"]], "describe_webhook() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.describe_webhook"]], "detach_feature_group_from_template() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.detach_feature_group_from_template"]], "download_batch_prediction_result_chunk() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.download_batch_prediction_result_chunk"]], "download_execute_feature_group_operation_result_part_chunk() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.download_execute_feature_group_operation_result_part_chunk"]], "evaluate_prompt() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.evaluate_prompt"]], "execute_agent() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.execute_agent"]], "execute_async_feature_group_operation() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.execute_async_feature_group_operation"]], "execute_feature_group_sql() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.execute_feature_group_sql"]], "export_custom_model_version() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.export_custom_model_version"]], "export_feature_group_version_to_console() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.export_feature_group_version_to_console"]], "export_feature_group_version_to_database_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.export_feature_group_version_to_database_connector"]], "export_feature_group_version_to_file_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.export_feature_group_version_to_file_connector"]], "export_model_artifact_as_feature_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.export_model_artifact_as_feature_group"]], "generate_image() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.generate_image"]], "generate_natural_language_explanation() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.generate_natural_language_explanation"]], "get_agent_context_chat_history() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_agent_context_chat_history"]], "get_alternative_assignments() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_alternative_assignments"]], "get_annotations_status() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_annotations_status"]], "get_anomalies() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_anomalies"]], "get_api_endpoint() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_api_endpoint"]], "get_assignments() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_assignments"]], "get_batch_prediction_connector_errors() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_batch_prediction_connector_errors"]], "get_chat_response() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_chat_response"]], "get_chat_session() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_chat_session"]], "get_classification() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_classification"]], "get_cluster() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_cluster"]], "get_collinearity_for_feature() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_collinearity_for_feature"]], "get_custom_train_function_info() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_custom_train_function_info"]], "get_database_connector_object_schema() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_database_connector_object_schema"]], "get_dataset_schema() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_dataset_schema"]], "get_dataset_version_metrics() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_dataset_version_metrics"]], "get_deployment_conversation() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_deployment_conversation"]], "get_docstore_document() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_docstore_document"]], "get_docstore_image() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_docstore_image"]], "get_document_to_annotate() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_document_to_annotate"]], "get_drift_for_feature() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_drift_for_feature"]], "get_eda_collinearity() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_eda_collinearity"]], "get_eda_data_consistency() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_eda_data_consistency"]], "get_eda_forecasting_analysis() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_eda_forecasting_analysis"]], "get_entailment() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_entailment"]], "get_entities_from_pdf() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_entities_from_pdf"]], "get_execute_feature_group_operation_result_part_count() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_execute_feature_group_operation_result_part_count"]], "get_feature_association() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_feature_association"]], "get_feature_group_export_connector_errors() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_feature_group_export_connector_errors"]], "get_feature_group_schema() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_feature_group_schema"]], "get_feature_group_version_export_download_url() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_feature_group_version_export_download_url"]], "get_feature_group_version_metrics() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_feature_group_version_metrics"]], "get_feature_importance_by_model_version() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_feature_importance_by_model_version"]], "get_file_connector_instructions() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_file_connector_instructions"]], "get_forecast() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_forecast"]], "get_k_nearest() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_k_nearest"]], "get_labels() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_labels"]], "get_llm_parameters() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_llm_parameters"]], "get_materialization_logs() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_materialization_logs"]], "get_model_metrics() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_model_metrics"]], "get_model_monitor_chart_from_organization() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_model_monitor_chart_from_organization"]], "get_model_monitor_summary() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_model_monitor_summary"]], "get_model_monitor_summary_from_organization() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_model_monitor_summary_from_organization"]], "get_model_monitoring_logs() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_model_monitoring_logs"]], "get_model_training_types_for_deployment() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_model_training_types_for_deployment"]], "get_module_code_from_notebook() (in module abacusai.client)": [[24, "abacusai.client.get_module_code_from_notebook"]], "get_multiple_k_nearest() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_multiple_k_nearest"]], "get_natural_language_explanation() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_natural_language_explanation"]], "get_notebook_cell_completion() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_notebook_cell_completion"]], "get_objects_from_image() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_objects_from_image"]], "get_outliers_for_batch_prediction_feature() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_outliers_for_batch_prediction_feature"]], "get_outliers_for_feature() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_outliers_for_feature"]], "get_personalized_ranking() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_personalized_ranking"]], "get_prediction_drift() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_prediction_drift"]], "get_project_feature_group_config() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_project_feature_group_config"]], "get_ranked_items() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_ranked_items"]], "get_recent_feature_group_streamed_data() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_recent_feature_group_streamed_data"]], "get_recommendations() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_recommendations"]], "get_related_items() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_related_items"]], "get_search_results() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_search_results"]], "get_sentiment() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_sentiment"]], "get_source_code_info() (in module abacusai.client)": [[24, "abacusai.client.get_source_code_info"]], "get_step_version_logs() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_step_version_logs"]], "get_summary() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_summary"]], "get_train_function_input() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_train_function_input"]], "get_train_function_input_from_model_version() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_train_function_input_from_model_version"]], "get_training_config_options() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.get_training_config_options"]], "get_training_data_logs() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_training_data_logs"]], "get_training_logs() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.get_training_logs"]], "import_annotation_labels() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.import_annotation_labels"]], "import_module() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.import_module"]], "include_modules() (in module abacusai.client)": [[24, "abacusai.client.include_modules"]], "infer_feature_mappings() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.infer_feature_mappings"]], "invalidate_streaming_feature_group_data() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.invalidate_streaming_feature_group_data"]], "is_anomaly() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.is_anomaly"]], "list_algorithms() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_algorithms"]], "list_api_keys() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_api_keys"]], "list_application_connector_objects() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_application_connector_objects"]], "list_application_connectors() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_application_connectors"]], "list_batch_prediction_versions() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_batch_prediction_versions"]], "list_batch_predictions() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_batch_predictions"]], "list_builtin_algorithms() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.list_builtin_algorithms"]], "list_chat_sessions() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_chat_sessions"]], "list_custom_loss_functions() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_custom_loss_functions"]], "list_custom_metrics() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_custom_metrics"]], "list_database_connector_objects() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_database_connector_objects"]], "list_database_connectors() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_database_connectors"]], "list_dataset_versions() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_dataset_versions"]], "list_datasets() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_datasets"]], "list_deployment_conversations() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_deployment_conversations"]], "list_deployment_tokens() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_deployment_tokens"]], "list_deployment_webhooks() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_deployment_webhooks"]], "list_deployments() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_deployments"]], "list_eda() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_eda"]], "list_eda_versions() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_eda_versions"]], "list_feature_group_exports() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_feature_group_exports"]], "list_feature_group_modifiers() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_feature_group_modifiers"]], "list_feature_group_templates() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_feature_group_templates"]], "list_feature_group_versions() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_feature_group_versions"]], "list_feature_groups() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_feature_groups"]], "list_file_connectors() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_file_connectors"]], "list_graph_dashboards() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_graph_dashboards"]], "list_model_artifacts_exports() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_model_artifacts_exports"]], "list_model_monitor_versions() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_model_monitor_versions"]], "list_model_monitors() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_model_monitors"]], "list_model_versions() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_model_versions"]], "list_models() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_models"]], "list_modules() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_modules"]], "list_monitor_alert_versions_for_monitor_version() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_monitor_alert_versions_for_monitor_version"]], "list_monitor_alerts_for_monitor() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_monitor_alerts_for_monitor"]], "list_organization_groups() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_organization_groups"]], "list_organization_model_monitors() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_organization_model_monitors"]], "list_organization_users() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_organization_users"]], "list_pipeline_version_logs() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_pipeline_version_logs"]], "list_pipeline_versions() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.list_pipeline_versions"]], "list_pipelines() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_pipelines"]], "list_project_feature_group_templates() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_project_feature_group_templates"]], "list_project_feature_groups() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_project_feature_groups"]], "list_projects() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_projects"]], "list_python_function_feature_groups() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_python_function_feature_groups"]], "list_python_functions() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_python_functions"]], "list_refresh_pipeline_runs() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_refresh_pipeline_runs"]], "list_refresh_policies() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_refresh_policies"]], "list_streaming_connectors() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_streaming_connectors"]], "list_streaming_tokens() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_streaming_tokens"]], "list_uploads() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_uploads"]], "list_use_cases() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_use_cases"]], "list_vector_store_versions() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_vector_store_versions"]], "list_vector_stores() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.list_vector_stores"]], "lookup_features() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.lookup_features"]], "lookup_vector_store() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.lookup_vector_store"]], "mark_upload_complete() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.mark_upload_complete"]], "model_monitor_version_metric_data() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.model_monitor_version_metric_data"]], "pause_pipeline_refresh_schedule() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.pause_pipeline_refresh_schedule"]], "pause_refresh_policy() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.pause_refresh_policy"]], "predict() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.predict"]], "predict_churn() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.predict_churn"]], "predict_class() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.predict_class"]], "predict_fraud() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.predict_fraud"]], "predict_from_datasets() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.predict_from_datasets"]], "predict_language() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.predict_language"]], "predict_lead() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.predict_lead"]], "predict_multiple() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.predict_multiple"]], "predict_takeover() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.predict_takeover"]], "predict_target() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.predict_target"]], "predict_with_binary_data() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.predict_with_binary_data"]], "preview_feature_group_template_resolution() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.preview_feature_group_template_resolution"]], "query_feature_group_code_generator() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.query_feature_group_code_generator"]], "remove_concatenation_config() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.remove_concatenation_config"]], "remove_deployment_feature_group_export_output() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.remove_deployment_feature_group_export_output"]], "remove_feature_group_annotation_label() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.remove_feature_group_annotation_label"]], "remove_feature_group_from_project() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.remove_feature_group_from_project"]], "remove_feature_group_tag() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.remove_feature_group_tag"]], "remove_feature_tag() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.remove_feature_tag"]], "remove_organization_group_from_feature_group_modifiers() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.remove_organization_group_from_feature_group_modifiers"]], "remove_organization_group_permission() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.remove_organization_group_permission"]], "remove_project_tags() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.remove_project_tags"]], "remove_user_from_feature_group_modifiers() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.remove_user_from_feature_group_modifiers"]], "remove_user_from_organization() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.remove_user_from_organization"]], "remove_user_from_organization_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.remove_user_from_organization_group"]], "rename_application_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.rename_application_connector"]], "rename_database_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.rename_database_connector"]], "rename_deployment() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.rename_deployment"]], "rename_eda() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.rename_eda"]], "rename_model() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.rename_model"]], "rename_model_monitor() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.rename_model_monitor"]], "rename_project() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.rename_project"]], "rename_streaming_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.rename_streaming_connector"]], "render_feature_group_data_for_llm() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.render_feature_group_data_for_llm"]], "render_feature_groups_for_llm() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.render_feature_groups_for_llm"]], "rerun_eda() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.rerun_eda"]], "rerun_model_monitor() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.rerun_model_monitor"]], "resume_pipeline_refresh_schedule() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.resume_pipeline_refresh_schedule"]], "resume_refresh_policy() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.resume_refresh_policy"]], "retrain_model() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.retrain_model"]], "run_monitor_alert() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.run_monitor_alert"]], "run_pipeline() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.run_pipeline"]], "run_refresh_policy() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.run_refresh_policy"]], "score_image() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.score_image"]], "search_feature_groups() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.search_feature_groups"]], "set_agent_context_chat_history() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_agent_context_chat_history"]], "set_annotation_status_feature() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_annotation_status_feature"]], "set_auto_deployment() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_auto_deployment"]], "set_azure_blob_connection_string() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_azure_blob_connection_string"]], "set_batch_prediction_database_connector_output() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_batch_prediction_database_connector_output"]], "set_batch_prediction_dataset() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_batch_prediction_dataset"]], "set_batch_prediction_dataset_remap() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_batch_prediction_dataset_remap"]], "set_batch_prediction_feature_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_batch_prediction_feature_group"]], "set_batch_prediction_feature_group_output() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_batch_prediction_feature_group_output"]], "set_batch_prediction_file_connector_output() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_batch_prediction_file_connector_output"]], "set_batch_prediction_output_to_console() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_batch_prediction_output_to_console"]], "set_dataset_column_data_type() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_dataset_column_data_type"]], "set_dataset_database_connector_config() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.set_dataset_database_connector_config"]], "set_default_model_algorithm() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.set_default_model_algorithm"]], "set_default_organization_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_default_organization_group"]], "set_deployment_feature_group_export_database_connector_output() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_deployment_feature_group_export_database_connector_output"]], "set_deployment_feature_group_export_file_connector_output() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_deployment_feature_group_export_file_connector_output"]], "set_deployment_feature_group_version() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_deployment_feature_group_version"]], "set_deployment_model_version() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_deployment_model_version"]], "set_feature_as_annotatable_feature() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_feature_as_annotatable_feature"]], "set_feature_group_indexing_config() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_feature_group_indexing_config"]], "set_feature_group_merge_config() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_feature_group_merge_config"]], "set_feature_group_modifier_lock() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_feature_group_modifier_lock"]], "set_feature_group_sampling_config() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_feature_group_sampling_config"]], "set_feature_group_schema() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_feature_group_schema"]], "set_feature_group_transform_config() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_feature_group_transform_config"]], "set_feature_group_type() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_feature_group_type"]], "set_feature_mapping() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_feature_mapping"]], "set_feature_type() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_feature_type"]], "set_model_objective() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.set_model_objective"]], "set_model_prediction_params() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_model_prediction_params"]], "set_model_training_config() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_model_training_config"]], "set_natural_language_explanation() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_natural_language_explanation"]], "set_project_feature_group_config() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_project_feature_group_config"]], "set_streaming_retention_policy() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.set_streaming_retention_policy"]], "snapshot_streaming_data() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.snapshot_streaming_data"]], "start_batch_prediction() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.start_batch_prediction"]], "start_deployment() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.start_deployment"]], "stop_deployment() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.stop_deployment"]], "stream_message() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.stream_message"]], "streaming_evaluate_prompt() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.streaming_evaluate_prompt"]], "suggest_feature_group_template_for_feature_group() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.suggest_feature_group_template_for_feature_group"]], "train_model() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.train_model"]], "transcribe_audio() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.transcribe_audio"]], "transfer_style() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.transfer_style"]], "unset_feature_as_annotatable_feature() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.unset_feature_as_annotatable_feature"]], "unset_pipeline_refresh_schedule() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.unset_pipeline_refresh_schedule"]], "update_agent() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_agent"]], "update_agent_with_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_agent_with_function"]], "update_algorithm() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_algorithm"]], "update_algorithm_from_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_algorithm_from_function"]], "update_annotation_status() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_annotation_status"]], "update_batch_prediction() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_batch_prediction"]], "update_custom_loss_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_custom_loss_function"]], "update_custom_loss_function_with_source_code() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_custom_loss_function_with_source_code"]], "update_custom_metric() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_custom_metric"]], "update_custom_metric_from_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_custom_metric_from_function"]], "update_dataset_feature_group_feature_expression() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_dataset_feature_group_feature_expression"]], "update_deployment() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_deployment"]], "update_feature() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_feature"]], "update_feature_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_feature_group"]], "update_feature_group_from_pandas_df() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_feature_group_from_pandas_df"]], "update_feature_group_from_spark_df() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_feature_group_from_spark_df"]], "update_feature_group_function_definition() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_feature_group_function_definition"]], "update_feature_group_git() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_feature_group_git"]], "update_feature_group_python_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_feature_group_python_function"]], "update_feature_group_python_function_bindings() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_feature_group_python_function_bindings"]], "update_feature_group_sql_definition() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_feature_group_sql_definition"]], "update_feature_group_template() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_feature_group_template"]], "update_feature_group_template_bindings() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_feature_group_template_bindings"]], "update_feature_group_zip() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_feature_group_zip"]], "update_graph_dashboard() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_graph_dashboard"]], "update_graph_to_dashboard() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_graph_to_dashboard"]], "update_module() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_module"]], "update_module_from_notebook() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_module_from_notebook"]], "update_monitor_alert() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_monitor_alert"]], "update_nested_feature() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_nested_feature"]], "update_pipeline() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_pipeline"]], "update_pipeline_step() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_pipeline_step"]], "update_pipeline_step_from_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_pipeline_step_from_function"]], "update_point_in_time_feature() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_point_in_time_feature"]], "update_point_in_time_group() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_point_in_time_group"]], "update_point_in_time_group_feature() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_point_in_time_group_feature"]], "update_python_function() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_python_function"]], "update_python_function_code() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_python_function_code"]], "update_python_model() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_python_model"]], "update_python_model_git() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_python_model_git"]], "update_python_model_zip() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_python_model_zip"]], "update_refresh_policy() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_refresh_policy"]], "update_vector_store() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_vector_store"]], "update_webhook() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.update_webhook"]], "upload_part() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.upload_part"]], "upsert_data() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.upsert_data"]], "upsert_item_attributes() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.upsert_item_attributes"]], "upsert_item_embeddings() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.upsert_item_embeddings"]], "upsert_multiple_data() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.upsert_multiple_data"]], "upsert_multiple_item_attributes() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.upsert_multiple_item_attributes"]], "upsert_multiple_item_embeddings() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.upsert_multiple_item_embeddings"]], "upsert_multiple_user_attributes() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.upsert_multiple_user_attributes"]], "upsert_user_attributes() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.upsert_user_attributes"]], "validate_project() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.validate_project"]], "verify_and_describe_annotation() (abacusai.client.readonlyclient method)": [[24, "abacusai.client.ReadOnlyClient.verify_and_describe_annotation"]], "verify_application_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.verify_application_connector"]], "verify_database_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.verify_database_connector"]], "verify_file_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.verify_file_connector"]], "verify_streaming_connector() (abacusai.client.apiclient method)": [[24, "abacusai.client.ApiClient.verify_streaming_connector"]], "codesource (class in abacusai.code_source)": [[25, "abacusai.code_source.CodeSource"]], "__repr__() (abacusai.code_source.codesource method)": [[25, "abacusai.code_source.CodeSource.__repr__"]], "abacusai.code_source": [[25, "module-abacusai.code_source"]], "to_dict() (abacusai.code_source.codesource method)": [[25, "abacusai.code_source.CodeSource.to_dict"]], "concatenationconfig (class in abacusai.concatenation_config)": [[26, "abacusai.concatenation_config.ConcatenationConfig"]], "__repr__() (abacusai.concatenation_config.concatenationconfig method)": [[26, "abacusai.concatenation_config.ConcatenationConfig.__repr__"]], "abacusai.concatenation_config": [[26, "module-abacusai.concatenation_config"]], "to_dict() (abacusai.concatenation_config.concatenationconfig method)": [[26, "abacusai.concatenation_config.ConcatenationConfig.to_dict"]], "abacusai.cryptography": [[27, "module-abacusai.cryptography"]], "get_public_key() (in module abacusai.cryptography)": [[27, "abacusai.cryptography.get_public_key"]], "verify_response() (in module abacusai.cryptography)": [[27, "abacusai.cryptography.verify_response"]], "customlossfunction (class in abacusai.custom_loss_function)": [[28, "abacusai.custom_loss_function.CustomLossFunction"]], "__repr__() (abacusai.custom_loss_function.customlossfunction method)": [[28, "abacusai.custom_loss_function.CustomLossFunction.__repr__"]], "abacusai.custom_loss_function": [[28, "module-abacusai.custom_loss_function"]], "to_dict() (abacusai.custom_loss_function.customlossfunction method)": [[28, "abacusai.custom_loss_function.CustomLossFunction.to_dict"]], "custommetric (class in abacusai.custom_metric)": [[29, "abacusai.custom_metric.CustomMetric"]], "__repr__() (abacusai.custom_metric.custommetric method)": [[29, "abacusai.custom_metric.CustomMetric.__repr__"]], "abacusai.custom_metric": [[29, "module-abacusai.custom_metric"]], "to_dict() (abacusai.custom_metric.custommetric method)": [[29, "abacusai.custom_metric.CustomMetric.to_dict"]], "custommetricversion (class in abacusai.custom_metric_version)": [[30, "abacusai.custom_metric_version.CustomMetricVersion"]], "__repr__() (abacusai.custom_metric_version.custommetricversion method)": [[30, "abacusai.custom_metric_version.CustomMetricVersion.__repr__"]], "abacusai.custom_metric_version": [[30, "module-abacusai.custom_metric_version"]], "describe() (abacusai.custom_metric_version.custommetricversion method)": [[30, "abacusai.custom_metric_version.CustomMetricVersion.describe"]], "refresh() (abacusai.custom_metric_version.custommetricversion method)": [[30, "abacusai.custom_metric_version.CustomMetricVersion.refresh"]], "to_dict() (abacusai.custom_metric_version.custommetricversion method)": [[30, "abacusai.custom_metric_version.CustomMetricVersion.to_dict"]], "customtrainfunctioninfo (class in abacusai.custom_train_function_info)": [[31, "abacusai.custom_train_function_info.CustomTrainFunctionInfo"]], "__repr__() (abacusai.custom_train_function_info.customtrainfunctioninfo method)": [[31, "abacusai.custom_train_function_info.CustomTrainFunctionInfo.__repr__"]], "abacusai.custom_train_function_info": [[31, "module-abacusai.custom_train_function_info"]], "to_dict() (abacusai.custom_train_function_info.customtrainfunctioninfo method)": [[31, "abacusai.custom_train_function_info.CustomTrainFunctionInfo.to_dict"]], "dataconsistencyduplication (class in abacusai.data_consistency_duplication)": [[32, "abacusai.data_consistency_duplication.DataConsistencyDuplication"]], "__repr__() (abacusai.data_consistency_duplication.dataconsistencyduplication method)": [[32, "abacusai.data_consistency_duplication.DataConsistencyDuplication.__repr__"]], "abacusai.data_consistency_duplication": [[32, "module-abacusai.data_consistency_duplication"]], "to_dict() (abacusai.data_consistency_duplication.dataconsistencyduplication method)": [[32, "abacusai.data_consistency_duplication.DataConsistencyDuplication.to_dict"]], "datametrics (class in abacusai.data_metrics)": [[33, "abacusai.data_metrics.DataMetrics"]], "__repr__() (abacusai.data_metrics.datametrics method)": [[33, "abacusai.data_metrics.DataMetrics.__repr__"]], "abacusai.data_metrics": [[33, "module-abacusai.data_metrics"]], "to_dict() (abacusai.data_metrics.datametrics method)": [[33, "abacusai.data_metrics.DataMetrics.to_dict"]], "datapreplogs (class in abacusai.data_prep_logs)": [[34, "abacusai.data_prep_logs.DataPrepLogs"]], "__repr__() (abacusai.data_prep_logs.datapreplogs method)": [[34, "abacusai.data_prep_logs.DataPrepLogs.__repr__"]], "abacusai.data_prep_logs": [[34, "module-abacusai.data_prep_logs"]], "to_dict() (abacusai.data_prep_logs.datapreplogs method)": [[34, "abacusai.data_prep_logs.DataPrepLogs.to_dict"]], "dataqualityresults (class in abacusai.data_quality_results)": [[35, "abacusai.data_quality_results.DataQualityResults"]], "__repr__() (abacusai.data_quality_results.dataqualityresults method)": [[35, "abacusai.data_quality_results.DataQualityResults.__repr__"]], "abacusai.data_quality_results": [[35, "module-abacusai.data_quality_results"]], "to_dict() (abacusai.data_quality_results.dataqualityresults method)": [[35, "abacusai.data_quality_results.DataQualityResults.to_dict"]], "databaseconnector (class in abacusai.database_connector)": [[36, "abacusai.database_connector.DatabaseConnector"]], "__repr__() (abacusai.database_connector.databaseconnector method)": [[36, "abacusai.database_connector.DatabaseConnector.__repr__"]], "abacusai.database_connector": [[36, "module-abacusai.database_connector"]], "delete() (abacusai.database_connector.databaseconnector method)": [[36, "abacusai.database_connector.DatabaseConnector.delete"]], "get_object_schema() (abacusai.database_connector.databaseconnector method)": [[36, "abacusai.database_connector.DatabaseConnector.get_object_schema"]], "list_objects() (abacusai.database_connector.databaseconnector method)": [[36, "abacusai.database_connector.DatabaseConnector.list_objects"]], "rename() (abacusai.database_connector.databaseconnector method)": [[36, "abacusai.database_connector.DatabaseConnector.rename"]], "to_dict() (abacusai.database_connector.databaseconnector method)": [[36, "abacusai.database_connector.DatabaseConnector.to_dict"]], "verify() (abacusai.database_connector.databaseconnector method)": [[36, "abacusai.database_connector.DatabaseConnector.verify"]], "dataset (class in abacusai.dataset)": [[37, "abacusai.dataset.Dataset"]], "__repr__() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.__repr__"]], "abacusai.dataset": [[37, "module-abacusai.dataset"]], "create_refresh_policy() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.create_refresh_policy"]], "create_version_from_application_connector() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.create_version_from_application_connector"]], "create_version_from_database_connector() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.create_version_from_database_connector"]], "create_version_from_file_connector() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.create_version_from_file_connector"]], "create_version_from_upload() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.create_version_from_upload"]], "delete() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.delete"]], "describe() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.describe"]], "describe_feature_group() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.describe_feature_group"]], "get_schema() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.get_schema"]], "get_status() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.get_status"]], "list_refresh_policies() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.list_refresh_policies"]], "list_versions() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.list_versions"]], "refresh() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.refresh"]], "set_column_data_type() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.set_column_data_type"]], "set_database_connector_config() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.set_database_connector_config"]], "set_streaming_retention_policy() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.set_streaming_retention_policy"]], "snapshot_streaming_data() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.snapshot_streaming_data"]], "to_dict() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.to_dict"]], "wait_for_import() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.wait_for_import"]], "wait_for_inspection() (abacusai.dataset.dataset method)": [[37, "abacusai.dataset.Dataset.wait_for_inspection"]], "datasetcolumn (class in abacusai.dataset_column)": [[38, "abacusai.dataset_column.DatasetColumn"]], "__repr__() (abacusai.dataset_column.datasetcolumn method)": [[38, "abacusai.dataset_column.DatasetColumn.__repr__"]], "abacusai.dataset_column": [[38, "module-abacusai.dataset_column"]], "to_dict() (abacusai.dataset_column.datasetcolumn method)": [[38, "abacusai.dataset_column.DatasetColumn.to_dict"]], "datasetversion (class in abacusai.dataset_version)": [[39, "abacusai.dataset_version.DatasetVersion"]], "__repr__() (abacusai.dataset_version.datasetversion method)": [[39, "abacusai.dataset_version.DatasetVersion.__repr__"]], "abacusai.dataset_version": [[39, "module-abacusai.dataset_version"]], "describe() (abacusai.dataset_version.datasetversion method)": [[39, "abacusai.dataset_version.DatasetVersion.describe"]], "get_metrics() (abacusai.dataset_version.datasetversion method)": [[39, "abacusai.dataset_version.DatasetVersion.get_metrics"]], "get_status() (abacusai.dataset_version.datasetversion method)": [[39, "abacusai.dataset_version.DatasetVersion.get_status"]], "refresh() (abacusai.dataset_version.datasetversion method)": [[39, "abacusai.dataset_version.DatasetVersion.refresh"]], "to_dict() (abacusai.dataset_version.datasetversion method)": [[39, "abacusai.dataset_version.DatasetVersion.to_dict"]], "wait_for_import() (abacusai.dataset_version.datasetversion method)": [[39, "abacusai.dataset_version.DatasetVersion.wait_for_import"]], "wait_for_inspection() (abacusai.dataset_version.datasetversion method)": [[39, "abacusai.dataset_version.DatasetVersion.wait_for_inspection"]], "deployment (class in abacusai.deployment)": [[40, "abacusai.deployment.Deployment"]], "__repr__() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.__repr__"]], "abacusai.deployment": [[40, "module-abacusai.deployment"]], "create_batch_prediction() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.create_batch_prediction"]], "create_conversation() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.create_conversation"]], "create_refresh_policy() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.create_refresh_policy"]], "create_webhook() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.create_webhook"]], "delete() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.delete"]], "describe() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.describe"]], "get_status() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.get_status"]], "list_conversations() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.list_conversations"]], "list_refresh_policies() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.list_refresh_policies"]], "list_webhooks() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.list_webhooks"]], "refresh() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.refresh"]], "remove_feature_group_export_output() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.remove_feature_group_export_output"]], "rename() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.rename"]], "set_auto() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.set_auto"]], "set_feature_group_export_database_connector_output() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.set_feature_group_export_database_connector_output"]], "set_feature_group_export_file_connector_output() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.set_feature_group_export_file_connector_output"]], "set_feature_group_version() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.set_feature_group_version"]], "set_model_version() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.set_model_version"]], "start() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.start"]], "stop() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.stop"]], "to_dict() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.to_dict"]], "update() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.update"]], "wait_for_deployment() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.wait_for_deployment"]], "wait_for_pending_deployment_update() (abacusai.deployment.deployment method)": [[40, "abacusai.deployment.Deployment.wait_for_pending_deployment_update"]], "deploymentauthtoken (class in abacusai.deployment_auth_token)": [[41, "abacusai.deployment_auth_token.DeploymentAuthToken"]], "__repr__() (abacusai.deployment_auth_token.deploymentauthtoken method)": [[41, "abacusai.deployment_auth_token.DeploymentAuthToken.__repr__"]], "abacusai.deployment_auth_token": [[41, "module-abacusai.deployment_auth_token"]], "to_dict() (abacusai.deployment_auth_token.deploymentauthtoken method)": [[41, "abacusai.deployment_auth_token.DeploymentAuthToken.to_dict"]], "deploymentconversation (class in abacusai.deployment_conversation)": [[42, "abacusai.deployment_conversation.DeploymentConversation"]], "__repr__() (abacusai.deployment_conversation.deploymentconversation method)": [[42, "abacusai.deployment_conversation.DeploymentConversation.__repr__"]], "abacusai.deployment_conversation": [[42, "module-abacusai.deployment_conversation"]], "delete() (abacusai.deployment_conversation.deploymentconversation method)": [[42, "abacusai.deployment_conversation.DeploymentConversation.delete"]], "get() (abacusai.deployment_conversation.deploymentconversation method)": [[42, "abacusai.deployment_conversation.DeploymentConversation.get"]], "to_dict() (abacusai.deployment_conversation.deploymentconversation method)": [[42, "abacusai.deployment_conversation.DeploymentConversation.to_dict"]], "deploymentconversationevent (class in abacusai.deployment_conversation_event)": [[43, "abacusai.deployment_conversation_event.DeploymentConversationEvent"]], "__repr__() (abacusai.deployment_conversation_event.deploymentconversationevent method)": [[43, "abacusai.deployment_conversation_event.DeploymentConversationEvent.__repr__"]], "abacusai.deployment_conversation_event": [[43, "module-abacusai.deployment_conversation_event"]], "to_dict() (abacusai.deployment_conversation_event.deploymentconversationevent method)": [[43, "abacusai.deployment_conversation_event.DeploymentConversationEvent.to_dict"]], "document (class in abacusai.document)": [[44, "abacusai.document.Document"]], "__repr__() (abacusai.document.document method)": [[44, "abacusai.document.Document.__repr__"]], "abacusai.document": [[44, "module-abacusai.document"]], "to_dict() (abacusai.document.document method)": [[44, "abacusai.document.Document.to_dict"]], "documentannotation (class in abacusai.document_annotation)": [[45, "abacusai.document_annotation.DocumentAnnotation"]], "__repr__() (abacusai.document_annotation.documentannotation method)": [[45, "abacusai.document_annotation.DocumentAnnotation.__repr__"]], "abacusai.document_annotation": [[45, "module-abacusai.document_annotation"]], "to_dict() (abacusai.document_annotation.documentannotation method)": [[45, "abacusai.document_annotation.DocumentAnnotation.to_dict"]], "documentstore (class in abacusai.document_store)": [[46, "abacusai.document_store.DocumentStore"]], "__repr__() (abacusai.document_store.documentstore method)": [[46, "abacusai.document_store.DocumentStore.__repr__"]], "abacusai.document_store": [[46, "module-abacusai.document_store"]], "to_dict() (abacusai.document_store.documentstore method)": [[46, "abacusai.document_store.DocumentStore.to_dict"]], "documentstoreimport (class in abacusai.document_store_import)": [[47, "abacusai.document_store_import.DocumentStoreImport"]], "__repr__() (abacusai.document_store_import.documentstoreimport method)": [[47, "abacusai.document_store_import.DocumentStoreImport.__repr__"]], "abacusai.document_store_import": [[47, "module-abacusai.document_store_import"]], "to_dict() (abacusai.document_store_import.documentstoreimport method)": [[47, "abacusai.document_store_import.DocumentStoreImport.to_dict"]], "driftdistribution (class in abacusai.drift_distribution)": [[48, "abacusai.drift_distribution.DriftDistribution"]], "__repr__() (abacusai.drift_distribution.driftdistribution method)": [[48, "abacusai.drift_distribution.DriftDistribution.__repr__"]], "abacusai.drift_distribution": [[48, "module-abacusai.drift_distribution"]], "to_dict() (abacusai.drift_distribution.driftdistribution method)": [[48, "abacusai.drift_distribution.DriftDistribution.to_dict"]], "driftdistributions (class in abacusai.drift_distributions)": [[49, "abacusai.drift_distributions.DriftDistributions"]], "__repr__() (abacusai.drift_distributions.driftdistributions method)": [[49, "abacusai.drift_distributions.DriftDistributions.__repr__"]], "abacusai.drift_distributions": [[49, "module-abacusai.drift_distributions"]], "to_dict() (abacusai.drift_distributions.driftdistributions method)": [[49, "abacusai.drift_distributions.DriftDistributions.to_dict"]], "eda (class in abacusai.eda)": [[50, "abacusai.eda.Eda"]], "__repr__() (abacusai.eda.eda method)": [[50, "abacusai.eda.Eda.__repr__"]], "abacusai.eda": [[50, "module-abacusai.eda"]], "delete() (abacusai.eda.eda method)": [[50, "abacusai.eda.Eda.delete"]], "describe() (abacusai.eda.eda method)": [[50, "abacusai.eda.Eda.describe"]], "list_versions() (abacusai.eda.eda method)": [[50, "abacusai.eda.Eda.list_versions"]], "refresh() (abacusai.eda.eda method)": [[50, "abacusai.eda.Eda.refresh"]], "rename() (abacusai.eda.eda method)": [[50, "abacusai.eda.Eda.rename"]], "rerun() (abacusai.eda.eda method)": [[50, "abacusai.eda.Eda.rerun"]], "to_dict() (abacusai.eda.eda method)": [[50, "abacusai.eda.Eda.to_dict"]], "edachartdescription (class in abacusai.eda_chart_description)": [[51, "abacusai.eda_chart_description.EdaChartDescription"]], "__repr__() (abacusai.eda_chart_description.edachartdescription method)": [[51, "abacusai.eda_chart_description.EdaChartDescription.__repr__"]], "abacusai.eda_chart_description": [[51, "module-abacusai.eda_chart_description"]], "to_dict() (abacusai.eda_chart_description.edachartdescription method)": [[51, "abacusai.eda_chart_description.EdaChartDescription.to_dict"]], "edacollinearity (class in abacusai.eda_collinearity)": [[52, "abacusai.eda_collinearity.EdaCollinearity"]], "__repr__() (abacusai.eda_collinearity.edacollinearity method)": [[52, "abacusai.eda_collinearity.EdaCollinearity.__repr__"]], "abacusai.eda_collinearity": [[52, "module-abacusai.eda_collinearity"]], "to_dict() (abacusai.eda_collinearity.edacollinearity method)": [[52, "abacusai.eda_collinearity.EdaCollinearity.to_dict"]], "edadataconsistency (class in abacusai.eda_data_consistency)": [[53, "abacusai.eda_data_consistency.EdaDataConsistency"]], "__repr__() (abacusai.eda_data_consistency.edadataconsistency method)": [[53, "abacusai.eda_data_consistency.EdaDataConsistency.__repr__"]], "abacusai.eda_data_consistency": [[53, "module-abacusai.eda_data_consistency"]], "to_dict() (abacusai.eda_data_consistency.edadataconsistency method)": [[53, "abacusai.eda_data_consistency.EdaDataConsistency.to_dict"]], "edafeatureassociation (class in abacusai.eda_feature_association)": [[54, "abacusai.eda_feature_association.EdaFeatureAssociation"]], "__repr__() (abacusai.eda_feature_association.edafeatureassociation method)": [[54, "abacusai.eda_feature_association.EdaFeatureAssociation.__repr__"]], "abacusai.eda_feature_association": [[54, "module-abacusai.eda_feature_association"]], "to_dict() (abacusai.eda_feature_association.edafeatureassociation method)": [[54, "abacusai.eda_feature_association.EdaFeatureAssociation.to_dict"]], "edafeaturecollinearity (class in abacusai.eda_feature_collinearity)": [[55, "abacusai.eda_feature_collinearity.EdaFeatureCollinearity"]], "__repr__() (abacusai.eda_feature_collinearity.edafeaturecollinearity method)": [[55, "abacusai.eda_feature_collinearity.EdaFeatureCollinearity.__repr__"]], "abacusai.eda_feature_collinearity": [[55, "module-abacusai.eda_feature_collinearity"]], "to_dict() (abacusai.eda_feature_collinearity.edafeaturecollinearity method)": [[55, "abacusai.eda_feature_collinearity.EdaFeatureCollinearity.to_dict"]], "edaforecastinganalysis (class in abacusai.eda_forecasting_analysis)": [[56, "abacusai.eda_forecasting_analysis.EdaForecastingAnalysis"]], "__repr__() (abacusai.eda_forecasting_analysis.edaforecastinganalysis method)": [[56, "abacusai.eda_forecasting_analysis.EdaForecastingAnalysis.__repr__"]], "abacusai.eda_forecasting_analysis": [[56, "module-abacusai.eda_forecasting_analysis"]], "to_dict() (abacusai.eda_forecasting_analysis.edaforecastinganalysis method)": [[56, "abacusai.eda_forecasting_analysis.EdaForecastingAnalysis.to_dict"]], "edaversion (class in abacusai.eda_version)": [[57, "abacusai.eda_version.EdaVersion"]], "__repr__() (abacusai.eda_version.edaversion method)": [[57, "abacusai.eda_version.EdaVersion.__repr__"]], "abacusai.eda_version": [[57, "module-abacusai.eda_version"]], "delete() (abacusai.eda_version.edaversion method)": [[57, "abacusai.eda_version.EdaVersion.delete"]], "describe() (abacusai.eda_version.edaversion method)": [[57, "abacusai.eda_version.EdaVersion.describe"]], "get_collinearity_for_feature() (abacusai.eda_version.edaversion method)": [[57, "abacusai.eda_version.EdaVersion.get_collinearity_for_feature"]], "get_eda_collinearity() (abacusai.eda_version.edaversion method)": [[57, "abacusai.eda_version.EdaVersion.get_eda_collinearity"]], "get_eda_data_consistency() (abacusai.eda_version.edaversion method)": [[57, "abacusai.eda_version.EdaVersion.get_eda_data_consistency"]], "get_eda_forecasting_analysis() (abacusai.eda_version.edaversion method)": [[57, "abacusai.eda_version.EdaVersion.get_eda_forecasting_analysis"]], "get_feature_association() (abacusai.eda_version.edaversion method)": [[57, "abacusai.eda_version.EdaVersion.get_feature_association"]], "get_status() (abacusai.eda_version.edaversion method)": [[57, "abacusai.eda_version.EdaVersion.get_status"]], "refresh() (abacusai.eda_version.edaversion method)": [[57, "abacusai.eda_version.EdaVersion.refresh"]], "to_dict() (abacusai.eda_version.edaversion method)": [[57, "abacusai.eda_version.EdaVersion.to_dict"]], "wait_for_eda() (abacusai.eda_version.edaversion method)": [[57, "abacusai.eda_version.EdaVersion.wait_for_eda"]], "embeddingfeaturedriftdistribution (class in abacusai.embedding_feature_drift_distribution)": [[58, "abacusai.embedding_feature_drift_distribution.EmbeddingFeatureDriftDistribution"]], "__repr__() (abacusai.embedding_feature_drift_distribution.embeddingfeaturedriftdistribution method)": [[58, "abacusai.embedding_feature_drift_distribution.EmbeddingFeatureDriftDistribution.__repr__"]], "abacusai.embedding_feature_drift_distribution": [[58, "module-abacusai.embedding_feature_drift_distribution"]], "to_dict() (abacusai.embedding_feature_drift_distribution.embeddingfeaturedriftdistribution method)": [[58, "abacusai.embedding_feature_drift_distribution.EmbeddingFeatureDriftDistribution.to_dict"]], "executefeaturegroupoperation (class in abacusai.execute_feature_group_operation)": [[59, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation"]], "__repr__() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[59, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.__repr__"]], "_download_avro_file() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[59, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation._download_avro_file"]], "abacusai.execute_feature_group_operation": [[59, "module-abacusai.execute_feature_group_operation"]], "describe() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[59, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.describe"]], "get_status() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[59, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.get_status"]], "load_as_pandas() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[59, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.load_as_pandas"]], "refresh() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[59, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.refresh"]], "to_dict() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[59, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.to_dict"]], "wait_for_execution() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[59, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.wait_for_execution"]], "wait_for_results() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[59, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.wait_for_results"]], "feature (class in abacusai.feature)": [[60, "abacusai.feature.Feature"]], "__repr__() (abacusai.feature.feature method)": [[60, "abacusai.feature.Feature.__repr__"]], "abacusai.feature": [[60, "module-abacusai.feature"]], "to_dict() (abacusai.feature.feature method)": [[60, "abacusai.feature.Feature.to_dict"]], "featuredistribution (class in abacusai.feature_distribution)": [[61, "abacusai.feature_distribution.FeatureDistribution"]], "__repr__() (abacusai.feature_distribution.featuredistribution method)": [[61, "abacusai.feature_distribution.FeatureDistribution.__repr__"]], "abacusai.feature_distribution": [[61, "module-abacusai.feature_distribution"]], "to_dict() (abacusai.feature_distribution.featuredistribution method)": [[61, "abacusai.feature_distribution.FeatureDistribution.to_dict"]], "featuredriftsummary (class in abacusai.feature_drift_summary)": [[62, "abacusai.feature_drift_summary.FeatureDriftSummary"]], "__repr__() (abacusai.feature_drift_summary.featuredriftsummary method)": [[62, "abacusai.feature_drift_summary.FeatureDriftSummary.__repr__"]], "abacusai.feature_drift_summary": [[62, "module-abacusai.feature_drift_summary"]], "to_dict() (abacusai.feature_drift_summary.featuredriftsummary method)": [[62, "abacusai.feature_drift_summary.FeatureDriftSummary.to_dict"]], "featuregroup (class in abacusai.feature_group)": [[63, "abacusai.feature_group.FeatureGroup"]], "__repr__() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.__repr__"]], "abacusai.feature_group": [[63, "module-abacusai.feature_group"]], "add_annotatable_feature() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.add_annotatable_feature"]], "add_annotation_label() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.add_annotation_label"]], "add_feature_tag() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.add_feature_tag"]], "add_organization_group_to_modifiers() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.add_organization_group_to_modifiers"]], "add_tag() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.add_tag"]], "add_to_project() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.add_to_project"]], "add_user_to_modifiers() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.add_user_to_modifiers"]], "append_data() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.append_data"]], "append_multiple_data() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.append_multiple_data"]], "concatenate_data() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.concatenate_data"]], "create_feature() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.create_feature"]], "create_nested_feature() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.create_nested_feature"]], "create_point_in_time_feature() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.create_point_in_time_feature"]], "create_point_in_time_group() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.create_point_in_time_group"]], "create_point_in_time_group_feature() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.create_point_in_time_group_feature"]], "create_sampling() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.create_sampling"]], "create_template() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.create_template"]], "create_version() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.create_version"]], "delete() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.delete"]], "delete_feature() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.delete_feature"]], "delete_nested_feature() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.delete_nested_feature"]], "delete_point_in_time_group() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.delete_point_in_time_group"]], "describe() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.describe"]], "describe_annotation() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.describe_annotation"]], "describe_dataset() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.describe_dataset"]], "detach_from_template() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.detach_from_template"]], "generate_natural_language_explanation() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.generate_natural_language_explanation"]], "get_annotations_status() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.get_annotations_status"]], "get_document_to_annotate() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.get_document_to_annotate"]], "get_natural_language_explanation() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.get_natural_language_explanation"]], "get_project_config() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.get_project_config"]], "get_recent_streamed_data() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.get_recent_streamed_data"]], "get_schema() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.get_schema"]], "get_status() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.get_status"]], "import_annotation_labels() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.import_annotation_labels"]], "invalidate_streaming_data() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.invalidate_streaming_data"]], "list_exports() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.list_exports"]], "list_modifiers() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.list_modifiers"]], "list_versions() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.list_versions"]], "load_as_pandas() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.load_as_pandas"]], "materialize() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.materialize"]], "refresh() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.refresh"]], "remove_annotation_label() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.remove_annotation_label"]], "remove_concatenation_config() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.remove_concatenation_config"]], "remove_feature_tag() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.remove_feature_tag"]], "remove_from_project() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.remove_from_project"]], "remove_organization_group_from_modifiers() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.remove_organization_group_from_modifiers"]], "remove_tag() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.remove_tag"]], "remove_user_from_modifiers() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.remove_user_from_modifiers"]], "render_data_for_llm() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.render_data_for_llm"]], "set_annotation_status_feature() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.set_annotation_status_feature"]], "set_feature_as_annotatable_feature() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.set_feature_as_annotatable_feature"]], "set_feature_type() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.set_feature_type"]], "set_indexing_config() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.set_indexing_config"]], "set_merge_config() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.set_merge_config"]], "set_modifier_lock() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.set_modifier_lock"]], "set_project_config() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.set_project_config"]], "set_sampling_config() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.set_sampling_config"]], "set_schema() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.set_schema"]], "set_transform_config() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.set_transform_config"]], "set_type() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.set_type"]], "suggest_template_for() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.suggest_template_for"]], "to_dict() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.to_dict"]], "unset_feature_as_annotatable_feature() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.unset_feature_as_annotatable_feature"]], "update() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.update"]], "update_annotation_status() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.update_annotation_status"]], "update_dataset_feature_expression() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.update_dataset_feature_expression"]], "update_feature() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.update_feature"]], "update_function_definition() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.update_function_definition"]], "update_git() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.update_git"]], "update_nested_feature() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.update_nested_feature"]], "update_point_in_time_feature() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.update_point_in_time_feature"]], "update_point_in_time_group() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.update_point_in_time_group"]], "update_point_in_time_group_feature() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.update_point_in_time_group_feature"]], "update_python_function() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.update_python_function"]], "update_python_function_bindings() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.update_python_function_bindings"]], "update_sql_definition() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.update_sql_definition"]], "update_template_bindings() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.update_template_bindings"]], "update_zip() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.update_zip"]], "upsert_data() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.upsert_data"]], "upsert_multiple_data() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.upsert_multiple_data"]], "verify_and_describe_annotation() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.verify_and_describe_annotation"]], "wait_for_dataset() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.wait_for_dataset"]], "wait_for_materialization() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.wait_for_materialization"]], "wait_for_streaming_ready() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.wait_for_streaming_ready"]], "wait_for_upload() (abacusai.feature_group.featuregroup method)": [[63, "abacusai.feature_group.FeatureGroup.wait_for_upload"]], "featuregroupexport (class in abacusai.feature_group_export)": [[64, "abacusai.feature_group_export.FeatureGroupExport"]], "__repr__() (abacusai.feature_group_export.featuregroupexport method)": [[64, "abacusai.feature_group_export.FeatureGroupExport.__repr__"]], "abacusai.feature_group_export": [[64, "module-abacusai.feature_group_export"]], "describe() (abacusai.feature_group_export.featuregroupexport method)": [[64, "abacusai.feature_group_export.FeatureGroupExport.describe"]], "get_connector_errors() (abacusai.feature_group_export.featuregroupexport method)": [[64, "abacusai.feature_group_export.FeatureGroupExport.get_connector_errors"]], "get_feature_group_version_export_download_url() (abacusai.feature_group_export.featuregroupexport method)": [[64, "abacusai.feature_group_export.FeatureGroupExport.get_feature_group_version_export_download_url"]], "get_results() (abacusai.feature_group_export.featuregroupexport method)": [[64, "abacusai.feature_group_export.FeatureGroupExport.get_results"]], "get_status() (abacusai.feature_group_export.featuregroupexport method)": [[64, "abacusai.feature_group_export.FeatureGroupExport.get_status"]], "refresh() (abacusai.feature_group_export.featuregroupexport method)": [[64, "abacusai.feature_group_export.FeatureGroupExport.refresh"]], "to_dict() (abacusai.feature_group_export.featuregroupexport method)": [[64, "abacusai.feature_group_export.FeatureGroupExport.to_dict"]], "wait_for_export() (abacusai.feature_group_export.featuregroupexport method)": [[64, "abacusai.feature_group_export.FeatureGroupExport.wait_for_export"]], "wait_for_results() (abacusai.feature_group_export.featuregroupexport method)": [[64, "abacusai.feature_group_export.FeatureGroupExport.wait_for_results"]], "featuregroupexportconfig (class in abacusai.feature_group_export_config)": [[65, "abacusai.feature_group_export_config.FeatureGroupExportConfig"]], "__repr__() (abacusai.feature_group_export_config.featuregroupexportconfig method)": [[65, "abacusai.feature_group_export_config.FeatureGroupExportConfig.__repr__"]], "abacusai.feature_group_export_config": [[65, "module-abacusai.feature_group_export_config"]], "to_dict() (abacusai.feature_group_export_config.featuregroupexportconfig method)": [[65, "abacusai.feature_group_export_config.FeatureGroupExportConfig.to_dict"]], "featuregroupexportdownloadurl (class in abacusai.feature_group_export_download_url)": [[66, "abacusai.feature_group_export_download_url.FeatureGroupExportDownloadUrl"]], "__repr__() (abacusai.feature_group_export_download_url.featuregroupexportdownloadurl method)": [[66, "abacusai.feature_group_export_download_url.FeatureGroupExportDownloadUrl.__repr__"]], "abacusai.feature_group_export_download_url": [[66, "module-abacusai.feature_group_export_download_url"]], "to_dict() (abacusai.feature_group_export_download_url.featuregroupexportdownloadurl method)": [[66, "abacusai.feature_group_export_download_url.FeatureGroupExportDownloadUrl.to_dict"]], "featuregrouplineage (class in abacusai.feature_group_lineage)": [[67, "abacusai.feature_group_lineage.FeatureGroupLineage"]], "__repr__() (abacusai.feature_group_lineage.featuregrouplineage method)": [[67, "abacusai.feature_group_lineage.FeatureGroupLineage.__repr__"]], "abacusai.feature_group_lineage": [[67, "module-abacusai.feature_group_lineage"]], "to_dict() (abacusai.feature_group_lineage.featuregrouplineage method)": [[67, "abacusai.feature_group_lineage.FeatureGroupLineage.to_dict"]], "featuregrouprefreshexportconfig (class in abacusai.feature_group_refresh_export_config)": [[68, "abacusai.feature_group_refresh_export_config.FeatureGroupRefreshExportConfig"]], "__repr__() (abacusai.feature_group_refresh_export_config.featuregrouprefreshexportconfig method)": [[68, "abacusai.feature_group_refresh_export_config.FeatureGroupRefreshExportConfig.__repr__"]], "abacusai.feature_group_refresh_export_config": [[68, "module-abacusai.feature_group_refresh_export_config"]], "to_dict() (abacusai.feature_group_refresh_export_config.featuregrouprefreshexportconfig method)": [[68, "abacusai.feature_group_refresh_export_config.FeatureGroupRefreshExportConfig.to_dict"]], "featuregrouptemplate (class in abacusai.feature_group_template)": [[69, "abacusai.feature_group_template.FeatureGroupTemplate"]], "__repr__() (abacusai.feature_group_template.featuregrouptemplate method)": [[69, "abacusai.feature_group_template.FeatureGroupTemplate.__repr__"]], "abacusai.feature_group_template": [[69, "module-abacusai.feature_group_template"]], "delete() (abacusai.feature_group_template.featuregrouptemplate method)": [[69, "abacusai.feature_group_template.FeatureGroupTemplate.delete"]], "describe() (abacusai.feature_group_template.featuregrouptemplate method)": [[69, "abacusai.feature_group_template.FeatureGroupTemplate.describe"]], "preview_resolution() (abacusai.feature_group_template.featuregrouptemplate method)": [[69, "abacusai.feature_group_template.FeatureGroupTemplate.preview_resolution"]], "refresh() (abacusai.feature_group_template.featuregrouptemplate method)": [[69, "abacusai.feature_group_template.FeatureGroupTemplate.refresh"]], "to_dict() (abacusai.feature_group_template.featuregrouptemplate method)": [[69, "abacusai.feature_group_template.FeatureGroupTemplate.to_dict"]], "update() (abacusai.feature_group_template.featuregrouptemplate method)": [[69, "abacusai.feature_group_template.FeatureGroupTemplate.update"]], "featuregrouptemplatevariableoptions (class in abacusai.feature_group_template_variable_options)": [[70, "abacusai.feature_group_template_variable_options.FeatureGroupTemplateVariableOptions"]], "__repr__() (abacusai.feature_group_template_variable_options.featuregrouptemplatevariableoptions method)": [[70, "abacusai.feature_group_template_variable_options.FeatureGroupTemplateVariableOptions.__repr__"]], "abacusai.feature_group_template_variable_options": [[70, "module-abacusai.feature_group_template_variable_options"]], "to_dict() (abacusai.feature_group_template_variable_options.featuregrouptemplatevariableoptions method)": [[70, "abacusai.feature_group_template_variable_options.FeatureGroupTemplateVariableOptions.to_dict"]], "featuregroupversion (class in abacusai.feature_group_version)": [[71, "abacusai.feature_group_version.FeatureGroupVersion"]], "__repr__() (abacusai.feature_group_version.featuregroupversion method)": [[71, "abacusai.feature_group_version.FeatureGroupVersion.__repr__"]], "_download_avro_file() (abacusai.feature_group_version.featuregroupversion method)": [[71, "abacusai.feature_group_version.FeatureGroupVersion._download_avro_file"]], "abacusai.feature_group_version": [[71, "module-abacusai.feature_group_version"]], "create_snapshot_feature_group() (abacusai.feature_group_version.featuregroupversion method)": [[71, "abacusai.feature_group_version.FeatureGroupVersion.create_snapshot_feature_group"]], "describe() (abacusai.feature_group_version.featuregroupversion method)": [[71, "abacusai.feature_group_version.FeatureGroupVersion.describe"]], "export_to_console() (abacusai.feature_group_version.featuregroupversion method)": [[71, "abacusai.feature_group_version.FeatureGroupVersion.export_to_console"]], "export_to_database_connector() (abacusai.feature_group_version.featuregroupversion method)": [[71, "abacusai.feature_group_version.FeatureGroupVersion.export_to_database_connector"]], "export_to_file_connector() (abacusai.feature_group_version.featuregroupversion method)": [[71, "abacusai.feature_group_version.FeatureGroupVersion.export_to_file_connector"]], "get_materialization_logs() (abacusai.feature_group_version.featuregroupversion method)": [[71, "abacusai.feature_group_version.FeatureGroupVersion.get_materialization_logs"]], "get_metrics() (abacusai.feature_group_version.featuregroupversion method)": [[71, "abacusai.feature_group_version.FeatureGroupVersion.get_metrics"]], "get_status() (abacusai.feature_group_version.featuregroupversion method)": [[71, "abacusai.feature_group_version.FeatureGroupVersion.get_status"]], "load_as_pandas() (abacusai.feature_group_version.featuregroupversion method)": [[71, "abacusai.feature_group_version.FeatureGroupVersion.load_as_pandas"]], "refresh() (abacusai.feature_group_version.featuregroupversion method)": [[71, "abacusai.feature_group_version.FeatureGroupVersion.refresh"]], "to_dict() (abacusai.feature_group_version.featuregroupversion method)": [[71, "abacusai.feature_group_version.FeatureGroupVersion.to_dict"]], "wait_for_materialization() (abacusai.feature_group_version.featuregroupversion method)": [[71, "abacusai.feature_group_version.FeatureGroupVersion.wait_for_materialization"]], "wait_for_results() (abacusai.feature_group_version.featuregroupversion method)": [[71, "abacusai.feature_group_version.FeatureGroupVersion.wait_for_results"]], "featureimportance (class in abacusai.feature_importance)": [[72, "abacusai.feature_importance.FeatureImportance"]], "__repr__() (abacusai.feature_importance.featureimportance method)": [[72, "abacusai.feature_importance.FeatureImportance.__repr__"]], "abacusai.feature_importance": [[72, "module-abacusai.feature_importance"]], "to_dict() (abacusai.feature_importance.featureimportance method)": [[72, "abacusai.feature_importance.FeatureImportance.to_dict"]], "featuremapping (class in abacusai.feature_mapping)": [[73, "abacusai.feature_mapping.FeatureMapping"]], "__repr__() (abacusai.feature_mapping.featuremapping method)": [[73, "abacusai.feature_mapping.FeatureMapping.__repr__"]], "abacusai.feature_mapping": [[73, "module-abacusai.feature_mapping"]], "to_dict() (abacusai.feature_mapping.featuremapping method)": [[73, "abacusai.feature_mapping.FeatureMapping.to_dict"]], "featurerecord (class in abacusai.feature_record)": [[74, "abacusai.feature_record.FeatureRecord"]], "__repr__() (abacusai.feature_record.featurerecord method)": [[74, "abacusai.feature_record.FeatureRecord.__repr__"]], "abacusai.feature_record": [[74, "module-abacusai.feature_record"]], "to_dict() (abacusai.feature_record.featurerecord method)": [[74, "abacusai.feature_record.FeatureRecord.to_dict"]], "fileconnector (class in abacusai.file_connector)": [[75, "abacusai.file_connector.FileConnector"]], "__repr__() (abacusai.file_connector.fileconnector method)": [[75, "abacusai.file_connector.FileConnector.__repr__"]], "abacusai.file_connector": [[75, "module-abacusai.file_connector"]], "to_dict() (abacusai.file_connector.fileconnector method)": [[75, "abacusai.file_connector.FileConnector.to_dict"]], "fileconnectorinstructions (class in abacusai.file_connector_instructions)": [[76, "abacusai.file_connector_instructions.FileConnectorInstructions"]], "__repr__() (abacusai.file_connector_instructions.fileconnectorinstructions method)": [[76, "abacusai.file_connector_instructions.FileConnectorInstructions.__repr__"]], "abacusai.file_connector_instructions": [[76, "module-abacusai.file_connector_instructions"]], "to_dict() (abacusai.file_connector_instructions.fileconnectorinstructions method)": [[76, "abacusai.file_connector_instructions.FileConnectorInstructions.to_dict"]], "fileconnectorverification (class in abacusai.file_connector_verification)": [[77, "abacusai.file_connector_verification.FileConnectorVerification"]], "__repr__() (abacusai.file_connector_verification.fileconnectorverification method)": [[77, "abacusai.file_connector_verification.FileConnectorVerification.__repr__"]], "abacusai.file_connector_verification": [[77, "module-abacusai.file_connector_verification"]], "to_dict() (abacusai.file_connector_verification.fileconnectorverification method)": [[77, "abacusai.file_connector_verification.FileConnectorVerification.to_dict"]], "forecastinganalysisgraphdata (class in abacusai.forecasting_analysis_graph_data)": [[78, "abacusai.forecasting_analysis_graph_data.ForecastingAnalysisGraphData"]], "__repr__() (abacusai.forecasting_analysis_graph_data.forecastinganalysisgraphdata method)": [[78, "abacusai.forecasting_analysis_graph_data.ForecastingAnalysisGraphData.__repr__"]], "abacusai.forecasting_analysis_graph_data": [[78, "module-abacusai.forecasting_analysis_graph_data"]], "to_dict() (abacusai.forecasting_analysis_graph_data.forecastinganalysisgraphdata method)": [[78, "abacusai.forecasting_analysis_graph_data.ForecastingAnalysisGraphData.to_dict"]], "functionlogs (class in abacusai.function_logs)": [[79, "abacusai.function_logs.FunctionLogs"]], "__repr__() (abacusai.function_logs.functionlogs method)": [[79, "abacusai.function_logs.FunctionLogs.__repr__"]], "abacusai.function_logs": [[79, "module-abacusai.function_logs"]], "to_dict() (abacusai.function_logs.functionlogs method)": [[79, "abacusai.function_logs.FunctionLogs.to_dict"]], "generatedpitfeatureconfigoption (class in abacusai.generated_pit_feature_config_option)": [[80, "abacusai.generated_pit_feature_config_option.GeneratedPitFeatureConfigOption"]], "__repr__() (abacusai.generated_pit_feature_config_option.generatedpitfeatureconfigoption method)": [[80, "abacusai.generated_pit_feature_config_option.GeneratedPitFeatureConfigOption.__repr__"]], "abacusai.generated_pit_feature_config_option": [[80, "module-abacusai.generated_pit_feature_config_option"]], "to_dict() (abacusai.generated_pit_feature_config_option.generatedpitfeatureconfigoption method)": [[80, "abacusai.generated_pit_feature_config_option.GeneratedPitFeatureConfigOption.to_dict"]], "graphdashboard (class in abacusai.graph_dashboard)": [[81, "abacusai.graph_dashboard.GraphDashboard"]], "__repr__() (abacusai.graph_dashboard.graphdashboard method)": [[81, "abacusai.graph_dashboard.GraphDashboard.__repr__"]], "abacusai.graph_dashboard": [[81, "module-abacusai.graph_dashboard"]], "delete() (abacusai.graph_dashboard.graphdashboard method)": [[81, "abacusai.graph_dashboard.GraphDashboard.delete"]], "describe() (abacusai.graph_dashboard.graphdashboard method)": [[81, "abacusai.graph_dashboard.GraphDashboard.describe"]], "refresh() (abacusai.graph_dashboard.graphdashboard method)": [[81, "abacusai.graph_dashboard.GraphDashboard.refresh"]], "to_dict() (abacusai.graph_dashboard.graphdashboard method)": [[81, "abacusai.graph_dashboard.GraphDashboard.to_dict"]], "update() (abacusai.graph_dashboard.graphdashboard method)": [[81, "abacusai.graph_dashboard.GraphDashboard.update"]], "accuracy (abacusai.forecastingobjective attribute)": [[82, "abacusai.ForecastingObjective.ACCURACY"]], "accuracy (abacusai.regressionobjective attribute)": [[82, "abacusai.RegressionObjective.ACCURACY"]], "aiagenttrainingconfig (class in abacusai)": [[82, "abacusai.AIAgentTrainingConfig"]], "ai_agent (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.AI_AGENT"]], "ancestral_simulation (abacusai.forecastingquanitlesextensionmethod attribute)": [[82, "abacusai.ForecastingQuanitlesExtensionMethod.ANCESTRAL_SIMULATION"]], "annotations_precision (abacusai.nerobjective attribute)": [[82, "abacusai.NERObjective.ANNOTATIONS_PRECISION"]], "annotations_recall (abacusai.nerobjective attribute)": [[82, "abacusai.NERObjective.ANNOTATIONS_RECALL"]], "anomaly_detection (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.ANOMALY_DETECTION"]], "anomaly_outliers (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.ANOMALY_OUTLIERS"]], "application (abacusai.connectortype attribute)": [[82, "abacusai.ConnectorType.APPLICATION"]], "asymmetric_mean_absolute_percentage_error (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "au (abacusai.holidaycalendars attribute)": [[82, "abacusai.HolidayCalendars.AU"]], "auc (abacusai.nerobjective attribute)": [[82, "abacusai.NERObjective.AUC"]], "auc (abacusai.regressionobjective attribute)": [[82, "abacusai.RegressionObjective.AUC"]], "auto (abacusai.forecastingdatasplittype attribute)": [[82, "abacusai.ForecastingDataSplitType.AUTO"]], "auto (abacusai.nlpdocumentformat attribute)": [[82, "abacusai.NLPDocumentFormat.AUTO"]], "automatic (abacusai.clusteringimputationmethod attribute)": [[82, "abacusai.ClusteringImputationMethod.AUTOMATIC"]], "automatic (abacusai.regressionlossfunction attribute)": [[82, "abacusai.RegressionLossFunction.AUTOMATIC"]], "average (abacusai.filllogic attribute)": [[82, "abacusai.FillLogic.AVERAGE"]], "anomalydetectiontrainingconfig (class in abacusai)": [[82, "abacusai.AnomalyDetectionTrainingConfig"]], "apiclass (class in abacusai)": [[82, "abacusai.ApiClass"]], "apiclient (class in abacusai)": [[82, "abacusai.ApiClient"]], "apienum (class in abacusai)": [[82, "abacusai.ApiEnum"]], "back (abacusai.forecastingfillmethod attribute)": [[82, "abacusai.ForecastingFillMethod.BACK"]], "backfill (abacusai.filllogic attribute)": [[82, "abacusai.FillLogic.BACKFILL"]], "batch_1024 (abacusai.batchsize attribute)": [[82, "abacusai.BatchSize.BATCH_1024"]], "batch_128 (abacusai.batchsize attribute)": [[82, "abacusai.BatchSize.BATCH_128"]], "batch_16 (abacusai.batchsize attribute)": [[82, "abacusai.BatchSize.BATCH_16"]], "batch_256 (abacusai.batchsize attribute)": [[82, "abacusai.BatchSize.BATCH_256"]], "batch_32 (abacusai.batchsize attribute)": [[82, "abacusai.BatchSize.BATCH_32"]], "batch_384 (abacusai.batchsize attribute)": [[82, "abacusai.BatchSize.BATCH_384"]], "batch_512 (abacusai.batchsize attribute)": [[82, "abacusai.BatchSize.BATCH_512"]], "batch_64 (abacusai.batchsize attribute)": [[82, "abacusai.BatchSize.BATCH_64"]], "batch_740 (abacusai.batchsize attribute)": [[82, "abacusai.BatchSize.BATCH_740"]], "batch_8 (abacusai.batchsize attribute)": [[82, "abacusai.BatchSize.BATCH_8"]], "batch_prediction_id (abacusai.pythonfunctionargumenttype attribute)": [[82, "abacusai.PythonFunctionArgumentType.BATCH_PREDICTION_ID"]], "bias (abacusai.forecastingobjective attribute)": [[82, "abacusai.ForecastingObjective.BIAS"]], "boolean (abacusai.pythonfunctionargumenttype attribute)": [[82, "abacusai.PythonFunctionArgumentType.BOOLEAN"]], "box_cox (abacusai.regressiontargettransform attribute)": [[82, "abacusai.RegressionTargetTransform.BOX_COX"]], "batchsize (class in abacusai)": [[82, "abacusai.BatchSize"]], "chat_llm (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.CHAT_LLM"]], "clustering (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.CLUSTERING"]], "clustering_timeseries (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.CLUSTERING_TIMESERIES"]], "cmape (abacusai.forecastingobjective attribute)": [[82, "abacusai.ForecastingObjective.CMAPE"]], "coverage (abacusai.personalizationobjective attribute)": [[82, "abacusai.PersonalizationObjective.COVERAGE"]], "cross_entropy (abacusai.regressionlossfunction attribute)": [[82, "abacusai.RegressionLossFunction.CROSS_ENTROPY"]], "cumulative_forecasting (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.CUMULATIVE_FORECASTING"]], "custom (abacusai.filllogic attribute)": [[82, "abacusai.FillLogic.CUSTOM"]], "custom (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.CUSTOM"]], "custom (abacusai.regressionlossfunction attribute)": [[82, "abacusai.RegressionLossFunction.CUSTOM"]], "custom_algorithm (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.CUSTOM_ALGORITHM"]], "custom_trained_model (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.CUSTOM_TRAINED_MODEL"]], "cv (abacusai.forecastingobjective attribute)": [[82, "abacusai.ForecastingObjective.CV"]], "chatllmtrainingconfig (class in abacusai)": [[82, "abacusai.ChatLLMTrainingConfig"]], "clientoptions (class in abacusai)": [[82, "abacusai.ClientOptions"]], "clusteringimputationmethod (class in abacusai)": [[82, "abacusai.ClusteringImputationMethod"]], "clusteringtimeseriestrainingconfig (class in abacusai)": [[82, "abacusai.ClusteringTimeseriesTrainingConfig"]], "clusteringtrainingconfig (class in abacusai)": [[82, "abacusai.ClusteringTrainingConfig"]], "connectortype (class in abacusai)": [[82, "abacusai.ConnectorType"]], "cumulativeforecastingtrainingconfig (class in abacusai)": [[82, "abacusai.CumulativeForecastingTrainingConfig"]], "customalgorithmtrainingconfig (class in abacusai)": [[82, "abacusai.CustomAlgorithmTrainingConfig"]], "customtrainedmodeltrainingconfig (class in abacusai)": [[82, "abacusai.CustomTrainedModelTrainingConfig"]], "daily (abacusai.forecastingfrequency attribute)": [[82, "abacusai.ForecastingFrequency.DAILY"]], "database (abacusai.connectortype attribute)": [[82, "abacusai.ConnectorType.DATABASE"]], "dataset_id (abacusai.pythonfunctionargumenttype attribute)": [[82, "abacusai.PythonFunctionArgumentType.DATASET_ID"]], "deployment_id (abacusai.pythonfunctionargumenttype attribute)": [[82, "abacusai.PythonFunctionArgumentType.DEPLOYMENT_ID"]], "direct (abacusai.forecastingquanitlesextensionmethod attribute)": [[82, "abacusai.ForecastingQuanitlesExtensionMethod.DIRECT"]], "doc (abacusai.nlpdocumentformat attribute)": [[82, "abacusai.NLPDocumentFormat.DOC"]], "document_classification (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.DOCUMENT_CLASSIFICATION"]], "document_summarization (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.DOCUMENT_SUMMARIZATION"]], "document_visualization (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.DOCUMENT_VISUALIZATION"]], "databaseconnectorexportconfig (class in abacusai)": [[82, "abacusai.DatabaseConnectorExportConfig"]], "documentclassificationtrainingconfig (class in abacusai)": [[82, "abacusai.DocumentClassificationTrainingConfig"]], "documentsummarizationtrainingconfig (class in abacusai)": [[82, "abacusai.DocumentSummarizationTrainingConfig"]], "documentvisualizationtrainingconfig (class in abacusai)": [[82, "abacusai.DocumentVisualizationTrainingConfig"]], "e5 (abacusai.vectorstoretextencoder attribute)": [[82, "abacusai.VectorStoreTextEncoder.E5"]], "e5_small (abacusai.vectorstoretextencoder attribute)": [[82, "abacusai.VectorStoreTextEncoder.E5_SMALL"]], "emotion (abacusai.sentimenttype attribute)": [[82, "abacusai.SentimentType.EMOTION"]], "experimental (abacusai.personalizationtrainingmode attribute)": [[82, "abacusai.PersonalizationTrainingMode.EXPERIMENTAL"]], "experimentationmode (class in abacusai)": [[82, "abacusai.ExperimentationMode"]], "f1_score (abacusai.regressionobjective attribute)": [[82, "abacusai.RegressionObjective.F1_SCORE"]], "feature_group (abacusai.pythonfunctionargumenttype attribute)": [[82, "abacusai.PythonFunctionArgumentType.FEATURE_GROUP"]], "feature_group_id (abacusai.pythonfunctionargumenttype attribute)": [[82, "abacusai.PythonFunctionArgumentType.FEATURE_GROUP_ID"]], "feature_store (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.FEATURE_STORE"]], "file (abacusai.connectortype attribute)": [[82, "abacusai.ConnectorType.FILE"]], "float (abacusai.pythonfunctionargumenttype attribute)": [[82, "abacusai.PythonFunctionArgumentType.FLOAT"]], "focal_cross_entropy (abacusai.regressionlossfunction attribute)": [[82, "abacusai.RegressionLossFunction.FOCAL_CROSS_ENTROPY"]], "forecasting (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.FORECASTING"]], "forwardfill (abacusai.filllogic attribute)": [[82, "abacusai.FillLogic.FORWARDFILL"]], "future (abacusai.forecastingfillmethod attribute)": [[82, "abacusai.ForecastingFillMethod.FUTURE"]], "featuregroupexportconfig (class in abacusai)": [[82, "abacusai.FeatureGroupExportConfig"]], "fileconnectorexportconfig (class in abacusai)": [[82, "abacusai.FileConnectorExportConfig"]], "filllogic (class in abacusai)": [[82, "abacusai.FillLogic"]], "forecastingdatasplittype (class in abacusai)": [[82, "abacusai.ForecastingDataSplitType"]], "forecastingfillmethod (class in abacusai)": [[82, "abacusai.ForecastingFillMethod"]], "forecastingfrequency (class in abacusai)": [[82, "abacusai.ForecastingFrequency"]], "forecastinglocalscaling (class in abacusai)": [[82, "abacusai.ForecastingLocalScaling"]], "forecastinglossfunction (class in abacusai)": [[82, "abacusai.ForecastingLossFunction"]], "forecastingobjective (class in abacusai)": [[82, "abacusai.ForecastingObjective"]], "forecastingquanitlesextensionmethod (class in abacusai)": [[82, "abacusai.ForecastingQuanitlesExtensionMethod"]], "forecastingtrainingconfig (class in abacusai)": [[82, "abacusai.ForecastingTrainingConfig"]], "gaussian (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.GAUSSIAN"]], "gaussian_full_covariance (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.GAUSSIAN_FULL_COVARIANCE"]], "guassian_exponential (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.GUASSIAN_EXPONENTIAL"]], "hourly (abacusai.forecastingfrequency attribute)": [[82, "abacusai.ForecastingFrequency.HOURLY"]], "huber (abacusai.regressionlossfunction attribute)": [[82, "abacusai.RegressionLossFunction.HUBER"]], "holidaycalendars (class in abacusai)": [[82, "abacusai.HolidayCalendars"]], "image_classification (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.IMAGE_CLASSIFICATION"]], "image_value_prediction (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.IMAGE_VALUE_PREDICTION"]], "integer (abacusai.pythonfunctionargumenttype attribute)": [[82, "abacusai.PythonFunctionArgumentType.INTEGER"]], "interpolate (abacusai.clusteringimputationmethod attribute)": [[82, "abacusai.ClusteringImputationMethod.INTERPOLATE"]], "item (abacusai.forecastingdatasplittype attribute)": [[82, "abacusai.ForecastingDataSplitType.ITEM"]], "item (abacusai.forecastinglocalscaling attribute)": [[82, "abacusai.ForecastingLocalScaling.ITEM"]], "json (abacusai.pythonfunctionargumenttype attribute)": [[82, "abacusai.PythonFunctionArgumentType.JSON"]], "language_detection (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.LANGUAGE_DETECTION"]], "last_n (abacusai.mergemode attribute)": [[82, "abacusai.MergeMode.LAST_N"]], "last_point (abacusai.forecastinglocalscaling attribute)": [[82, "abacusai.ForecastingLocalScaling.LAST_POINT"]], "learned (abacusai.nermodeltype attribute)": [[82, "abacusai.NERModelType.LEARNED"]], "linear (abacusai.filllogic attribute)": [[82, "abacusai.FillLogic.LINEAR"]], "list (abacusai.pythonfunctionargumenttype attribute)": [[82, "abacusai.PythonFunctionArgumentType.LIST"]], "log (abacusai.regressiontargettransform attribute)": [[82, "abacusai.RegressionTargetTransform.LOG"]], "log_loss (abacusai.nerobjective attribute)": [[82, "abacusai.NERObjective.LOG_LOSS"]], "log_loss (abacusai.regressionobjective attribute)": [[82, "abacusai.RegressionObjective.LOG_LOSS"]], "log_root_mean_square_error (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.LOG_ROOT_MEAN_SQUARE_ERROR"]], "lastnmergeconfig (class in abacusai)": [[82, "abacusai.LastNMergeConfig"]], "mae (abacusai.regressionlossfunction attribute)": [[82, "abacusai.RegressionLossFunction.MAE"]], "mae (abacusai.regressionobjective attribute)": [[82, "abacusai.RegressionObjective.MAE"]], "map (abacusai.personalizationobjective attribute)": [[82, "abacusai.PersonalizationObjective.MAP"]], "mape (abacusai.forecastingobjective attribute)": [[82, "abacusai.ForecastingObjective.MAPE"]], "mape (abacusai.regressionlossfunction attribute)": [[82, "abacusai.RegressionLossFunction.MAPE"]], "mape (abacusai.regressionobjective attribute)": [[82, "abacusai.RegressionObjective.MAPE"]], "map_10 (abacusai.personalizationobjective attribute)": [[82, "abacusai.PersonalizationObjective.MAP_10"]], "map_5 (abacusai.personalizationobjective attribute)": [[82, "abacusai.PersonalizationObjective.MAP_5"]], "max (abacusai.filllogic attribute)": [[82, "abacusai.FillLogic.MAX"]], "mean_absolute_error (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.MEAN_ABSOLUTE_ERROR"]], "mean_absolute_percentage_error (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "median (abacusai.filllogic attribute)": [[82, "abacusai.FillLogic.MEDIAN"]], "middle (abacusai.forecastingfillmethod attribute)": [[82, "abacusai.ForecastingFillMethod.MIDDLE"]], "min (abacusai.filllogic attribute)": [[82, "abacusai.FillLogic.MIN"]], "min_max (abacusai.forecastinglocalscaling attribute)": [[82, "abacusai.ForecastingLocalScaling.MIN_MAX"]], "min_std (abacusai.forecastinglocalscaling attribute)": [[82, "abacusai.ForecastingLocalScaling.MIN_STD"]], "mix_gaussians (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.MIX_GAUSSIANS"]], "model_id (abacusai.pythonfunctionargumenttype attribute)": [[82, "abacusai.PythonFunctionArgumentType.MODEL_ID"]], "model_monitoring (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.MODEL_MONITORING"]], "monitor_id (abacusai.pythonfunctionargumenttype attribute)": [[82, "abacusai.PythonFunctionArgumentType.MONITOR_ID"]], "month_end (abacusai.forecastingfrequency attribute)": [[82, "abacusai.ForecastingFrequency.MONTH_END"]], "month_start (abacusai.forecastingfrequency attribute)": [[82, "abacusai.ForecastingFrequency.MONTH_START"]], "mrr (abacusai.personalizationobjective attribute)": [[82, "abacusai.PersonalizationObjective.MRR"]], "mse (abacusai.regressionlossfunction attribute)": [[82, "abacusai.RegressionLossFunction.MSE"]], "msle (abacusai.regressionlossfunction attribute)": [[82, "abacusai.RegressionLossFunction.MSLE"]], "mergeconfig (class in abacusai)": [[82, "abacusai.MergeConfig"]], "mergemode (class in abacusai)": [[82, "abacusai.MergeMode"]], "named_entity_extraction (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.NAMED_ENTITY_EXTRACTION"]], "natural_language_search (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.NATURAL_LANGUAGE_SEARCH"]], "ndcg (abacusai.personalizationobjective attribute)": [[82, "abacusai.PersonalizationObjective.NDCG"]], "ndcg_10 (abacusai.personalizationobjective attribute)": [[82, "abacusai.PersonalizationObjective.NDCG_10"]], "ndcg_5 (abacusai.personalizationobjective attribute)": [[82, "abacusai.PersonalizationObjective.NDCG_5"]], "nearest (abacusai.filllogic attribute)": [[82, "abacusai.FillLogic.NEAREST"]], "negative_binomial (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.NEGATIVE_BINOMIAL"]], "nermodeltype (class in abacusai)": [[82, "abacusai.NERModelType"]], "nerobjective (class in abacusai)": [[82, "abacusai.NERObjective"]], "nlpdocumentformat (class in abacusai)": [[82, "abacusai.NLPDocumentFormat"]], "normalized_mean_absolute_error (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.NORMALIZED_MEAN_ABSOLUTE_ERROR"]], "normalized_root_mean_square_error (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.NORMALIZED_ROOT_MEAN_SQUARE_ERROR"]], "nsamplingconfig (class in abacusai)": [[82, "abacusai.NSamplingConfig"]], "n_sampling (abacusai.samplingmethodtype attribute)": [[82, "abacusai.SamplingMethodType.N_SAMPLING"]], "namedentityextractiontrainingconfig (class in abacusai)": [[82, "abacusai.NamedEntityExtractionTrainingConfig"]], "naturallanguagesearchtrainingconfig (class in abacusai)": [[82, "abacusai.NaturalLanguageSearchTrainingConfig"]], "object_detection (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.OBJECT_DETECTION"]], "openai (abacusai.vectorstoretextencoder attribute)": [[82, "abacusai.VectorStoreTextEncoder.OPENAI"]], "optimization (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.OPTIMIZATION"]], "optimizationtrainingconfig (class in abacusai)": [[82, "abacusai.OptimizationTrainingConfig"]], "outputvariablemapping (class in abacusai)": [[82, "abacusai.OutputVariableMapping"]], "peaks_mean_absolute_error (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.PEAKS_MEAN_ABSOLUTE_ERROR"]], "percent_sampling (abacusai.samplingmethodtype attribute)": [[82, "abacusai.SamplingMethodType.PERCENT_SAMPLING"]], "personalization (abacusai.personalizationobjective attribute)": [[82, "abacusai.PersonalizationObjective.PERSONALIZATION"]], "personalization (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.PERSONALIZATION"]], "pointwise_accuracy (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.POINTWISE_ACCURACY"]], "precision (abacusai.nerobjective attribute)": [[82, "abacusai.NERObjective.PRECISION"]], "precision (abacusai.regressionobjective attribute)": [[82, "abacusai.RegressionObjective.PRECISION"]], "prediction_length (abacusai.forecastingdatasplittype attribute)": [[82, "abacusai.ForecastingDataSplitType.PREDICTION_LENGTH"]], "predictive_modeling (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.PREDICTIVE_MODELING"]], "pretrained_bert (abacusai.nermodeltype attribute)": [[82, "abacusai.NERModelType.PRETRAINED_BERT"]], "pretrained_models (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.PRETRAINED_MODELS"]], "pretrained_multilingual (abacusai.nermodeltype attribute)": [[82, "abacusai.NERModelType.PRETRAINED_MULTILINGUAL"]], "pretrained_roberta_27 (abacusai.nermodeltype attribute)": [[82, "abacusai.NERModelType.PRETRAINED_ROBERTA_27"]], "pretrained_roberta_43 (abacusai.nermodeltype attribute)": [[82, "abacusai.NERModelType.PRETRAINED_ROBERTA_43"]], "production (abacusai.personalizationtrainingmode attribute)": [[82, "abacusai.PersonalizationTrainingMode.PRODUCTION"]], "parsingconfig (class in abacusai)": [[82, "abacusai.ParsingConfig"]], "percentsamplingconfig (class in abacusai)": [[82, "abacusai.PercentSamplingConfig"]], "personalizationobjective (class in abacusai)": [[82, "abacusai.PersonalizationObjective"]], "personalizationtrainingconfig (class in abacusai)": [[82, "abacusai.PersonalizationTrainingConfig"]], "personalizationtrainingmode (class in abacusai)": [[82, "abacusai.PersonalizationTrainingMode"]], "predictionclient (class in abacusai)": [[82, "abacusai.PredictionClient"]], "problemtype (class in abacusai)": [[82, "abacusai.ProblemType"]], "pythonfunctionargument (class in abacusai)": [[82, "abacusai.PythonFunctionArgument"]], "pythonfunctionargumenttype (class in abacusai)": [[82, "abacusai.PythonFunctionArgumentType"]], "quadratic (abacusai.forecastingquanitlesextensionmethod attribute)": [[82, "abacusai.ForecastingQuanitlesExtensionMethod.QUADRATIC"]], "quantile (abacusai.regressiontargettransform attribute)": [[82, "abacusai.RegressionTargetTransform.QUANTILE"]], "quarter_end (abacusai.forecastingfrequency attribute)": [[82, "abacusai.ForecastingFrequency.QUARTER_END"]], "quarter_start (abacusai.forecastingfrequency attribute)": [[82, "abacusai.ForecastingFrequency.QUARTER_START"]], "random (abacusai.regressiontypeofsplit attribute)": [[82, "abacusai.RegressionTypeOfSplit.RANDOM"]], "rapid (abacusai.experimentationmode attribute)": [[82, "abacusai.ExperimentationMode.RAPID"]], "rapid (abacusai.regressiontreehpomode attribute)": [[82, "abacusai.RegressionTreeHPOMode.RAPID"]], "recall (abacusai.nerobjective attribute)": [[82, "abacusai.NERObjective.RECALL"]], "recall (abacusai.regressionobjective attribute)": [[82, "abacusai.RegressionObjective.RECALL"]], "resample (abacusai.regressionaugmentationstrategy attribute)": [[82, "abacusai.RegressionAugmentationStrategy.RESAMPLE"]], "rmse (abacusai.forecastingobjective attribute)": [[82, "abacusai.ForecastingObjective.RMSE"]], "rmse (abacusai.regressionobjective attribute)": [[82, "abacusai.RegressionObjective.RMSE"]], "robust (abacusai.forecastinglocalscaling attribute)": [[82, "abacusai.ForecastingLocalScaling.ROBUST"]], "root_mean_square_error (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.ROOT_MEAN_SQUARE_ERROR"]], "row_indicator_based (abacusai.regressiontypeofsplit attribute)": [[82, "abacusai.RegressionTypeOfSplit.ROW_INDICATOR_BASED"]], "r_squared_coefficient_of_determination (abacusai.regressionobjective attribute)": [[82, "abacusai.RegressionObjective.R_SQUARED_COEFFICIENT_OF_DETERMINATION"]], "readonlyclient (class in abacusai)": [[82, "abacusai.ReadOnlyClient"]], "regressionaugmentationstrategy (class in abacusai)": [[82, "abacusai.RegressionAugmentationStrategy"]], "regressionlossfunction (class in abacusai)": [[82, "abacusai.RegressionLossFunction"]], "regressionobjective (class in abacusai)": [[82, "abacusai.RegressionObjective"]], "regressiontargettransform (class in abacusai)": [[82, "abacusai.RegressionTargetTransform"]], "regressiontimesplitmethod (class in abacusai)": [[82, "abacusai.RegressionTimeSplitMethod"]], "regressiontrainingconfig (class in abacusai)": [[82, "abacusai.RegressionTrainingConfig"]], "regressiontreehpomode (class in abacusai)": [[82, "abacusai.RegressionTreeHPOMode"]], "regressiontypeofsplit (class in abacusai)": [[82, "abacusai.RegressionTypeOfSplit"]], "sentence_bert (abacusai.vectorstoretextencoder attribute)": [[82, "abacusai.VectorStoreTextEncoder.SENTENCE_BERT"]], "sentence_boundary_detection (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.SENTENCE_BOUNDARY_DETECTION"]], "sentiment_detection (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.SENTIMENT_DETECTION"]], "sliding_zscore (abacusai.forecastinglocalscaling attribute)": [[82, "abacusai.ForecastingLocalScaling.SLIDING_ZSCORE"]], "smote (abacusai.regressionaugmentationstrategy attribute)": [[82, "abacusai.RegressionAugmentationStrategy.SMOTE"]], "srmse (abacusai.forecastingobjective attribute)": [[82, "abacusai.ForecastingObjective.SRMSE"]], "stable_standardized_mean_absolute_percentage_error (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "streaming (abacusai.connectortype attribute)": [[82, "abacusai.ConnectorType.STREAMING"]], "string (abacusai.pythonfunctionargumenttype attribute)": [[82, "abacusai.PythonFunctionArgumentType.STRING"]], "samplingconfig (class in abacusai)": [[82, "abacusai.SamplingConfig"]], "samplingmethodtype (class in abacusai)": [[82, "abacusai.SamplingMethodType"]], "sentenceboundarydetectiontrainingconfig (class in abacusai)": [[82, "abacusai.SentenceBoundaryDetectionTrainingConfig"]], "sentimentdetectiontrainingconfig (class in abacusai)": [[82, "abacusai.SentimentDetectionTrainingConfig"]], "sentimenttype (class in abacusai)": [[82, "abacusai.SentimentType"]], "streamingclient (class in abacusai)": [[82, "abacusai.StreamingClient"]], "test_split_percentage_based (abacusai.regressiontimesplitmethod attribute)": [[82, "abacusai.RegressionTimeSplitMethod.TEST_SPLIT_PERCENTAGE_BASED"]], "test_start_timestamp_based (abacusai.regressiontimesplitmethod attribute)": [[82, "abacusai.RegressionTimeSplitMethod.TEST_START_TIMESTAMP_BASED"]], "text (abacusai.nlpdocumentformat attribute)": [[82, "abacusai.NLPDocumentFormat.TEXT"]], "theme_analysis (abacusai.problemtype attribute)": [[82, "abacusai.ProblemType.THEME_ANALYSIS"]], "thorough (abacusai.experimentationmode attribute)": [[82, "abacusai.ExperimentationMode.THOROUGH"]], "thorough (abacusai.regressiontreehpomode attribute)": [[82, "abacusai.RegressionTreeHPOMode.THOROUGH"]], "timestamp (abacusai.forecastingdatasplittype attribute)": [[82, "abacusai.ForecastingDataSplitType.TIMESTAMP"]], "timestamp_based (abacusai.regressiontypeofsplit attribute)": [[82, "abacusai.RegressionTypeOfSplit.TIMESTAMP_BASED"]], "time_window (abacusai.mergemode attribute)": [[82, "abacusai.MergeMode.TIME_WINDOW"]], "tokens (abacusai.nlpdocumentformat attribute)": [[82, "abacusai.NLPDocumentFormat.TOKENS"]], "tweedie (abacusai.regressionlossfunction attribute)": [[82, "abacusai.RegressionLossFunction.TWEEDIE"]], "themeanalysistrainingconfig (class in abacusai)": [[82, "abacusai.ThemeAnalysisTrainingConfig"]], "timewindowmergeconfig (class in abacusai)": [[82, "abacusai.TimeWindowMergeConfig"]], "trainingconfig (class in abacusai)": [[82, "abacusai.TrainingConfig"]], "uk (abacusai.holidaycalendars attribute)": [[82, "abacusai.HolidayCalendars.UK"]], "us (abacusai.holidaycalendars attribute)": [[82, "abacusai.HolidayCalendars.US"]], "valence (abacusai.sentimenttype attribute)": [[82, "abacusai.SentimentType.VALENCE"]], "vectorstoreconfig (class in abacusai)": [[82, "abacusai.VectorStoreConfig"]], "vectorstoretextencoder (class in abacusai)": [[82, "abacusai.VectorStoreTextEncoder"]], "wape (abacusai.forecastingobjective attribute)": [[82, "abacusai.ForecastingObjective.WAPE"]], "wape (abacusai.regressionobjective attribute)": [[82, "abacusai.RegressionObjective.WAPE"]], "weekly_monday_start (abacusai.forecastingfrequency attribute)": [[82, "abacusai.ForecastingFrequency.WEEKLY_MONDAY_START"]], "weekly_saturday_start (abacusai.forecastingfrequency attribute)": [[82, "abacusai.ForecastingFrequency.WEEKLY_SATURDAY_START"]], "weekly_sunday_start (abacusai.forecastingfrequency attribute)": [[82, "abacusai.ForecastingFrequency.WEEKLY_SUNDAY_START"]], "weibull (abacusai.forecastinglossfunction attribute)": [[82, "abacusai.ForecastingLossFunction.WEIBULL"]], "yearly (abacusai.forecastingfrequency attribute)": [[82, "abacusai.ForecastingFrequency.YEARLY"]], "yeo_johnson (abacusai.regressiontargettransform attribute)": [[82, "abacusai.RegressionTargetTransform.YEO_JOHNSON"]], "zeros (abacusai.clusteringimputationmethod attribute)": [[82, "abacusai.ClusteringImputationMethod.ZEROS"]], "zscore (abacusai.forecastinglocalscaling attribute)": [[82, "abacusai.ForecastingLocalScaling.ZSCORE"]], "_apiclassfactory (class in abacusai)": [[82, "abacusai._ApiClassFactory"]], "_featuregroupexportconfigfactory (class in abacusai)": [[82, "abacusai._FeatureGroupExportConfigFactory"]], "_mergeconfigfactory (class in abacusai)": [[82, "abacusai._MergeConfigFactory"]], "_samplingconfigfactory (class in abacusai)": [[82, "abacusai._SamplingConfigFactory"]], "_trainingconfigfactory (class in abacusai)": [[82, "abacusai._TrainingConfigFactory"]], "__eq__() (abacusai.apienum method)": [[82, "abacusai.ApiEnum.__eq__"]], "__hash__() (abacusai.apienum method)": [[82, "abacusai.ApiEnum.__hash__"]], "__post_init__() (abacusai.aiagenttrainingconfig method)": [[82, "abacusai.AIAgentTrainingConfig.__post_init__"]], "__post_init__() (abacusai.anomalydetectiontrainingconfig method)": [[82, "abacusai.AnomalyDetectionTrainingConfig.__post_init__"]], "__post_init__() (abacusai.apiclass method)": [[82, "abacusai.ApiClass.__post_init__"]], "__post_init__() (abacusai.chatllmtrainingconfig method)": [[82, "abacusai.ChatLLMTrainingConfig.__post_init__"]], "__post_init__() (abacusai.clusteringtimeseriestrainingconfig method)": [[82, "abacusai.ClusteringTimeseriesTrainingConfig.__post_init__"]], "__post_init__() (abacusai.clusteringtrainingconfig method)": [[82, "abacusai.ClusteringTrainingConfig.__post_init__"]], "__post_init__() (abacusai.cumulativeforecastingtrainingconfig method)": [[82, "abacusai.CumulativeForecastingTrainingConfig.__post_init__"]], "__post_init__() (abacusai.customalgorithmtrainingconfig method)": [[82, "abacusai.CustomAlgorithmTrainingConfig.__post_init__"]], "__post_init__() (abacusai.customtrainedmodeltrainingconfig method)": [[82, "abacusai.CustomTrainedModelTrainingConfig.__post_init__"]], "__post_init__() (abacusai.documentclassificationtrainingconfig method)": [[82, "abacusai.DocumentClassificationTrainingConfig.__post_init__"]], "__post_init__() (abacusai.documentsummarizationtrainingconfig method)": [[82, "abacusai.DocumentSummarizationTrainingConfig.__post_init__"]], "__post_init__() (abacusai.documentvisualizationtrainingconfig method)": [[82, "abacusai.DocumentVisualizationTrainingConfig.__post_init__"]], "__post_init__() (abacusai.forecastingtrainingconfig method)": [[82, "abacusai.ForecastingTrainingConfig.__post_init__"]], "__post_init__() (abacusai.mergeconfig method)": [[82, "abacusai.MergeConfig.__post_init__"]], "__post_init__() (abacusai.namedentityextractiontrainingconfig method)": [[82, "abacusai.NamedEntityExtractionTrainingConfig.__post_init__"]], "__post_init__() (abacusai.naturallanguagesearchtrainingconfig method)": [[82, "abacusai.NaturalLanguageSearchTrainingConfig.__post_init__"]], "__post_init__() (abacusai.optimizationtrainingconfig method)": [[82, "abacusai.OptimizationTrainingConfig.__post_init__"]], "__post_init__() (abacusai.personalizationtrainingconfig method)": [[82, "abacusai.PersonalizationTrainingConfig.__post_init__"]], "__post_init__() (abacusai.regressiontrainingconfig method)": [[82, "abacusai.RegressionTrainingConfig.__post_init__"]], "__post_init__() (abacusai.samplingconfig method)": [[82, "abacusai.SamplingConfig.__post_init__"]], "__post_init__() (abacusai.sentenceboundarydetectiontrainingconfig method)": [[82, "abacusai.SentenceBoundaryDetectionTrainingConfig.__post_init__"]], "__post_init__() (abacusai.sentimentdetectiontrainingconfig method)": [[82, "abacusai.SentimentDetectionTrainingConfig.__post_init__"]], "__post_init__() (abacusai.themeanalysistrainingconfig method)": [[82, "abacusai.ThemeAnalysisTrainingConfig.__post_init__"]], "__str__() (abacusai.apiexception method)": [[82, "abacusai.ApiException.__str__"]], "__version__ (in module abacusai)": [[82, "abacusai.__version__"]], "_call_aiagent_asyncapp_sync_message() (abacusai.apiclient method)": [[82, "abacusai.ApiClient._call_aiagent_asyncapp_sync_message"]], "_get_agent_async_app_caller() (abacusai.apiclient method)": [[82, "abacusai.ApiClient._get_agent_async_app_caller"]], "_get_agent_async_app_request_id() (abacusai.apiclient method)": [[82, "abacusai.ApiClient._get_agent_async_app_request_id"]], "_request_context (in module abacusai)": [[82, "abacusai._request_context"]], "_stream_llm_call() (abacusai.apiclient method)": [[82, "abacusai.ApiClient._stream_llm_call"]], "_support_kwargs (abacusai.apiclass attribute)": [[82, "abacusai.ApiClass._support_kwargs"]], "_support_kwargs (abacusai.trainingconfig attribute)": [[82, "abacusai.TrainingConfig._support_kwargs"]], "_upper_snake_case_keys (abacusai.apiclass attribute)": [[82, "abacusai.ApiClass._upper_snake_case_keys"]], "_upper_snake_case_keys (abacusai.trainingconfig attribute)": [[82, "abacusai.TrainingConfig._upper_snake_case_keys"]], "abacus_internal_model (abacusai.naturallanguagesearchtrainingconfig attribute)": [[82, "abacusai.NaturalLanguageSearchTrainingConfig.abacus_internal_model"]], "abacusai": [[82, "module-abacusai"]], "active_labels_column (abacusai.namedentityextractiontrainingconfig attribute)": [[82, "abacusai.NamedEntityExtractionTrainingConfig.active_labels_column"]], "active_labels_column (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.active_labels_column"]], "add_annotatable_feature() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.add_annotatable_feature"]], "add_annotation() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.add_annotation"]], "add_feature_group_annotation_label() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.add_feature_group_annotation_label"]], "add_feature_group_tag() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.add_feature_group_tag"]], "add_feature_group_to_project() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.add_feature_group_to_project"]], "add_feature_tag() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.add_feature_tag"]], "add_graph_to_dashboard() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.add_graph_to_dashboard"]], "add_multiple_user_item_interactions() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.add_multiple_user_item_interactions"]], "add_organization_group_permission() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.add_organization_group_permission"]], "add_organization_group_to_feature_group_modifiers() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.add_organization_group_to_feature_group_modifiers"]], "add_project_tags() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.add_project_tags"]], "add_time_features (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.add_time_features"]], "add_user_item_interaction() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.add_user_item_interaction"]], "add_user_to_feature_group_modifiers() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.add_user_to_feature_group_modifiers"]], "add_user_to_organization() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.add_user_to_organization"]], "add_user_to_organization_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.add_user_to_organization_group"]], "additional_forecast_keys (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.additional_forecast_keys"]], "additional_id_columns (abacusai.databaseconnectorexportconfig attribute)": [[82, "abacusai.DatabaseConnectorExportConfig.additional_id_columns"]], "algorithm (abacusai.trainingconfig attribute)": [[82, "abacusai.TrainingConfig.algorithm"]], "append_data() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.append_data"]], "append_data() (abacusai.streamingclient method)": [[82, "abacusai.StreamingClient.append_data"]], "append_multiple_data() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.append_multiple_data"]], "append_multiple_data() (abacusai.streamingclient method)": [[82, "abacusai.StreamingClient.append_multiple_data"]], "augmentation_strategy (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.augmentation_strategy"]], "backtesting_window_step_size (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.backtesting_window_step_size"]], "batch_renormalization (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.batch_renormalization"]], "batch_size (abacusai.documentclassificationtrainingconfig attribute)": [[82, "abacusai.DocumentClassificationTrainingConfig.batch_size"]], "batch_size (abacusai.documentsummarizationtrainingconfig attribute)": [[82, "abacusai.DocumentSummarizationTrainingConfig.batch_size"]], "batch_size (abacusai.documentvisualizationtrainingconfig attribute)": [[82, "abacusai.DocumentVisualizationTrainingConfig.batch_size"]], "batch_size (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.batch_size"]], "batch_size (abacusai.namedentityextractiontrainingconfig attribute)": [[82, "abacusai.NamedEntityExtractionTrainingConfig.batch_size"]], "batch_size (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.batch_size"]], "batch_size (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.batch_size"]], "batch_size (abacusai.sentenceboundarydetectiontrainingconfig attribute)": [[82, "abacusai.SentenceBoundaryDetectionTrainingConfig.batch_size"]], "batch_size (abacusai.sentimentdetectiontrainingconfig attribute)": [[82, "abacusai.SentimentDetectionTrainingConfig.batch_size"]], "cancel_upload() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.cancel_upload"]], "check_constraints() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.check_constraints"]], "check_constraints() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.check_constraints"]], "chunk_overlap_fraction (abacusai.naturallanguagesearchtrainingconfig attribute)": [[82, "abacusai.NaturalLanguageSearchTrainingConfig.chunk_overlap_fraction"]], "chunk_overlap_fraction (abacusai.vectorstoreconfig attribute)": [[82, "abacusai.VectorStoreConfig.chunk_overlap_fraction"]], "chunk_size (abacusai.vectorstoreconfig attribute)": [[82, "abacusai.VectorStoreConfig.chunk_size"]], "classify_image() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.classify_image"]], "classify_image() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.classify_image"]], "classify_pdf() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.classify_pdf"]], "classify_pdf() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.classify_pdf"]], "clear_agent_context() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.clear_agent_context"]], "compute_metrics (abacusai.sentimentdetectiontrainingconfig attribute)": [[82, "abacusai.SentimentDetectionTrainingConfig.compute_metrics"]], "compute_rerank_metrics (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.compute_rerank_metrics"]], "compute_session_metrics (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.compute_session_metrics"]], "concatenate_feature_group_data() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.concatenate_feature_group_data"]], "config_abstract_class (abacusai._apiclassfactory attribute)": [[82, "abacusai._ApiClassFactory.config_abstract_class"]], "config_abstract_class (abacusai._featuregroupexportconfigfactory attribute)": [[82, "abacusai._FeatureGroupExportConfigFactory.config_abstract_class"]], "config_abstract_class (abacusai._trainingconfigfactory attribute)": [[82, "abacusai._TrainingConfigFactory.config_abstract_class"]], "config_class_key (abacusai._apiclassfactory attribute)": [[82, "abacusai._ApiClassFactory.config_class_key"]], "config_class_key (abacusai._featuregroupexportconfigfactory attribute)": [[82, "abacusai._FeatureGroupExportConfigFactory.config_class_key"]], "config_class_key (abacusai._mergeconfigfactory attribute)": [[82, "abacusai._MergeConfigFactory.config_class_key"]], "config_class_key (abacusai._samplingconfigfactory attribute)": [[82, "abacusai._SamplingConfigFactory.config_class_key"]], "config_class_key (abacusai._trainingconfigfactory attribute)": [[82, "abacusai._TrainingConfigFactory.config_class_key"]], "config_class_map (abacusai._apiclassfactory attribute)": [[82, "abacusai._ApiClassFactory.config_class_map"]], "config_class_map (abacusai._featuregroupexportconfigfactory attribute)": [[82, "abacusai._FeatureGroupExportConfigFactory.config_class_map"]], "config_class_map (abacusai._mergeconfigfactory attribute)": [[82, "abacusai._MergeConfigFactory.config_class_map"]], "config_class_map (abacusai._samplingconfigfactory attribute)": [[82, "abacusai._SamplingConfigFactory.config_class_map"]], "config_class_map (abacusai._trainingconfigfactory attribute)": [[82, "abacusai._TrainingConfigFactory.config_class_map"]], "connector_type (abacusai.databaseconnectorexportconfig attribute)": [[82, "abacusai.DatabaseConnectorExportConfig.connector_type"]], "connector_type (abacusai.featuregroupexportconfig attribute)": [[82, "abacusai.FeatureGroupExportConfig.connector_type"]], "connector_type (abacusai.fileconnectorexportconfig attribute)": [[82, "abacusai.FileConnectorExportConfig.connector_type"]], "convolution_filters (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.convolution_filters"]], "convolutional_layers (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.convolutional_layers"]], "create_agent() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_agent"]], "create_agent_from_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_agent_from_function"]], "create_algorithm() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_algorithm"]], "create_algorithm_from_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_algorithm_from_function"]], "create_batch_prediction() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_batch_prediction"]], "create_chat_session() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_chat_session"]], "create_custom_loss_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_custom_loss_function"]], "create_custom_loss_function_with_source_code() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_custom_loss_function_with_source_code"]], "create_custom_metric() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_custom_metric"]], "create_custom_metric_from_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_custom_metric_from_function"]], "create_dataset_from_application_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_dataset_from_application_connector"]], "create_dataset_from_database_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_dataset_from_database_connector"]], "create_dataset_from_file_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_dataset_from_file_connector"]], "create_dataset_from_pandas() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_dataset_from_pandas"]], "create_dataset_from_streaming_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_dataset_from_streaming_connector"]], "create_dataset_from_upload() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_dataset_from_upload"]], "create_dataset_version_from_application_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_dataset_version_from_application_connector"]], "create_dataset_version_from_database_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_dataset_version_from_database_connector"]], "create_dataset_version_from_file_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_dataset_version_from_file_connector"]], "create_dataset_version_from_pandas() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_dataset_version_from_pandas"]], "create_dataset_version_from_upload() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_dataset_version_from_upload"]], "create_deployment() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_deployment"]], "create_deployment_conversation() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_deployment_conversation"]], "create_deployment_token() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_deployment_token"]], "create_deployment_webhook() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_deployment_webhook"]], "create_eda() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_eda"]], "create_feature() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_feature"]], "create_feature_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_feature_group"]], "create_feature_group_from_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_feature_group_from_function"]], "create_feature_group_from_pandas_df() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_feature_group_from_pandas_df"]], "create_feature_group_from_python_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_feature_group_from_python_function"]], "create_feature_group_from_spark_df() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_feature_group_from_spark_df"]], "create_feature_group_from_template() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_feature_group_from_template"]], "create_feature_group_template() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_feature_group_template"]], "create_feature_group_version() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_feature_group_version"]], "create_graph_dashboard() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_graph_dashboard"]], "create_merge_feature_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_merge_feature_group"]], "create_model_from_functions() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_model_from_functions"]], "create_model_from_python() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_model_from_python"]], "create_model_monitor() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_model_monitor"]], "create_module() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_module"]], "create_module_from_notebook() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_module_from_notebook"]], "create_monitor_alert() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_monitor_alert"]], "create_nested_feature() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_nested_feature"]], "create_nlp_drift_monitor() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_nlp_drift_monitor"]], "create_organization_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_organization_group"]], "create_pipeline() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_pipeline"]], "create_pipeline_step() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_pipeline_step"]], "create_pipeline_step_from_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_pipeline_step_from_function"]], "create_point_in_time_feature() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_point_in_time_feature"]], "create_point_in_time_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_point_in_time_group"]], "create_point_in_time_group_feature() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_point_in_time_group_feature"]], "create_project() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_project"]], "create_python_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_python_function"]], "create_refresh_policy() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_refresh_policy"]], "create_sampling_feature_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_sampling_feature_group"]], "create_snapshot_feature_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_snapshot_feature_group"]], "create_spark_df_from_feature_group_version() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_spark_df_from_feature_group_version"]], "create_streaming_dataset() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_streaming_dataset"]], "create_streaming_token() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_streaming_token"]], "create_train_test_data_split_feature_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_train_test_data_split_feature_group"]], "create_transform_feature_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_transform_feature_group"]], "create_vector_store() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_vector_store"]], "create_vector_store_version() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_vector_store_version"]], "create_vision_drift_monitor() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.create_vision_drift_monitor"]], "csv_delimiter (abacusai.parsingconfig attribute)": [[82, "abacusai.ParsingConfig.csv_delimiter"]], "cumulative_prediction_lengths (abacusai.cumulativeforecastingtrainingconfig attribute)": [[82, "abacusai.CumulativeForecastingTrainingConfig.cumulative_prediction_lengths"]], "custom_loss_functions (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.custom_loss_functions"]], "custom_loss_functions (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.custom_loss_functions"]], "custom_metrics (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.custom_metrics"]], "custom_metrics (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.custom_metrics"]], "data_columns (abacusai.databaseconnectorexportconfig attribute)": [[82, "abacusai.DatabaseConnectorExportConfig.data_columns"]], "data_split_feature_group_table_name (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.data_split_feature_group_table_name"]], "database_connector_id (abacusai.databaseconnectorexportconfig attribute)": [[82, "abacusai.DatabaseConnectorExportConfig.database_connector_id"]], "datetime_holiday_calendars (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.datetime_holiday_calendars"]], "delete_algorithm() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_algorithm"]], "delete_api_key() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_api_key"]], "delete_application_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_application_connector"]], "delete_batch_prediction() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_batch_prediction"]], "delete_custom_loss_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_custom_loss_function"]], "delete_custom_metric() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_custom_metric"]], "delete_database_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_database_connector"]], "delete_dataset() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_dataset"]], "delete_deployment() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_deployment"]], "delete_deployment_conversation() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_deployment_conversation"]], "delete_deployment_token() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_deployment_token"]], "delete_eda() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_eda"]], "delete_eda_version() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_eda_version"]], "delete_feature() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_feature"]], "delete_feature_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_feature_group"]], "delete_feature_group_template() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_feature_group_template"]], "delete_file_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_file_connector"]], "delete_graph_dashboard() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_graph_dashboard"]], "delete_graph_from_dashboard() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.delete_graph_from_dashboard"]], "delete_item_embeddings() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_item_embeddings"]], "delete_item_embeddings() (abacusai.streamingclient method)": [[82, "abacusai.StreamingClient.delete_item_embeddings"]], "delete_model() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_model"]], "delete_model_monitor() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_model_monitor"]], "delete_model_monitor_version() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_model_monitor_version"]], "delete_model_version() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_model_version"]], "delete_module() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_module"]], "delete_monitor_alert() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_monitor_alert"]], "delete_nested_feature() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_nested_feature"]], "delete_organization_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_organization_group"]], "delete_pipeline() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_pipeline"]], "delete_pipeline_step() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_pipeline_step"]], "delete_point_in_time_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_point_in_time_group"]], "delete_project() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_project"]], "delete_python_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_python_function"]], "delete_refresh_policy() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_refresh_policy"]], "delete_streaming_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_streaming_connector"]], "delete_streaming_token() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_streaming_token"]], "delete_vector_store() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_vector_store"]], "delete_webhook() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.delete_webhook"]], "describe_algorithm() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_algorithm"]], "describe_annotation() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.describe_annotation"]], "describe_async_feature_group_operation() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.describe_async_feature_group_operation"]], "describe_batch_prediction() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_batch_prediction"]], "describe_batch_prediction_version() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_batch_prediction_version"]], "describe_custom_loss_function() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_custom_loss_function"]], "describe_custom_metric() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_custom_metric"]], "describe_custom_metric_version() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_custom_metric_version"]], "describe_dataset() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_dataset"]], "describe_dataset_version() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_dataset_version"]], "describe_deployment() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_deployment"]], "describe_eda() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_eda"]], "describe_eda_version() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_eda_version"]], "describe_feature_group() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_feature_group"]], "describe_feature_group_by_table_name() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_feature_group_by_table_name"]], "describe_feature_group_export() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_feature_group_export"]], "describe_feature_group_template() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_feature_group_template"]], "describe_feature_group_version() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_feature_group_version"]], "describe_graph_dashboard() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_graph_dashboard"]], "describe_graph_for_dashboard() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_graph_for_dashboard"]], "describe_image() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.describe_image"]], "describe_image() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.describe_image"]], "describe_model() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_model"]], "describe_model_artifacts_export() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_model_artifacts_export"]], "describe_model_monitor() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_model_monitor"]], "describe_model_monitor_version() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_model_monitor_version"]], "describe_model_version() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_model_version"]], "describe_module() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_module"]], "describe_monitor_alert() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_monitor_alert"]], "describe_monitor_alert_version() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_monitor_alert_version"]], "describe_organization_group() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_organization_group"]], "describe_pipeline() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.describe_pipeline"]], "describe_pipeline_by_name() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.describe_pipeline_by_name"]], "describe_pipeline_step() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_pipeline_step"]], "describe_pipeline_step_by_name() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_pipeline_step_by_name"]], "describe_pipeline_version() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_pipeline_version"]], "describe_problem_type() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_problem_type"]], "describe_project() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_project"]], "describe_project_feature_group() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_project_feature_group"]], "describe_python_function() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_python_function"]], "describe_refresh_pipeline_run() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_refresh_pipeline_run"]], "describe_refresh_policy() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_refresh_policy"]], "describe_train_test_data_split_feature_group() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_train_test_data_split_feature_group"]], "describe_train_test_data_split_feature_group_version() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_train_test_data_split_feature_group_version"]], "describe_upload() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_upload"]], "describe_use_case_requirements() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_use_case_requirements"]], "describe_user() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_user"]], "describe_vector_store() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_vector_store"]], "describe_vector_store_by_name() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_vector_store_by_name"]], "describe_vector_store_version() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_vector_store_version"]], "describe_webhook() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.describe_webhook"]], "description (abacusai.aiagenttrainingconfig attribute)": [[82, "abacusai.AIAgentTrainingConfig.description"]], "detach_feature_group_from_template() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.detach_feature_group_from_template"]], "disable_gpu (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.disable_gpu"]], "disable_networks_without_analytic_quantiles (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.disable_networks_without_analytic_quantiles"]], "disable_test_val_fold (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.disable_test_val_fold"]], "disable_timestamp_scalar_features (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.disable_timestamp_scalar_features"]], "disable_transformer (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.disable_transformer"]], "docker_image_uri (abacusai.customtrainedmodeltrainingconfig attribute)": [[82, "abacusai.CustomTrainedModelTrainingConfig.docker_image_uri"]], "document_format (abacusai.namedentityextractiontrainingconfig attribute)": [[82, "abacusai.NamedEntityExtractionTrainingConfig.document_format"]], "download_batch_prediction_result_chunk() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.download_batch_prediction_result_chunk"]], "download_execute_feature_group_operation_result_part_chunk() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.download_execute_feature_group_operation_result_part_chunk"]], "downsample_item_popularity_percentile (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.downsample_item_popularity_percentile"]], "drop_original_categoricals (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.drop_original_categoricals"]], "dropout_rate (abacusai.documentclassificationtrainingconfig attribute)": [[82, "abacusai.DocumentClassificationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.documentsummarizationtrainingconfig attribute)": [[82, "abacusai.DocumentSummarizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.documentvisualizationtrainingconfig attribute)": [[82, "abacusai.DocumentVisualizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.namedentityextractiontrainingconfig attribute)": [[82, "abacusai.NamedEntityExtractionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.sentenceboundarydetectiontrainingconfig attribute)": [[82, "abacusai.SentenceBoundaryDetectionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.sentimentdetectiontrainingconfig attribute)": [[82, "abacusai.SentimentDetectionTrainingConfig.dropout_rate"]], "enable_clustering (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.enable_clustering"]], "enable_cold_start (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.enable_cold_start"]], "enable_feature_selection (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.enable_feature_selection"]], "enable_multiple_backtests (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.enable_multiple_backtests"]], "escape (abacusai.parsingconfig attribute)": [[82, "abacusai.ParsingConfig.escape"]], "evaluate_prompt() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.evaluate_prompt"]], "execute_agent() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.execute_agent"]], "execute_agent() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.execute_agent"]], "execute_async_feature_group_operation() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.execute_async_feature_group_operation"]], "execute_feature_group_sql() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.execute_feature_group_sql"]], "experimentation_mode (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.experimentation_mode"]], "explicit_time_split (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.explicit_time_split"]], "explore_lookback_hours (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.explore_lookback_hours"]], "export_custom_model_version() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.export_custom_model_version"]], "export_feature_group_version_to_console() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.export_feature_group_version_to_console"]], "export_feature_group_version_to_database_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.export_feature_group_version_to_database_connector"]], "export_feature_group_version_to_file_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.export_feature_group_version_to_file_connector"]], "export_file_format (abacusai.fileconnectorexportconfig attribute)": [[82, "abacusai.FileConnectorExportConfig.export_file_format"]], "export_model_artifact_as_feature_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.export_model_artifact_as_feature_group"]], "feature_name (abacusai.timewindowmergeconfig attribute)": [[82, "abacusai.TimeWindowMergeConfig.feature_name"]], "feature_selection_intensity (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.feature_selection_intensity"]], "file_path_with_schema (abacusai.parsingconfig attribute)": [[82, "abacusai.ParsingConfig.file_path_with_schema"]], "fill_missing_values (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.fill_missing_values"]], "filter_history (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.filter_history"]], "filter_items (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.filter_items"]], "force_prediction_length (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.force_prediction_length"]], "forecast_frequency (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.forecast_frequency"]], "from_dict() (abacusai.apiclass class method)": [[82, "abacusai.ApiClass.from_dict"]], "from_dict() (abacusai._apiclassfactory class method)": [[82, "abacusai._ApiClassFactory.from_dict"]], "full_data_retraining (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.full_data_retraining"]], "full_data_retraining (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.full_data_retraining"]], "generate_image() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.generate_image"]], "generate_image() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.generate_image"]], "generate_natural_language_explanation() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.generate_natural_language_explanation"]], "get_agent_context_chat_history() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_agent_context_chat_history"]], "get_alternative_assignments() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_alternative_assignments"]], "get_alternative_assignments() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_alternative_assignments"]], "get_annotations_status() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_annotations_status"]], "get_anomalies() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_anomalies"]], "get_anomalies() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_anomalies"]], "get_api_endpoint() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_api_endpoint"]], "get_assignments() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_assignments"]], "get_assignments() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_assignments"]], "get_batch_prediction_connector_errors() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_batch_prediction_connector_errors"]], "get_chat_response() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_chat_response"]], "get_chat_response() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_chat_response"]], "get_chat_session() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_chat_session"]], "get_classification() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_classification"]], "get_classification() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_classification"]], "get_cluster() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_cluster"]], "get_cluster() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_cluster"]], "get_collinearity_for_feature() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_collinearity_for_feature"]], "get_custom_train_function_info() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_custom_train_function_info"]], "get_database_connector_object_schema() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_database_connector_object_schema"]], "get_dataset_schema() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_dataset_schema"]], "get_dataset_version_metrics() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_dataset_version_metrics"]], "get_deployment_conversation() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_deployment_conversation"]], "get_docstore_document() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_docstore_document"]], "get_docstore_image() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_docstore_image"]], "get_document_to_annotate() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_document_to_annotate"]], "get_drift_for_feature() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_drift_for_feature"]], "get_eda_collinearity() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_eda_collinearity"]], "get_eda_data_consistency() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_eda_data_consistency"]], "get_eda_forecasting_analysis() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_eda_forecasting_analysis"]], "get_entailment() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_entailment"]], "get_entailment() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_entailment"]], "get_entities_from_pdf() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_entities_from_pdf"]], "get_entities_from_pdf() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_entities_from_pdf"]], "get_execute_feature_group_operation_result_part_count() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_execute_feature_group_operation_result_part_count"]], "get_feature_association() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_feature_association"]], "get_feature_group_export_connector_errors() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_feature_group_export_connector_errors"]], "get_feature_group_schema() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_feature_group_schema"]], "get_feature_group_version_export_download_url() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_feature_group_version_export_download_url"]], "get_feature_group_version_metrics() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_feature_group_version_metrics"]], "get_feature_importance_by_model_version() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_feature_importance_by_model_version"]], "get_file_connector_instructions() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_file_connector_instructions"]], "get_forecast() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_forecast"]], "get_forecast() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_forecast"]], "get_k_nearest() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_k_nearest"]], "get_k_nearest() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_k_nearest"]], "get_labels() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_labels"]], "get_labels() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_labels"]], "get_llm_parameters() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_llm_parameters"]], "get_materialization_logs() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_materialization_logs"]], "get_model_metrics() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_model_metrics"]], "get_model_monitor_chart_from_organization() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_model_monitor_chart_from_organization"]], "get_model_monitor_summary() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_model_monitor_summary"]], "get_model_monitor_summary_from_organization() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_model_monitor_summary_from_organization"]], "get_model_monitoring_logs() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_model_monitoring_logs"]], "get_model_training_types_for_deployment() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_model_training_types_for_deployment"]], "get_multiple_k_nearest() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_multiple_k_nearest"]], "get_multiple_k_nearest() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_multiple_k_nearest"]], "get_natural_language_explanation() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_natural_language_explanation"]], "get_notebook_cell_completion() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_notebook_cell_completion"]], "get_objects_from_image() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_objects_from_image"]], "get_objects_from_image() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_objects_from_image"]], "get_outliers_for_batch_prediction_feature() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_outliers_for_batch_prediction_feature"]], "get_outliers_for_feature() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_outliers_for_feature"]], "get_personalized_ranking() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_personalized_ranking"]], "get_personalized_ranking() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_personalized_ranking"]], "get_prediction_drift() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_prediction_drift"]], "get_project_feature_group_config() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_project_feature_group_config"]], "get_ranked_items() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_ranked_items"]], "get_ranked_items() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_ranked_items"]], "get_recent_feature_group_streamed_data() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_recent_feature_group_streamed_data"]], "get_recommendations() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_recommendations"]], "get_recommendations() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_recommendations"]], "get_related_items() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_related_items"]], "get_related_items() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_related_items"]], "get_search_results() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_search_results"]], "get_search_results() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_search_results"]], "get_sentiment() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_sentiment"]], "get_sentiment() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_sentiment"]], "get_step_version_logs() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_step_version_logs"]], "get_summary() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_summary"]], "get_summary() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.get_summary"]], "get_train_function_input() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_train_function_input"]], "get_train_function_input_from_model_version() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_train_function_input_from_model_version"]], "get_training_config_options() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.get_training_config_options"]], "get_training_data_logs() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_training_data_logs"]], "get_training_logs() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.get_training_logs"]], "handle_zeros_as_missing_values (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.handle_zeros_as_missing_values"]], "historical_frequency (abacusai.cumulativeforecastingtrainingconfig attribute)": [[82, "abacusai.CumulativeForecastingTrainingConfig.historical_frequency"]], "history_length (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.history_length"]], "id_column (abacusai.databaseconnectorexportconfig attribute)": [[82, "abacusai.DatabaseConnectorExportConfig.id_column"]], "ignore_datetime_features (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.ignore_datetime_features"]], "import_annotation_labels() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.import_annotation_labels"]], "import_module() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.import_module"]], "imputation (abacusai.clusteringtimeseriestrainingconfig attribute)": [[82, "abacusai.ClusteringTimeseriesTrainingConfig.imputation"]], "include_longformer (abacusai.namedentityextractiontrainingconfig attribute)": [[82, "abacusai.NamedEntityExtractionTrainingConfig.include_longformer"]], "index_fraction (abacusai.naturallanguagesearchtrainingconfig attribute)": [[82, "abacusai.NaturalLanguageSearchTrainingConfig.index_fraction"]], "index_output_path (abacusai.customtrainedmodeltrainingconfig attribute)": [[82, "abacusai.CustomTrainedModelTrainingConfig.index_output_path"]], "infer_feature_mappings() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.infer_feature_mappings"]], "initial_learning_rate (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.initial_learning_rate"]], "invalidate_streaming_feature_group_data() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.invalidate_streaming_feature_group_data"]], "is_anomaly() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.is_anomaly"]], "is_anomaly() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.is_anomaly"]], "is_multilingual (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.is_multilingual"]], "is_required (abacusai.pythonfunctionargument attribute)": [[82, "abacusai.PythonFunctionArgument.is_required"]], "item_attributes_weight_column (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.item_attributes_weight_column"]], "item_id_dropout (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.item_id_dropout"]], "k_fold_cross_validation (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.k_fold_cross_validation"]], "key_columns (abacusai.nsamplingconfig attribute)": [[82, "abacusai.NSamplingConfig.key_columns"]], "key_columns (abacusai.percentsamplingconfig attribute)": [[82, "abacusai.PercentSamplingConfig.key_columns"]], "kwargs (abacusai.trainingconfig attribute)": [[82, "abacusai.TrainingConfig.kwargs"]], "l2_regularization_factor (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.l2_regularization_factor"]], "larger_embeddings (abacusai.naturallanguagesearchtrainingconfig attribute)": [[82, "abacusai.NaturalLanguageSearchTrainingConfig.larger_embeddings"]], "list_algorithms() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_algorithms"]], "list_api_keys() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_api_keys"]], "list_application_connector_objects() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_application_connector_objects"]], "list_application_connectors() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_application_connectors"]], "list_batch_prediction_versions() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_batch_prediction_versions"]], "list_batch_predictions() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_batch_predictions"]], "list_builtin_algorithms() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.list_builtin_algorithms"]], "list_chat_sessions() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_chat_sessions"]], "list_custom_loss_functions() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_custom_loss_functions"]], "list_custom_metrics() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_custom_metrics"]], "list_database_connector_objects() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_database_connector_objects"]], "list_database_connectors() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_database_connectors"]], "list_dataset_versions() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_dataset_versions"]], "list_datasets() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_datasets"]], "list_deployment_conversations() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_deployment_conversations"]], "list_deployment_tokens() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_deployment_tokens"]], "list_deployment_webhooks() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_deployment_webhooks"]], "list_deployments() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_deployments"]], "list_eda() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_eda"]], "list_eda_versions() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_eda_versions"]], "list_feature_group_exports() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_feature_group_exports"]], "list_feature_group_modifiers() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_feature_group_modifiers"]], "list_feature_group_templates() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_feature_group_templates"]], "list_feature_group_versions() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_feature_group_versions"]], "list_feature_groups() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_feature_groups"]], "list_file_connectors() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_file_connectors"]], "list_graph_dashboards() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_graph_dashboards"]], "list_model_artifacts_exports() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_model_artifacts_exports"]], "list_model_monitor_versions() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_model_monitor_versions"]], "list_model_monitors() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_model_monitors"]], "list_model_versions() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_model_versions"]], "list_models() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_models"]], "list_modules() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_modules"]], "list_monitor_alert_versions_for_monitor_version() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_monitor_alert_versions_for_monitor_version"]], "list_monitor_alerts_for_monitor() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_monitor_alerts_for_monitor"]], "list_organization_groups() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_organization_groups"]], "list_organization_model_monitors() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_organization_model_monitors"]], "list_organization_users() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_organization_users"]], "list_pipeline_version_logs() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_pipeline_version_logs"]], "list_pipeline_versions() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.list_pipeline_versions"]], "list_pipelines() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_pipelines"]], "list_project_feature_group_templates() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_project_feature_group_templates"]], "list_project_feature_groups() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_project_feature_groups"]], "list_projects() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_projects"]], "list_python_function_feature_groups() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_python_function_feature_groups"]], "list_python_functions() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_python_functions"]], "list_refresh_pipeline_runs() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_refresh_pipeline_runs"]], "list_refresh_policies() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_refresh_policies"]], "list_streaming_connectors() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_streaming_connectors"]], "list_streaming_tokens() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_streaming_tokens"]], "list_uploads() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_uploads"]], "list_use_cases() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_use_cases"]], "list_vector_store_versions() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_vector_store_versions"]], "list_vector_stores() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.list_vector_stores"]], "llm_name (abacusai.chatllmtrainingconfig attribute)": [[82, "abacusai.ChatLLMTrainingConfig.llm_name"]], "local_scaling_mode (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.local_scaling_mode"]], "location (abacusai.fileconnectorexportconfig attribute)": [[82, "abacusai.FileConnectorExportConfig.location"]], "lookup_features() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.lookup_features"]], "lookup_features() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.lookup_features"]], "lookup_vector_store() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.lookup_vector_store"]], "loss_function (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.loss_function"]], "loss_function (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.loss_function"]], "loss_parameters (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.loss_parameters"]], "mark_upload_complete() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.mark_upload_complete"]], "max_catalog_size (abacusai.customtrainedmodeltrainingconfig attribute)": [[82, "abacusai.CustomTrainedModelTrainingConfig.max_catalog_size"]], "max_dimension (abacusai.customtrainedmodeltrainingconfig attribute)": [[82, "abacusai.CustomTrainedModelTrainingConfig.max_dimension"]], "max_history_length (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.max_history_length"]], "max_scale_context (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.max_scale_context"]], "max_text_words (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.max_text_words"]], "max_user_history_len_percentile (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.max_user_history_len_percentile"]], "merge_mode (abacusai.lastnmergeconfig attribute)": [[82, "abacusai.LastNMergeConfig.merge_mode"]], "merge_mode (abacusai.timewindowmergeconfig attribute)": [[82, "abacusai.TimeWindowMergeConfig.merge_mode"]], "min_categorical_count (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.min_categorical_count"]], "mixture_of_gaussians (abacusai.anomalydetectiontrainingconfig attribute)": [[82, "abacusai.AnomalyDetectionTrainingConfig.mixture_of_gaussians"]], "mode (abacusai.databaseconnectorexportconfig attribute)": [[82, "abacusai.DatabaseConnectorExportConfig.mode"]], "model_monitor_version_metric_data() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.model_monitor_version_metric_data"]], "name (abacusai.outputvariablemapping attribute)": [[82, "abacusai.OutputVariableMapping.name"]], "name (abacusai.pythonfunctionargument attribute)": [[82, "abacusai.PythonFunctionArgument.name"]], "ner_model_type (abacusai.namedentityextractiontrainingconfig attribute)": [[82, "abacusai.NamedEntityExtractionTrainingConfig.ner_model_type"]], "num_backtesting_windows (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.num_backtesting_windows"]], "num_clusters_selection (abacusai.clusteringtimeseriestrainingconfig attribute)": [[82, "abacusai.ClusteringTimeseriesTrainingConfig.num_clusters_selection"]], "num_clusters_selection (abacusai.clusteringtrainingconfig attribute)": [[82, "abacusai.ClusteringTrainingConfig.num_clusters_selection"]], "num_completion_tokens (abacusai.chatllmtrainingconfig attribute)": [[82, "abacusai.ChatLLMTrainingConfig.num_completion_tokens"]], "num_completion_tokens (abacusai.naturallanguagesearchtrainingconfig attribute)": [[82, "abacusai.NaturalLanguageSearchTrainingConfig.num_completion_tokens"]], "num_cv_folds (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.num_cv_folds"]], "num_versions (abacusai.lastnmergeconfig attribute)": [[82, "abacusai.LastNMergeConfig.num_versions"]], "number_of_samples (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.number_of_samples"]], "numeric_clipping_percentile (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.numeric_clipping_percentile"]], "object_name (abacusai.databaseconnectorexportconfig attribute)": [[82, "abacusai.DatabaseConnectorExportConfig.object_name"]], "objective (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.objective"]], "objective (abacusai.namedentityextractiontrainingconfig attribute)": [[82, "abacusai.NamedEntityExtractionTrainingConfig.objective"]], "objective (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.objective"]], "objective (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.objective"]], "pause_pipeline_refresh_schedule() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.pause_pipeline_refresh_schedule"]], "pause_refresh_policy() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.pause_refresh_policy"]], "perform_feature_selection (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.perform_feature_selection"]], "pipeline_variable (abacusai.pythonfunctionargument attribute)": [[82, "abacusai.PythonFunctionArgument.pipeline_variable"]], "predict() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.predict"]], "predict() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.predict"]], "predict_churn() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.predict_churn"]], "predict_churn() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.predict_churn"]], "predict_class() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.predict_class"]], "predict_class() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.predict_class"]], "predict_fraud() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.predict_fraud"]], "predict_fraud() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.predict_fraud"]], "predict_from_datasets() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.predict_from_datasets"]], "predict_from_datasets() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.predict_from_datasets"]], "predict_function_name (abacusai.customalgorithmtrainingconfig attribute)": [[82, "abacusai.CustomAlgorithmTrainingConfig.predict_function_name"]], "predict_language() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.predict_language"]], "predict_language() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.predict_language"]], "predict_lead() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.predict_lead"]], "predict_lead() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.predict_lead"]], "predict_many_function_name (abacusai.customalgorithmtrainingconfig attribute)": [[82, "abacusai.CustomAlgorithmTrainingConfig.predict_many_function_name"]], "predict_module_name (abacusai.customalgorithmtrainingconfig attribute)": [[82, "abacusai.CustomAlgorithmTrainingConfig.predict_module_name"]], "predict_multiple() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.predict_multiple"]], "predict_multiple() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.predict_multiple"]], "predict_raw() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.predict_raw"]], "predict_residuals (abacusai.cumulativeforecastingtrainingconfig attribute)": [[82, "abacusai.CumulativeForecastingTrainingConfig.predict_residuals"]], "predict_takeover() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.predict_takeover"]], "predict_takeover() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.predict_takeover"]], "predict_target() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.predict_target"]], "predict_target() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.predict_target"]], "predict_with_binary_data() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.predict_with_binary_data"]], "predict_with_binary_data() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.predict_with_binary_data"]], "prediction_length (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.prediction_length"]], "prediction_step_size (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.prediction_step_size"]], "pretrained_model_name (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.pretrained_model_name"]], "preview_feature_group_template_resolution() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.preview_feature_group_template_resolution"]], "probability_quantiles (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.probability_quantiles"]], "problem_type (abacusai.trainingconfig attribute)": [[82, "abacusai.TrainingConfig.problem_type"]], "quantiles_extension_method (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.quantiles_extension_method"]], "query_feature_group_code_generator() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.query_feature_group_code_generator"]], "rare_class_augmentation_threshold (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.rare_class_augmentation_threshold"]], "rebalance_classes (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.rebalance_classes"]], "recent_days_for_training (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.recent_days_for_training"]], "recurrent_layers (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.recurrent_layers"]], "recurrent_units (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.recurrent_units"]], "remove_concatenation_config() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.remove_concatenation_config"]], "remove_deployment_feature_group_export_output() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.remove_deployment_feature_group_export_output"]], "remove_feature_group_annotation_label() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.remove_feature_group_annotation_label"]], "remove_feature_group_from_project() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.remove_feature_group_from_project"]], "remove_feature_group_tag() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.remove_feature_group_tag"]], "remove_feature_tag() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.remove_feature_tag"]], "remove_organization_group_from_feature_group_modifiers() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.remove_organization_group_from_feature_group_modifiers"]], "remove_organization_group_permission() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.remove_organization_group_permission"]], "remove_project_tags() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.remove_project_tags"]], "remove_user_from_feature_group_modifiers() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.remove_user_from_feature_group_modifiers"]], "remove_user_from_organization() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.remove_user_from_organization"]], "remove_user_from_organization_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.remove_user_from_organization_group"]], "rename_application_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.rename_application_connector"]], "rename_database_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.rename_database_connector"]], "rename_deployment() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.rename_deployment"]], "rename_eda() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.rename_eda"]], "rename_model() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.rename_model"]], "rename_model_monitor() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.rename_model_monitor"]], "rename_project() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.rename_project"]], "rename_streaming_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.rename_streaming_connector"]], "render_feature_group_data_for_llm() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.render_feature_group_data_for_llm"]], "render_feature_groups_for_llm() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.render_feature_groups_for_llm"]], "rerun_eda() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.rerun_eda"]], "rerun_model_monitor() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.rerun_model_monitor"]], "resume_pipeline_refresh_schedule() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.resume_pipeline_refresh_schedule"]], "resume_refresh_policy() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.resume_refresh_policy"]], "retrain_model() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.retrain_model"]], "run_monitor_alert() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.run_monitor_alert"]], "run_pipeline() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.run_pipeline"]], "run_refresh_policy() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.run_refresh_policy"]], "sample_count (abacusai.nsamplingconfig attribute)": [[82, "abacusai.NSamplingConfig.sample_count"]], "sample_percent (abacusai.percentsamplingconfig attribute)": [[82, "abacusai.PercentSamplingConfig.sample_percent"]], "sample_weight (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.sample_weight"]], "sampling_method (abacusai.nsamplingconfig attribute)": [[82, "abacusai.NSamplingConfig.sampling_method"]], "sampling_method (abacusai.percentsamplingconfig attribute)": [[82, "abacusai.PercentSamplingConfig.sampling_method"]], "sampling_unit_keys (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.sampling_unit_keys"]], "score_image() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.score_image"]], "score_image() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.score_image"]], "search_chunk_size (abacusai.naturallanguagesearchtrainingconfig attribute)": [[82, "abacusai.NaturalLanguageSearchTrainingConfig.search_chunk_size"]], "search_feature_groups() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.search_feature_groups"]], "sentiment_type (abacusai.sentimentdetectiontrainingconfig attribute)": [[82, "abacusai.SentimentDetectionTrainingConfig.sentiment_type"]], "sequential_training (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.sequential_training"]], "service_port (abacusai.customtrainedmodeltrainingconfig attribute)": [[82, "abacusai.CustomTrainedModelTrainingConfig.service_port"]], "session_event_types (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.session_event_types"]], "set_agent_context_chat_history() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_agent_context_chat_history"]], "set_annotation_status_feature() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_annotation_status_feature"]], "set_auto_deployment() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_auto_deployment"]], "set_azure_blob_connection_string() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_azure_blob_connection_string"]], "set_batch_prediction_database_connector_output() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_batch_prediction_database_connector_output"]], "set_batch_prediction_dataset() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_batch_prediction_dataset"]], "set_batch_prediction_dataset_remap() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_batch_prediction_dataset_remap"]], "set_batch_prediction_feature_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_batch_prediction_feature_group"]], "set_batch_prediction_feature_group_output() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_batch_prediction_feature_group_output"]], "set_batch_prediction_file_connector_output() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_batch_prediction_file_connector_output"]], "set_batch_prediction_output_to_console() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_batch_prediction_output_to_console"]], "set_dataset_column_data_type() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_dataset_column_data_type"]], "set_dataset_database_connector_config() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.set_dataset_database_connector_config"]], "set_default_model_algorithm() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.set_default_model_algorithm"]], "set_default_organization_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_default_organization_group"]], "set_deployment_feature_group_export_database_connector_output() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_deployment_feature_group_export_database_connector_output"]], "set_deployment_feature_group_export_file_connector_output() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_deployment_feature_group_export_file_connector_output"]], "set_deployment_feature_group_version() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_deployment_feature_group_version"]], "set_deployment_model_version() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_deployment_model_version"]], "set_feature_as_annotatable_feature() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_feature_as_annotatable_feature"]], "set_feature_group_indexing_config() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_feature_group_indexing_config"]], "set_feature_group_merge_config() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_feature_group_merge_config"]], "set_feature_group_modifier_lock() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_feature_group_modifier_lock"]], "set_feature_group_sampling_config() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_feature_group_sampling_config"]], "set_feature_group_schema() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_feature_group_schema"]], "set_feature_group_transform_config() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_feature_group_transform_config"]], "set_feature_group_type() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_feature_group_type"]], "set_feature_mapping() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_feature_mapping"]], "set_feature_type() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_feature_type"]], "set_model_objective() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.set_model_objective"]], "set_model_prediction_params() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_model_prediction_params"]], "set_model_training_config() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_model_training_config"]], "set_natural_language_explanation() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_natural_language_explanation"]], "set_project_feature_group_config() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_project_feature_group_config"]], "set_streaming_retention_policy() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.set_streaming_retention_policy"]], "skip_input_transform (abacusai.cumulativeforecastingtrainingconfig attribute)": [[82, "abacusai.CumulativeForecastingTrainingConfig.skip_input_transform"]], "skip_local_scale_target (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.skip_local_scale_target"]], "skip_missing (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.skip_missing"]], "skip_target_transform (abacusai.cumulativeforecastingtrainingconfig attribute)": [[82, "abacusai.CumulativeForecastingTrainingConfig.skip_target_transform"]], "skip_timeseries_weight_scaling (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.skip_timeseries_weight_scaling"]], "smooth_history (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.smooth_history"]], "snapshot_streaming_data() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.snapshot_streaming_data"]], "sort_objective (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.sort_objective"]], "sort_objective (abacusai.namedentityextractiontrainingconfig attribute)": [[82, "abacusai.NamedEntityExtractionTrainingConfig.sort_objective"]], "sort_objective (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.sort_objective"]], "sort_objective (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.sort_objective"]], "spike_down (abacusai.anomalydetectiontrainingconfig attribute)": [[82, "abacusai.AnomalyDetectionTrainingConfig.spike_down"]], "spike_up (abacusai.anomalydetectiontrainingconfig attribute)": [[82, "abacusai.AnomalyDetectionTrainingConfig.spike_up"]], "start_batch_prediction() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.start_batch_prediction"]], "start_deployment() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.start_deployment"]], "stop_deployment() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.stop_deployment"]], "stream_message() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.stream_message"]], "streaming_evaluate_prompt() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.streaming_evaluate_prompt"]], "suggest_feature_group_template_for_feature_group() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.suggest_feature_group_template_for_feature_group"]], "symmetrize_quantiles (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.symmetrize_quantiles"]], "system_message (abacusai.chatllmtrainingconfig attribute)": [[82, "abacusai.ChatLLMTrainingConfig.system_message"]], "target_action_types (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.target_action_types"]], "target_action_weights (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.target_action_weights"]], "target_encode_categoricals (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.target_encode_categoricals"]], "target_transform (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.target_transform"]], "temperature (abacusai.chatllmtrainingconfig attribute)": [[82, "abacusai.ChatLLMTrainingConfig.temperature"]], "test_by_item (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.test_by_item"]], "test_last_items_length (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.test_last_items_length"]], "test_on_user_split (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.test_on_user_split"]], "test_row_indicator (abacusai.namedentityextractiontrainingconfig attribute)": [[82, "abacusai.NamedEntityExtractionTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.test_row_indicator"]], "test_split (abacusai.anomalydetectiontrainingconfig attribute)": [[82, "abacusai.AnomalyDetectionTrainingConfig.test_split"]], "test_split (abacusai.cumulativeforecastingtrainingconfig attribute)": [[82, "abacusai.CumulativeForecastingTrainingConfig.test_split"]], "test_split (abacusai.customalgorithmtrainingconfig attribute)": [[82, "abacusai.CustomAlgorithmTrainingConfig.test_split"]], "test_split (abacusai.documentclassificationtrainingconfig attribute)": [[82, "abacusai.DocumentClassificationTrainingConfig.test_split"]], "test_split (abacusai.documentsummarizationtrainingconfig attribute)": [[82, "abacusai.DocumentSummarizationTrainingConfig.test_split"]], "test_split (abacusai.documentvisualizationtrainingconfig attribute)": [[82, "abacusai.DocumentVisualizationTrainingConfig.test_split"]], "test_split (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.test_split"]], "test_split (abacusai.namedentityextractiontrainingconfig attribute)": [[82, "abacusai.NamedEntityExtractionTrainingConfig.test_split"]], "test_split (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.test_split"]], "test_split (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.test_split"]], "test_split (abacusai.sentenceboundarydetectiontrainingconfig attribute)": [[82, "abacusai.SentenceBoundaryDetectionTrainingConfig.test_split"]], "test_split (abacusai.sentimentdetectiontrainingconfig attribute)": [[82, "abacusai.SentimentDetectionTrainingConfig.test_split"]], "test_split_on_last_k_items (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.test_split_on_last_k_items"]], "test_splitting_timestamp (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.test_splitting_timestamp"]], "test_start (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.test_start"]], "test_window_length_hours (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.test_window_length_hours"]], "text_encoder (abacusai.vectorstoreconfig attribute)": [[82, "abacusai.VectorStoreConfig.text_encoder"]], "time_window_size_ms (abacusai.timewindowmergeconfig attribute)": [[82, "abacusai.TimeWindowMergeConfig.time_window_size_ms"]], "timeseries_loss_weight_column (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.timeseries_loss_weight_column"]], "timeseries_weight_column (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.timeseries_weight_column"]], "timestamp_based_splitting_column (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.timestamp_based_splitting_column"]], "timestamp_based_splitting_method (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.timestamp_based_splitting_method"]], "to_dict() (abacusai.apiclass method)": [[82, "abacusai.ApiClass.to_dict"]], "to_dict() (abacusai.databaseconnectorexportconfig method)": [[82, "abacusai.DatabaseConnectorExportConfig.to_dict"]], "to_dict() (abacusai.fileconnectorexportconfig method)": [[82, "abacusai.FileConnectorExportConfig.to_dict"]], "train_function_name (abacusai.customalgorithmtrainingconfig attribute)": [[82, "abacusai.CustomAlgorithmTrainingConfig.train_function_name"]], "train_model() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.train_model"]], "train_module_name (abacusai.customalgorithmtrainingconfig attribute)": [[82, "abacusai.CustomAlgorithmTrainingConfig.train_module_name"]], "training_input_tables (abacusai.customalgorithmtrainingconfig attribute)": [[82, "abacusai.CustomAlgorithmTrainingConfig.training_input_tables"]], "training_mode (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.training_mode"]], "training_point_overlap (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.training_point_overlap"]], "training_rows_downsample_ratio (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.training_rows_downsample_ratio"]], "training_start_date (abacusai.personalizationtrainingconfig attribute)": [[82, "abacusai.PersonalizationTrainingConfig.training_start_date"]], "transcribe_audio() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.transcribe_audio"]], "transcribe_audio() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.transcribe_audio"]], "transfer_style() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.transfer_style"]], "transfer_style() (abacusai.predictionclient method)": [[82, "abacusai.PredictionClient.transfer_style"]], "tree_hpo_mode (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.tree_hpo_mode"]], "trend_change (abacusai.anomalydetectiontrainingconfig attribute)": [[82, "abacusai.AnomalyDetectionTrainingConfig.trend_change"]], "type_of_split (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.type_of_split"]], "type_of_split (abacusai.regressiontrainingconfig attribute)": [[82, "abacusai.RegressionTrainingConfig.type_of_split"]], "underprediction_weight (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.underprediction_weight"]], "unset_feature_as_annotatable_feature() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.unset_feature_as_annotatable_feature"]], "unset_pipeline_refresh_schedule() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.unset_pipeline_refresh_schedule"]], "update_agent() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_agent"]], "update_agent_with_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_agent_with_function"]], "update_algorithm() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_algorithm"]], "update_algorithm_from_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_algorithm_from_function"]], "update_annotation_status() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_annotation_status"]], "update_batch_prediction() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_batch_prediction"]], "update_custom_loss_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_custom_loss_function"]], "update_custom_loss_function_with_source_code() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_custom_loss_function_with_source_code"]], "update_custom_metric() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_custom_metric"]], "update_custom_metric_from_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_custom_metric_from_function"]], "update_dataset_feature_group_feature_expression() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_dataset_feature_group_feature_expression"]], "update_deployment() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_deployment"]], "update_feature() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_feature"]], "update_feature_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_feature_group"]], "update_feature_group_from_pandas_df() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_feature_group_from_pandas_df"]], "update_feature_group_from_spark_df() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_feature_group_from_spark_df"]], "update_feature_group_function_definition() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_feature_group_function_definition"]], "update_feature_group_git() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_feature_group_git"]], "update_feature_group_python_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_feature_group_python_function"]], "update_feature_group_python_function_bindings() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_feature_group_python_function_bindings"]], "update_feature_group_sql_definition() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_feature_group_sql_definition"]], "update_feature_group_template() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_feature_group_template"]], "update_feature_group_template_bindings() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_feature_group_template_bindings"]], "update_feature_group_zip() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_feature_group_zip"]], "update_graph_dashboard() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_graph_dashboard"]], "update_graph_to_dashboard() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_graph_to_dashboard"]], "update_module() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_module"]], "update_module_from_notebook() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_module_from_notebook"]], "update_monitor_alert() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_monitor_alert"]], "update_nested_feature() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_nested_feature"]], "update_pipeline() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_pipeline"]], "update_pipeline_step() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_pipeline_step"]], "update_pipeline_step_from_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_pipeline_step_from_function"]], "update_point_in_time_feature() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_point_in_time_feature"]], "update_point_in_time_group() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_point_in_time_group"]], "update_point_in_time_group_feature() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_point_in_time_group_feature"]], "update_python_function() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_python_function"]], "update_python_function_code() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_python_function_code"]], "update_python_model() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_python_model"]], "update_python_model_git() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_python_model_git"]], "update_python_model_zip() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_python_model_zip"]], "update_refresh_policy() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_refresh_policy"]], "update_vector_store() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_vector_store"]], "update_webhook() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.update_webhook"]], "upload_part() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.upload_part"]], "upsert_data() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.upsert_data"]], "upsert_data() (abacusai.streamingclient method)": [[82, "abacusai.StreamingClient.upsert_data"]], "upsert_item_attributes() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.upsert_item_attributes"]], "upsert_item_embeddings() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.upsert_item_embeddings"]], "upsert_item_embeddings() (abacusai.streamingclient method)": [[82, "abacusai.StreamingClient.upsert_item_embeddings"]], "upsert_multiple_data() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.upsert_multiple_data"]], "upsert_multiple_data() (abacusai.streamingclient method)": [[82, "abacusai.StreamingClient.upsert_multiple_data"]], "upsert_multiple_item_attributes() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.upsert_multiple_item_attributes"]], "upsert_multiple_item_embeddings() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.upsert_multiple_item_embeddings"]], "upsert_multiple_item_embeddings() (abacusai.streamingclient method)": [[82, "abacusai.StreamingClient.upsert_multiple_item_embeddings"]], "upsert_multiple_user_attributes() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.upsert_multiple_user_attributes"]], "upsert_user_attributes() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.upsert_user_attributes"]], "use_all_item_totals (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.use_all_item_totals"]], "use_item_id (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.use_item_id"]], "use_item_weights_in_objective (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.use_item_weights_in_objective"]], "use_log_transforms (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.use_log_transforms"]], "use_timeseries_weights_in_objective (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.use_timeseries_weights_in_objective"]], "validate_project() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.validate_project"]], "value (abacusai.pythonfunctionargument attribute)": [[82, "abacusai.PythonFunctionArgument.value"]], "value_high (abacusai.anomalydetectiontrainingconfig attribute)": [[82, "abacusai.AnomalyDetectionTrainingConfig.value_high"]], "variable_type (abacusai.outputvariablemapping attribute)": [[82, "abacusai.OutputVariableMapping.variable_type"]], "variable_type (abacusai.pythonfunctionargument attribute)": [[82, "abacusai.PythonFunctionArgument.variable_type"]], "variational_autoencoder (abacusai.anomalydetectiontrainingconfig attribute)": [[82, "abacusai.AnomalyDetectionTrainingConfig.variational_autoencoder"]], "vector_stores (abacusai.chatllmtrainingconfig attribute)": [[82, "abacusai.ChatLLMTrainingConfig.vector_stores"]], "verify_and_describe_annotation() (abacusai.readonlyclient method)": [[82, "abacusai.ReadOnlyClient.verify_and_describe_annotation"]], "verify_application_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.verify_application_connector"]], "verify_database_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.verify_database_connector"]], "verify_file_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.verify_file_connector"]], "verify_streaming_connector() (abacusai.apiclient method)": [[82, "abacusai.ApiClient.verify_streaming_connector"]], "zero_predictor (abacusai.forecastingtrainingconfig attribute)": [[82, "abacusai.ForecastingTrainingConfig.zero_predictor"]], "zero_shot_hypotheses (abacusai.documentclassificationtrainingconfig attribute)": [[82, "abacusai.DocumentClassificationTrainingConfig.zero_shot_hypotheses"]], "indexingconfig (class in abacusai.indexing_config)": [[83, "abacusai.indexing_config.IndexingConfig"]], "__repr__() (abacusai.indexing_config.indexingconfig method)": [[83, "abacusai.indexing_config.IndexingConfig.__repr__"]], "abacusai.indexing_config": [[83, "module-abacusai.indexing_config"]], "to_dict() (abacusai.indexing_config.indexingconfig method)": [[83, "abacusai.indexing_config.IndexingConfig.to_dict"]], "inferredfeaturemappings (class in abacusai.inferred_feature_mappings)": [[84, "abacusai.inferred_feature_mappings.InferredFeatureMappings"]], "__repr__() (abacusai.inferred_feature_mappings.inferredfeaturemappings method)": [[84, "abacusai.inferred_feature_mappings.InferredFeatureMappings.__repr__"]], "abacusai.inferred_feature_mappings": [[84, "module-abacusai.inferred_feature_mappings"]], "to_dict() (abacusai.inferred_feature_mappings.inferredfeaturemappings method)": [[84, "abacusai.inferred_feature_mappings.InferredFeatureMappings.to_dict"]], "itemstatistics (class in abacusai.item_statistics)": [[85, "abacusai.item_statistics.ItemStatistics"]], "__repr__() (abacusai.item_statistics.itemstatistics method)": [[85, "abacusai.item_statistics.ItemStatistics.__repr__"]], "abacusai.item_statistics": [[85, "module-abacusai.item_statistics"]], "to_dict() (abacusai.item_statistics.itemstatistics method)": [[85, "abacusai.item_statistics.ItemStatistics.to_dict"]], "llmcodeblock (class in abacusai.llm_code_block)": [[86, "abacusai.llm_code_block.LlmCodeBlock"]], "__repr__() (abacusai.llm_code_block.llmcodeblock method)": [[86, "abacusai.llm_code_block.LlmCodeBlock.__repr__"]], "abacusai.llm_code_block": [[86, "module-abacusai.llm_code_block"]], "to_dict() (abacusai.llm_code_block.llmcodeblock method)": [[86, "abacusai.llm_code_block.LlmCodeBlock.to_dict"]], "llminput (class in abacusai.llm_input)": [[87, "abacusai.llm_input.LlmInput"]], "__repr__() (abacusai.llm_input.llminput method)": [[87, "abacusai.llm_input.LlmInput.__repr__"]], "abacusai.llm_input": [[87, "module-abacusai.llm_input"]], "to_dict() (abacusai.llm_input.llminput method)": [[87, "abacusai.llm_input.LlmInput.to_dict"]], "llmparameters (class in abacusai.llm_parameters)": [[88, "abacusai.llm_parameters.LlmParameters"]], "__repr__() (abacusai.llm_parameters.llmparameters method)": [[88, "abacusai.llm_parameters.LlmParameters.__repr__"]], "abacusai.llm_parameters": [[88, "module-abacusai.llm_parameters"]], "to_dict() (abacusai.llm_parameters.llmparameters method)": [[88, "abacusai.llm_parameters.LlmParameters.to_dict"]], "llmresponse (class in abacusai.llm_response)": [[89, "abacusai.llm_response.LlmResponse"]], "__repr__() (abacusai.llm_response.llmresponse method)": [[89, "abacusai.llm_response.LlmResponse.__repr__"]], "abacusai.llm_response": [[89, "module-abacusai.llm_response"]], "to_dict() (abacusai.llm_response.llmresponse method)": [[89, "abacusai.llm_response.LlmResponse.to_dict"]], "model (class in abacusai.model)": [[90, "abacusai.model.Model"]], "__repr__() (abacusai.model.model method)": [[90, "abacusai.model.Model.__repr__"]], "abacusai.model": [[90, "module-abacusai.model"]], "create_refresh_policy() (abacusai.model.model method)": [[90, "abacusai.model.Model.create_refresh_policy"]], "delete() (abacusai.model.model method)": [[90, "abacusai.model.Model.delete"]], "describe() (abacusai.model.model method)": [[90, "abacusai.model.Model.describe"]], "describe_train_test_data_split_feature_group() (abacusai.model.model method)": [[90, "abacusai.model.Model.describe_train_test_data_split_feature_group"]], "get_metrics() (abacusai.model.model method)": [[90, "abacusai.model.Model.get_metrics"]], "get_status() (abacusai.model.model method)": [[90, "abacusai.model.Model.get_status"]], "get_train_test_feature_group_as_pandas() (abacusai.model.model method)": [[90, "abacusai.model.Model.get_train_test_feature_group_as_pandas"]], "get_training_types_for_deployment() (abacusai.model.model method)": [[90, "abacusai.model.Model.get_training_types_for_deployment"]], "list_artifacts_exports() (abacusai.model.model method)": [[90, "abacusai.model.Model.list_artifacts_exports"]], "list_refresh_policies() (abacusai.model.model method)": [[90, "abacusai.model.Model.list_refresh_policies"]], "list_versions() (abacusai.model.model method)": [[90, "abacusai.model.Model.list_versions"]], "refresh() (abacusai.model.model method)": [[90, "abacusai.model.Model.refresh"]], "rename() (abacusai.model.model method)": [[90, "abacusai.model.Model.rename"]], "retrain() (abacusai.model.model method)": [[90, "abacusai.model.Model.retrain"]], "set_default_algorithm() (abacusai.model.model method)": [[90, "abacusai.model.Model.set_default_algorithm"]], "set_prediction_params() (abacusai.model.model method)": [[90, "abacusai.model.Model.set_prediction_params"]], "set_training_config() (abacusai.model.model method)": [[90, "abacusai.model.Model.set_training_config"]], "to_dict() (abacusai.model.model method)": [[90, "abacusai.model.Model.to_dict"]], "update_agent() (abacusai.model.model method)": [[90, "abacusai.model.Model.update_agent"]], "update_python() (abacusai.model.model method)": [[90, "abacusai.model.Model.update_python"]], "update_python_git() (abacusai.model.model method)": [[90, "abacusai.model.Model.update_python_git"]], "update_python_zip() (abacusai.model.model method)": [[90, "abacusai.model.Model.update_python_zip"]], "wait_for_evaluation() (abacusai.model.model method)": [[90, "abacusai.model.Model.wait_for_evaluation"]], "wait_for_full_automl() (abacusai.model.model method)": [[90, "abacusai.model.Model.wait_for_full_automl"]], "wait_for_publish() (abacusai.model.model method)": [[90, "abacusai.model.Model.wait_for_publish"]], "wait_for_training() (abacusai.model.model method)": [[90, "abacusai.model.Model.wait_for_training"]], "modelartifactsexport (class in abacusai.model_artifacts_export)": [[91, "abacusai.model_artifacts_export.ModelArtifactsExport"]], "__repr__() (abacusai.model_artifacts_export.modelartifactsexport method)": [[91, "abacusai.model_artifacts_export.ModelArtifactsExport.__repr__"]], "abacusai.model_artifacts_export": [[91, "module-abacusai.model_artifacts_export"]], "describe() (abacusai.model_artifacts_export.modelartifactsexport method)": [[91, "abacusai.model_artifacts_export.ModelArtifactsExport.describe"]], "get_status() (abacusai.model_artifacts_export.modelartifactsexport method)": [[91, "abacusai.model_artifacts_export.ModelArtifactsExport.get_status"]], "refresh() (abacusai.model_artifacts_export.modelartifactsexport method)": [[91, "abacusai.model_artifacts_export.ModelArtifactsExport.refresh"]], "to_dict() (abacusai.model_artifacts_export.modelartifactsexport method)": [[91, "abacusai.model_artifacts_export.ModelArtifactsExport.to_dict"]], "wait_for_results() (abacusai.model_artifacts_export.modelartifactsexport method)": [[91, "abacusai.model_artifacts_export.ModelArtifactsExport.wait_for_results"]], "modelblueprintexport (class in abacusai.model_blueprint_export)": [[92, "abacusai.model_blueprint_export.ModelBlueprintExport"]], "__repr__() (abacusai.model_blueprint_export.modelblueprintexport method)": [[92, "abacusai.model_blueprint_export.ModelBlueprintExport.__repr__"]], "abacusai.model_blueprint_export": [[92, "module-abacusai.model_blueprint_export"]], "to_dict() (abacusai.model_blueprint_export.modelblueprintexport method)": [[92, "abacusai.model_blueprint_export.ModelBlueprintExport.to_dict"]], "modelblueprintstage (class in abacusai.model_blueprint_stage)": [[93, "abacusai.model_blueprint_stage.ModelBlueprintStage"]], "__repr__() (abacusai.model_blueprint_stage.modelblueprintstage method)": [[93, "abacusai.model_blueprint_stage.ModelBlueprintStage.__repr__"]], "abacusai.model_blueprint_stage": [[93, "module-abacusai.model_blueprint_stage"]], "to_dict() (abacusai.model_blueprint_stage.modelblueprintstage method)": [[93, "abacusai.model_blueprint_stage.ModelBlueprintStage.to_dict"]], "modellocation (class in abacusai.model_location)": [[94, "abacusai.model_location.ModelLocation"]], "__repr__() (abacusai.model_location.modellocation method)": [[94, "abacusai.model_location.ModelLocation.__repr__"]], "abacusai.model_location": [[94, "module-abacusai.model_location"]], "to_dict() (abacusai.model_location.modellocation method)": [[94, "abacusai.model_location.ModelLocation.to_dict"]], "modelmetrics (class in abacusai.model_metrics)": [[95, "abacusai.model_metrics.ModelMetrics"]], "__repr__() (abacusai.model_metrics.modelmetrics method)": [[95, "abacusai.model_metrics.ModelMetrics.__repr__"]], "abacusai.model_metrics": [[95, "module-abacusai.model_metrics"]], "to_dict() (abacusai.model_metrics.modelmetrics method)": [[95, "abacusai.model_metrics.ModelMetrics.to_dict"]], "modelmonitor (class in abacusai.model_monitor)": [[96, "abacusai.model_monitor.ModelMonitor"]], "__repr__() (abacusai.model_monitor.modelmonitor method)": [[96, "abacusai.model_monitor.ModelMonitor.__repr__"]], "abacusai.model_monitor": [[96, "module-abacusai.model_monitor"]], "delete() (abacusai.model_monitor.modelmonitor method)": [[96, "abacusai.model_monitor.ModelMonitor.delete"]], "describe() (abacusai.model_monitor.modelmonitor method)": [[96, "abacusai.model_monitor.ModelMonitor.describe"]], "get_summary() (abacusai.model_monitor.modelmonitor method)": [[96, "abacusai.model_monitor.ModelMonitor.get_summary"]], "list_monitor_alerts_for_monitor() (abacusai.model_monitor.modelmonitor method)": [[96, "abacusai.model_monitor.ModelMonitor.list_monitor_alerts_for_monitor"]], "list_versions() (abacusai.model_monitor.modelmonitor method)": [[96, "abacusai.model_monitor.ModelMonitor.list_versions"]], "refresh() (abacusai.model_monitor.modelmonitor method)": [[96, "abacusai.model_monitor.ModelMonitor.refresh"]], "rename() (abacusai.model_monitor.modelmonitor method)": [[96, "abacusai.model_monitor.ModelMonitor.rename"]], "rerun() (abacusai.model_monitor.modelmonitor method)": [[96, "abacusai.model_monitor.ModelMonitor.rerun"]], "to_dict() (abacusai.model_monitor.modelmonitor method)": [[96, "abacusai.model_monitor.ModelMonitor.to_dict"]], "modelmonitororgsummary (class in abacusai.model_monitor_org_summary)": [[97, "abacusai.model_monitor_org_summary.ModelMonitorOrgSummary"]], "__repr__() (abacusai.model_monitor_org_summary.modelmonitororgsummary method)": [[97, "abacusai.model_monitor_org_summary.ModelMonitorOrgSummary.__repr__"]], "abacusai.model_monitor_org_summary": [[97, "module-abacusai.model_monitor_org_summary"]], "to_dict() (abacusai.model_monitor_org_summary.modelmonitororgsummary method)": [[97, "abacusai.model_monitor_org_summary.ModelMonitorOrgSummary.to_dict"]], "modelmonitorsummary (class in abacusai.model_monitor_summary)": [[98, "abacusai.model_monitor_summary.ModelMonitorSummary"]], "__repr__() (abacusai.model_monitor_summary.modelmonitorsummary method)": [[98, "abacusai.model_monitor_summary.ModelMonitorSummary.__repr__"]], "abacusai.model_monitor_summary": [[98, "module-abacusai.model_monitor_summary"]], "to_dict() (abacusai.model_monitor_summary.modelmonitorsummary method)": [[98, "abacusai.model_monitor_summary.ModelMonitorSummary.to_dict"]], "modelmonitorsummaryfromorg (class in abacusai.model_monitor_summary_from_org)": [[99, "abacusai.model_monitor_summary_from_org.ModelMonitorSummaryFromOrg"]], "__repr__() (abacusai.model_monitor_summary_from_org.modelmonitorsummaryfromorg method)": [[99, "abacusai.model_monitor_summary_from_org.ModelMonitorSummaryFromOrg.__repr__"]], "abacusai.model_monitor_summary_from_org": [[99, "module-abacusai.model_monitor_summary_from_org"]], "to_dict() (abacusai.model_monitor_summary_from_org.modelmonitorsummaryfromorg method)": [[99, "abacusai.model_monitor_summary_from_org.ModelMonitorSummaryFromOrg.to_dict"]], "modelmonitorversion (class in abacusai.model_monitor_version)": [[100, "abacusai.model_monitor_version.ModelMonitorVersion"]], "__repr__() (abacusai.model_monitor_version.modelmonitorversion method)": [[100, "abacusai.model_monitor_version.ModelMonitorVersion.__repr__"]], "abacusai.model_monitor_version": [[100, "module-abacusai.model_monitor_version"]], "delete() (abacusai.model_monitor_version.modelmonitorversion method)": [[100, "abacusai.model_monitor_version.ModelMonitorVersion.delete"]], "describe() (abacusai.model_monitor_version.modelmonitorversion method)": [[100, "abacusai.model_monitor_version.ModelMonitorVersion.describe"]], "get_drift_for_feature() (abacusai.model_monitor_version.modelmonitorversion method)": [[100, "abacusai.model_monitor_version.ModelMonitorVersion.get_drift_for_feature"]], "get_model_monitoring_logs() (abacusai.model_monitor_version.modelmonitorversion method)": [[100, "abacusai.model_monitor_version.ModelMonitorVersion.get_model_monitoring_logs"]], "get_outliers_for_feature() (abacusai.model_monitor_version.modelmonitorversion method)": [[100, "abacusai.model_monitor_version.ModelMonitorVersion.get_outliers_for_feature"]], "get_prediction_drift() (abacusai.model_monitor_version.modelmonitorversion method)": [[100, "abacusai.model_monitor_version.ModelMonitorVersion.get_prediction_drift"]], "get_status() (abacusai.model_monitor_version.modelmonitorversion method)": [[100, "abacusai.model_monitor_version.ModelMonitorVersion.get_status"]], "list_monitor_alert_versions_for_monitor_version() (abacusai.model_monitor_version.modelmonitorversion method)": [[100, "abacusai.model_monitor_version.ModelMonitorVersion.list_monitor_alert_versions_for_monitor_version"]], "metric_data() (abacusai.model_monitor_version.modelmonitorversion method)": [[100, "abacusai.model_monitor_version.ModelMonitorVersion.metric_data"]], "refresh() (abacusai.model_monitor_version.modelmonitorversion method)": [[100, "abacusai.model_monitor_version.ModelMonitorVersion.refresh"]], "to_dict() (abacusai.model_monitor_version.modelmonitorversion method)": [[100, "abacusai.model_monitor_version.ModelMonitorVersion.to_dict"]], "wait_for_monitor() (abacusai.model_monitor_version.modelmonitorversion method)": [[100, "abacusai.model_monitor_version.ModelMonitorVersion.wait_for_monitor"]], "modelmonitorversionmetricdata (class in abacusai.model_monitor_version_metric_data)": [[101, "abacusai.model_monitor_version_metric_data.ModelMonitorVersionMetricData"]], "__repr__() (abacusai.model_monitor_version_metric_data.modelmonitorversionmetricdata method)": [[101, "abacusai.model_monitor_version_metric_data.ModelMonitorVersionMetricData.__repr__"]], "abacusai.model_monitor_version_metric_data": [[101, "module-abacusai.model_monitor_version_metric_data"]], "to_dict() (abacusai.model_monitor_version_metric_data.modelmonitorversionmetricdata method)": [[101, "abacusai.model_monitor_version_metric_data.ModelMonitorVersionMetricData.to_dict"]], "modeltrainingtypefordeployment (class in abacusai.model_training_type_for_deployment)": [[102, "abacusai.model_training_type_for_deployment.ModelTrainingTypeForDeployment"]], "__repr__() (abacusai.model_training_type_for_deployment.modeltrainingtypefordeployment method)": [[102, "abacusai.model_training_type_for_deployment.ModelTrainingTypeForDeployment.__repr__"]], "abacusai.model_training_type_for_deployment": [[102, "module-abacusai.model_training_type_for_deployment"]], "to_dict() (abacusai.model_training_type_for_deployment.modeltrainingtypefordeployment method)": [[102, "abacusai.model_training_type_for_deployment.ModelTrainingTypeForDeployment.to_dict"]], "modelupload (class in abacusai.model_upload)": [[103, "abacusai.model_upload.ModelUpload"]], "__repr__() (abacusai.model_upload.modelupload method)": [[103, "abacusai.model_upload.ModelUpload.__repr__"]], "abacusai.model_upload": [[103, "module-abacusai.model_upload"]], "to_dict() (abacusai.model_upload.modelupload method)": [[103, "abacusai.model_upload.ModelUpload.to_dict"]], "modelversion (class in abacusai.model_version)": [[104, "abacusai.model_version.ModelVersion"]], "__repr__() (abacusai.model_version.modelversion method)": [[104, "abacusai.model_version.ModelVersion.__repr__"]], "abacusai.model_version": [[104, "module-abacusai.model_version"]], "delete() (abacusai.model_version.modelversion method)": [[104, "abacusai.model_version.ModelVersion.delete"]], "describe() (abacusai.model_version.modelversion method)": [[104, "abacusai.model_version.ModelVersion.describe"]], "describe_train_test_data_split_feature_group_version() (abacusai.model_version.modelversion method)": [[104, "abacusai.model_version.ModelVersion.describe_train_test_data_split_feature_group_version"]], "export_custom() (abacusai.model_version.modelversion method)": [[104, "abacusai.model_version.ModelVersion.export_custom"]], "export_model_artifact_as_feature_group() (abacusai.model_version.modelversion method)": [[104, "abacusai.model_version.ModelVersion.export_model_artifact_as_feature_group"]], "get_feature_importance_by() (abacusai.model_version.modelversion method)": [[104, "abacusai.model_version.ModelVersion.get_feature_importance_by"]], "get_status() (abacusai.model_version.modelversion method)": [[104, "abacusai.model_version.ModelVersion.get_status"]], "get_train_test_feature_group_as_pandas() (abacusai.model_version.modelversion method)": [[104, "abacusai.model_version.ModelVersion.get_train_test_feature_group_as_pandas"]], "get_training_data_logs() (abacusai.model_version.modelversion method)": [[104, "abacusai.model_version.ModelVersion.get_training_data_logs"]], "get_training_logs() (abacusai.model_version.modelversion method)": [[104, "abacusai.model_version.ModelVersion.get_training_logs"]], "refresh() (abacusai.model_version.modelversion method)": [[104, "abacusai.model_version.ModelVersion.refresh"]], "set_model_objective() (abacusai.model_version.modelversion method)": [[104, "abacusai.model_version.ModelVersion.set_model_objective"]], "to_dict() (abacusai.model_version.modelversion method)": [[104, "abacusai.model_version.ModelVersion.to_dict"]], "wait_for_full_automl() (abacusai.model_version.modelversion method)": [[104, "abacusai.model_version.ModelVersion.wait_for_full_automl"]], "wait_for_training() (abacusai.model_version.modelversion method)": [[104, "abacusai.model_version.ModelVersion.wait_for_training"]], "modificationlockinfo (class in abacusai.modification_lock_info)": [[105, "abacusai.modification_lock_info.ModificationLockInfo"]], "__repr__() (abacusai.modification_lock_info.modificationlockinfo method)": [[105, "abacusai.modification_lock_info.ModificationLockInfo.__repr__"]], "abacusai.modification_lock_info": [[105, "module-abacusai.modification_lock_info"]], "to_dict() (abacusai.modification_lock_info.modificationlockinfo method)": [[105, "abacusai.modification_lock_info.ModificationLockInfo.to_dict"]], "module (class in abacusai.module)": [[106, "abacusai.module.Module"]], "__repr__() (abacusai.module.module method)": [[106, "abacusai.module.Module.__repr__"]], "abacusai.module": [[106, "module-abacusai.module"]], "to_dict() (abacusai.module.module method)": [[106, "abacusai.module.Module.to_dict"]], "monitoralert (class in abacusai.monitor_alert)": [[107, "abacusai.monitor_alert.MonitorAlert"]], "__repr__() (abacusai.monitor_alert.monitoralert method)": [[107, "abacusai.monitor_alert.MonitorAlert.__repr__"]], "abacusai.monitor_alert": [[107, "module-abacusai.monitor_alert"]], "delete() (abacusai.monitor_alert.monitoralert method)": [[107, "abacusai.monitor_alert.MonitorAlert.delete"]], "describe() (abacusai.monitor_alert.monitoralert method)": [[107, "abacusai.monitor_alert.MonitorAlert.describe"]], "refresh() (abacusai.monitor_alert.monitoralert method)": [[107, "abacusai.monitor_alert.MonitorAlert.refresh"]], "run() (abacusai.monitor_alert.monitoralert method)": [[107, "abacusai.monitor_alert.MonitorAlert.run"]], "to_dict() (abacusai.monitor_alert.monitoralert method)": [[107, "abacusai.monitor_alert.MonitorAlert.to_dict"]], "update() (abacusai.monitor_alert.monitoralert method)": [[107, "abacusai.monitor_alert.MonitorAlert.update"]], "monitoralertversion (class in abacusai.monitor_alert_version)": [[108, "abacusai.monitor_alert_version.MonitorAlertVersion"]], "__repr__() (abacusai.monitor_alert_version.monitoralertversion method)": [[108, "abacusai.monitor_alert_version.MonitorAlertVersion.__repr__"]], "abacusai.monitor_alert_version": [[108, "module-abacusai.monitor_alert_version"]], "describe() (abacusai.monitor_alert_version.monitoralertversion method)": [[108, "abacusai.monitor_alert_version.MonitorAlertVersion.describe"]], "get_status() (abacusai.monitor_alert_version.monitoralertversion method)": [[108, "abacusai.monitor_alert_version.MonitorAlertVersion.get_status"]], "refresh() (abacusai.monitor_alert_version.monitoralertversion method)": [[108, "abacusai.monitor_alert_version.MonitorAlertVersion.refresh"]], "to_dict() (abacusai.monitor_alert_version.monitoralertversion method)": [[108, "abacusai.monitor_alert_version.MonitorAlertVersion.to_dict"]], "wait_for_monitor_alert() (abacusai.monitor_alert_version.monitoralertversion method)": [[108, "abacusai.monitor_alert_version.MonitorAlertVersion.wait_for_monitor_alert"]], "naturallanguageexplanation (class in abacusai.natural_language_explanation)": [[109, "abacusai.natural_language_explanation.NaturalLanguageExplanation"]], "__repr__() (abacusai.natural_language_explanation.naturallanguageexplanation method)": [[109, "abacusai.natural_language_explanation.NaturalLanguageExplanation.__repr__"]], "abacusai.natural_language_explanation": [[109, "module-abacusai.natural_language_explanation"]], "to_dict() (abacusai.natural_language_explanation.naturallanguageexplanation method)": [[109, "abacusai.natural_language_explanation.NaturalLanguageExplanation.to_dict"]], "nestedfeature (class in abacusai.nested_feature)": [[110, "abacusai.nested_feature.NestedFeature"]], "__repr__() (abacusai.nested_feature.nestedfeature method)": [[110, "abacusai.nested_feature.NestedFeature.__repr__"]], "abacusai.nested_feature": [[110, "module-abacusai.nested_feature"]], "to_dict() (abacusai.nested_feature.nestedfeature method)": [[110, "abacusai.nested_feature.NestedFeature.to_dict"]], "nullviolation (class in abacusai.null_violation)": [[111, "abacusai.null_violation.NullViolation"]], "__repr__() (abacusai.null_violation.nullviolation method)": [[111, "abacusai.null_violation.NullViolation.__repr__"]], "abacusai.null_violation": [[111, "module-abacusai.null_violation"]], "to_dict() (abacusai.null_violation.nullviolation method)": [[111, "abacusai.null_violation.NullViolation.to_dict"]], "organizationgroup (class in abacusai.organization_group)": [[112, "abacusai.organization_group.OrganizationGroup"]], "__repr__() (abacusai.organization_group.organizationgroup method)": [[112, "abacusai.organization_group.OrganizationGroup.__repr__"]], "abacusai.organization_group": [[112, "module-abacusai.organization_group"]], "add_permission() (abacusai.organization_group.organizationgroup method)": [[112, "abacusai.organization_group.OrganizationGroup.add_permission"]], "add_user_to() (abacusai.organization_group.organizationgroup method)": [[112, "abacusai.organization_group.OrganizationGroup.add_user_to"]], "delete() (abacusai.organization_group.organizationgroup method)": [[112, "abacusai.organization_group.OrganizationGroup.delete"]], "describe() (abacusai.organization_group.organizationgroup method)": [[112, "abacusai.organization_group.OrganizationGroup.describe"]], "refresh() (abacusai.organization_group.organizationgroup method)": [[112, "abacusai.organization_group.OrganizationGroup.refresh"]], "remove_permission() (abacusai.organization_group.organizationgroup method)": [[112, "abacusai.organization_group.OrganizationGroup.remove_permission"]], "remove_user_from() (abacusai.organization_group.organizationgroup method)": [[112, "abacusai.organization_group.OrganizationGroup.remove_user_from"]], "set_default() (abacusai.organization_group.organizationgroup method)": [[112, "abacusai.organization_group.OrganizationGroup.set_default"]], "to_dict() (abacusai.organization_group.organizationgroup method)": [[112, "abacusai.organization_group.OrganizationGroup.to_dict"]], "organizationsearchresult (class in abacusai.organization_search_result)": [[113, "abacusai.organization_search_result.OrganizationSearchResult"]], "__repr__() (abacusai.organization_search_result.organizationsearchresult method)": [[113, "abacusai.organization_search_result.OrganizationSearchResult.__repr__"]], "abacusai.organization_search_result": [[113, "module-abacusai.organization_search_result"]], "to_dict() (abacusai.organization_search_result.organizationsearchresult method)": [[113, "abacusai.organization_search_result.OrganizationSearchResult.to_dict"]], "pipeline (class in abacusai.pipeline)": [[114, "abacusai.pipeline.Pipeline"]], "__repr__() (abacusai.pipeline.pipeline method)": [[114, "abacusai.pipeline.Pipeline.__repr__"]], "abacusai.pipeline": [[114, "module-abacusai.pipeline"]], "create_step() (abacusai.pipeline.pipeline method)": [[114, "abacusai.pipeline.Pipeline.create_step"]], "delete() (abacusai.pipeline.pipeline method)": [[114, "abacusai.pipeline.Pipeline.delete"]], "describe() (abacusai.pipeline.pipeline method)": [[114, "abacusai.pipeline.Pipeline.describe"]], "describe_step_by_name() (abacusai.pipeline.pipeline method)": [[114, "abacusai.pipeline.Pipeline.describe_step_by_name"]], "list_versions() (abacusai.pipeline.pipeline method)": [[114, "abacusai.pipeline.Pipeline.list_versions"]], "pause_refresh_schedule() (abacusai.pipeline.pipeline method)": [[114, "abacusai.pipeline.Pipeline.pause_refresh_schedule"]], "refresh() (abacusai.pipeline.pipeline method)": [[114, "abacusai.pipeline.Pipeline.refresh"]], "resume_refresh_schedule() (abacusai.pipeline.pipeline method)": [[114, "abacusai.pipeline.Pipeline.resume_refresh_schedule"]], "run() (abacusai.pipeline.pipeline method)": [[114, "abacusai.pipeline.Pipeline.run"]], "to_dict() (abacusai.pipeline.pipeline method)": [[114, "abacusai.pipeline.Pipeline.to_dict"]], "unset_refresh_schedule() (abacusai.pipeline.pipeline method)": [[114, "abacusai.pipeline.Pipeline.unset_refresh_schedule"]], "update() (abacusai.pipeline.pipeline method)": [[114, "abacusai.pipeline.Pipeline.update"]], "pipelinereference (class in abacusai.pipeline_reference)": [[115, "abacusai.pipeline_reference.PipelineReference"]], "__repr__() (abacusai.pipeline_reference.pipelinereference method)": [[115, "abacusai.pipeline_reference.PipelineReference.__repr__"]], "abacusai.pipeline_reference": [[115, "module-abacusai.pipeline_reference"]], "to_dict() (abacusai.pipeline_reference.pipelinereference method)": [[115, "abacusai.pipeline_reference.PipelineReference.to_dict"]], "pipelinestep (class in abacusai.pipeline_step)": [[116, "abacusai.pipeline_step.PipelineStep"]], "__repr__() (abacusai.pipeline_step.pipelinestep method)": [[116, "abacusai.pipeline_step.PipelineStep.__repr__"]], "abacusai.pipeline_step": [[116, "module-abacusai.pipeline_step"]], "delete() (abacusai.pipeline_step.pipelinestep method)": [[116, "abacusai.pipeline_step.PipelineStep.delete"]], "describe() (abacusai.pipeline_step.pipelinestep method)": [[116, "abacusai.pipeline_step.PipelineStep.describe"]], "refresh() (abacusai.pipeline_step.pipelinestep method)": [[116, "abacusai.pipeline_step.PipelineStep.refresh"]], "to_dict() (abacusai.pipeline_step.pipelinestep method)": [[116, "abacusai.pipeline_step.PipelineStep.to_dict"]], "update() (abacusai.pipeline_step.pipelinestep method)": [[116, "abacusai.pipeline_step.PipelineStep.update"]], "pipelinestepversion (class in abacusai.pipeline_step_version)": [[117, "abacusai.pipeline_step_version.PipelineStepVersion"]], "__repr__() (abacusai.pipeline_step_version.pipelinestepversion method)": [[117, "abacusai.pipeline_step_version.PipelineStepVersion.__repr__"]], "abacusai.pipeline_step_version": [[117, "module-abacusai.pipeline_step_version"]], "get_step_version_logs() (abacusai.pipeline_step_version.pipelinestepversion method)": [[117, "abacusai.pipeline_step_version.PipelineStepVersion.get_step_version_logs"]], "to_dict() (abacusai.pipeline_step_version.pipelinestepversion method)": [[117, "abacusai.pipeline_step_version.PipelineStepVersion.to_dict"]], "pipelinestepversionlogs (class in abacusai.pipeline_step_version_logs)": [[118, "abacusai.pipeline_step_version_logs.PipelineStepVersionLogs"]], "__repr__() (abacusai.pipeline_step_version_logs.pipelinestepversionlogs method)": [[118, "abacusai.pipeline_step_version_logs.PipelineStepVersionLogs.__repr__"]], "abacusai.pipeline_step_version_logs": [[118, "module-abacusai.pipeline_step_version_logs"]], "to_dict() (abacusai.pipeline_step_version_logs.pipelinestepversionlogs method)": [[118, "abacusai.pipeline_step_version_logs.PipelineStepVersionLogs.to_dict"]], "pipelinestepversionreference (class in abacusai.pipeline_step_version_reference)": [[119, "abacusai.pipeline_step_version_reference.PipelineStepVersionReference"]], "__repr__() (abacusai.pipeline_step_version_reference.pipelinestepversionreference method)": [[119, "abacusai.pipeline_step_version_reference.PipelineStepVersionReference.__repr__"]], "abacusai.pipeline_step_version_reference": [[119, "module-abacusai.pipeline_step_version_reference"]], "to_dict() (abacusai.pipeline_step_version_reference.pipelinestepversionreference method)": [[119, "abacusai.pipeline_step_version_reference.PipelineStepVersionReference.to_dict"]], "pipelineversion (class in abacusai.pipeline_version)": [[120, "abacusai.pipeline_version.PipelineVersion"]], "__repr__() (abacusai.pipeline_version.pipelineversion method)": [[120, "abacusai.pipeline_version.PipelineVersion.__repr__"]], "abacusai.pipeline_version": [[120, "module-abacusai.pipeline_version"]], "describe() (abacusai.pipeline_version.pipelineversion method)": [[120, "abacusai.pipeline_version.PipelineVersion.describe"]], "get_status() (abacusai.pipeline_version.pipelineversion method)": [[120, "abacusai.pipeline_version.PipelineVersion.get_status"]], "list_logs() (abacusai.pipeline_version.pipelineversion method)": [[120, "abacusai.pipeline_version.PipelineVersion.list_logs"]], "refresh() (abacusai.pipeline_version.pipelineversion method)": [[120, "abacusai.pipeline_version.PipelineVersion.refresh"]], "to_dict() (abacusai.pipeline_version.pipelineversion method)": [[120, "abacusai.pipeline_version.PipelineVersion.to_dict"]], "wait_for_pipeline() (abacusai.pipeline_version.pipelineversion method)": [[120, "abacusai.pipeline_version.PipelineVersion.wait_for_pipeline"]], "pipelineversionlogs (class in abacusai.pipeline_version_logs)": [[121, "abacusai.pipeline_version_logs.PipelineVersionLogs"]], "__repr__() (abacusai.pipeline_version_logs.pipelineversionlogs method)": [[121, "abacusai.pipeline_version_logs.PipelineVersionLogs.__repr__"]], "abacusai.pipeline_version_logs": [[121, "module-abacusai.pipeline_version_logs"]], "to_dict() (abacusai.pipeline_version_logs.pipelineversionlogs method)": [[121, "abacusai.pipeline_version_logs.PipelineVersionLogs.to_dict"]], "pointintimefeature (class in abacusai.point_in_time_feature)": [[122, "abacusai.point_in_time_feature.PointInTimeFeature"]], "__repr__() (abacusai.point_in_time_feature.pointintimefeature method)": [[122, "abacusai.point_in_time_feature.PointInTimeFeature.__repr__"]], "abacusai.point_in_time_feature": [[122, "module-abacusai.point_in_time_feature"]], "to_dict() (abacusai.point_in_time_feature.pointintimefeature method)": [[122, "abacusai.point_in_time_feature.PointInTimeFeature.to_dict"]], "pointintimegroup (class in abacusai.point_in_time_group)": [[123, "abacusai.point_in_time_group.PointInTimeGroup"]], "__repr__() (abacusai.point_in_time_group.pointintimegroup method)": [[123, "abacusai.point_in_time_group.PointInTimeGroup.__repr__"]], "abacusai.point_in_time_group": [[123, "module-abacusai.point_in_time_group"]], "to_dict() (abacusai.point_in_time_group.pointintimegroup method)": [[123, "abacusai.point_in_time_group.PointInTimeGroup.to_dict"]], "pointintimegroupfeature (class in abacusai.point_in_time_group_feature)": [[124, "abacusai.point_in_time_group_feature.PointInTimeGroupFeature"]], "__repr__() (abacusai.point_in_time_group_feature.pointintimegroupfeature method)": [[124, "abacusai.point_in_time_group_feature.PointInTimeGroupFeature.__repr__"]], "abacusai.point_in_time_group_feature": [[124, "module-abacusai.point_in_time_group_feature"]], "to_dict() (abacusai.point_in_time_group_feature.pointintimegroupfeature method)": [[124, "abacusai.point_in_time_group_feature.PointInTimeGroupFeature.to_dict"]], "predictionclient (class in abacusai.prediction_client)": [[125, "abacusai.prediction_client.PredictionClient"]], "abacusai.prediction_client": [[125, "module-abacusai.prediction_client"]], "check_constraints() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.check_constraints"]], "classify_image() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.classify_image"]], "classify_pdf() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.classify_pdf"]], "describe_image() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.describe_image"]], "execute_agent() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.execute_agent"]], "generate_image() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.generate_image"]], "get_alternative_assignments() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_alternative_assignments"]], "get_anomalies() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_anomalies"]], "get_assignments() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_assignments"]], "get_chat_response() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_chat_response"]], "get_classification() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_classification"]], "get_cluster() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_cluster"]], "get_entailment() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_entailment"]], "get_entities_from_pdf() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_entities_from_pdf"]], "get_forecast() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_forecast"]], "get_k_nearest() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_k_nearest"]], "get_labels() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_labels"]], "get_multiple_k_nearest() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_multiple_k_nearest"]], "get_objects_from_image() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_objects_from_image"]], "get_personalized_ranking() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_personalized_ranking"]], "get_ranked_items() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_ranked_items"]], "get_recommendations() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_recommendations"]], "get_related_items() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_related_items"]], "get_search_results() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_search_results"]], "get_sentiment() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_sentiment"]], "get_summary() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.get_summary"]], "is_anomaly() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.is_anomaly"]], "lookup_features() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.lookup_features"]], "predict() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.predict"]], "predict_churn() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.predict_churn"]], "predict_class() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.predict_class"]], "predict_fraud() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.predict_fraud"]], "predict_from_datasets() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.predict_from_datasets"]], "predict_language() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.predict_language"]], "predict_lead() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.predict_lead"]], "predict_multiple() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.predict_multiple"]], "predict_raw() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.predict_raw"]], "predict_takeover() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.predict_takeover"]], "predict_target() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.predict_target"]], "predict_with_binary_data() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.predict_with_binary_data"]], "score_image() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.score_image"]], "transcribe_audio() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.transcribe_audio"]], "transfer_style() (abacusai.prediction_client.predictionclient method)": [[125, "abacusai.prediction_client.PredictionClient.transfer_style"]], "predictiondataset (class in abacusai.prediction_dataset)": [[126, "abacusai.prediction_dataset.PredictionDataset"]], "__repr__() (abacusai.prediction_dataset.predictiondataset method)": [[126, "abacusai.prediction_dataset.PredictionDataset.__repr__"]], "abacusai.prediction_dataset": [[126, "module-abacusai.prediction_dataset"]], "to_dict() (abacusai.prediction_dataset.predictiondataset method)": [[126, "abacusai.prediction_dataset.PredictionDataset.to_dict"]], "predictionfeaturegroup (class in abacusai.prediction_feature_group)": [[127, "abacusai.prediction_feature_group.PredictionFeatureGroup"]], "__repr__() (abacusai.prediction_feature_group.predictionfeaturegroup method)": [[127, "abacusai.prediction_feature_group.PredictionFeatureGroup.__repr__"]], "abacusai.prediction_feature_group": [[127, "module-abacusai.prediction_feature_group"]], "to_dict() (abacusai.prediction_feature_group.predictionfeaturegroup method)": [[127, "abacusai.prediction_feature_group.PredictionFeatureGroup.to_dict"]], "predictioninput (class in abacusai.prediction_input)": [[128, "abacusai.prediction_input.PredictionInput"]], "__repr__() (abacusai.prediction_input.predictioninput method)": [[128, "abacusai.prediction_input.PredictionInput.__repr__"]], "abacusai.prediction_input": [[128, "module-abacusai.prediction_input"]], "to_dict() (abacusai.prediction_input.predictioninput method)": [[128, "abacusai.prediction_input.PredictionInput.to_dict"]], "predictionmetric (class in abacusai.prediction_metric)": [[129, "abacusai.prediction_metric.PredictionMetric"]], "__repr__() (abacusai.prediction_metric.predictionmetric method)": [[129, "abacusai.prediction_metric.PredictionMetric.__repr__"]], "abacusai.prediction_metric": [[129, "module-abacusai.prediction_metric"]], "to_dict() (abacusai.prediction_metric.predictionmetric method)": [[129, "abacusai.prediction_metric.PredictionMetric.to_dict"]], "predictionmetricversion (class in abacusai.prediction_metric_version)": [[130, "abacusai.prediction_metric_version.PredictionMetricVersion"]], "__repr__() (abacusai.prediction_metric_version.predictionmetricversion method)": [[130, "abacusai.prediction_metric_version.PredictionMetricVersion.__repr__"]], "abacusai.prediction_metric_version": [[130, "module-abacusai.prediction_metric_version"]], "get_status() (abacusai.prediction_metric_version.predictionmetricversion method)": [[130, "abacusai.prediction_metric_version.PredictionMetricVersion.get_status"]], "to_dict() (abacusai.prediction_metric_version.predictionmetricversion method)": [[130, "abacusai.prediction_metric_version.PredictionMetricVersion.to_dict"]], "wait_for_prediction_metric_version() (abacusai.prediction_metric_version.predictionmetricversion method)": [[130, "abacusai.prediction_metric_version.PredictionMetricVersion.wait_for_prediction_metric_version"]], "problemtype (class in abacusai.problem_type)": [[131, "abacusai.problem_type.ProblemType"]], "__repr__() (abacusai.problem_type.problemtype method)": [[131, "abacusai.problem_type.ProblemType.__repr__"]], "abacusai.problem_type": [[131, "module-abacusai.problem_type"]], "to_dict() (abacusai.problem_type.problemtype method)": [[131, "abacusai.problem_type.ProblemType.to_dict"]], "project (class in abacusai.project)": [[132, "abacusai.project.Project"]], "__repr__() (abacusai.project.project method)": [[132, "abacusai.project.Project.__repr__"]], "abacusai.project": [[132, "module-abacusai.project"]], "add_tags() (abacusai.project.project method)": [[132, "abacusai.project.Project.add_tags"]], "attach_dataset() (abacusai.project.project method)": [[132, "abacusai.project.Project.attach_dataset"]], "create_agent() (abacusai.project.project method)": [[132, "abacusai.project.Project.create_agent"]], "create_chat_session() (abacusai.project.project method)": [[132, "abacusai.project.Project.create_chat_session"]], "create_deployment_token() (abacusai.project.project method)": [[132, "abacusai.project.Project.create_deployment_token"]], "create_eda() (abacusai.project.project method)": [[132, "abacusai.project.Project.create_eda"]], "create_graph_dashboard() (abacusai.project.project method)": [[132, "abacusai.project.Project.create_graph_dashboard"]], "create_model_from_functions() (abacusai.project.project method)": [[132, "abacusai.project.Project.create_model_from_functions"]], "create_model_from_python() (abacusai.project.project method)": [[132, "abacusai.project.Project.create_model_from_python"]], "create_model_monitor() (abacusai.project.project method)": [[132, "abacusai.project.Project.create_model_monitor"]], "create_monitor_alert() (abacusai.project.project method)": [[132, "abacusai.project.Project.create_monitor_alert"]], "create_nlp_drift_monitor() (abacusai.project.project method)": [[132, "abacusai.project.Project.create_nlp_drift_monitor"]], "create_train_test_data_split_feature_group() (abacusai.project.project method)": [[132, "abacusai.project.Project.create_train_test_data_split_feature_group"]], "create_vector_store() (abacusai.project.project method)": [[132, "abacusai.project.Project.create_vector_store"]], "create_vision_drift_monitor() (abacusai.project.project method)": [[132, "abacusai.project.Project.create_vision_drift_monitor"]], "delete() (abacusai.project.project method)": [[132, "abacusai.project.Project.delete"]], "describe() (abacusai.project.project method)": [[132, "abacusai.project.Project.describe"]], "describe_feature_group() (abacusai.project.project method)": [[132, "abacusai.project.Project.describe_feature_group"]], "get_custom_train_function_info() (abacusai.project.project method)": [[132, "abacusai.project.Project.get_custom_train_function_info"]], "get_training_config_options() (abacusai.project.project method)": [[132, "abacusai.project.Project.get_training_config_options"]], "infer_feature_mappings() (abacusai.project.project method)": [[132, "abacusai.project.Project.infer_feature_mappings"]], "list_batch_predictions() (abacusai.project.project method)": [[132, "abacusai.project.Project.list_batch_predictions"]], "list_builtin_algorithms() (abacusai.project.project method)": [[132, "abacusai.project.Project.list_builtin_algorithms"]], "list_deployment_tokens() (abacusai.project.project method)": [[132, "abacusai.project.Project.list_deployment_tokens"]], "list_deployments() (abacusai.project.project method)": [[132, "abacusai.project.Project.list_deployments"]], "list_eda() (abacusai.project.project method)": [[132, "abacusai.project.Project.list_eda"]], "list_feature_group_templates() (abacusai.project.project method)": [[132, "abacusai.project.Project.list_feature_group_templates"]], "list_feature_groups() (abacusai.project.project method)": [[132, "abacusai.project.Project.list_feature_groups"]], "list_graph_dashboards() (abacusai.project.project method)": [[132, "abacusai.project.Project.list_graph_dashboards"]], "list_model_monitors() (abacusai.project.project method)": [[132, "abacusai.project.Project.list_model_monitors"]], "list_models() (abacusai.project.project method)": [[132, "abacusai.project.Project.list_models"]], "list_pipelines() (abacusai.project.project method)": [[132, "abacusai.project.Project.list_pipelines"]], "list_refresh_policies() (abacusai.project.project method)": [[132, "abacusai.project.Project.list_refresh_policies"]], "list_vector_stores() (abacusai.project.project method)": [[132, "abacusai.project.Project.list_vector_stores"]], "refresh() (abacusai.project.project method)": [[132, "abacusai.project.Project.refresh"]], "remove_dataset() (abacusai.project.project method)": [[132, "abacusai.project.Project.remove_dataset"]], "remove_tags() (abacusai.project.project method)": [[132, "abacusai.project.Project.remove_tags"]], "rename() (abacusai.project.project method)": [[132, "abacusai.project.Project.rename"]], "set_feature_mapping() (abacusai.project.project method)": [[132, "abacusai.project.Project.set_feature_mapping"]], "to_dict() (abacusai.project.project method)": [[132, "abacusai.project.Project.to_dict"]], "train_model() (abacusai.project.project method)": [[132, "abacusai.project.Project.train_model"]], "validate() (abacusai.project.project method)": [[132, "abacusai.project.Project.validate"]], "projectconfig (class in abacusai.project_config)": [[133, "abacusai.project_config.ProjectConfig"]], "__repr__() (abacusai.project_config.projectconfig method)": [[133, "abacusai.project_config.ProjectConfig.__repr__"]], "abacusai.project_config": [[133, "module-abacusai.project_config"]], "to_dict() (abacusai.project_config.projectconfig method)": [[133, "abacusai.project_config.ProjectConfig.to_dict"]], "projectdataset (class in abacusai.project_dataset)": [[134, "abacusai.project_dataset.ProjectDataset"]], "__repr__() (abacusai.project_dataset.projectdataset method)": [[134, "abacusai.project_dataset.ProjectDataset.__repr__"]], "abacusai.project_dataset": [[134, "module-abacusai.project_dataset"]], "to_dict() (abacusai.project_dataset.projectdataset method)": [[134, "abacusai.project_dataset.ProjectDataset.to_dict"]], "projectvalidation (class in abacusai.project_validation)": [[135, "abacusai.project_validation.ProjectValidation"]], "__repr__() (abacusai.project_validation.projectvalidation method)": [[135, "abacusai.project_validation.ProjectValidation.__repr__"]], "abacusai.project_validation": [[135, "module-abacusai.project_validation"]], "to_dict() (abacusai.project_validation.projectvalidation method)": [[135, "abacusai.project_validation.ProjectValidation.to_dict"]], "pythonfunction (class in abacusai.python_function)": [[136, "abacusai.python_function.PythonFunction"]], "__repr__() (abacusai.python_function.pythonfunction method)": [[136, "abacusai.python_function.PythonFunction.__repr__"]], "abacusai.python_function": [[136, "module-abacusai.python_function"]], "add_graph_to_dashboard() (abacusai.python_function.pythonfunction method)": [[136, "abacusai.python_function.PythonFunction.add_graph_to_dashboard"]], "to_dict() (abacusai.python_function.pythonfunction method)": [[136, "abacusai.python_function.PythonFunction.to_dict"]], "validate_locally() (abacusai.python_function.pythonfunction method)": [[136, "abacusai.python_function.PythonFunction.validate_locally"]], "_monkeypatch (class in abacusai.python_function_validator)": [[137, "abacusai.python_function_validator._MonkeyPatch"]], "abacusai.python_function_validator": [[137, "module-abacusai.python_function_validator"]], "context() (abacusai.python_function_validator._monkeypatch class method)": [[137, "abacusai.python_function_validator._MonkeyPatch.context"]], "syspath_prepend() (abacusai.python_function_validator._monkeypatch method)": [[137, "abacusai.python_function_validator._MonkeyPatch.syspath_prepend"]], "undo() (abacusai.python_function_validator._monkeypatch method)": [[137, "abacusai.python_function_validator._MonkeyPatch.undo"]], "validate_function_locally() (in module abacusai.python_function_validator)": [[137, "abacusai.python_function_validator.validate_function_locally"]], "pythonplotfunction (class in abacusai.python_plot_function)": [[138, "abacusai.python_plot_function.PythonPlotFunction"]], "__repr__() (abacusai.python_plot_function.pythonplotfunction method)": [[138, "abacusai.python_plot_function.PythonPlotFunction.__repr__"]], "abacusai.python_plot_function": [[138, "module-abacusai.python_plot_function"]], "to_dict() (abacusai.python_plot_function.pythonplotfunction method)": [[138, "abacusai.python_plot_function.PythonPlotFunction.to_dict"]], "rangeviolation (class in abacusai.range_violation)": [[139, "abacusai.range_violation.RangeViolation"]], "__repr__() (abacusai.range_violation.rangeviolation method)": [[139, "abacusai.range_violation.RangeViolation.__repr__"]], "abacusai.range_violation": [[139, "module-abacusai.range_violation"]], "to_dict() (abacusai.range_violation.rangeviolation method)": [[139, "abacusai.range_violation.RangeViolation.to_dict"]], "refreshpipelinerun (class in abacusai.refresh_pipeline_run)": [[140, "abacusai.refresh_pipeline_run.RefreshPipelineRun"]], "__repr__() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[140, "abacusai.refresh_pipeline_run.RefreshPipelineRun.__repr__"]], "abacusai.refresh_pipeline_run": [[140, "module-abacusai.refresh_pipeline_run"]], "describe() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[140, "abacusai.refresh_pipeline_run.RefreshPipelineRun.describe"]], "get_status() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[140, "abacusai.refresh_pipeline_run.RefreshPipelineRun.get_status"]], "refresh() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[140, "abacusai.refresh_pipeline_run.RefreshPipelineRun.refresh"]], "to_dict() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[140, "abacusai.refresh_pipeline_run.RefreshPipelineRun.to_dict"]], "wait_for_complete() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[140, "abacusai.refresh_pipeline_run.RefreshPipelineRun.wait_for_complete"]], "refreshpolicy (class in abacusai.refresh_policy)": [[141, "abacusai.refresh_policy.RefreshPolicy"]], "__repr__() (abacusai.refresh_policy.refreshpolicy method)": [[141, "abacusai.refresh_policy.RefreshPolicy.__repr__"]], "abacusai.refresh_policy": [[141, "module-abacusai.refresh_policy"]], "delete() (abacusai.refresh_policy.refreshpolicy method)": [[141, "abacusai.refresh_policy.RefreshPolicy.delete"]], "describe() (abacusai.refresh_policy.refreshpolicy method)": [[141, "abacusai.refresh_policy.RefreshPolicy.describe"]], "list_refresh_pipeline_runs() (abacusai.refresh_policy.refreshpolicy method)": [[141, "abacusai.refresh_policy.RefreshPolicy.list_refresh_pipeline_runs"]], "pause() (abacusai.refresh_policy.refreshpolicy method)": [[141, "abacusai.refresh_policy.RefreshPolicy.pause"]], "refresh() (abacusai.refresh_policy.refreshpolicy method)": [[141, "abacusai.refresh_policy.RefreshPolicy.refresh"]], "resume() (abacusai.refresh_policy.refreshpolicy method)": [[141, "abacusai.refresh_policy.RefreshPolicy.resume"]], "run() (abacusai.refresh_policy.refreshpolicy method)": [[141, "abacusai.refresh_policy.RefreshPolicy.run"]], "to_dict() (abacusai.refresh_policy.refreshpolicy method)": [[141, "abacusai.refresh_policy.RefreshPolicy.to_dict"]], "update() (abacusai.refresh_policy.refreshpolicy method)": [[141, "abacusai.refresh_policy.RefreshPolicy.update"]], "refreshschedule (class in abacusai.refresh_schedule)": [[142, "abacusai.refresh_schedule.RefreshSchedule"]], "__repr__() (abacusai.refresh_schedule.refreshschedule method)": [[142, "abacusai.refresh_schedule.RefreshSchedule.__repr__"]], "abacusai.refresh_schedule": [[142, "module-abacusai.refresh_schedule"]], "to_dict() (abacusai.refresh_schedule.refreshschedule method)": [[142, "abacusai.refresh_schedule.RefreshSchedule.to_dict"]], "resolvedfeaturegrouptemplate (class in abacusai.resolved_feature_group_template)": [[143, "abacusai.resolved_feature_group_template.ResolvedFeatureGroupTemplate"]], "__repr__() (abacusai.resolved_feature_group_template.resolvedfeaturegrouptemplate method)": [[143, "abacusai.resolved_feature_group_template.ResolvedFeatureGroupTemplate.__repr__"]], "abacusai.resolved_feature_group_template": [[143, "module-abacusai.resolved_feature_group_template"]], "to_dict() (abacusai.resolved_feature_group_template.resolvedfeaturegrouptemplate method)": [[143, "abacusai.resolved_feature_group_template.ResolvedFeatureGroupTemplate.to_dict"]], "abstractapiclass (class in abacusai.return_class)": [[144, "abacusai.return_class.AbstractApiClass"]], "__eq__() (abacusai.return_class.abstractapiclass method)": [[144, "abacusai.return_class.AbstractApiClass.__eq__"]], "_get_attribute_as_dict() (abacusai.return_class.abstractapiclass method)": [[144, "abacusai.return_class.AbstractApiClass._get_attribute_as_dict"]], "abacusai.return_class": [[144, "module-abacusai.return_class"]], "schema (class in abacusai.schema)": [[145, "abacusai.schema.Schema"]], "__repr__() (abacusai.schema.schema method)": [[145, "abacusai.schema.Schema.__repr__"]], "abacusai.schema": [[145, "module-abacusai.schema"]], "to_dict() (abacusai.schema.schema method)": [[145, "abacusai.schema.Schema.to_dict"]], "streamingauthtoken (class in abacusai.streaming_auth_token)": [[146, "abacusai.streaming_auth_token.StreamingAuthToken"]], "__repr__() (abacusai.streaming_auth_token.streamingauthtoken method)": [[146, "abacusai.streaming_auth_token.StreamingAuthToken.__repr__"]], "abacusai.streaming_auth_token": [[146, "module-abacusai.streaming_auth_token"]], "to_dict() (abacusai.streaming_auth_token.streamingauthtoken method)": [[146, "abacusai.streaming_auth_token.StreamingAuthToken.to_dict"]], "streamingclient (class in abacusai.streaming_client)": [[147, "abacusai.streaming_client.StreamingClient"]], "abacusai.streaming_client": [[147, "module-abacusai.streaming_client"]], "append_data() (abacusai.streaming_client.streamingclient method)": [[147, "abacusai.streaming_client.StreamingClient.append_data"]], "append_multiple_data() (abacusai.streaming_client.streamingclient method)": [[147, "abacusai.streaming_client.StreamingClient.append_multiple_data"]], "delete_item_embeddings() (abacusai.streaming_client.streamingclient method)": [[147, "abacusai.streaming_client.StreamingClient.delete_item_embeddings"]], "upsert_data() (abacusai.streaming_client.streamingclient method)": [[147, "abacusai.streaming_client.StreamingClient.upsert_data"]], "upsert_item_embeddings() (abacusai.streaming_client.streamingclient method)": [[147, "abacusai.streaming_client.StreamingClient.upsert_item_embeddings"]], "upsert_multiple_data() (abacusai.streaming_client.streamingclient method)": [[147, "abacusai.streaming_client.StreamingClient.upsert_multiple_data"]], "upsert_multiple_item_embeddings() (abacusai.streaming_client.streamingclient method)": [[147, "abacusai.streaming_client.StreamingClient.upsert_multiple_item_embeddings"]], "streamingconnector (class in abacusai.streaming_connector)": [[148, "abacusai.streaming_connector.StreamingConnector"]], "__repr__() (abacusai.streaming_connector.streamingconnector method)": [[148, "abacusai.streaming_connector.StreamingConnector.__repr__"]], "abacusai.streaming_connector": [[148, "module-abacusai.streaming_connector"]], "delete() (abacusai.streaming_connector.streamingconnector method)": [[148, "abacusai.streaming_connector.StreamingConnector.delete"]], "rename() (abacusai.streaming_connector.streamingconnector method)": [[148, "abacusai.streaming_connector.StreamingConnector.rename"]], "to_dict() (abacusai.streaming_connector.streamingconnector method)": [[148, "abacusai.streaming_connector.StreamingConnector.to_dict"]], "verify() (abacusai.streaming_connector.streamingconnector method)": [[148, "abacusai.streaming_connector.StreamingConnector.verify"]], "trainingconfigoptions (class in abacusai.training_config_options)": [[149, "abacusai.training_config_options.TrainingConfigOptions"]], "__repr__() (abacusai.training_config_options.trainingconfigoptions method)": [[149, "abacusai.training_config_options.TrainingConfigOptions.__repr__"]], "abacusai.training_config_options": [[149, "module-abacusai.training_config_options"]], "to_dict() (abacusai.training_config_options.trainingconfigoptions method)": [[149, "abacusai.training_config_options.TrainingConfigOptions.to_dict"]], "typeviolation (class in abacusai.type_violation)": [[150, "abacusai.type_violation.TypeViolation"]], "__repr__() (abacusai.type_violation.typeviolation method)": [[150, "abacusai.type_violation.TypeViolation.__repr__"]], "abacusai.type_violation": [[150, "module-abacusai.type_violation"]], "to_dict() (abacusai.type_violation.typeviolation method)": [[150, "abacusai.type_violation.TypeViolation.to_dict"]], "upload (class in abacusai.upload)": [[151, "abacusai.upload.Upload"]], "__repr__() (abacusai.upload.upload method)": [[151, "abacusai.upload.Upload.__repr__"]], "_yield_upload_part() (abacusai.upload.upload method)": [[151, "abacusai.upload.Upload._yield_upload_part"]], "abacusai.upload": [[151, "module-abacusai.upload"]], "cancel() (abacusai.upload.upload method)": [[151, "abacusai.upload.Upload.cancel"]], "describe() (abacusai.upload.upload method)": [[151, "abacusai.upload.Upload.describe"]], "get_status() (abacusai.upload.upload method)": [[151, "abacusai.upload.Upload.get_status"]], "mark_complete() (abacusai.upload.upload method)": [[151, "abacusai.upload.Upload.mark_complete"]], "part() (abacusai.upload.upload method)": [[151, "abacusai.upload.Upload.part"]], "refresh() (abacusai.upload.upload method)": [[151, "abacusai.upload.Upload.refresh"]], "to_dict() (abacusai.upload.upload method)": [[151, "abacusai.upload.Upload.to_dict"]], "upload_file() (abacusai.upload.upload method)": [[151, "abacusai.upload.Upload.upload_file"]], "upload_part() (abacusai.upload.upload method)": [[151, "abacusai.upload.Upload.upload_part"]], "wait_for_join() (abacusai.upload.upload method)": [[151, "abacusai.upload.Upload.wait_for_join"]], "uploadpart (class in abacusai.upload_part)": [[152, "abacusai.upload_part.UploadPart"]], "__repr__() (abacusai.upload_part.uploadpart method)": [[152, "abacusai.upload_part.UploadPart.__repr__"]], "abacusai.upload_part": [[152, "module-abacusai.upload_part"]], "to_dict() (abacusai.upload_part.uploadpart method)": [[152, "abacusai.upload_part.UploadPart.to_dict"]], "usecase (class in abacusai.use_case)": [[153, "abacusai.use_case.UseCase"]], "__repr__() (abacusai.use_case.usecase method)": [[153, "abacusai.use_case.UseCase.__repr__"]], "abacusai.use_case": [[153, "module-abacusai.use_case"]], "to_dict() (abacusai.use_case.usecase method)": [[153, "abacusai.use_case.UseCase.to_dict"]], "usecaserequirements (class in abacusai.use_case_requirements)": [[154, "abacusai.use_case_requirements.UseCaseRequirements"]], "__repr__() (abacusai.use_case_requirements.usecaserequirements method)": [[154, "abacusai.use_case_requirements.UseCaseRequirements.__repr__"]], "abacusai.use_case_requirements": [[154, "module-abacusai.use_case_requirements"]], "to_dict() (abacusai.use_case_requirements.usecaserequirements method)": [[154, "abacusai.use_case_requirements.UseCaseRequirements.to_dict"]], "user (class in abacusai.user)": [[155, "abacusai.user.User"]], "__repr__() (abacusai.user.user method)": [[155, "abacusai.user.User.__repr__"]], "abacusai.user": [[155, "module-abacusai.user"]], "to_dict() (abacusai.user.user method)": [[155, "abacusai.user.User.to_dict"]], "userexception (class in abacusai.user_exception)": [[156, "abacusai.user_exception.UserException"]], "__repr__() (abacusai.user_exception.userexception method)": [[156, "abacusai.user_exception.UserException.__repr__"]], "abacusai.user_exception": [[156, "module-abacusai.user_exception"]], "to_dict() (abacusai.user_exception.userexception method)": [[156, "abacusai.user_exception.UserException.to_dict"]], "vectorstore (class in abacusai.vector_store)": [[157, "abacusai.vector_store.VectorStore"]], "__repr__() (abacusai.vector_store.vectorstore method)": [[157, "abacusai.vector_store.VectorStore.__repr__"]], "abacusai.vector_store": [[157, "module-abacusai.vector_store"]], "create_version() (abacusai.vector_store.vectorstore method)": [[157, "abacusai.vector_store.VectorStore.create_version"]], "delete() (abacusai.vector_store.vectorstore method)": [[157, "abacusai.vector_store.VectorStore.delete"]], "describe() (abacusai.vector_store.vectorstore method)": [[157, "abacusai.vector_store.VectorStore.describe"]], "get_status() (abacusai.vector_store.vectorstore method)": [[157, "abacusai.vector_store.VectorStore.get_status"]], "list_versions() (abacusai.vector_store.vectorstore method)": [[157, "abacusai.vector_store.VectorStore.list_versions"]], "lookup() (abacusai.vector_store.vectorstore method)": [[157, "abacusai.vector_store.VectorStore.lookup"]], "refresh() (abacusai.vector_store.vectorstore method)": [[157, "abacusai.vector_store.VectorStore.refresh"]], "to_dict() (abacusai.vector_store.vectorstore method)": [[157, "abacusai.vector_store.VectorStore.to_dict"]], "update() (abacusai.vector_store.vectorstore method)": [[157, "abacusai.vector_store.VectorStore.update"]], "wait_until_ready() (abacusai.vector_store.vectorstore method)": [[157, "abacusai.vector_store.VectorStore.wait_until_ready"]], "vectorstoreconfig (class in abacusai.vector_store_config)": [[158, "abacusai.vector_store_config.VectorStoreConfig"]], "__repr__() (abacusai.vector_store_config.vectorstoreconfig method)": [[158, "abacusai.vector_store_config.VectorStoreConfig.__repr__"]], "abacusai.vector_store_config": [[158, "module-abacusai.vector_store_config"]], "to_dict() (abacusai.vector_store_config.vectorstoreconfig method)": [[158, "abacusai.vector_store_config.VectorStoreConfig.to_dict"]], "vectorstorelookupresult (class in abacusai.vector_store_lookup_result)": [[159, "abacusai.vector_store_lookup_result.VectorStoreLookupResult"]], "__repr__() (abacusai.vector_store_lookup_result.vectorstorelookupresult method)": [[159, "abacusai.vector_store_lookup_result.VectorStoreLookupResult.__repr__"]], "abacusai.vector_store_lookup_result": [[159, "module-abacusai.vector_store_lookup_result"]], "to_dict() (abacusai.vector_store_lookup_result.vectorstorelookupresult method)": [[159, "abacusai.vector_store_lookup_result.VectorStoreLookupResult.to_dict"]], "vectorstoreversion (class in abacusai.vector_store_version)": [[160, "abacusai.vector_store_version.VectorStoreVersion"]], "__repr__() (abacusai.vector_store_version.vectorstoreversion method)": [[160, "abacusai.vector_store_version.VectorStoreVersion.__repr__"]], "abacusai.vector_store_version": [[160, "module-abacusai.vector_store_version"]], "describe() (abacusai.vector_store_version.vectorstoreversion method)": [[160, "abacusai.vector_store_version.VectorStoreVersion.describe"]], "get_status() (abacusai.vector_store_version.vectorstoreversion method)": [[160, "abacusai.vector_store_version.VectorStoreVersion.get_status"]], "refresh() (abacusai.vector_store_version.vectorstoreversion method)": [[160, "abacusai.vector_store_version.VectorStoreVersion.refresh"]], "to_dict() (abacusai.vector_store_version.vectorstoreversion method)": [[160, "abacusai.vector_store_version.VectorStoreVersion.to_dict"]], "wait_for_results() (abacusai.vector_store_version.vectorstoreversion method)": [[160, "abacusai.vector_store_version.VectorStoreVersion.wait_for_results"]], "wait_until_ready() (abacusai.vector_store_version.vectorstoreversion method)": [[160, "abacusai.vector_store_version.VectorStoreVersion.wait_until_ready"]], "webhook (class in abacusai.webhook)": [[161, "abacusai.webhook.Webhook"]], "__repr__() (abacusai.webhook.webhook method)": [[161, "abacusai.webhook.Webhook.__repr__"]], "abacusai.webhook": [[161, "module-abacusai.webhook"]], "delete() (abacusai.webhook.webhook method)": [[161, "abacusai.webhook.Webhook.delete"]], "describe() (abacusai.webhook.webhook method)": [[161, "abacusai.webhook.Webhook.describe"]], "refresh() (abacusai.webhook.webhook method)": [[161, "abacusai.webhook.Webhook.refresh"]], "to_dict() (abacusai.webhook.webhook method)": [[161, "abacusai.webhook.Webhook.to_dict"]], "update() (abacusai.webhook.webhook method)": [[161, "abacusai.webhook.Webhook.update"]]}})