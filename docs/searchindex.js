Search.setIndex({"docnames": ["autoapi/abacusai/algorithm/index", "autoapi/abacusai/annotation/index", "autoapi/abacusai/annotation_config/index", "autoapi/abacusai/annotation_entry/index", "autoapi/abacusai/annotations_status/index", "autoapi/abacusai/api_class/abstract/index", "autoapi/abacusai/api_class/dataset/index", "autoapi/abacusai/api_class/enums/index", "autoapi/abacusai/api_class/feature_group/index", "autoapi/abacusai/api_class/index", "autoapi/abacusai/api_class/model/index", "autoapi/abacusai/api_class/project/index", "autoapi/abacusai/api_class/python_functions/index", "autoapi/abacusai/api_class/refresh/index", "autoapi/abacusai/api_client_utils/index", "autoapi/abacusai/api_endpoint/index", "autoapi/abacusai/api_key/index", "autoapi/abacusai/application_connector/index", "autoapi/abacusai/batch_prediction/index", "autoapi/abacusai/batch_prediction_version/index", "autoapi/abacusai/categorical_range_violation/index", "autoapi/abacusai/chat_message/index", "autoapi/abacusai/chat_session/index", "autoapi/abacusai/client/index", "autoapi/abacusai/code_source/index", "autoapi/abacusai/concatenation_config/index", "autoapi/abacusai/cryptography/index", "autoapi/abacusai/custom_loss_function/index", "autoapi/abacusai/custom_metric/index", "autoapi/abacusai/custom_metric_version/index", "autoapi/abacusai/custom_train_function_info/index", "autoapi/abacusai/data_consistency_duplication/index", "autoapi/abacusai/data_prep_logs/index", "autoapi/abacusai/data_quality_results/index", "autoapi/abacusai/database_connector/index", "autoapi/abacusai/dataset/index", "autoapi/abacusai/dataset_column/index", "autoapi/abacusai/dataset_version/index", "autoapi/abacusai/deployment/index", "autoapi/abacusai/deployment_auth_token/index", "autoapi/abacusai/document/index", "autoapi/abacusai/document_annotation/index", "autoapi/abacusai/document_store/index", "autoapi/abacusai/document_store_import/index", "autoapi/abacusai/drift_distribution/index", "autoapi/abacusai/drift_distributions/index", "autoapi/abacusai/eda/index", "autoapi/abacusai/eda_chart_description/index", "autoapi/abacusai/eda_collinearity/index", "autoapi/abacusai/eda_data_consistency/index", "autoapi/abacusai/eda_feature_association/index", "autoapi/abacusai/eda_feature_collinearity/index", "autoapi/abacusai/eda_forecasting_analysis/index", "autoapi/abacusai/eda_version/index", "autoapi/abacusai/embedding_feature_drift_distribution/index", "autoapi/abacusai/execute_feature_group_operation/index", "autoapi/abacusai/feature/index", "autoapi/abacusai/feature_distribution/index", "autoapi/abacusai/feature_drift_summary/index", "autoapi/abacusai/feature_group/index", "autoapi/abacusai/feature_group_export/index", "autoapi/abacusai/feature_group_export_config/index", "autoapi/abacusai/feature_group_export_download_url/index", "autoapi/abacusai/feature_group_lineage/index", "autoapi/abacusai/feature_group_metrics/index", "autoapi/abacusai/feature_group_refresh_export_config/index", "autoapi/abacusai/feature_group_template/index", "autoapi/abacusai/feature_group_template_variable_options/index", "autoapi/abacusai/feature_group_version/index", "autoapi/abacusai/feature_importance/index", "autoapi/abacusai/feature_record/index", "autoapi/abacusai/file_connector/index", "autoapi/abacusai/file_connector_instructions/index", "autoapi/abacusai/file_connector_verification/index", "autoapi/abacusai/forecasting_analysis_graph_data/index", "autoapi/abacusai/function_logs/index", "autoapi/abacusai/generated_pit_feature_config_option/index", "autoapi/abacusai/graph_dashboard/index", "autoapi/abacusai/index", "autoapi/abacusai/indexing_config/index", "autoapi/abacusai/item_statistics/index", "autoapi/abacusai/llm_code_block/index", "autoapi/abacusai/llm_input/index", "autoapi/abacusai/llm_parameters/index", "autoapi/abacusai/llm_response/index", "autoapi/abacusai/model/index", "autoapi/abacusai/model_artifacts_export/index", "autoapi/abacusai/model_blueprint_export/index", "autoapi/abacusai/model_blueprint_stage/index", "autoapi/abacusai/model_location/index", "autoapi/abacusai/model_metrics/index", "autoapi/abacusai/model_monitor/index", "autoapi/abacusai/model_monitor_org_summary/index", "autoapi/abacusai/model_monitor_summary/index", "autoapi/abacusai/model_monitor_summary_from_org/index", "autoapi/abacusai/model_monitor_version/index", "autoapi/abacusai/model_monitor_version_metric_data/index", "autoapi/abacusai/model_training_type_for_deployment/index", "autoapi/abacusai/model_upload/index", "autoapi/abacusai/model_version/index", "autoapi/abacusai/modification_lock_info/index", "autoapi/abacusai/module/index", "autoapi/abacusai/monitor_alert/index", "autoapi/abacusai/monitor_alert_version/index", "autoapi/abacusai/natural_language_explanation/index", "autoapi/abacusai/nested_feature/index", "autoapi/abacusai/null_violation/index", "autoapi/abacusai/organization_group/index", "autoapi/abacusai/organization_search_result/index", "autoapi/abacusai/pipeline/index", "autoapi/abacusai/pipeline_reference/index", "autoapi/abacusai/pipeline_step/index", "autoapi/abacusai/pipeline_step_version/index", "autoapi/abacusai/pipeline_step_version_reference/index", "autoapi/abacusai/pipeline_version/index", "autoapi/abacusai/point_in_time_feature/index", "autoapi/abacusai/point_in_time_group/index", "autoapi/abacusai/point_in_time_group_feature/index", "autoapi/abacusai/prediction_client/index", "autoapi/abacusai/prediction_dataset/index", "autoapi/abacusai/prediction_feature_group/index", "autoapi/abacusai/prediction_input/index", "autoapi/abacusai/prediction_metric/index", "autoapi/abacusai/prediction_metric_version/index", "autoapi/abacusai/problem_type/index", "autoapi/abacusai/project/index", "autoapi/abacusai/project_config/index", "autoapi/abacusai/project_dataset/index", "autoapi/abacusai/project_validation/index", "autoapi/abacusai/python_function/index", "autoapi/abacusai/python_function_validator/index", "autoapi/abacusai/python_plot_function/index", "autoapi/abacusai/range_violation/index", "autoapi/abacusai/refresh_pipeline_run/index", "autoapi/abacusai/refresh_policy/index", "autoapi/abacusai/refresh_schedule/index", "autoapi/abacusai/resolved_feature_group_template/index", "autoapi/abacusai/return_class/index", "autoapi/abacusai/schema/index", "autoapi/abacusai/streaming_auth_token/index", "autoapi/abacusai/streaming_client/index", "autoapi/abacusai/streaming_connector/index", "autoapi/abacusai/training_config_options/index", "autoapi/abacusai/type_violation/index", "autoapi/abacusai/upload/index", "autoapi/abacusai/upload_part/index", "autoapi/abacusai/use_case/index", "autoapi/abacusai/use_case_requirements/index", "autoapi/abacusai/user/index", "autoapi/abacusai/user_exception/index", "autoapi/abacusai/vector_store/index", "autoapi/abacusai/vector_store_lookup_result/index", "autoapi/abacusai/vector_store_version/index", "autoapi/abacusai/webhook/index", "index"], "filenames": ["autoapi/abacusai/algorithm/index.rst", "autoapi/abacusai/annotation/index.rst", "autoapi/abacusai/annotation_config/index.rst", "autoapi/abacusai/annotation_entry/index.rst", "autoapi/abacusai/annotations_status/index.rst", "autoapi/abacusai/api_class/abstract/index.rst", "autoapi/abacusai/api_class/dataset/index.rst", "autoapi/abacusai/api_class/enums/index.rst", "autoapi/abacusai/api_class/feature_group/index.rst", "autoapi/abacusai/api_class/index.rst", "autoapi/abacusai/api_class/model/index.rst", "autoapi/abacusai/api_class/project/index.rst", "autoapi/abacusai/api_class/python_functions/index.rst", "autoapi/abacusai/api_class/refresh/index.rst", "autoapi/abacusai/api_client_utils/index.rst", "autoapi/abacusai/api_endpoint/index.rst", "autoapi/abacusai/api_key/index.rst", "autoapi/abacusai/application_connector/index.rst", "autoapi/abacusai/batch_prediction/index.rst", "autoapi/abacusai/batch_prediction_version/index.rst", "autoapi/abacusai/categorical_range_violation/index.rst", "autoapi/abacusai/chat_message/index.rst", "autoapi/abacusai/chat_session/index.rst", "autoapi/abacusai/client/index.rst", "autoapi/abacusai/code_source/index.rst", "autoapi/abacusai/concatenation_config/index.rst", "autoapi/abacusai/cryptography/index.rst", "autoapi/abacusai/custom_loss_function/index.rst", "autoapi/abacusai/custom_metric/index.rst", "autoapi/abacusai/custom_metric_version/index.rst", "autoapi/abacusai/custom_train_function_info/index.rst", "autoapi/abacusai/data_consistency_duplication/index.rst", "autoapi/abacusai/data_prep_logs/index.rst", "autoapi/abacusai/data_quality_results/index.rst", "autoapi/abacusai/database_connector/index.rst", "autoapi/abacusai/dataset/index.rst", "autoapi/abacusai/dataset_column/index.rst", "autoapi/abacusai/dataset_version/index.rst", "autoapi/abacusai/deployment/index.rst", "autoapi/abacusai/deployment_auth_token/index.rst", "autoapi/abacusai/document/index.rst", "autoapi/abacusai/document_annotation/index.rst", "autoapi/abacusai/document_store/index.rst", "autoapi/abacusai/document_store_import/index.rst", "autoapi/abacusai/drift_distribution/index.rst", "autoapi/abacusai/drift_distributions/index.rst", "autoapi/abacusai/eda/index.rst", "autoapi/abacusai/eda_chart_description/index.rst", "autoapi/abacusai/eda_collinearity/index.rst", "autoapi/abacusai/eda_data_consistency/index.rst", "autoapi/abacusai/eda_feature_association/index.rst", "autoapi/abacusai/eda_feature_collinearity/index.rst", "autoapi/abacusai/eda_forecasting_analysis/index.rst", "autoapi/abacusai/eda_version/index.rst", "autoapi/abacusai/embedding_feature_drift_distribution/index.rst", "autoapi/abacusai/execute_feature_group_operation/index.rst", "autoapi/abacusai/feature/index.rst", "autoapi/abacusai/feature_distribution/index.rst", "autoapi/abacusai/feature_drift_summary/index.rst", "autoapi/abacusai/feature_group/index.rst", "autoapi/abacusai/feature_group_export/index.rst", "autoapi/abacusai/feature_group_export_config/index.rst", "autoapi/abacusai/feature_group_export_download_url/index.rst", "autoapi/abacusai/feature_group_lineage/index.rst", "autoapi/abacusai/feature_group_metrics/index.rst", "autoapi/abacusai/feature_group_refresh_export_config/index.rst", "autoapi/abacusai/feature_group_template/index.rst", "autoapi/abacusai/feature_group_template_variable_options/index.rst", "autoapi/abacusai/feature_group_version/index.rst", "autoapi/abacusai/feature_importance/index.rst", "autoapi/abacusai/feature_record/index.rst", "autoapi/abacusai/file_connector/index.rst", "autoapi/abacusai/file_connector_instructions/index.rst", "autoapi/abacusai/file_connector_verification/index.rst", "autoapi/abacusai/forecasting_analysis_graph_data/index.rst", "autoapi/abacusai/function_logs/index.rst", "autoapi/abacusai/generated_pit_feature_config_option/index.rst", "autoapi/abacusai/graph_dashboard/index.rst", "autoapi/abacusai/index.rst", "autoapi/abacusai/indexing_config/index.rst", "autoapi/abacusai/item_statistics/index.rst", "autoapi/abacusai/llm_code_block/index.rst", "autoapi/abacusai/llm_input/index.rst", "autoapi/abacusai/llm_parameters/index.rst", "autoapi/abacusai/llm_response/index.rst", "autoapi/abacusai/model/index.rst", "autoapi/abacusai/model_artifacts_export/index.rst", "autoapi/abacusai/model_blueprint_export/index.rst", "autoapi/abacusai/model_blueprint_stage/index.rst", "autoapi/abacusai/model_location/index.rst", "autoapi/abacusai/model_metrics/index.rst", "autoapi/abacusai/model_monitor/index.rst", "autoapi/abacusai/model_monitor_org_summary/index.rst", "autoapi/abacusai/model_monitor_summary/index.rst", "autoapi/abacusai/model_monitor_summary_from_org/index.rst", "autoapi/abacusai/model_monitor_version/index.rst", "autoapi/abacusai/model_monitor_version_metric_data/index.rst", "autoapi/abacusai/model_training_type_for_deployment/index.rst", "autoapi/abacusai/model_upload/index.rst", "autoapi/abacusai/model_version/index.rst", "autoapi/abacusai/modification_lock_info/index.rst", "autoapi/abacusai/module/index.rst", "autoapi/abacusai/monitor_alert/index.rst", "autoapi/abacusai/monitor_alert_version/index.rst", "autoapi/abacusai/natural_language_explanation/index.rst", "autoapi/abacusai/nested_feature/index.rst", "autoapi/abacusai/null_violation/index.rst", "autoapi/abacusai/organization_group/index.rst", "autoapi/abacusai/organization_search_result/index.rst", "autoapi/abacusai/pipeline/index.rst", "autoapi/abacusai/pipeline_reference/index.rst", "autoapi/abacusai/pipeline_step/index.rst", "autoapi/abacusai/pipeline_step_version/index.rst", "autoapi/abacusai/pipeline_step_version_reference/index.rst", "autoapi/abacusai/pipeline_version/index.rst", "autoapi/abacusai/point_in_time_feature/index.rst", "autoapi/abacusai/point_in_time_group/index.rst", "autoapi/abacusai/point_in_time_group_feature/index.rst", "autoapi/abacusai/prediction_client/index.rst", "autoapi/abacusai/prediction_dataset/index.rst", "autoapi/abacusai/prediction_feature_group/index.rst", "autoapi/abacusai/prediction_input/index.rst", "autoapi/abacusai/prediction_metric/index.rst", "autoapi/abacusai/prediction_metric_version/index.rst", "autoapi/abacusai/problem_type/index.rst", "autoapi/abacusai/project/index.rst", "autoapi/abacusai/project_config/index.rst", "autoapi/abacusai/project_dataset/index.rst", "autoapi/abacusai/project_validation/index.rst", "autoapi/abacusai/python_function/index.rst", "autoapi/abacusai/python_function_validator/index.rst", "autoapi/abacusai/python_plot_function/index.rst", "autoapi/abacusai/range_violation/index.rst", "autoapi/abacusai/refresh_pipeline_run/index.rst", "autoapi/abacusai/refresh_policy/index.rst", "autoapi/abacusai/refresh_schedule/index.rst", "autoapi/abacusai/resolved_feature_group_template/index.rst", "autoapi/abacusai/return_class/index.rst", "autoapi/abacusai/schema/index.rst", "autoapi/abacusai/streaming_auth_token/index.rst", "autoapi/abacusai/streaming_client/index.rst", "autoapi/abacusai/streaming_connector/index.rst", "autoapi/abacusai/training_config_options/index.rst", "autoapi/abacusai/type_violation/index.rst", "autoapi/abacusai/upload/index.rst", "autoapi/abacusai/upload_part/index.rst", "autoapi/abacusai/use_case/index.rst", "autoapi/abacusai/use_case_requirements/index.rst", "autoapi/abacusai/user/index.rst", "autoapi/abacusai/user_exception/index.rst", "autoapi/abacusai/vector_store/index.rst", "autoapi/abacusai/vector_store_lookup_result/index.rst", "autoapi/abacusai/vector_store_version/index.rst", "autoapi/abacusai/webhook/index.rst", "index.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.annotation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.annotation_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.annotation_entry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.annotations_status</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.abstract</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.enums</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.feature_group</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.project</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.python_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.refresh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_client_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_endpoint</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_key</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.application_connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.batch_prediction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.batch_prediction_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.categorical_range_violation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.chat_message</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.chat_session</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.client</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.code_source</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.concatenation_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.cryptography</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.custom_loss_function</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.custom_metric</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.custom_metric_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.custom_train_function_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.data_consistency_duplication</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.data_prep_logs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.data_quality_results</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.database_connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.dataset_column</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.dataset_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.deployment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.deployment_auth_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.document</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.document_annotation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.document_store</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.document_store_import</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.drift_distribution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.drift_distributions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_chart_description</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_collinearity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_data_consistency</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_feature_association</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_feature_collinearity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_forecasting_analysis</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.embedding_feature_drift_distribution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.execute_feature_group_operation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_distribution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_drift_summary</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_export</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_export_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_export_download_url</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_lineage</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_refresh_export_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_template</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_template_variable_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_importance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_record</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.file_connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.file_connector_instructions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.file_connector_verification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.forecasting_analysis_graph_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.function_logs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.generated_pit_feature_config_option</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.graph_dashboard</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.indexing_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.item_statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.llm_code_block</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.llm_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.llm_parameters</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.llm_response</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_artifacts_export</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_blueprint_export</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_blueprint_stage</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_location</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor_org_summary</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor_summary</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor_summary_from_org</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor_version_metric_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_training_type_for_deployment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_upload</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.modification_lock_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.module</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.monitor_alert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.monitor_alert_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.natural_language_explanation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.nested_feature</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.null_violation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.organization_group</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.organization_search_result</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_reference</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_step</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_step_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_step_version_reference</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.point_in_time_feature</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.point_in_time_group</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.point_in_time_group_feature</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_client</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_feature_group</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_metric</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_metric_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.problem_type</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.project</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.project_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.project_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.project_validation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.python_function</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.python_function_validator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.python_plot_function</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.range_violation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.refresh_pipeline_run</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.refresh_policy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.refresh_schedule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.resolved_feature_group_template</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.return_class</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.schema</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.streaming_auth_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.streaming_client</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.streaming_connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.training_config_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.type_violation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.upload</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.upload_part</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.use_case</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.use_case_requirements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.user</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.user_exception</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.vector_store</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.vector_store_lookup_result</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.vector_store_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.webhook</span></code>", "Abacus.AI API Client PyDocs"], "terms": {"client": [0, 1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "name": [0, 1, 2, 3, 9, 10, 12, 17, 18, 19, 20, 23, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 65, 66, 68, 69, 74, 75, 76, 77, 78, 85, 87, 88, 89, 91, 95, 96, 99, 101, 102, 103, 105, 106, 107, 109, 111, 112, 114, 115, 116, 117, 118, 124, 125, 127, 129, 130, 131, 132, 134, 136, 138, 140, 141, 142, 143, 146, 147, 148, 150], "none": [0, 1, 2, 3, 4, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "problemtyp": [0, 7, 9, 10, 23, 28, 78, 124, 125, 146], "createdat": [0, 16, 17, 18, 22, 27, 28, 29, 34, 35, 37, 38, 39, 40, 41, 42, 46, 59, 60, 66, 68, 77, 85, 86, 91, 98, 101, 102, 103, 107, 109, 111, 112, 114, 122, 123, 125, 129, 131, 133, 134, 139, 141, 144, 148, 150, 152, 153], "updatedat": [0, 3, 66, 111, 112, 114], "isdefaulten": 0, "traininginputmap": 0, "trainfunctionnam": [0, 23, 78, 85, 125], "predictfunctionnam": [0, 23, 78, 85, 125], "predictmanyfunctionnam": [0, 85], "initializefunctionnam": [0, 85], "configopt": 0, "algorithmid": 0, "usegpu": [0, 85, 99], "codesourc": [0, 24, 27, 29, 59, 68, 85, 99, 101, 129, 131], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "return_class": [0, 1, 2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "abstractapiclass": [0, 1, 2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "custom": [0, 7, 9, 10, 23, 24, 27, 28, 29, 30, 35, 59, 78, 85, 99, 101, 124, 125, 129], "creat": [0, 5, 6, 8, 9, 10, 11, 13, 16, 17, 18, 19, 22, 23, 27, 28, 29, 34, 35, 37, 38, 39, 40, 42, 43, 46, 48, 50, 56, 59, 60, 66, 68, 77, 78, 85, 86, 89, 91, 95, 98, 99, 101, 102, 103, 105, 107, 109, 111, 112, 114, 118, 122, 123, 125, 129, 131, 133, 134, 135, 139, 141, 144, 150, 152, 153], "paramet": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "apicli": [0, 1, 2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "an": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "authent": [0, 1, 2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "api": [0, 1, 2, 3, 4, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "instanc": [0, 1, 2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "str": [0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 71, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "The": [0, 1, 2, 3, 4, 8, 9, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "type": [0, 1, 2, 3, 4, 5, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "problem": [0, 9, 10, 23, 27, 28, 78, 124, 125, 146], "thi": [0, 1, 2, 3, 4, 5, 7, 9, 10, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "work": [0, 23, 78], "when": [0, 8, 9, 10, 16, 17, 18, 19, 23, 26, 27, 28, 29, 34, 35, 37, 38, 39, 42, 46, 59, 62, 66, 68, 71, 78, 85, 91, 98, 101, 107, 109, 111, 112, 118, 122, 123, 125, 129, 131, 133, 134, 135, 139, 141, 142, 144, 148, 150, 152], "wa": [0, 3, 4, 16, 17, 18, 21, 22, 23, 27, 28, 29, 34, 35, 37, 38, 39, 40, 41, 42, 43, 46, 59, 60, 66, 68, 77, 78, 85, 86, 91, 98, 101, 102, 103, 107, 109, 111, 112, 114, 122, 123, 125, 129, 131, 133, 134, 139, 141, 144, 150, 151, 152, 153], "last": [0, 8, 9, 10, 23, 35, 37, 78, 81, 85, 111, 112, 135, 142, 144], "updat": [0, 3, 4, 18, 23, 38, 59, 66, 77, 78, 85, 99, 102, 109, 111, 112, 114, 129, 134, 140, 150, 153], "bool": [0, 4, 5, 9, 10, 12, 18, 19, 21, 23, 25, 35, 37, 38, 43, 50, 59, 60, 66, 68, 71, 72, 73, 76, 78, 81, 85, 91, 95, 99, 100, 104, 107, 118, 119, 120, 125, 127, 128, 134, 142, 147], "whether": [0, 4, 9, 10, 12, 21, 23, 35, 59, 68, 78, 81, 85, 91, 99, 100, 104, 118, 125], "train": [0, 9, 10, 18, 19, 20, 23, 30, 32, 35, 38, 44, 45, 46, 54, 57, 58, 59, 78, 85, 87, 90, 91, 95, 97, 99, 106, 118, 124, 125, 128, 132, 133, 142, 143, 147], "default": [0, 9, 10, 18, 23, 38, 59, 76, 78, 85, 98, 99, 107, 118, 119, 120, 125, 142, 144, 150], "dict": [0, 1, 2, 3, 4, 5, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "map": [0, 7, 9, 23, 30, 38, 56, 60, 61, 65, 66, 69, 78, 96, 105, 112, 118, 125, 129, 130, 131, 136, 138, 147], "function": [0, 9, 10, 12, 24, 27, 29, 30, 59, 68, 75, 76, 77, 78, 85, 95, 99, 101, 109, 111, 112, 114, 118, 125, 129, 131], "e": [0, 1, 3, 9, 10, 18, 19, 23, 27, 28, 53, 59, 66, 78, 95, 118], "g": [0, 1, 3, 9, 10, 18, 19, 23, 27, 28, 53, 59, 66, 78, 95, 118], "data": [0, 1, 9, 10, 18, 19, 23, 25, 30, 31, 32, 33, 35, 36, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 70, 74, 78, 80, 85, 92, 93, 94, 95, 96, 99, 105, 118, 125, 138, 139, 140, 143, 144], "config": [0, 2, 4, 5, 8, 9, 10, 12, 23, 25, 30, 35, 38, 59, 60, 65, 66, 68, 78, 79, 85, 87, 91, 95, 99, 118, 125, 126, 136, 142], "found": [0, 9, 10, 19, 23, 59, 78, 85, 125, 140, 150], "sourc": [0, 23, 24, 25, 27, 29, 35, 37, 56, 59, 68, 78, 81, 85, 99, 101, 105, 109, 111, 116, 118, 125, 129, 131], "code": [0, 23, 24, 27, 29, 59, 68, 78, 81, 84, 85, 99, 101, 109, 111, 125, 129, 131], "execut": [0, 23, 55, 59, 75, 78, 85, 109, 118, 125, 129, 130, 134, 135], "model": [0, 9, 18, 19, 20, 23, 24, 32, 38, 46, 53, 58, 59, 69, 78, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 106, 110, 113, 118, 119, 120, 122, 125, 132, 133, 134, 140, 142, 143, 144], "It": [0, 9, 10, 23, 35, 59, 78, 85, 87, 118, 125, 144], "i": [0, 1, 3, 9, 10, 12, 18, 19, 23, 24, 26, 28, 35, 37, 38, 39, 43, 46, 50, 53, 55, 59, 60, 61, 62, 65, 66, 68, 75, 78, 81, 85, 86, 87, 90, 91, 95, 99, 100, 102, 103, 104, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 133, 134, 135, 139, 140, 142, 144, 147, 150, 152, 153], "run": [0, 18, 23, 24, 38, 53, 55, 78, 85, 91, 95, 102, 103, 109, 110, 114, 122, 123, 125, 129, 130, 133, 134, 135], "predict": [0, 7, 9, 10, 15, 18, 19, 20, 23, 38, 39, 44, 45, 57, 58, 78, 85, 90, 91, 92, 93, 95, 96, 99, 106, 110, 113, 118, 119, 120, 121, 122, 123, 125, 132, 133, 134, 143, 144], "through": [0, 9, 10, 23, 78, 85, 108, 125], "batch": [0, 9, 10, 18, 19, 23, 38, 78, 85, 91, 95, 110, 113, 119, 120, 121, 125, 133, 144], "initi": [0, 9, 10, 23, 78, 85, 125, 144], "befor": [0, 4, 9, 10, 23, 35, 59, 78, 85, 88, 118, 125, 144], "us": [0, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 21, 23, 26, 27, 28, 35, 38, 39, 41, 43, 56, 59, 60, 61, 62, 65, 66, 68, 77, 78, 79, 85, 87, 89, 92, 96, 97, 98, 99, 101, 105, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 131, 138, 139, 142, 144, 146, 147, 150], "make": [0, 9, 10, 15, 18, 19, 23, 78, 85, 118, 125], "dataset": [0, 8, 9, 10, 18, 23, 36, 37, 43, 59, 63, 68, 69, 78, 85, 99, 110, 113, 118, 119, 120, 121, 122, 125, 127, 128, 133, 134, 139, 144, 147], "uniqu": [0, 16, 17, 18, 19, 23, 27, 28, 29, 34, 35, 36, 37, 38, 39, 42, 43, 46, 53, 56, 59, 60, 61, 65, 66, 68, 77, 78, 85, 86, 91, 95, 98, 99, 100, 101, 102, 103, 105, 107, 109, 114, 118, 119, 120, 122, 123, 125, 127, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 144, 145, 150, 152, 153], "identifi": [0, 9, 10, 17, 18, 19, 23, 27, 28, 29, 34, 35, 37, 38, 42, 43, 46, 53, 59, 60, 61, 65, 66, 68, 77, 78, 85, 86, 91, 95, 98, 99, 100, 101, 102, 103, 107, 109, 114, 118, 119, 120, 122, 123, 125, 129, 131, 133, 134, 135, 136, 140, 141, 144, 145, 150, 152, 153], "gpu": [0, 9, 10, 23, 78, 85, 99, 125], "info": [0, 3, 23, 68, 78, 90, 94, 95, 99, 131], "about": [0, 1, 9, 10, 18, 19, 23, 27, 29, 30, 59, 77, 78, 92, 99, 100, 101, 102, 107, 111, 118, 125, 129, 131], "__repr__": [0, 1, 2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "return": [0, 1, 2, 3, 4, 5, 7, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "repr": [0, 1, 2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "self": [0, 1, 2, 3, 4, 7, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "to_dict": [0, 1, 2, 3, 4, 5, 9, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "get": [0, 1, 2, 3, 4, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "represent": [0, 1, 2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "valu": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "annotationtyp": 1, "annotationvalu": 1, "store": [1, 3, 18, 23, 38, 40, 41, 42, 43, 59, 78, 118, 125, 150, 151, 152], "A": [1, 9, 12, 14, 16, 17, 18, 19, 21, 22, 23, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 72, 77, 78, 79, 84, 85, 86, 88, 91, 92, 93, 94, 95, 98, 99, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 128, 129, 130, 133, 134, 135, 138, 139, 140, 141, 142, 144, 145, 146, 147, 150, 152, 153], "determin": [1, 9, 10, 23, 35, 59, 69, 78, 99, 118, 122, 125], "how": [1, 9, 10, 23, 30, 35, 44, 45, 52, 57, 66, 78, 125, 127], "interpret": 1, "label": [1, 2, 3, 9, 10, 23, 27, 45, 59, 78, 92, 93, 95, 97, 118, 125], "bound": [1, 23, 35, 41, 59, 78], "box": [1, 7, 9, 23, 35, 41, 50, 78], "etc": [1, 5, 9, 10, 13, 18, 19, 23, 27, 35, 37, 38, 53, 55, 59, 60, 68, 78, 81, 85, 86, 95, 99, 103, 114, 118, 133, 144, 150, 152], "json": [1, 3, 7, 9, 18, 19, 23, 38, 59, 68, 78, 98, 118, 125, 138, 140, 153], "compat": [1, 3, 23, 59, 78, 144], "format": [1, 3, 4, 9, 10, 18, 19, 23, 28, 35, 36, 38, 39, 42, 59, 60, 61, 65, 68, 77, 78, 86, 98, 99, 101, 104, 118, 129, 131, 133, 140, 147], "annotationentri": [3, 23, 59, 78], "featuregroupid": [3, 38, 46, 59, 66, 68, 110, 120, 122, 134], "featurenam": 3, "docid": [3, 23, 78, 118], "featuregrouprowidentifi": 3, "annotationentrymark": 3, "statu": [2, 3, 4, 17, 18, 19, 23, 24, 34, 35, 37, 38, 43, 53, 55, 59, 60, 68, 78, 85, 86, 95, 98, 99, 103, 112, 113, 114, 123, 133, 141, 144, 148, 150, 152], "lockeduntil": 3, "verificationinfo": 3, "annot": [2, 3, 4, 23, 40, 41, 59, 68, 78], "entri": [3, 9, 10, 23, 35, 37, 59, 78, 106], "id": [3, 16, 17, 18, 19, 22, 23, 30, 35, 37, 38, 46, 53, 55, 59, 60, 61, 65, 68, 77, 78, 85, 91, 95, 96, 99, 102, 103, 109, 110, 111, 113, 118, 121, 125, 127, 133, 134, 137, 140, 141, 144, 150, 153], "featur": [1, 2, 3, 4, 8, 9, 10, 18, 19, 20, 23, 24, 25, 30, 35, 36, 38, 44, 46, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 78, 79, 85, 86, 91, 95, 96, 99, 105, 106, 108, 109, 110, 111, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 136, 138, 140, 143, 150, 152], "group": [2, 3, 4, 8, 9, 10, 18, 19, 23, 24, 25, 30, 35, 38, 46, 48, 52, 53, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 85, 86, 91, 95, 96, 99, 100, 105, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 133, 134, 136, 140, 148, 150, 152], "belong": [3, 23, 37, 38, 46, 53, 68, 77, 78, 85, 91, 95, 98, 99, 102, 109, 111, 112, 114, 115, 122, 125, 148], "primari": [3, 23, 31, 49, 52, 59, 78, 79, 125, 148], "document": [3, 4, 9, 10, 23, 35, 41, 42, 43, 59, 78, 85, 109, 111, 118, 125, 127, 138, 150, 151], "kei": [3, 5, 8, 9, 10, 13, 16, 17, 18, 23, 26, 31, 34, 38, 40, 43, 49, 50, 52, 59, 60, 61, 68, 78, 79, 90, 115, 116, 118, 125, 140, 141, 147], "row": [3, 7, 8, 9, 10, 19, 20, 23, 31, 35, 37, 38, 52, 59, 64, 78, 92, 115, 116, 117, 118, 132], "cast": [3, 23, 59, 78], "string": [3, 7, 9, 17, 18, 19, 23, 28, 29, 34, 35, 37, 38, 42, 46, 53, 55, 59, 60, 61, 62, 66, 68, 77, 78, 81, 85, 86, 91, 95, 99, 100, 101, 102, 103, 107, 109, 111, 114, 118, 122, 125, 129, 130, 131, 133, 134, 135, 138, 140, 141, 144, 145, 150, 152, 153], "usual": [3, 23, 59, 78], "most": [3, 8, 9, 10, 20, 23, 78, 118], "recent": [3, 8, 9, 10, 23, 59, 78], "time": [3, 4, 7, 8, 9, 10, 18, 19, 23, 28, 35, 36, 37, 38, 39, 46, 52, 53, 55, 56, 59, 60, 68, 71, 75, 77, 78, 85, 86, 91, 92, 95, 99, 101, 102, 103, 109, 111, 112, 114, 115, 116, 117, 118, 122, 123, 125, 131, 133, 134, 135, 144, 148, 150, 152, 153], "modifi": [3, 23, 59, 78, 100, 107], "creation": [3, 9, 10, 59, 78, 129, 131, 133], "marker": 3, "until": [3, 18, 19, 23, 35, 37, 38, 53, 55, 59, 60, 68, 78, 85, 86, 95, 99, 103, 114, 123, 125, 133, 144, 150, 152], "which": [3, 9, 10, 15, 18, 21, 22, 23, 25, 35, 38, 40, 41, 43, 46, 53, 59, 60, 61, 62, 66, 68, 77, 78, 84, 85, 86, 91, 98, 99, 102, 103, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 124, 125, 134, 140, 144, 152], "lock": [3, 23, 59, 78, 100], "edit": [3, 23, 27, 28, 78, 85, 101], "iso": [3, 4, 18, 28, 29, 34, 38, 39, 42, 60, 62, 77, 86, 98, 99, 101, 129, 131, 133], "8601": [3, 4, 18, 28, 29, 34, 38, 39, 42, 60, 62, 77, 86, 98, 99, 101, 129, 131, 133], "verif": [3, 23, 59, 71, 72, 73, 78, 98], "structur": 3, "hold": [3, 125], "annotationsstatu": [4, 23, 59, 78], "total": [4, 9, 10, 19, 23, 31, 78, 92, 118], "done": [4, 23, 46, 59, 78, 130], "inprogress": 4, "todo": [4, 23, 59, 78], "int": [4, 8, 9, 10, 18, 19, 23, 25, 31, 35, 37, 38, 40, 41, 42, 43, 46, 53, 55, 59, 60, 64, 68, 78, 80, 84, 85, 86, 91, 92, 95, 99, 103, 109, 114, 115, 116, 118, 123, 125, 133, 142, 144, 150, 152], "number": [4, 8, 9, 10, 18, 19, 23, 31, 35, 37, 38, 41, 42, 43, 49, 52, 55, 59, 64, 68, 78, 81, 84, 92, 101, 109, 115, 116, 118, 125, 129, 131, 144, 150], "current": [4, 18, 19, 23, 29, 35, 37, 38, 43, 46, 53, 55, 59, 60, 66, 68, 70, 74, 77, 78, 85, 86, 87, 91, 95, 98, 99, 102, 103, 107, 109, 111, 114, 115, 116, 118, 123, 125, 133, 134, 144, 150, 152, 153], "being": [4, 9, 10, 18, 23, 37, 46, 59, 60, 61, 78, 85, 86, 91, 118, 125, 128, 144, 147], "need": [4, 23, 59, 78, 85, 95, 118, 125, 142], "camel_cas": 5, "apiclass": [5, 6, 8, 9, 10, 11, 12, 13, 78], "abc": [5, 6, 8, 9, 10, 11, 13, 23, 78], "helper": [5, 6, 8, 9, 10, 11, 13, 78, 130], "provid": [5, 6, 8, 9, 10, 11, 13, 17, 18, 21, 23, 30, 38, 53, 59, 66, 78, 85, 89, 95, 109, 116, 118, 125, 150, 153], "standard": [5, 6, 8, 9, 10, 11, 13, 75, 78, 80], "wai": [5, 6, 8, 9, 10, 11, 13, 78], "inherit": [5, 6, 8, 9, 10, 11, 13, 78], "__post_init__": [5, 8, 9, 78], "convert": [5, 9, 13, 23, 59, 78, 115, 117, 129, 130], "dictionari": [1, 5, 9, 10, 13, 23, 59, 78, 94, 118, 129, 130, 140, 147, 153], "respons": [5, 9, 10, 13, 22, 23, 26, 78, 81, 82, 84, 118, 125], "ar": [5, 9, 10, 13, 18, 19, 23, 35, 38, 49, 59, 72, 78, 85, 92, 99, 101, 107, 115, 116, 118, 125, 131, 144], "camel": [5, 9, 13, 78], "case": [5, 9, 13, 18, 23, 35, 38, 50, 59, 78, 124, 125, 127, 138, 146, 147], "also": [5, 9, 10, 13, 23, 78, 85], "valid": [5, 9, 10, 13, 23, 24, 35, 36, 59, 66, 78, 81, 85, 109, 111, 118, 125, 128, 129, 130, 136, 142], "field": [5, 9, 10, 13, 18, 19, 23, 29, 35, 37, 38, 43, 46, 53, 55, 59, 60, 66, 68, 77, 78, 85, 86, 91, 95, 99, 102, 103, 107, 109, 111, 114, 118, 125, 133, 134, 142, 144, 150, 152, 153], "receiv": [5, 9, 13, 23, 59, 78], "classmethod": [5, 9, 11, 78, 130], "from_dict": [5, 9, 11, 78], "input_dict": [5, 9, 11, 78], "_apiclassfactori": [5, 8, 9, 10, 13, 78], "config_abstract_class": [5, 9, 10, 13, 78], "config_class_kei": [5, 8, 9, 10, 13, 78], "config_class_map": [5, 8, 9, 10, 13, 78], "apienum": [7, 9, 78], "gener": [7, 9, 10, 23, 35, 53, 59, 76, 78, 84, 117, 118, 130, 144], "enumer": [7, 9, 31, 42, 78], "deriv": [7, 9, 78], "from": [7, 9, 10, 19, 22, 23, 24, 25, 30, 32, 33, 35, 37, 38, 48, 53, 55, 59, 66, 75, 78, 81, 84, 85, 95, 102, 107, 109, 111, 113, 115, 116, 118, 125, 128, 134, 136, 140, 144, 150], "defin": [7, 9, 23, 27, 29, 59, 78, 85, 99, 107, 125, 135], "new": [7, 9, 17, 18, 23, 34, 35, 38, 46, 59, 66, 78, 85, 87, 91, 107, 125, 133, 140, 141], "__eq__": [7, 9, 78, 137], "other": [7, 9, 23, 37, 78, 91, 96, 109, 125, 137], "__hash__": [7, 9, 78], "hash": [7, 9, 23, 78, 144, 145], "samplingmethodtyp": [7, 8, 9, 78], "n_sampl": [7, 8, 9, 78], "percent_sampl": [7, 8, 9, 78], "samplingconfig": [8, 9, 23, 59, 78], "abstract": [6, 8, 9, 10, 11, 12, 13, 23, 78], "sampl": [7, 8, 9, 10, 23, 31, 59, 69, 78], "nsamplingconfig": [8, 9, 78], "distinct": [8, 9, 78], "column": [8, 9, 10, 14, 18, 19, 23, 35, 36, 37, 38, 45, 50, 52, 56, 58, 59, 60, 61, 64, 65, 68, 74, 78, 85, 90, 99, 105, 118, 125, 128, 147], "includ": [8, 9, 10, 18, 19, 23, 35, 37, 38, 53, 59, 66, 77, 78, 85, 87, 93, 98, 118, 125, 136], "specifi": [8, 9, 10, 16, 18, 19, 20, 23, 25, 34, 35, 37, 38, 45, 46, 53, 54, 57, 58, 59, 66, 68, 69, 78, 85, 91, 95, 99, 107, 109, 111, 114, 115, 116, 118, 125, 132, 140, 142, 144, 150], "sampling_method": [8, 9, 78], "sample_count": [8, 9, 78], "key_column": [8, 9, 78], "list": [2, 7, 8, 9, 10, 11, 13, 17, 18, 19, 20, 21, 23, 24, 31, 32, 33, 34, 35, 36, 38, 46, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 63, 64, 65, 66, 67, 68, 72, 74, 77, 78, 79, 84, 85, 88, 90, 91, 93, 94, 95, 96, 99, 100, 107, 109, 111, 112, 114, 115, 116, 118, 121, 122, 124, 125, 128, 129, 130, 133, 134, 138, 140, 142, 144, 147, 148, 150], "": [8, 9, 18, 19, 23, 29, 35, 37, 38, 46, 53, 55, 56, 59, 60, 66, 68, 70, 71, 77, 78, 85, 86, 91, 92, 95, 99, 100, 102, 103, 105, 107, 109, 111, 112, 114, 116, 118, 125, 127, 133, 134, 138, 144, 148, 150, 152, 153], "enum": [8, 9, 10, 12, 13, 18, 23, 34, 35, 68, 78, 99, 107, 123, 125, 146, 147], "percentsamplingconfig": [8, 9, 78], "fraction": [8, 9, 10, 23, 78, 118], "sample_perc": [8, 9, 78], "float": [7, 8, 9, 10, 20, 23, 58, 59, 78, 80, 106, 108, 115, 116, 118, 132, 138, 142, 151], "percentag": [7, 8, 9, 10, 78, 80, 92], "_samplingconfigfactori": [8, 9, 78], "feature_group": [7, 9, 18, 19, 23, 78, 125, 129], "invalid_pandas_column_name_charact": 14, "za": 14, "z0": 14, "9_": 14, "clean_column_nam": [14, 23, 78], "get_clean_function_source_cod": 14, "func": 14, "callabl": [14, 23, 78, 125], "apikei": [16, 23, 78], "apikeyid": 16, "tag": [16, 23, 59, 78, 125], "request": [15, 16, 18, 23, 38, 39, 59, 78, 118, 125, 139, 140, 153], "abacu": [9, 10, 16, 17, 18, 21, 22, 23, 34, 35, 38, 59, 71, 72, 73, 78, 85, 118, 125, 127, 130, 138, 140, 141, 144, 148, 153], "ai": [9, 10, 16, 17, 18, 23, 34, 35, 38, 59, 71, 72, 73, 78, 85, 118, 125, 127, 130, 138, 140, 141, 144, 148, 153], "scope": [16, 23, 78, 125], "specif": [16, 23, 35, 37, 59, 68, 78, 107, 118, 122, 123, 125, 126, 147], "organ": [16, 23, 35, 59, 66, 78, 92, 94, 100, 107, 125, 148], "partial": 16, "obscur": 16, "user": [9, 10, 16, 17, 23, 34, 38, 46, 59, 66, 67, 77, 78, 85, 91, 97, 99, 100, 102, 103, 107, 109, 111, 118, 125, 134, 141, 146, 147], "friendli": [16, 17, 23, 34, 38, 46, 59, 66, 77, 78, 85, 91, 102, 103, 134, 141, 146, 147], "timestamp": [7, 8, 9, 10, 16, 21, 22, 23, 25, 35, 36, 37, 40, 41, 42, 43, 52, 59, 60, 68, 78, 79, 86, 98, 115, 116, 118, 125, 138, 144], "delet": [16, 17, 18, 23, 34, 35, 38, 46, 49, 53, 59, 66, 77, 78, 85, 91, 95, 99, 102, 107, 109, 111, 125, 134, 140, 141, 150, 153], "api_key_id": [16, 23, 78], "applicationconnector": [17, 23, 78], "applicationconnectorid": [17, 24, 35], "servic": [9, 10, 17, 23, 34, 35, 71, 78, 118, 141], "auth": [17, 34, 71, 141], "connector": [17, 18, 19, 23, 24, 34, 35, 38, 59, 60, 61, 65, 68, 71, 73, 78, 85, 86, 141], "extern": [9, 10, 17, 23, 34, 35, 65, 71, 78, 96, 141], "connect": [17, 18, 19, 23, 34, 38, 60, 63, 65, 78, 113, 141], "applic": [7, 9, 17, 23, 24, 27, 28, 35, 59, 71, 78, 85, 118, 125, 134], "non": [17, 34, 141], "secret": [17, 34, 141], "inform": [17, 18, 19, 23, 27, 29, 30, 34, 35, 36, 38, 56, 59, 61, 67, 68, 77, 78, 85, 89, 92, 93, 94, 99, 100, 101, 102, 107, 111, 118, 125, 129, 138, 141, 149], "renam": [17, 18, 23, 34, 38, 46, 78, 85, 91, 125, 141], "application_connector_id": [17, 23, 59, 78, 85], "list_object": [17, 34], "querabl": [17, 23, 34, 78], "object": [9, 10, 17, 18, 19, 23, 29, 34, 35, 37, 38, 46, 53, 55, 59, 60, 61, 65, 66, 68, 72, 77, 78, 82, 85, 86, 91, 93, 94, 95, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 118, 125, 129, 130, 133, 134, 135, 140, 144, 150, 152, 153], "verifi": [17, 23, 26, 34, 71, 72, 73, 78, 141], "check": [17, 23, 34, 38, 59, 78, 118, 141], "can": [9, 10, 15, 17, 23, 34, 38, 59, 66, 67, 74, 78, 85, 87, 115, 117, 118, 124, 125, 133, 134, 136, 141, 147], "access": [17, 23, 34, 72, 78, 118, 141, 150], "batchpredict": [18, 23, 38, 78, 125, 133], "batchpredictionid": [18, 19, 91, 113, 144], "deploymentid": [18, 19, 38, 110, 134, 153], "fileconnectoroutputloc": [18, 19], "globalpredictionarg": [18, 19], "databaseconnectorid": [18, 19, 23, 34, 35, 38, 60, 61, 78], "databaseoutputconfigur": [18, 19], "explan": [18, 19, 23, 38, 59, 78, 85, 104, 118], "fileoutputformat": [18, 19], "connectortyp": [7, 9, 13, 18, 19, 35, 60, 65, 78], "legacyinputloc": [18, 19], "featuregrouptablenam": [18, 35, 127], "summaryfeaturegrouptablenam": 18, "csvinputprefix": [18, 19], "csvpredictionprefix": [18, 19], "csvexplanationsprefix": [18, 19], "outputincludesmetadata": [18, 19], "resultinputcolumn": [18, 19], "modelmonitorid": [18, 91, 95, 102, 110, 122, 134], "modelvers": [18, 19, 23, 38, 78, 85, 86, 87, 90, 95, 98, 99, 113, 125, 133, 144], "algorithm": [9, 10, 18, 19, 23, 38, 75, 78, 85, 99, 101, 124, 125, 129, 131], "batchinput": [18, 19], "latestbatchpredictionvers": 18, "refreshschedul": [18, 35, 38, 46, 59, 85, 91, 122, 135], "given": [8, 9, 10, 18, 19, 23, 29, 35, 37, 38, 46, 51, 53, 55, 59, 60, 68, 77, 78, 83, 85, 86, 91, 94, 95, 99, 102, 103, 109, 111, 114, 118, 123, 125, 129, 130, 133, 134, 140, 144, 150, 152, 153], "deploy": [15, 18, 19, 23, 39, 59, 68, 78, 85, 95, 97, 99, 110, 113, 118, 125, 133, 134, 150, 152, 153], "contain": [2, 18, 19, 23, 31, 38, 49, 59, 60, 63, 74, 77, 78, 85, 99, 102, 107, 108, 109, 111, 115, 116, 118, 125, 140, 144], "where": [9, 10, 18, 19, 23, 38, 56, 59, 78, 95, 99, 118, 125], "written": [18, 19, 60, 61, 86], "argument": [9, 12, 18, 19, 23, 35, 38, 59, 78, 85, 109, 111, 118, 125, 129, 130], "pass": [9, 10, 18, 19, 23, 24, 38, 71, 72, 73, 78, 107, 118, 125, 129, 130], "everi": [18, 19, 23, 38, 59, 78, 118], "call": [15, 18, 19, 23, 29, 30, 35, 37, 38, 46, 53, 55, 59, 60, 66, 68, 77, 78, 85, 86, 91, 95, 97, 99, 102, 103, 107, 109, 111, 114, 123, 125, 133, 134, 144, 150, 152, 153], "databas": [7, 9, 18, 19, 23, 34, 35, 38, 60, 61, 65, 68, 78, 141], "write": [18, 19, 23, 38, 60, 61, 65, 68, 71, 72, 73, 78], "result": [9, 10, 18, 19, 23, 33, 38, 55, 59, 71, 78, 82, 85, 99, 103, 108, 118, 125, 128, 129, 130, 136, 150, 151], "If": [9, 10, 18, 19, 23, 24, 25, 35, 37, 38, 43, 59, 60, 66, 68, 78, 85, 99, 107, 115, 116, 118, 119, 120, 125, 129, 130, 135, 142, 144, 147, 150, 153], "true": [9, 10, 18, 19, 23, 25, 35, 38, 59, 60, 66, 68, 71, 72, 73, 78, 85, 95, 99, 107, 118, 119, 120, 125, 127, 128, 134, 142, 147], "each": [9, 10, 18, 19, 23, 30, 36, 38, 53, 54, 57, 59, 64, 74, 77, 78, 85, 87, 92, 93, 99, 109, 111, 118, 125, 138, 140, 144, 147], "output": [18, 19, 23, 38, 78, 95, 112, 113], "csv": [18, 19, 23, 35, 38, 59, 78, 98], "null": [18, 19, 52, 58, 69, 106, 135, 138], "intern": [18, 19, 24, 96], "consol": [18, 19, 23, 68, 78], "els": [18, 19, 23, 78, 118, 148], "file_connector": [18, 19, 78], "database_connector": [18, 19, 78], "locat": [9, 10, 13, 18, 19, 23, 35, 38, 60, 61, 62, 65, 68, 78, 85, 86, 89, 99, 118, 130], "input": [9, 10, 18, 19, 23, 38, 59, 78, 82, 83, 85, 98, 99, 117, 118, 119, 120, 121, 122, 123, 125, 129, 130, 142], "tabl": [9, 10, 18, 23, 35, 38, 44, 56, 59, 68, 78, 99, 105, 115, 116, 125, 127], "metric": [9, 10, 18, 23, 28, 29, 38, 44, 64, 78, 85, 90, 91, 95, 96, 99, 122, 123, 125, 133, 134], "summari": [18, 20, 23, 57, 58, 78, 91, 92, 93, 94, 106, 118, 132, 143], "prefix": [18, 19, 23, 38, 78], "prepend": [18, 19, 23, 38, 78, 130], "onli": [9, 10, 18, 19, 23, 35, 38, 59, 78, 85, 99, 101, 118, 125, 129, 131, 134, 140], "appli": [9, 10, 18, 19, 23, 38, 46, 59, 78, 85, 91, 118, 125, 134, 136], "start": [7, 9, 10, 18, 19, 23, 35, 38, 46, 53, 59, 75, 78, 81, 85, 91, 95, 99, 103, 115, 116, 118, 123, 133], "version": [8, 9, 10, 18, 19, 23, 28, 29, 35, 37, 38, 43, 46, 48, 49, 51, 52, 53, 59, 60, 62, 68, 78, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 108, 109, 112, 113, 114, 119, 120, 122, 123, 125, 133, 135, 144, 147, 150, 152], "present": [18, 19, 20, 23, 35, 38, 59, 78, 118, 125], "limit": [9, 10, 18, 19, 23, 35, 38, 46, 59, 78, 85, 91, 109, 118, 125, 150], "file": [7, 9, 10, 18, 19, 23, 35, 37, 38, 40, 59, 60, 61, 65, 68, 71, 73, 78, 85, 86, 98, 99, 109, 111, 125, 144], "monitor": [18, 19, 20, 23, 46, 53, 58, 69, 78, 91, 92, 93, 94, 95, 96, 102, 103, 106, 110, 113, 122, 125, 132, 133, 134, 143], "deploi": [18, 19, 23, 38, 78, 85, 118, 125, 150], "predictioninput": [18, 19, 121], "batchpredictionvers": [18, 19, 23, 78, 95], "latest": [4, 9, 10, 18, 23, 28, 35, 38, 46, 48, 51, 52, 59, 78, 85, 91, 102, 109, 122, 150], "refresh": [9, 18, 19, 23, 29, 35, 37, 38, 46, 53, 55, 59, 60, 65, 66, 68, 77, 78, 85, 86, 91, 95, 99, 102, 103, 107, 109, 111, 114, 125, 133, 134, 135, 144, 150, 152, 153], "schedul": [18, 23, 35, 38, 46, 59, 78, 85, 91, 109, 122, 125, 134, 135], "dictat": 18, "next": [9, 10, 18, 23, 35, 46, 59, 78, 85, 91, 109, 122, 134, 135], "job": [18, 19, 23, 38, 60, 78, 86, 122, 123, 125], "descript": [9, 10, 18, 23, 35, 36, 37, 38, 46, 47, 53, 58, 59, 66, 72, 74, 76, 78, 85, 86, 87, 88, 91, 95, 96, 99, 102, 103, 106, 109, 110, 114, 115, 122, 123, 124, 125, 127, 129, 138, 142, 146, 147], "batch_prediction_id": [7, 9, 18, 23, 78, 125], "method": [9, 10, 18, 23, 35, 59, 69, 78, 85, 99, 118, 125, 140], "describ": [18, 19, 23, 24, 29, 35, 37, 38, 45, 46, 48, 49, 51, 53, 55, 57, 59, 60, 66, 68, 77, 78, 85, 86, 91, 95, 99, 102, 103, 107, 109, 111, 114, 118, 125, 129, 133, 134, 135, 144, 150, 152, 153], "associ": [18, 22, 23, 35, 37, 38, 39, 46, 50, 53, 59, 66, 68, 78, 85, 91, 95, 102, 103, 118, 125, 127, 133, 134, 144, 150, 152], "list_vers": [18, 35, 46, 59, 85, 91, 109, 150], "100": [9, 10, 18, 23, 35, 46, 59, 78, 85, 91, 125, 150], "start_after_vers": [18, 23, 35, 46, 59, 78, 85, 91, 150], "retriev": [18, 23, 26, 35, 37, 38, 46, 53, 59, 78, 85, 91, 95, 99, 108, 125, 133, 134, 144, 150], "after": [9, 10, 18, 23, 35, 38, 46, 59, 78, 85, 91, 118, 125], "deployment_id": [7, 9, 18, 23, 38, 78, 85, 118, 125], "global_prediction_arg": [18, 23, 38, 78], "output_format": [18, 23, 38, 78], "csv_input_prefix": [18, 23, 38, 78], "csv_prediction_prefix": [18, 23, 38, 78], "csv_explanations_prefix": [18, 23, 38, 78], "output_includes_metadata": [18, 23, 38, 78], "result_input_column": [18, 23, 38, 78], "shap": [18, 23, 38, 69, 78, 118], "support": [9, 10, 18, 23, 35, 38, 59, 60, 61, 68, 78, 85, 96, 99, 118, 124, 125, 144], "set": [9, 10, 18, 23, 35, 38, 59, 68, 78, 85, 95, 99, 107, 118, 125, 128], "set_file_connector_output": 18, "output_loc": [18, 23, 38, 60, 61, 78, 99], "configur": [18, 23, 38, 46, 59, 61, 65, 78, 85, 87, 91, 95, 99, 102, 103, 117, 118, 125, 134, 140], "set_database_connector_output": 18, "database_connector_id": [9, 13, 18, 23, 34, 35, 38, 68, 78], "database_output_config": [18, 23, 38, 78], "pair": [18, 23, 33, 38, 60, 61, 68, 78, 90, 118, 125, 147], "set_feature_group_output": 18, "table_nam": [18, 23, 38, 59, 68, 78, 99], "ha": [9, 10, 18, 23, 35, 38, 45, 52, 57, 59, 71, 72, 73, 78, 85, 99, 100, 107, 118, 125, 129, 130, 133, 134, 148], "been": [9, 10, 18, 23, 35, 38, 52, 59, 78, 125, 134, 144], "set_output_to_consol": 18, "clear": [18, 23, 78], "both": [18, 23, 78, 118], "set_dataset": 18, "dataset_typ": [18, 23, 35, 78], "dataset_id": [7, 9, 18, 23, 35, 78, 125], "deprec": [18, 23, 35, 59, 78, 118, 125], "legaci": [18, 23, 78], "project": [9, 18, 22, 23, 35, 38, 46, 59, 60, 63, 77, 78, 85, 91, 95, 102, 118, 122, 126, 127, 128, 134, 138, 142, 146, 147], "set_feature_group": 18, "feature_group_typ": [11, 18, 23, 59, 78], "feature_group_id": [7, 9, 11, 18, 23, 59, 78, 85, 125, 140, 150], "repres": [18, 23, 35, 50, 52, 74, 78, 118, 125, 129, 134], "under": [18, 23, 59, 78, 95, 99, 118, 125], "catalog": [9, 10, 18, 23, 78, 98, 118, 140], "attribut": [9, 10, 18, 35, 37, 59, 118, 125, 130, 137], "person": [7, 9, 10, 18, 23, 78, 118], "recommend": [9, 10, 18, 23, 78, 118, 125], "set_dataset_remap": 18, "dataset_id_remap": [18, 23, 78], "For": [18, 23, 38, 45, 50, 57, 59, 60, 61, 68, 78, 85, 99, 109, 111, 118, 125], "purpos": [18, 23, 78, 85, 125, 144], "swap": [18, 23, 78, 121], "out": [9, 10, 18, 19, 23, 35, 37, 38, 53, 55, 59, 60, 68, 69, 75, 78, 85, 86, 95, 99, 103, 114, 118, 123, 133, 144, 150, 152], "replac": [18, 23, 25, 59, 66, 78, 121, 136], "dure": [9, 10, 18, 23, 32, 78, 85, 99, 118, 125, 136], "wait_for_predict": [18, 19], "timeout": [18, 19, 23, 35, 37, 38, 53, 55, 59, 60, 68, 78, 85, 86, 95, 99, 103, 114, 123, 133, 144, 150, 152], "86400": [18, 19], "wait": [18, 19, 23, 35, 37, 38, 53, 55, 59, 60, 68, 78, 85, 86, 95, 99, 103, 114, 123, 133, 144, 150, 152], "readi": [18, 19, 53, 59, 95, 103, 123, 128, 150, 152], "option": [2, 9, 10, 18, 19, 23, 35, 36, 37, 38, 53, 55, 59, 60, 67, 68, 72, 76, 78, 85, 86, 95, 96, 99, 103, 114, 115, 116, 118, 123, 124, 125, 133, 140, 142, 144, 150, 152], "finish": [18, 19, 23, 35, 37, 38, 53, 55, 59, 60, 68, 78, 85, 86, 95, 99, 103, 114, 123, 133, 144, 150, 152], "doesn": [18, 19, 35, 37, 38, 53, 55, 59, 60, 68, 85, 86, 95, 99, 103, 114, 123, 133, 143, 144, 150, 152], "t": [18, 19, 23, 35, 37, 38, 53, 55, 59, 60, 68, 78, 85, 86, 95, 99, 103, 114, 118, 123, 133, 143, 144, 150, 152], "alloc": [18, 19, 23, 35, 37, 38, 53, 55, 59, 60, 68, 78, 85, 86, 95, 99, 103, 114, 123, 125, 133, 144, 150, 152], "said": [18, 19, 35, 37, 38, 53, 55, 59, 60, 68, 85, 86, 95, 99, 103, 114, 123, 133, 144, 150, 152], "wait_for_drift_monitor": [18, 19], "drift": [18, 19, 23, 44, 45, 54, 58, 78, 91, 92, 93, 94, 95, 125], "calcul": [18, 19, 23, 78, 99, 125], "get_statu": [18, 19, 35, 37, 38, 53, 55, 59, 60, 68, 85, 86, 95, 99, 103, 114, 123, 133, 144, 150, 152], "pend": [18, 19, 23, 38, 53, 55, 59, 60, 68, 78, 85, 86, 95, 99, 103, 114, 133, 144, 150, 152], "complet": [18, 19, 23, 35, 37, 38, 53, 55, 59, 60, 68, 78, 85, 86, 95, 99, 103, 114, 123, 133, 144, 150, 152], "create_refresh_polici": [18, 23, 35, 38, 78, 85], "cron": [18, 23, 35, 38, 78, 85, 109, 125, 134, 135], "To": [18, 35, 38, 73, 85], "polici": [18, 23, 35, 37, 38, 72, 78, 85, 109, 125, 133, 134, 135], "style": [18, 23, 35, 38, 78, 85, 109, 118, 125, 134, 135], "refreshpolici": [18, 23, 35, 38, 78, 85, 125, 133, 134], "list_refresh_polici": [18, 23, 35, 38, 78, 85, 125], "describe_output_feature_group": 18, "featuregroup": [18, 23, 35, 59, 68, 78, 85, 99, 108, 121, 125, 134], "driftmonitorstatu": 19, "modelid": [19, 38, 85, 90, 91, 98, 99, 110, 134, 144], "predictionsstartedat": 19, "predictionscompletedat": 19, "databaseoutputerror": [19, 60], "totalpredict": 19, "failedpredict": 19, "error": [7, 9, 19, 23, 24, 37, 38, 43, 53, 55, 59, 60, 68, 72, 75, 78, 95, 99, 103, 112, 113, 114, 123, 128, 129, 130, 135, 136, 149], "driftmonitorerror": 19, "monitorwarn": 19, "databaseoutputtotalwrit": 19, "databaseoutputfailedwrit": 19, "modelmonitorvers": [19, 23, 78, 91, 95, 96, 103, 113], "algonam": [19, 38, 96], "date": [9, 10, 19, 23, 28, 38, 39, 46, 53, 77, 78, 85, 91, 95, 99, 101, 102, 103, 109, 111, 112, 114, 118, 122, 123, 125, 131, 138, 148, 153], "were": [19, 60, 113, 123], "report": [19, 60], "while": [9, 10, 19, 23, 60, 78, 129, 130, 144], "perform": [19, 23, 25, 38, 59, 78, 92, 99, 115, 116, 118, 125], "fail": [19, 23, 24, 37, 38, 43, 53, 55, 60, 68, 78, 92, 95, 99, 103, 112, 114, 123, 144], "relev": [9, 10, 19, 23, 38, 53, 59, 68, 78, 95, 99, 103, 108, 114, 118, 123, 150], "messag": [19, 21, 23, 24, 55, 59, 72, 78, 112, 113, 118, 135, 136], "predcit": 19, "warn": [19, 24], "issu": 19, "integr": [19, 23, 58, 78, 91, 93, 94], "attempt": [19, 23, 35, 78], "mai": [19, 23, 35, 59, 78, 118], "less": [9, 10, 19, 23, 59, 78, 118], "than": [9, 10, 19, 23, 59, 78], "total_predict": 19, "mode": [9, 10, 13, 19, 23, 38, 65, 78], "upsert": [19, 23, 38, 60, 61, 65, 68, 78, 140], "multipl": [9, 10, 19, 23, 78, 109, 125, 133, 140, 147], "share": [19, 85], "same": [9, 10, 19, 23, 43, 59, 78, 85, 116, 118, 125, 144], "get_outliers_for_batch_prediction_featur": [19, 23, 78], "feature_nam": [8, 9, 11, 19, 23, 53, 59, 78, 95, 125], "nested_feature_nam": [11, 19, 23, 59, 78, 95], "outlier": [9, 10, 19, 23, 78, 95], "measur": [19, 23, 44, 58, 78, 95], "singl": [19, 21, 23, 57, 78, 79, 95, 125, 133, 134], "overal": [19, 23, 58, 78, 95, 133], "view": [19, 23, 78, 95, 107], "distribut": [9, 10, 19, 20, 23, 44, 52, 54, 57, 58, 78, 95, 118, 132], "nest": [19, 23, 56, 58, 59, 78, 95, 105, 118, 125], "download_batch_prediction_result_chunk": [19, 23, 78], "offset": [19, 23, 59, 78, 115, 116, 125, 150], "0": [8, 9, 19, 23, 35, 48, 59, 78, 85, 109, 111, 115, 116, 118, 125], "chunk_siz": [19, 23, 78], "10485760": [19, 23, 78], "stream": [7, 9, 19, 23, 35, 38, 59, 60, 78, 127, 139, 140, 141], "read": [19, 23, 78], "maximum": [9, 10, 19, 23, 35, 46, 59, 78, 85, 91, 109, 125, 132], "amount": [9, 10, 19, 23, 52, 78, 118], "get_batch_prediction_connector_error": [19, 23, 78], "ani": [9, 10, 12, 19, 23, 38, 59, 60, 78, 99, 118, 122, 129, 130], "download_result_to_fil": 19, "download": [19, 23, 60, 62, 78], "local": [9, 10, 19, 23, 35, 78, 129, 130], "open": 19, "binari": [19, 23, 78, 118], "tmp": 19, "wb": 19, "drift_monitor_statu": 19, "fals": [19, 23, 38, 43, 59, 68, 78, 85, 95, 99, 118, 125, 128], "categoricalrangeviol": [20, 58], "mostcommonvalu": 20, "freqoutsidetrainingrang": 20, "import": [20, 23, 35, 37, 43, 58, 59, 69, 78, 85, 99, 109, 111, 125, 130, 132, 143], "rang": [8, 9, 10, 20, 23, 45, 54, 57, 58, 59, 78, 118, 132], "mismatch": [20, 58, 132, 143], "numer": [9, 10, 20, 23, 50, 57, 58, 78, 125, 132, 138], "discov": [20, 106, 132, 143], "common": [20, 124], "frequenc": [9, 10, 20, 23, 36, 52, 58, 78, 106, 109, 125, 132, 134], "outsid": 20, "default_serv": [23, 78], "http": [23, 35, 38, 59, 78, 127, 138, 153], "_requests_retry_sess": 23, "retri": [23, 144], "5": [7, 9, 10, 23, 78, 118], "backoff_factor": 23, "1": [9, 10, 23, 59, 78, 85, 109, 111, 118, 125, 144], "status_forcelist": 23, "502": 23, "504": 23, "session": [9, 10, 22, 23, 78, 125], "_discover_service_url": 23, "service_discovery_url": 23, "client_vers": 23, "deployment_token": [23, 78, 118, 150], "_get_service_discovery_url": [], "clientopt": [23, 78, 118, 140], "exception_on_404": [23, 78], "server": [23, 78], "rais": [23, 26, 78, 92, 129, 130, 144], "except": [23, 75, 78, 129, 130, 144, 149], "404": [23, 78], "endpoint": [15, 23, 38, 78, 153], "apiexcept": [23, 78], "http_statu": [23, 78], "__str__": [23, 78], "baseapicli": [23, 78, 118, 140], "api_kei": [23, 78, 107], "client_opt": [23, 78, 118, 140], "skip_version_check": [23, 78], "url": [23, 60, 62, 78, 125, 138], "send": [23, 38, 78, 153], "requet": [23, 78], "skip": [9, 10, 23, 43, 59, 78], "51": [], "_clean_api_object": 23, "obj": 23, "_call_api": 23, "action": [9, 10, 23, 78, 102, 103, 125, 153], "query_param": 23, "bodi": [23, 38, 78, 118, 153], "parse_typ": 23, "streamable_respons": 23, "server_overrid": 23, "_build_class": 23, "_request": 23, "header": [23, 59, 78], "_poll": 23, "wait_stat": [23, 38], "delai": [23, 55, 59, 78, 115, 116], "15": [23, 78, 118], "300": 23, "poll_arg": 23, "status_field": 23, "_validate_pandas_df": 23, "df": [23, 78], "_upload_from_panda": 23, "upload": [9, 10, 23, 35, 37, 43, 59, 78, 85, 98, 118], "_upload_from_spark": 23, "readonlycli": [23, 78], "list_api_kei": [23, 78], "all": [8, 9, 10, 23, 35, 38, 42, 46, 48, 49, 50, 51, 53, 59, 63, 78, 85, 91, 99, 107, 114, 118, 125, 130, 150], "list_organization_us": [23, 78], "who": [23, 59, 78, 107], "have": [9, 10, 23, 38, 44, 59, 78, 99, 114, 118, 125, 144], "invit": [23, 78, 148], "arrai": [23, 35, 59, 78, 85, 125], "describe_us": [23, 78], "email": [23, 59, 78, 100, 107, 125, 138, 148], "address": [23, 59, 71, 78, 118, 148], "admin": [23, 78, 107], "list_organization_group": [23, 78], "within": [8, 9, 23, 31, 49, 50, 53, 59, 78, 118], "organizationgroup": [23, 59, 78, 100, 107, 148], "describe_organization_group": [23, 78], "organization_group_id": [23, 59, 78, 107], "describe_webhook": [23, 78], "webhook_id": [23, 78, 153], "webhook": [23, 38, 78], "target": [9, 10, 23, 38, 52, 58, 59, 78, 90, 125, 153], "list_deployment_webhook": [23, 78], "attach": [23, 35, 38, 59, 78, 109, 125, 153], "list_use_cas": [23, 78], "usecas": [23, 35, 78, 125, 127, 138, 146], "platform": [23, 78, 125], "detail": [9, 10, 23, 59, 78, 95, 127, 138, 144], "pleas": [23, 78], "refer": [23, 35, 36, 37, 46, 53, 59, 77, 78, 95, 98, 99, 109, 110, 111, 112, 113, 114, 118, 125, 138, 144], "describe_problem_typ": [23, 78], "problem_typ": [9, 10, 23, 78], "requir": [9, 12, 23, 24, 35, 59, 68, 78, 85, 98, 109, 111, 118, 119, 120, 124, 125, 142, 147], "describe_use_case_requir": [23, 78], "use_cas": [23, 78], "whose": [9, 10, 23, 59, 78, 140], "along": [9, 10, 23, 59, 78, 125], "usecaserequir": [23, 78, 147], "describe_project": [23, 78], "project_id": [23, 35, 59, 78, 109, 125], "list_project": [23, 78], "start_after_id": [23, 78, 125], "length": [7, 9, 10, 23, 35, 46, 52, 59, 78, 85, 91, 116], "log": [7, 9, 10, 23, 32, 68, 75, 78, 90, 95, 99], "list_project_dataset": [23, 78], "its": [23, 35, 37, 38, 46, 52, 59, 78, 85, 86, 91, 99, 100, 108, 118, 125, 140], "projectdataset": [23, 78, 125, 127], "get_schema": [23, 35, 59, 78, 125], "schema": [23, 34, 35, 36, 37, 59, 64, 78, 125], "consist": [23, 31, 46, 49, 53, 78, 125], "validate_project": [23, 78], "miss": [9, 10, 23, 52, 78, 80, 125, 129, 130], "projectvalid": [23, 78, 125, 128], "verify_and_describe_annot": [23, 59, 78], "doc_id": [23, 59, 78, 118], "feature_group_row_identifi": [23, 59, 78], "At": [23, 59, 78], "least": [23, 59, 78, 144], "one": [23, 24, 59, 78, 87, 91, 99, 118, 125, 134, 150], "must": [9, 10, 23, 59, 78, 116, 118, 144], "order": [23, 51, 56, 59, 74, 78, 116, 118, 144], "correct": [23, 59, 78], "get_annotations_statu": [23, 59, 78], "get_feature_group_schema": [23, 78], "describe_feature_group": [23, 35, 78, 125], "describe_feature_group_by_table_nam": [23, 78], "look": [23, 35, 59, 78, 115, 116, 151], "up": [23, 25, 35, 78, 118, 125, 129, 131, 144, 150, 151], "list_feature_group": [23, 78, 125], "feature_group_template_id": [23, 66, 78], "is_including_detached_from_templ": [23, 78], "exclud": [9, 10, 23, 59, 78, 118, 125, 150], "templat": [23, 38, 59, 66, 67, 78, 125, 136, 153], "detach": [23, 59, 78], "list_project_feature_group": [23, 78], "filter_feature_group_us": [23, 78, 125], "filter": [9, 10, 23, 35, 59, 78, 125], "allow": [9, 10, 23, 59, 78, 85, 100, 101, 109, 111, 118, 125, 129, 131], "thei": [9, 10, 23, 38, 59, 78, 85, 125], "possibl": [23, 76, 78, 118, 125, 127, 138], "data_wrangl": [23, 78, 125], "training_input": [23, 78, 125], "batch_prediction_input": [23, 78, 125], "batch_prediction_output": [23, 78, 125], "list_python_function_feature_group": [23, 78], "python": [9, 12, 23, 24, 59, 68, 77, 78, 81, 85, 99, 101, 109, 111, 112, 125, 129, 130, 131], "get_feature_group_version_export_download_url": [23, 60, 78], "feature_group_export_id": [23, 60, 78], "link": [23, 60, 78], "export": [9, 10, 23, 38, 59, 60, 61, 62, 65, 68, 78, 85, 86, 88, 99, 134], "sign": [23, 60, 78], "expir": [23, 60, 62, 71, 78], "featuregroupexportdownloadurl": [23, 60, 62, 78], "describe_feature_group_export": [23, 78], "featuregroupexport": [23, 59, 60, 68, 78], "list_feature_group_export": [23, 78], "get_feature_group_export_connector_error": [23, 78], "io": [23, 59, 78, 118, 144], "bytesio": [23, 78, 118, 144], "list_feature_group_modifi": [23, 78], "modif": [23, 59, 78, 100], "ad": [23, 59, 78, 107, 118, 129, 144], "modificationlockinfo": [23, 59, 78, 100], "get_materialization_log": [23, 68, 78], "feature_group_vers": [23, 38, 59, 78], "stdout": [23, 68, 75, 78, 95, 99], "stderr": [23, 68, 75, 78, 95, 99], "materi": [4, 23, 25, 59, 68, 78, 85, 125], "functionlog": [23, 68, 75, 78, 95, 99], "list_feature_group_vers": [23, 78], "featuregroupvers": [23, 38, 59, 60, 68, 78, 96, 99, 108, 113, 120, 123, 133, 152], "describe_feature_group_vers": [23, 78], "describe_feature_group_templ": [23, 78], "featuregrouptempl": [23, 59, 66, 78, 125], "list_feature_group_templ": [23, 78, 125], "should_include_system_templ": [23, 78], "built": [23, 59, 78, 85, 125], "list_project_feature_group_templ": [23, 78], "should_include_all_system_templ": [23, 78, 125], "till": [23, 78, 125], "suggest_feature_group_template_for_feature_group": [23, 78], "suggest": [23, 59, 78], "gruop": [23, 59, 78], "get_dataset_schema": [23, 78], "definit": [23, 35, 59, 68, 78], "datasetcolumn": [23, 35, 36, 78], "get_file_connector_instruct": [23, 78], "bucket": [23, 35, 71, 72, 73, 78, 99, 144], "write_permiss": [23, 78], "cloud": [9, 10, 23, 38, 68, 72, 78], "storag": [23, 71, 72, 78], "fulli": [9, 10, 23, 78], "qualifi": [9, 10, 23, 78], "uri": [9, 10, 15, 23, 35, 38, 78, 153], "instruct": [23, 78, 85, 125], "step": [9, 10, 23, 78, 109, 111, 112, 113, 114], "full": [23, 35, 37, 38, 46, 53, 72, 78, 85, 91, 95, 99, 125, 144], "invalid": [23, 26, 37, 59, 72, 78, 129, 130, 136], "fileconnectorinstruct": [23, 72, 78], "list_database_connector": [23, 78], "databaseconnector": [23, 34, 78], "list_file_connector": [23, 78], "fileconnector": [23, 71, 78], "list_database_connector_object": [23, 78], "get_database_connector_object_schema": [23, 78], "object_nam": [9, 13, 23, 34, 35, 38, 68, 78], "system": [23, 34, 35, 59, 66, 78, 85, 109, 111, 118, 125, 144], "list_application_connector": [23, 78], "list_application_connector_object": [23, 78], "list_streaming_connector": [23, 78], "correspond": [1, 4, 23, 58, 59, 68, 78, 85, 118, 125, 143], "streamingconnector": [23, 78, 141], "list_streaming_token": [23, 78], "token": [7, 9, 10, 23, 35, 39, 59, 78, 84, 118, 125, 139, 140, 150], "streamingauthtoken": [23, 78, 139], "get_recent_feature_group_streamed_data": [23, 78], "list_upload": [23, 78], "ongo": [23, 78], "describe_upload": [23, 78], "upload_id": [23, 78, 144], "inspect": [23, 35, 37, 78, 144], "part": [9, 10, 23, 35, 78, 109, 111, 114, 118, 125, 144, 145], "larg": [23, 78, 144], "list_dataset": [23, 78, 125], "exclude_stream": [23, 78], "describe_dataset": [23, 59, 78], "describe_dataset_vers": [23, 78], "dataset_vers": [23, 78], "datasetvers": [23, 35, 37, 55, 78, 99, 113, 119, 133, 144], "list_dataset_vers": [23, 78], "get_docstore_docu": [23, 78], "docstor": [23, 78], "get_docstore_imag": [23, 78], "max_width": [23, 78], "max_height": [23, 78], "imag": [9, 10, 23, 78, 118], "rescal": [23, 78], "so": [23, 59, 78, 118], "width": [23, 78], "equal": [9, 10, 23, 59, 78], "preserv": [23, 78, 118], "aspect": [23, 78], "ratio": [9, 10, 23, 78], "height": [23, 78], "describe_train_test_data_split_feature_group": [23, 78, 85], "model_id": [7, 9, 23, 59, 78, 85, 125, 140], "test": [7, 9, 10, 23, 46, 78, 85, 90, 99, 125], "split": [7, 9, 10, 23, 78, 85, 90, 99, 125], "By": [23, 78, 85, 118], "fold": [9, 10, 23, 78, 85, 99, 125], "describe_train_test_data_split_feature_group_vers": [23, 78, 99], "model_vers": [23, 38, 78, 85], "list_model": [23, 78, 125], "describe_model": [23, 78], "set_model_object": [23, 78, 99], "best": [9, 10, 23, 78, 99], "futur": [7, 9, 10, 23, 59, 78, 99, 115, 116, 118], "get_model_metr": [23, 78], "baseline_metr": [23, 78, 85], "baselin": [23, 78, 85, 90], "comparison": [23, 38, 49, 78, 85], "what": [23, 24, 35, 52, 59, 74, 78, 85, 118, 128], "mean": [7, 8, 9, 23, 74, 78, 80, 85], "modelmetr": [23, 78, 85, 90], "list_model_vers": [23, 78], "describe_model_vers": [23, 78], "get_feature_importance_by_model_vers": [23, 78], "variou": [23, 59, 78, 98, 99], "featureimport": [23, 69, 78, 99], "get_training_data_log": [23, 78, 99], "prepar": [23, 32, 78, 99], "datapreplog": [23, 32, 78, 99], "set_default_model_algorithm": [23, 78], "data_cluster_typ": [23, 78, 85], "pin": [23, 78, 85], "cluster": [7, 9, 10, 23, 78, 85, 99, 118, 125], "lead": [23, 78, 85, 118], "get_training_log": [23, 78, 99], "export_custom_model_vers": [23, 78], "bundl": [23, 78, 99], "artifact": [23, 59, 78, 85, 86, 89, 98, 99, 104, 108], "zip": [9, 10, 23, 59, 78, 85, 99], "exampl": [9, 10, 23, 59, 78, 85, 99, 109, 111, 118, 125], "s3": [9, 10, 23, 35, 71, 78, 99], "modelartifactsexport": [23, 78, 85, 86, 99], "describe_model_artifacts_export": [23, 78], "model_artifacts_export_id": [23, 78, 86], "list_model_artifacts_export": [23, 78], "25": [23, 78, 85], "list_model_monitor": [23, 78, 125], "modelmonitor": [23, 78, 91, 96, 125], "describe_model_monitor": [23, 78], "model_monitor_id": [23, 78, 91, 125], "get_prediction_drift": [23, 78, 95], "model_monitor_vers": [23, 78], "driftdistribut": [23, 44, 45, 78, 95], "get_model_monitor_summari": [23, 78], "across": [9, 10, 23, 52, 78, 91, 92], "bia": [7, 9, 23, 78, 91, 93, 94, 118, 125], "violat": [23, 58, 78, 91, 92, 93, 106, 118], "accuraci": [7, 9, 23, 78, 91, 92, 93, 94], "modelmonitorsummari": [23, 78, 91, 93], "list_model_monitor_vers": [23, 78], "describe_model_monitor_vers": [23, 78], "model_monitor_version_metric_data": [23, 78], "metric_typ": [23, 78, 95], "actual_values_to_detail": [23, 78, 95], "decil": [23, 78, 91, 95], "actual": [23, 44, 45, 78, 95], "modelmonitorversionmetricdata": [23, 78, 95, 96], "list_organization_model_monitor": [23, 78], "only_star": [23, 78], "star": [23, 78, 91, 92], "get_model_monitor_chart_from_organ": [23, 78], "chart_typ": [23, 78], "chart": [23, 47, 58, 74, 78, 94, 96], "model_accuraci": [23, 78], "bias_viol": [23, 78], "data_integr": [23, 78], "model_drift": [23, 78], "modelmonitorsummaryfororgan": [23, 78], "modelmonitorsummaryfromorg": [23, 78, 94], "get_model_monitor_summary_from_organ": [23, 78], "consolid": [23, 78], "modelmonitororgsummari": [23, 78, 92], "list_eda": [23, 78, 125], "exploratori": [23, 46, 53, 78, 125], "analysi": [9, 10, 23, 46, 52, 53, 74, 78, 91, 96, 99, 125], "eda": [23, 47, 48, 49, 50, 51, 52, 53, 78, 91, 95, 125], "describe_eda": [23, 78], "eda_id": [23, 46, 78], "list_eda_vers": [23, 78], "edavers": [23, 46, 53, 78], "describe_eda_vers": [23, 78], "eda_vers": [23, 78], "get_eda_collinear": [23, 53, 78], "collinear": [23, 46, 48, 51, 53, 78, 125], "between": [9, 10, 23, 48, 49, 50, 51, 53, 54, 58, 63, 78, 118], "record": [9, 10, 23, 37, 53, 59, 70, 78, 118, 140], "correl": [23, 52, 53, 78], "edacollinear": [23, 48, 53, 78], "get_eda_data_consist": [23, 53, 78], "transformation_featur": [23, 53, 78], "transform": [9, 10, 23, 49, 53, 59, 78, 109, 111], "duplic": [23, 31, 49, 53, 59, 78], "edadataconsist": [23, 49, 53, 78], "get_collinearity_for_featur": [23, 53, 78], "shown": [23, 53, 78], "edafeaturecollinear": [23, 51, 53, 78], "get_feature_associ": [23, 53, 78], "reference_feature_nam": [23, 50, 53, 78], "test_feature_nam": [23, 50, 53, 78], "x": [9, 10, 23, 48, 50, 53, 74, 78], "axi": [23, 48, 50, 53, 74, 78], "plot": [23, 50, 53, 77, 78, 96, 125, 129, 131], "product": [7, 9, 10, 23, 52, 53, 78, 118], "y": [23, 48, 50, 53, 74, 78], "two": [23, 49, 50, 53, 78, 118], "edafeatureassoci": [23, 50, 53, 78], "get_eda_forecasting_analysi": [23, 53, 78], "forecast": [7, 9, 10, 23, 52, 53, 74, 78, 118, 125], "sales_across_tim": [23, 53, 78], "cummulative_contribut": [23, 53, 78], "missing_value_distribut": [23, 53, 78], "history_length": [9, 10, 23, 53, 78], "num_rows_histogram": [23, 53, 78], "product_matur": [23, 53, 78], "edaforecastinganalysi": [23, 52, 53, 78], "describe_monitor_alert": [23, 78], "monitor_alert_id": [23, 78, 102], "alert": [23, 78, 91, 92, 93, 95, 102, 103, 125], "monitoralert": [23, 78, 91, 102, 125], "describe_monitor_alert_vers": [23, 78], "monitor_alert_vers": [23, 78], "monitoralertvers": [23, 78, 95, 102, 103], "list_monitor_alerts_for_monitor": [23, 78, 91], "list_monitor_alert_versions_for_monitor_vers": [23, 78, 95], "get_model_monitoring_log": [23, 78, 95], "get_drift_for_featur": [23, 78, 95], "get_outliers_for_featur": [23, 78, 95], "batch_prediction_vers": [23, 78], "describe_deploy": [23, 78], "list_deploy": [23, 78, 125], "list_deployment_token": [23, 78, 125], "deploymentauthtoken": [23, 39, 78, 125], "get_model_training_types_for_deploy": [23, 78], "modeltrainingtypefordeploy": [23, 78, 85, 97], "describe_refresh_polici": [23, 78], "refresh_policy_id": [23, 78, 134], "describe_refresh_pipeline_run": [23, 78], "refresh_pipeline_run_id": [23, 78, 133], "pipelin": [9, 12, 23, 53, 78, 95, 110, 111, 112, 113, 114, 125, 133, 134, 135], "refreshpipelinerun": [23, 78, 133, 134], "prediction_metric_id": [23, 78, 125], "captur": [23, 78], "instant": [23, 78], "comma": [23, 78, 125, 134], "separ": [9, 10, 23, 78, 118, 125, 134], "list_refresh_pipeline_run": [23, 78, 134], "list_batch_predict": [23, 78, 125], "describe_batch_predict": [23, 78], "list_batch_prediction_vers": [23, 78], "describe_batch_prediction_vers": [23, 78], "describe_python_funct": [23, 78], "pythonfunct": [23, 78, 111, 129], "list_python_funct": [23, 78], "function_typ": [23, 78], "describe_graph_dashboard": [23, 78], "graph_dashboard_id": [23, 77, 78, 129], "graph": [23, 63, 74, 77, 78, 85, 125, 129], "dashboard": [23, 77, 78, 125, 129, 131], "graphdashboard": [23, 77, 78, 125, 129], "list_graph_dashboard": [23, 78, 125], "delete_graph_from_dashboard": [23, 78], "graph_reference_id": [23, 78], "describe_graph_for_dashboard": [23, 78], "pythonplotfunct": [23, 78, 131], "describe_algorithm": [23, 78], "list_algorithm": [23, 78], "queri": [23, 35, 55, 66, 78, 118, 136, 150, 151], "describe_custom_loss_funct": [23, 78], "previous": [23, 38, 59, 78], "regist": [9, 10, 23, 78, 130], "loss": [9, 10, 23, 27, 78, 101], "customlossfunct": [23, 27, 78], "list_custom_loss_funct": [23, 78], "name_prefix": [23, 78], "loss_function_typ": [23, 78], "categori": [23, 27, 50, 78, 118], "search": [23, 78, 108, 118, 150], "describe_custom_metr": [23, 78], "custommetr": [23, 28, 78], "describe_custom_metric_vers": [23, 78], "custom_metric_vers": [23, 78], "custommetricvers": [23, 28, 29, 78], "list_custom_metr": [23, 78], "describe_modul": [23, 78], "list_modul": [23, 78], "get_source_code_info": 23, "train_funct": [23, 78, 125], "predict_funct": [23, 78, 125], "predict_many_funct": [23, 78, 125], "initialize_funct": [23, 78, 125], "common_funct": [23, 78], "get_module_code_from_notebook": 23, "file_path": [23, 78], "include_modul": 23, "source_cod": [23, 78, 109, 111], "included_modul": [23, 78], "create_dataset_from_panda": [23, 78], "feature_group_table_nam": [23, 78], "panda": [23, 55, 59, 68, 78, 85, 99, 109, 111, 125, 129, 130], "datafram": [23, 30, 55, 59, 68, 78, 85, 99, 125, 129, 130], "assign": [9, 10, 23, 27, 28, 29, 59, 78, 85, 118], "automat": [7, 9, 10, 23, 38, 78, 85, 107, 125, 129, 130], "clean": [23, 78], "complaint": [23, 78], "otherwis": [9, 10, 23, 38, 59, 78, 128, 140], "valueerror": [23, 26, 78], "create_dataset_version_from_panda": [23, 78], "table_name_or_id": [23, 78], "exist": [23, 48, 59, 66, 68, 74, 78, 85, 150], "create_feature_group_from_pandas_df": [23, 78], "update_feature_group_from_pandas_df": [23, 78], "create_feature_group_from_spark_df": [23, 78], "spark": [23, 78], "pyspark": [23, 78], "sql": [23, 35, 55, 56, 59, 66, 68, 78, 81, 105, 115, 117, 136], "update_feature_group_from_spark_df": [23, 78], "should_wait_for_upload": [23, 78], "some": [23, 35, 45, 57, 78, 118, 125], "like": [9, 10, 23, 78, 109], "create_spark_df_from_feature_group_vers": [23, 78], "context": [9, 10, 14, 23, 59, 78, 130], "sparksess": [23, 78], "load": [23, 55, 59, 68, 78], "create_model_from_funct": [23, 78, 125], "training_input_t": [9, 10, 23, 78, 85, 125], "cpu_siz": [23, 59, 78, 85, 125], "memori": [23, 35, 59, 68, 78, 85, 99, 125], "training_config": [23, 78, 85, 125], "exclusive_run": [23, 78, 125], "package_requir": [23, 59, 78, 85, 109, 111, 125], "use_gpu": [23, 78, 85, 125], "fucntion": [23, 78], "serial": [23, 78, 125], "mani": [9, 10, 23, 35, 59, 78, 115, 116], "size": [9, 10, 23, 37, 40, 59, 68, 78, 85, 99, 118, 125, 144], "cpu": [23, 59, 68, 78, 85, 99, 125], "gb": [23, 59, 68, 78, 85, 99, 125], "packag": [23, 24, 59, 85, 109, 111, 125], "numpi": [23, 59, 78, 85, 109, 111, 125], "2": [7, 9, 23, 55, 59, 78, 85, 92, 109, 111, 118, 125], "3": [23, 59, 78, 85, 109, 111, 118, 125, 144], "4": [23, 59, 78, 85, 109, 111, 118, 125], "equival": [23, 78], "create_feature_group_from_python_funct": [23, 78], "input_t": [23, 78], "python_function_nam": [23, 59, 78, 130], "python_function_bind": [23, 59, 78], "give": [23, 72, 74, 78], "pythonfunctionargu": [9, 12, 23, 78], "update_python_function_cod": [23, 78], "function_variable_map": [23, 78, 129], "python_funct": [9, 23, 78], "create_algorithm_from_funct": [23, 78], "training_data_parameter_names_map": [23, 78], "training_config_parameter_nam": [23, 78], "config_opt": [23, 78], "is_default_en": [23, 78], "alreadi": [9, 10, 23, 35, 59, 78, 125], "uppercas": [23, 78, 101, 129, 131], "letter": [23, 78, 101, 129, 131], "underscor": [23, 78, 101, 129, 131], "process": [9, 10, 23, 38, 53, 68, 78, 88, 95, 99, 103, 144], "util": [23, 78, 118, 140], "boolean": [7, 9, 23, 50, 59, 78, 138], "update_algorithm_from_funct": [23, 78], "get_train_function_input": [23, 78], "training_table_nam": [23, 78], "training_data_parameter_name_overrid": [23, 78, 125], "training_config_parameter_name_overrid": [23, 78], "custom_algorithm_config": [23, 78, 85, 125], "get_train_function_input_from_model_vers": [23, 78], "particular": [9, 10, 23, 78, 118], "create_custom_loss_funct": [23, 78], "loss_funct": [9, 10, 23, 78], "should": [23, 35, 38, 59, 68, 78, 85, 109, 111, 118, 125], "per": [9, 10, 23, 35, 38, 49, 59, 78, 118], "50": [23, 78, 118], "char": [23, 78], "alphabet": [23, 78], "would": [9, 10, 23, 27, 59, 78], "ex": [23, 78], "regression_dl_tf": [23, 78], "classification_dl_tf": [23, 78], "functor": [23, 78], "take": [9, 10, 23, 35, 78, 118, 129, 130], "y_true": [23, 78], "y_pred": [23, 78], "invalidparametererror": [23, 78], "either": [23, 25, 38, 45, 59, 78, 94, 125, 129, 130], "incompat": [23, 78], "alreadyexistserror": [23, 78], "update_custom_loss_funct": [23, 78], "implement": [23, 78], "datanotfounderror": [23, 78], "create_custom_metric_from_funct": [23, 78], "custom_metric_funct": [23, 78], "evalu": [9, 10, 23, 78, 85], "regress": [7, 9, 23, 27, 28, 78, 118], "newli": [23, 38, 59, 68, 78, 125, 150], "update_custom_metric_from_funct": [23, 78], "create_module_from_notebook": [23, 78], "mark": [9, 10, 21, 23, 38, 78, 144], "notebook": [23, 27, 28, 43, 78, 101, 109, 110, 113, 125, 129, 131, 134], "module_start": [23, 78], "cell": [23, 78], "module_end": [23, 78], "end": [23, 35, 53, 75, 78, 81, 95, 99, 103], "rel": [9, 10, 23, 78, 118], "path": [23, 43, 59, 78, 85, 130], "root": [23, 59, 78, 85], "directori": [23, 59, 78, 85], "n1": [23, 78], "ipynb": [23, 78], "update_module_from_notebook": [23, 78], "import_modul": [23, 78], "reload": [23, 78], "add_user_to_organ": [23, 78], "your": [9, 10, 23, 71, 78, 118, 125, 144], "join": [23, 59, 78, 107, 115, 116, 144, 148], "create_organization_group": [23, 78], "group_nam": [23, 59, 78], "permiss": [23, 71, 72, 73, 78, 107], "default_group": [23, 78], "add_organization_group_permiss": [23, 78], "add": [23, 59, 78, 107, 125, 129], "remove_organization_group_permiss": [23, 78], "remov": [9, 10, 23, 35, 38, 59, 78, 107, 125], "delete_organization_group": [23, 78], "add_user_to_organization_group": [23, 78], "remove_user_from_organization_group": [23, 78], "set_default_organization_group": [23, 78], "delete_api_kei": [23, 78], "remove_user_from_organ": [23, 78], "you": [23, 78, 118, 125], "yourself": [23, 78], "administr": [23, 78], "create_deployment_webhook": [23, 78], "webhook_event_typ": [23, 38, 78, 153], "payload_templ": [23, 38, 78, 153], "post": [23, 38, 78, 153], "One": [23, 38, 59, 69, 78, 118], "deployment_start": [23, 38, 78], "deployment_success": [23, 38, 78], "deployment_fail": [23, 38, 78], "update_webhook": [23, 78], "chang": [9, 10, 23, 44, 45, 49, 57, 59, 78, 104, 118, 125, 130, 142, 153], "event": [9, 10, 23, 35, 78, 153], "payload": [23, 78, 153], "delete_webhook": [23, 78], "create_project": [23, 78], "want": [23, 78, 118, 125], "detect": [9, 10, 23, 35, 36, 56, 78, 118, 138], "fraud": [23, 78, 118], "first": [23, 41, 59, 78, 118, 125], "more": [9, 10, 23, 35, 36, 59, 78, 125, 127, 134, 138], "solv": [23, 78], "our": [23, 78, 118, 144], "guid": [23, 35, 36, 59, 78, 125, 138], "app": [23, 35, 59, 78, 127, 138], "help": [9, 10, 23, 35, 59, 78, 127, 138], "further": [23, 78], "follow": [23, 59, 78, 118, 147], "avail": [9, 10, 23, 38, 58, 59, 78, 107, 125, 136], "choos": [9, 10, 23, 78, 85], "language_detect": [7, 9, 23, 78], "nlp_sentiment": [7, 9, 23, 78], "nlp_qa": [], "nlp_search": [7, 9, 23, 78], "nlp_chat": [23, 78], "nlp_sentence_boundary_detect": [7, 9, 23, 78], "nlp_classif": [7, 9, 23, 78], "nlp_summar": [7, 9, 23, 78], "nlp_document_visu": [7, 9, 23, 78], "embeddings_onli": [23, 78], "model_with_embed": [23, 78], "torch_model": [23, 78], "torch_model_with_embed": [23, 78], "python_model": [23, 78], "notebook_python_model": [23, 78], "docker_model": [23, 78], "docker_model_with_embed": [23, 78], "customer_churn": [23, 78], "energi": [23, 78], "financial_metr": [23, 78], "cumulative_forecast": [7, 9, 10, 23, 78], "fraud_account": [23, 78], "fraud_threat": [23, 78], "fraud_transact": [23, 78], "operations_cloud": [23, 78], "cloud_spend": [23, 78], "timeseries_anomaly_detect": [23, 78], "operations_mainten": [23, 78], "operations_incid": [23, 78], "pers_promot": [23, 78], "feature_stor": [7, 9, 23, 78], "retail": [23, 78], "sales_forecast": [23, 78], "sales_scor": [23, 78], "feed_recommend": [23, 78], "user_rank": [23, 78], "named_entity_recognit": [23, 78], "user_item_affin": [], "user_recommend": [23, 78], "user_rel": [23, 78], "vision": [23, 78, 125], "vision_object_detect": [7, 9, 23, 78], "feature_drift": [23, 78], "generic_forecast": [23, 78], "pretrained_image_text_descript": [23, 78], "pretrained_speech_recognit": [23, 78], "pretrained_style_transf": [23, 78], "pretrained_text_to_image_gener": [23, 78], "theme_analysi": [7, 9, 10, 23, 78], "rename_project": [23, 78], "delete_project": [23, 78], "remain": [9, 10, 23, 78, 125], "activ": [9, 10, 23, 38, 78, 100, 118, 125, 148], "ensur": [23, 59, 78, 125], "stop": [23, 38, 78, 84, 125], "note": [23, 35, 38, 78, 118, 125, 144], "cannot": [23, 38, 78, 79, 85, 99, 107, 125], "recov": [23, 78, 125], "onc": [23, 78, 125], "add_feature_group_to_project": [23, 78], "custom_t": [23, 59, 78], "set_project_feature_group_config": [23, 78], "project_config": [23, 59, 78], "remove_feature_group_from_project": [23, 78], "set_feature_group_typ": [23, 78], "use_feature_group_for_train": [23, 78], "use_for_train": [23, 59, 78], "variabl": [9, 10, 12, 23, 59, 66, 67, 68, 78, 109, 112, 114, 118, 129, 136], "set_feature_map": [23, 78, 125], "feature_map": [11, 23, 78, 125], "nested_column_nam": [23, 78, 125], "anoth": [23, 35, 59, 78, 125], "move": [23, 78, 125], "featuremap": [23, 56, 78, 105, 125, 138], "set_column_data_typ": [23, 35, 78, 125], "data_typ": [23, 35, 59, 78, 125, 142], "feature_types_url": [23, 78, 125], "columnmap": [23, 35, 78, 125], "restrict": [23, 35, 59, 78, 118, 125], "explicitli": [23, 35, 78, 125], "datatyp": [23, 35, 36, 56, 59, 78, 105, 125, 138, 142], "categor": [9, 10, 23, 50, 57, 58, 78, 125, 138], "categorical_list": [23, 78, 125, 138], "text": [7, 9, 10, 21, 23, 24, 66, 78, 118, 125, 138], "label_list": [23, 78, 125, 138], "object_refer": [23, 78, 125, 138], "multicategorical_list": [23, 78, 125, 138], "coordinate_list": [23, 78, 125, 138], "numerical_list": [23, 78, 125, 138], "timestamp_list": [23, 78, 125, 138], "set_column_map": [23, 78, 125], "column_map": [23, 78, 125], "see": [23, 59, 78, 118, 125, 127, 138, 141, 147], "here": [23, 78, 125, 147], "remove_column_map": [23, 78, 125], "made": [23, 78, 85, 118, 125, 130], "add_annot": [23, 78], "annotation_sourc": [23, 78], "ui": [23, 78, 97, 125], "indic": [7, 9, 10, 23, 29, 34, 35, 38, 46, 59, 68, 78, 85, 91, 104], "came": [23, 78], "bulk": [23, 78], "in_progress": [23, 59, 78], "describe_annot": [23, 59, 78], "get_document_to_annot": [23, 59, 78], "get_previ": [23, 59, 78], "fetch": [23, 24, 35, 59, 78, 142], "immedi": [23, 59, 78], "previou": [23, 35, 59, 78], "instead": [9, 10, 23, 59, 66, 78, 118, 125], "create_feature_group": [23, 78], "statement": [23, 59, 78], "form": [23, 78, 118, 125, 140, 144], "create_feature_group_from_templ": [23, 78], "template_bind": [23, 59, 66, 78], "should_attach_feature_group_to_templ": [23, 59, 78], "bind": [23, 59, 66, 78, 136], "overrid": [23, 35, 59, 66, 78, 118, 125], "leav": [9, 10, 23, 35, 69, 78], "create_feature_group_from_funct": [23, 78], "function_source_cod": [23, 59, 78, 85, 125], "function_nam": [23, 59, 78, 109, 111], "input_feature_group": [23, 59, 78], "use_original_csv_nam": [23, 59, 78], "languag": [23, 59, 78, 81, 82, 85, 104, 109, 111, 118, 125], "suppli": [23, 26, 59, 78, 85, 125, 129], "we": [9, 10, 23, 59, 67, 78, 115, 116, 118, 125], "those": [23, 59, 66, 78, 85, 115, 116, 118, 125], "expect": [9, 10, 23, 78, 85, 125, 142], "librari": [23, 59, 78, 85, 109, 111, 125], "section": [23, 59, 78, 85, 109, 111, 125], "origin": [9, 10, 23, 36, 56, 59, 68, 78, 81, 105, 118], "function_argu": [23, 59, 78, 129], "variable_typ": [9, 12, 23, 59, 78, 129], "name_of_feature_group": [23, 59, 78, 129], "create_sampling_feature_group": [23, 78], "sampling_config": [23, 59, 78], "effici": [23, 59, 78], "approxim": [23, 42, 59, 78], "unless": [23, 59, 78, 144], "vari": [23, 59, 78], "slightli": [23, 59, 78], "pre": [23, 59, 78], "human": [23, 59, 78], "readabl": [23, 59, 78], "create_merge_feature_group": [23, 78], "source_feature_group_id": [23, 59, 78], "merge_config": [23, 59, 78], "union": [23, 25, 59, 78], "arg": [23, 24, 78], "merg": [8, 9, 23, 25, 35, 37, 59, 78], "create_transform_feature_group": [23, 78], "transform_config": [23, 59, 78], "aka": [23, 78], "create_snapshot_feature_group": [23, 68, 78], "snapshot": [9, 10, 23, 35, 59, 68, 78], "set_feature_group_sampling_config": [23, 78], "empti": [23, 59, 78], "set_feature_group_merge_config": [23, 78], "mergefeaturegroup": [23, 59, 78], "increment": [8, 9, 23, 35, 37, 59, 78], "rule": [23, 59, 78], "set_feature_group_transform_config": [23, 78], "transformfeaturegroup": [23, 59, 78], "set_feature_group_schema": [23, 78], "point": [9, 10, 23, 25, 56, 59, 68, 78, 115, 116, 117, 118], "properti": [23, 38, 59, 78], "create_featur": [23, 59, 78], "select_express": [23, 59, 78], "select": [9, 10, 23, 35, 50, 51, 59, 67, 78, 85, 99, 118, 125], "express": [9, 10, 23, 59, 78, 115, 117], "add_feature_group_tag": [23, 78], "remove_feature_group_tag": [23, 78], "add_annotatable_featur": [23, 59, 78], "annotation_typ": [23, 59, 78], "annotat": [23, 59, 78], "set_feature_as_annotatable_featur": [23, 59, 78], "feature_group_row_identifier_featur": [23, 59, 78], "doc_id_featur": [23, 59, 78], "unset_feature_as_annotatable_featur": [23, 59, 78], "unset": [23, 59, 78], "add_feature_group_annotation_label": [23, 78], "label_nam": [23, 59, 78], "label_definit": [23, 59, 78], "remove_feature_group_annotation_label": [23, 78], "add_feature_tag": [23, 59, 78], "remove_feature_tag": [23, 59, 78], "create_nested_featur": [23, 59, 78], "using_claus": [23, 59, 78], "where_claus": [23, 59, 78], "order_claus": [23, 59, 78], "logic": [23, 56, 59, 78, 105], "parent": [23, 59, 78], "claus": [23, 56, 59, 78], "update_nested_featur": [23, 59, 78], "new_nested_feature_nam": [23, 59, 78], "delete_nested_featur": [23, 59, 78], "without": [9, 10, 23, 59, 78, 92, 125], "create_point_in_time_featur": [23, 59, 78], "history_table_nam": [23, 59, 78], "aggregation_kei": [23, 59, 78], "timestamp_kei": [23, 59, 78], "historical_timestamp_kei": [23, 59, 78], "lookback_window_second": [23, 59, 78], "lookback_window_lag_second": [23, 59, 78], "lookback_count": [23, 59, 78], "lookback_until_posit": [23, 59, 78], "histor": [23, 59, 78, 115, 116], "window": [9, 10, 23, 45, 54, 57, 58, 59, 78, 115, 116], "spec": [23, 59, 78], "aggreg": [23, 59, 76, 78, 115, 116, 117], "lookbackwindowsecond": [23, 59, 78, 115], "lookbackcount": [23, 59, 78, 115, 116], "second": [23, 35, 38, 52, 59, 78, 115, 116, 118, 144, 150], "histori": [9, 10, 22, 23, 52, 59, 78, 115, 116], "match": [23, 26, 43, 59, 78, 118, 143], "historicaltimefeatur": [23, 59, 78], "greater": [9, 10, 23, 59, 78], "lookbackstartcount": [23, 59, 78], "timefeatur": [23, 59, 78], "consid": [9, 10, 23, 59, 78], "lookbackwindowlagsecond": [23, 59, 78, 115], "ve": [23, 59, 78], "neg": [23, 59, 78, 115, 116], "care": [23, 59, 78], "taken": [23, 59, 78], "onlin": [23, 59, 78], "lookup": [23, 38, 59, 68, 78, 140, 150, 151], "count": [23, 31, 41, 42, 59, 74, 78, 80, 92, 93, 115, 116], "align": [23, 59, 78], "rank": [9, 10, 23, 59, 78, 118], "just": [23, 59, 78], "prior": [23, 59, 78], "lag": [23, 52, 59, 78, 115, 116], "term": [23, 59, 78, 115, 116], "posit": [23, 59, 78, 115, 116, 118, 125, 144], "lookbackuntilposit": [23, 59, 78, 115, 116], "sequenc": [23, 59, 78, 115, 117, 144], "scalar": [9, 10, 23, 59, 78, 115, 117, 118], "past": [23, 59, 78, 115, 116], "closest": [23, 59, 78, 115, 116], "update_point_in_time_featur": [23, 59, 78], "new_feature_nam": [23, 59, 78], "pit": [23, 59, 76, 78], "createpointintimefeatur": [23, 59, 78], "semant": [23, 59, 78], "do": [9, 10, 23, 59, 78], "create_point_in_time_group": [23, 59, 78], "window_kei": [23, 59, 78], "history_window_kei": [23, 59, 78], "history_aggregation_kei": [23, 59, 78], "lookback_window": [23, 59, 78], "lookback_window_lag": [23, 59, 78], "windowkei": [23, 59, 78, 116], "aggregationkei": [23, 59, 78, 115, 116], "lookback": [23, 59, 78], "update_point_in_time_group": [23, 59, 78], "delete_point_in_time_group": [23, 59, 78], "create_point_in_time_group_featur": [23, 59, 78], "update_point_in_time_group_featur": [23, 59, 78], "set_feature_typ": [23, 59, 78], "feature_typ": [11, 23, 59, 78], "reflect": [23, 59, 78], "machin": [23, 59, 69, 78], "learn": [7, 9, 10, 23, 59, 78], "featuretyp": [23, 36, 56, 59, 78, 105, 138], "invalidate_streaming_feature_group_data": [23, 78], "invalid_before_timestamp": [23, 59, 78], "invalidbeforetimestamp": [23, 59, 78], "unix": [23, 25, 35, 59, 78], "concatenate_feature_group_data": [23, 78], "merge_typ": [23, 59, 78], "replace_until_timestamp": [23, 59, 78], "skip_materi": [23, 59, 78], "concaten": [23, 25, 59, 78], "special": [23, 59, 78], "updatetimestampkei": [23, 59, 78, 79], "primarykei": [23, 49, 52, 59, 78, 79], "operand": [23, 59, 78], "oper": [23, 55, 59, 65, 78, 117, 118], "append": [23, 59, 78, 139, 140], "destin": [23, 25, 59, 78], "intersect": [23, 25, 59, 78], "remove_concatenation_config": [23, 59, 78], "set_feature_group_indexing_config": [23, 78], "primary_kei": [23, 59, 78, 125], "update_timestamp_kei": [23, 59, 78], "lookup_kei": [23, 59, 78], "dedupl": [23, 59, 78], "comput": [9, 10, 23, 54, 58, 59, 78, 118, 123, 125], "These": [23, 59, 78], "underli": [23, 36, 59, 78, 104, 124, 138, 146], "update_feature_group": [23, 78], "detach_feature_group_from_templ": [23, 78], "update_feature_group_template_bind": [23, 78], "update_feature_group_python_function_bind": [23, 78], "update_feature_group_python_funct": [23, 78], "update_feature_group_sql_definit": [23, 78], "update_dataset_feature_group_feature_express": [23, 78], "feature_express": [23, 59, 78], "update_feature_group_function_definit": [23, 78], "update_feature_group_zip": [23, 78], "module_nam": [23, 59, 78], "createfeaturegroupfromzip": [23, 59, 78], "update_feature_group_git": [23, 78], "branch_nam": [23, 59, 78, 85], "python_root": [23, 59, 78, 85], "createfeaturegroupfromgit": [23, 59, 78], "git": [23, 59, 78, 85], "branch": [23, 59, 78, 85], "repositori": [23, 59, 78, 85], "top": [9, 10, 23, 59, 78, 85], "level": [23, 59, 78, 85, 125], "update_featur": [23, 59, 78], "new_nam": [23, 59, 78], "export_feature_group_version_to_file_connector": [23, 78], "export_file_format": [9, 13, 23, 68, 78], "overwrit": [23, 68, 78], "export_feature_group_version_to_database_connector": [23, 78], "write_mod": [23, 38, 68, 78], "database_feature_map": [23, 38, 68, 78], "id_column": [9, 13, 23, 38, 68, 78], "additional_id_column": [9, 13, 23, 38, 68, 78], "insert": [23, 38, 59, 60, 61, 68, 78, 140], "addit": [9, 10, 23, 35, 38, 59, 60, 61, 65, 67, 68, 78, 118], "complex": [23, 38, 60, 61, 68, 78], "export_feature_group_version_to_consol": [23, 78], "set_feature_group_modifier_lock": [23, 78], "prevent": [23, 59, 78], "disabl": [9, 10, 23, 38, 59, 78], "enabl": [9, 10, 23, 35, 37, 38, 59, 78, 125], "add_user_to_feature_group_modifi": [23, 78], "add_organization_group_to_feature_group_modifi": [23, 78], "remove_user_from_feature_group_modifi": [23, 78], "remove_organization_group_from_feature_group_modifi": [23, 78], "delete_featur": [23, 59, 78], "delete_feature_group": [23, 78], "create_feature_group_vers": [23, 78], "variable_bind": [23, 59, 78], "create_feature_group_templ": [23, 78], "template_sql": [23, 59, 66, 78], "template_vari": [23, 59, 66, 78], "resolv": [23, 35, 59, 66, 68, 78, 118, 136], "delete_feature_group_templ": [23, 78], "update_feature_group_templ": [23, 78], "preview_feature_group_template_resolut": [23, 78], "should_valid": [23, 66, 78], "assum": [23, 78], "resolvedfeaturegrouptempl": [23, 66, 78, 136], "cancel_upload": [23, 78], "cancel": [23, 78, 144], "upload_part": [23, 78, 144], "part_numb": [23, 78, 144], "part_data": [23, 78, 144], "5gb": [23, 78, 144], "5tb": [23, 78, 144], "5mb": [23, 78, 144], "index": [8, 9, 10, 23, 48, 59, 78, 79, 81, 118, 144, 152, 154], "denot": [23, 78, 81, 144], "textiobas": [23, 59, 78, 118, 144], "multipart": [23, 78, 118, 144], "uploadpart": [23, 78, 144, 145], "encapsul": [23, 78, 144], "etag": [23, 78, 144, 145], "got": [23, 78, 144], "mark_upload_complet": [23, 78], "create_dataset_from_file_connector": [23, 78], "file_format": [23, 35, 38, 78], "refresh_schedul": [23, 38, 78, 125], "csv_delimit": [6, 9, 23, 35, 78], "filename_column": [23, 78], "start_prefix": [23, 78], "until_prefix": [23, 78], "location_date_format": [23, 78], "date_format_lookback_dai": [23, 78], "is_documentset": [23, 35, 78], "merge_file_schema": [23, 35, 78], "amazon": [23, 78], "aw": [23, 78], "bucket1": [23, 78], "dir1": [23, 78], "dir2": [23, 78], "event_d": [23, 78], "yyyi": [23, 78], "mm": [23, 78], "dd": [23, 78], "2021": [23, 78], "08": [23, 78, 118], "02": [23, 78], "utc": [23, 38, 78, 109, 125, 134, 135], "delimit": [23, 35, 78], "inclus": [23, 78, 118], "exclus": [23, 78, 118, 125], "partit": [9, 10, 23, 78], "dir4": [23, 78], "filenam": [23, 78], "parquet": [23, 78], "dai": [9, 10, 23, 35, 52, 78], "back": [7, 9, 23, 30, 78], "06": [23, 78], "04": [23, 78], "signifi": [23, 35, 78], "create_dataset_version_from_file_connector": [23, 78], "try": [23, 35, 78], "create_dataset_from_database_connector": [23, 78], "query_argu": [23, 35, 78], "sql_queri": [23, 35, 78], "timestamp_column": [23, 78], "descend": [23, 51, 78], "create_dataset_from_application_connector": [23, 78], "object_id": [23, 35, 78], "start_timestamp": [23, 35, 78], "end_timestamp": [23, 35, 78], "period": [9, 10, 23, 35, 78, 92], "create_dataset_version_from_database_connector": [23, 78], "create_dataset_version_from_application_connector": [23, 78], "create_dataset_from_upload": [23, 78], "create_dataset_version_from_upload": [23, 78], "create_streaming_dataset": [23, 78], "over": [23, 78], "extend": [23, 78], "snapshot_streaming_data": [23, 35, 78], "set_dataset_column_data_typ": [23, 78], "create_dataset_from_streaming_connector": [23, 78], "streaming_connector_id": [23, 78, 141], "streaming_arg": [23, 78], "set_streaming_retention_polici": [23, 35, 78], "retention_hour": [23, 35, 78], "retention_row_count": [23, 35, 78], "ignore_records_before_timestamp": [23, 35, 78], "retent": [23, 35, 78], "hour": [9, 10, 23, 35, 52, 78], "retain": [23, 35, 78], "cutoff": [23, 35, 78], "ignor": [9, 10, 23, 35, 78, 118], "sent": [21, 23, 35, 78, 118, 153], "rename_database_connector": [23, 78], "rename_application_connector": [23, 78], "verify_database_connector": [23, 78], "verify_file_connector": [23, 78], "fileconnectorverif": [23, 73, 78], "delete_database_connector": [23, 78], "delete_application_connector": [23, 78], "delete_file_connector": [23, 78], "verify_application_connector": [23, 78], "set_azure_blob_connection_str": [23, 78], "connection_str": [23, 78], "azur": [23, 78], "blob": [23, 78, 118], "product_nam": [23, 78], "rolearn": [23, 78], "verify_streaming_connector": [23, 78], "rename_streaming_connector": [23, 78], "delete_streaming_connector": [23, 78], "create_streaming_token": [23, 78], "delete_streaming_token": [23, 78], "streaming_token": [23, 59, 78, 140], "attach_dataset_to_project": [23, 78], "let": [23, 35, 78, 118], "engin": [23, 35, 78], "know": [23, 35, 78, 118], "remove_dataset_from_project": [23, 78], "delete_dataset": [23, 78], "get_training_config_opt": [23, 78, 125], "for_retrain": [23, 78, 125], "current_training_config": [23, 78, 125], "use_cases_url": [23, 78, 125], "retrain": [23, 38, 78, 85, 125], "state": [23, 78, 98, 113, 118, 125], "shall": [23, 78, 125], "trainingconfigopt": [23, 78, 125, 142], "create_train_test_data_split_feature_group": [23, 78, 125], "influenc": [23, 78, 125], "train_model": [23, 78, 125], "custom_algorithm": [7, 9, 10, 23, 78, 85, 125], "custom_algorithms_onli": [23, 78, 125], "builtin_algorithm": [23, 78, 85, 125], "gettrainingconfigopt": [23, 78, 125], "builtin": [23, 78, 125], "create_model_from_python": [23, 78, 125], "train_function_nam": [9, 10, 23, 78, 85, 125], "predict_function_nam": [9, 10, 23, 78, 85, 125], "predict_many_function_nam": [9, 10, 23, 78, 85, 125], "initialize_function_nam": [23, 78, 85, 125], "functionsourcecod": [23, 59, 78, 85, 125], "well": [9, 10, 23, 78, 85, 125], "anyth": [23, 78, 85, 125], "decid": [23, 78, 125], "rename_model": [23, 78], "update_python_model": [23, 78], "update_python_model_zip": [23, 78], "train_module_nam": [9, 10, 23, 78, 85], "predict_module_nam": [9, 10, 23, 78, 85], "trainmodulenam": [23, 78, 85], "predictmodulenam": [23, 78, 85], "respect": [9, 10, 23, 78, 85, 118, 125, 151], "update_python_model_git": [23, 78], "set_model_training_config": [23, 78], "set_model_prediction_param": [23, 78], "prediction_config": [23, 78, 85], "retrain_model": [23, 78], "honor": [23, 78, 85, 118], "delete_model": [23, 78], "delete_model_vers": [23, 78], "export_model_artifact_as_feature_group": [23, 78, 99], "artifact_typ": [23, 78, 99], "evalartifact": [23, 78, 99], "get_custom_train_function_info": [23, 78, 125], "feature_group_names_for_train": [23, 78, 125], "customtrainfunctioninfo": [23, 30, 78, 125], "create_model_monitor": [23, 78, 125], "prediction_feature_group_id": [23, 78, 125], "training_feature_group_id": [23, 78, 125], "target_valu": [23, 78, 125], "target_value_bia": [23, 78, 125], "target_value_perform": [23, 78, 125], "training_feature_map": [23, 78, 125], "feature_group_base_monitor_config": [23, 78, 125], "feature_group_comparison_monitor_config": [23, 78, 125], "pr": [23, 78, 125], "auc": [7, 9, 23, 78, 125], "page": [9, 10, 23, 78, 85, 118, 125], "old": [23, 78, 125], "prod": [7, 9, 23, 78, 125], "curv": [23, 78, 125], "prediction_feature_group": [23, 78, 125], "training_fature_group": [23, 78, 125], "strategi": [9, 10, 23, 78, 125], "rerun_model_monitor": [23, 78], "re": [9, 10, 23, 78, 91, 118], "rename_model_monitor": [23, 78], "delete_model_monitor": [23, 78], "delete_model_monitor_vers": [23, 78], "create_vision_drift_monitor": [23, 78, 125], "training_feature_group": [23, 78, 125], "precis": [7, 9, 10, 23, 78, 125], "recal": [7, 9, 10, 23, 78, 125], "area": [23, 78, 125], "create_eda": [23, 78, 125], "include_collinear": [23, 78, 125], "include_data_consist": [23, 78, 125], "collinearity_kei": [23, 78, 125], "data_consistency_test_config": [23, 78, 125], "data_consistency_reference_config": [23, 78, 125], "forecast_frequ": [9, 10, 23, 78, 125], "item": [7, 9, 10, 23, 52, 74, 78, 98, 118, 125, 140], "In": [23, 59, 68, 74, 78, 125], "hourli": [7, 9, 23, 52, 78, 125], "daili": [7, 9, 23, 52, 78, 125], "weekli": [23, 52, 78, 125], "monthli": [23, 52, 78, 125], "quarterli": [23, 52, 78, 125], "yearli": [7, 9, 23, 52, 78, 125], "rerun_eda": [23, 78], "rerun": [23, 46, 78, 91, 102, 125], "rename_eda": [23, 78], "delete_eda": [23, 78], "delete_eda_vers": [23, 78], "create_monitor_alert": [23, 78, 125], "alert_nam": [23, 78, 102, 125], "condition_config": [23, 78, 102, 125], "action_config": [23, 78, 102, 125], "condit": [23, 78, 102, 103, 125], "update_monitor_alert": [23, 78], "run_monitor_alert": [23, 78], "delete_monitor_alert": [23, 78], "create_deploy": [23, 78], "calls_per_second": [23, 78], "auto_deploi": [23, 78], "enable_batch_streaming_upd": [23, 78], "model_deployment_config": [23, 38, 78], "handl": [9, 10, 23, 38, 78, 85], "flag": [23, 38, 78, 81, 104], "offlin": [23, 78], "background": [23, 38, 78], "cach": [23, 38, 78], "quicker": [23, 38, 78], "create_deployment_token": [23, 78, 125], "update_deploy": [23, 78], "rename_deploy": [23, 78], "set_auto_deploy": [23, 78], "auto": [7, 9, 23, 38, 78], "promot": [23, 38, 78, 118], "compar": [23, 38, 44, 78, 118], "better": [23, 38, 78], "poor": [23, 38, 78], "autodeploi": [23, 38, 78], "set_deployment_model_vers": [23, 78], "serv": [23, 38, 78], "infer": [23, 38, 78], "set_deployment_feature_group_vers": [23, 78], "start_deploy": [23, 78], "restart": [23, 38, 78], "suspend": [23, 38, 78], "stop_deploy": [23, 78], "delete_deploy": [23, 78], "affect": [23, 38, 78], "recover": [23, 38, 78], "delete_deployment_token": [23, 78], "set_deployment_feature_group_export_file_connector_output": [23, 78], "set_deployment_feature_group_export_database_connector_output": [23, 78], "remove_deployment_feature_group_export_output": [23, 78], "refresh_typ": [23, 78, 134], "pattern": [23, 78], "regular": [9, 10, 23, 78], "interv": [23, 78], "delete_refresh_polici": [23, 78], "pause_refresh_polici": [23, 78], "paus": [23, 78, 109, 134, 135], "resume_refresh_polici": [23, 78], "resum": [23, 78, 109, 134], "run_refresh_polici": [23, 78], "forc": [7, 9, 10, 23, 78, 118, 134], "update_refresh_polici": [23, 78], "lookup_featur": [23, 78, 118], "query_data": [23, 78, 118], "limit_result": [23, 78, 118, 150], "result_column": [23, 78, 118], "author": [23, 78, 118], "safe": [23, 78, 118], "embed": [9, 10, 23, 54, 78, 98, 118, 125, 140, 150], "insid": [23, 78, 118], "websit": [23, 78, 118], "user_id": [23, 78, 118], "entiti": [9, 10, 23, 78, 118], "against": [15, 23, 59, 78, 118], "emb": [23, 78, 118], "predict_multipl": [23, 78, 118], "predict_from_dataset": [23, 78, 118], "predict_lead": [23, 78, 118], "explain_predict": [23, 78, 118], "explainer_typ": [23, 78, 118], "probabl": [23, 78, 118], "interact": [9, 10, 23, 78, 118], "own": [23, 78, 118], "incom": [23, 78, 118], "asset": [23, 78, 118], "credit": [23, 78, 118], "score": [23, 78, 108, 118, 151], "wherev": [23, 78, 118], "lead_id": [23, 78, 118], "click": [23, 78, 118], "cart": [23, 78, 118], "Will": [23, 78, 118], "explain": [23, 69, 78, 118], "predict_churn": [23, 78, 118], "churn": [23, 78, 118], "churn_result": [23, 78, 118], "churned_yn": [23, 78, 118], "predict_takeov": [23, 78, 118], "ye": [9, 10, 23, 78, 118], "account_nam": [23, 78, 118], "account_id": [23, 78, 118], "account": [23, 78, 118], "characterist": [23, 78, 118], "login": [23, 78, 118], "durat": [9, 10, 23, 78, 118], "ip": [23, 78, 118], "predict_fraud": [23, 78, 118], "transact": [23, 78, 118], "fraudul": [23, 78, 118], "account_numb": [23, 78, 118], "card": [23, 78, 118], "predict_class": [23, 78, 118], "threshold": [9, 10, 23, 48, 78, 118], "threshold_class": [23, 78, 118], "fixed_featur": [23, 78, 118], "classif": [23, 27, 78, 118], "popular": [9, 10, 23, 78, 118], "upon": [23, 78, 118, 129, 131], "multi": [9, 10, 23, 27, 78, 79, 98, 118, 147], "f1": [23, 78, 118], "optim": [7, 9, 10, 23, 78, 118], "treat": [9, 10, 23, 78, 118], "constant": [23, 78, 118], "delta": [23, 78, 118], "predict_target": [23, 78, 118], "get_anomali": [23, 78, 118], "histogram": [23, 54, 78, 92, 118], "anomali": [7, 9, 10, 23, 78, 118], "8": [7, 9, 23, 78, 118], "99": [23, 78, 118], "is_anomali": [23, 78, 118], "get_forecast": [23, 78, 118], "future_data": [23, 78, 118], "num_predict": [23, 78, 118], "prediction_start": [23, 78, 118], "holiday_yn": [23, 78, 118], "store_id": [23, 78, 118], "item_id": [9, 10, 23, 78, 118, 140], "known": [23, 78, 118], "ahead": [23, 78, 118], "holidai": [9, 10, 23, 78, 118], "nation": [23, 78, 118], "element": [23, 78, 118], "enter": [23, 78, 118], "No": [23, 78, 118], "promo": [23, 78, 118], "2015": [23, 78, 118], "07": [23, 78, 118], "31": [23, 78, 118], "00": [23, 78, 118], "01t00": [23, 78, 118], "mid": [23, 78, 118], "night": [23, 78, 118], "01": [23, 78, 118], "get_k_nearest": [23, 78, 118], "vector": [23, 78, 118, 125, 140, 150, 151, 152], "k": [9, 10, 23, 78, 118], "distanc": [23, 54, 58, 78, 118], "include_scor": [23, 78, 118], "nearest": [7, 9, 23, 78, 118], "neighbor": [23, 78, 118], "find": [23, 78, 118], "alongsid": [23, 78, 118], "get_multiple_k_nearest": [23, 78, 118], "catalogid": [23, 78, 118], "cat0": [23, 78, 118], "20": [9, 10, 23, 78, 118], "euclidean": [23, 78, 118], "getknearest": [23, 78, 118], "get_label": [23, 78, 118], "extract": [23, 35, 78, 118], "get_entities_from_pdf": [23, 78, 118], "pdf": [23, 78, 118], "return_extracted_featur": [23, 78, 118], "recogn": [23, 78, 118], "get_recommend": [23, 78, 118], "num_item": [23, 78, 118], "exclude_item_id": [23, 78, 118], "score_field": [23, 78, 118], "scaling_factor": [23, 78, 118], "restrict_item": [23, 78, 118], "exclude_item": [23, 78, 118], "explore_fract": [23, 78, 118], "user_nam": [23, 78, 118], "exact": [23, 78, 118], "john": [23, 78, 118], "doe": [23, 26, 78, 118, 140], "displai": [23, 50, 55, 59, 68, 76, 78, 87, 88, 96, 118], "sai": [23, 78, 118], "10": [7, 9, 23, 55, 68, 78, 118, 144], "11th": [23, 78, 118], "20th": [23, 78, 118], "toward": [23, 78, 118], "certain": [9, 10, 23, 78, 100, 118], "col0": [23, 78, 118], "value0": [23, 78, 118], "value1": [23, 78, 118], "factor": [9, 10, 23, 78, 118], "bias": [23, 78, 118], "adjust": [23, 78, 118], "vehicletyp": [23, 78, 118], "suv": [23, 78, 118], "sedan": [23, 78, 118], "multipli": [23, 78, 118], "sort": [9, 10, 23, 51, 78, 118], "particularli": [23, 78, 118], "might": [23, 78, 118, 125], "alwai": [23, 78, 85, 118], "come": [23, 78, 118], "demot": [23, 78, 118], "value3": [23, 78, 118], "scenario": [23, 78, 118], "explor": [9, 10, 23, 78, 118], "get_personalized_rank": [23, 78, 118], "preserve_rank": [23, 78, 118], "preserve_unknown_item": [23, 78, 118], "item_cod": [23, 78, 118], "whom": [23, 78, 118], "movie_nam": [23, 78, 118], "desir": [23, 78, 118], "kept": [9, 10, 23, 78, 118, 144], "unchang": [23, 78, 118], "unknown": [9, 10, 23, 78, 118], "rerank": [9, 10, 23, 78, 118], "get_ranked_item": [23, 78, 118], "accord": [23, 78, 118], "prefer": [23, 78, 118], "get_related_item": [23, 78, 118], "relat": [23, 78, 118], "don": [23, 78, 118], "show": [23, 51, 52, 78, 97, 118], "get_chat_respons": [23, 78, 118], "search_result": [], "chat": [9, 10, 21, 22, 23, 78, 118, 125], "continu": [23, 78, 118], "convers": [22, 23, 78, 118], "chronolog": [23, 78, 118], "altern": [23, 78, 118], "is_us": [23, 78, 118], "msg_id": [], "nlpsearchpredict": [], "get_search_result": [23, 78, 118], "secur": [23, 78, 118], "get_senti": [23, 78, 118], "sentiment": [9, 10, 23, 78, 118], "analyz": [23, 53, 78, 118], "get_entail": [23, 78, 118], "classifi": [9, 10, 23, 78, 118], "get_classif": [23, 78, 118], "get_summari": [23, 78, 91, 118], "raw": [23, 24, 78, 84, 118], "predict_languag": [23, 78, 118], "get_assign": [23, 78, 118], "forced_assign": [23, 78, 118], "check_constraint": [23, 78, 118], "constraint": [23, 78, 118], "solut": [23, 78, 118], "predict_with_binary_data": [23, 78, 118], "blob_key_nam": [], "audio": [23, 78, 118], "describe_imag": [23, 78, 118], "top_n": [23, 78, 118], "similar": [23, 78, 118], "candid": [23, 78, 118], "n": [8, 9, 23, 78, 118], "transcribe_audio": [23, 78, 118], "transcrib": [23, 78, 118], "classify_imag": [23, 78, 118], "classify_pdf": [23, 78, 118], "get_objects_from_imag": [23, 78, 118], "transfer_styl": [23, 78, 118], "source_imag": [23, 78, 118], "style_imag": [23, 78, 118], "adopt": [23, 78, 118], "visual": [23, 78, 118], "makeup": [23, 78, 118], "generate_imag": [23, 78, 118], "prompt": [23, 78, 118], "cat": [23, 78, 118], "create_batch_predict": [23, 38, 78], "outputloc": [23, 38, 60, 61, 78, 86], "tablenam": [23, 38, 59, 78], "outputtyp": [23, 38, 78], "enforc": [23, 38, 59, 78], "conjunct": [23, 38, 78], "start_batch_predict": [23, 78], "update_batch_predict": [23, 78], "set_batch_prediction_file_connector_output": [23, 78], "set_batch_prediction_database_connector_output": [23, 78], "set_batch_prediction_feature_group_output": [23, 78], "set_batch_prediction_output_to_consol": [23, 78], "set_batch_prediction_dataset": [23, 78], "set_batch_prediction_feature_group": [23, 78], "set_batch_prediction_dataset_remap": [23, 78], "delete_batch_predict": [23, 78], "add_user_item_interact": [23, 78], "event_typ": [23, 78], "additional_attribut": [23, 78], "upsert_user_attribut": [23, 78], "user_attribut": [23, 78], "upsert_item_attribut": [23, 78], "item_attribut": [23, 78], "add_multiple_user_item_interact": [23, 78], "userid": [23, 78], "itemid": [23, 78, 140], "eventtyp": [23, 78], "additionalattribut": [23, 78], "attribute1": [23, 78], "attribute2": [23, 78], "123": [23, 78], "upsert_multiple_user_attribut": [23, 78], "userattribut": [23, 78], "upsert_multiple_item_attribut": [23, 78], "itemattribut": [23, 78], "upsert_item_embed": [23, 78, 140], "catalog_id": [23, 78, 118, 140], "delete_item_embed": [23, 78, 140], "knn": [23, 78, 140], "upsert_multiple_item_embed": [23, 78, 140], "upsert_data": [23, 59, 78, 140], "append_data": [23, 59, 78, 140], "recordid": [23, 59, 78, 140], "upsert_multiple_data": [23, 59, 78, 140], "append_multiple_data": [23, 59, 78, 140], "create_python_funct": [23, 78], "reusabl": [23, 78], "update_python_funct": [23, 59, 78], "delete_python_funct": [23, 78], "create_graph_dashboard": [23, 78, 125], "python_function_id": [23, 77, 78, 125], "delete_graph_dashboard": [23, 78], "update_graph_dashboard": [23, 78], "add_graph_to_dashboard": [23, 78, 129], "update_graph_to_dashboard": [23, 78], "create_algorithm": [23, 78], "usabl": [23, 78], "predict_mani": [23, 78], "delete_algorithm": [23, 78], "update_algorithm": [23, 78], "list_builtin_algorithm": [23, 78, 125], "create_custom_loss_function_with_source_cod": [23, 78], "loss_function_nam": [23, 78], "loss_function_source_cod": [23, 78], "charact": [23, 78, 81], "fewer": [23, 78], "update_custom_loss_function_with_source_cod": [23, 78], "delete_custom_loss_funct": [23, 78], "create_custom_metr": [23, 78], "custom_metric_function_nam": [23, 78], "update_custom_metr": [23, 78], "delete_custom_metr": [23, 78], "create_modul": [23, 78], "bring": [23, 78], "lower": [23, 78], "delete_modul": [23, 78], "update_modul": [23, 78], "get_notebook_cell_complet": [23, 78], "previous_cel": [23, 78], "completion_typ": [23, 78], "autocomplet": [23, 78], "llm": [9, 10, 23, 59, 78, 81, 83, 84], "previouscel": [23, 78], "markdown": [23, 59, 78], "openai": [23, 78], "notebookcomplet": [23, 78], "sourcetyp": [24, 35], "sourcecod": [24, 85], "applicationconnectorinfo": 24, "packagerequir": 24, "publishingmsg": 24, "file_upload": 24, "application_connector": [24, 78], "pip": 24, "depend": [9, 10, 23, 24, 78, 109, 111, 112], "went": 24, "wrong": 24, "concatenationconfig": [25, 59], "concatenatedt": 25, "mergetyp": 25, "replaceuntiltimestamp": 25, "skipmateri": 25, "verify_respons": 26, "public_kei": 26, "signatur": 26, "public": [26, 78, 118, 140], "get_public_kei": 26, "notebookid": [27, 28, 101, 109, 110, 129, 131, 134], "lossfunctionnam": 27, "lossfunctiontyp": 27, "custommetricid": 28, "latestcustommetricvers": 28, "custommetricfunctionnam": 29, "trainingdataparameternamemap": 30, "schemamap": 30, "traindataparametertofeaturegroupid": 30, "trainingconfig": [9, 10, 23, 30, 78, 85, 125], "dataconsistencydupl": [31, 49], "totalcount": 31, "numdupl": 31, "featurerecord": [31, 70], "datafilt": [], "whereexpress": [], "dataqualityresult": 33, "qualiti": 33, "normal": [9, 10, 33, 78], "stage": [33, 87, 88, 99, 114], "differ": [9, 10, 33, 52, 67, 78, 96, 99, 124], "get_object_schema": 34, "datasetid": [35, 37, 59, 110, 119, 127, 134, 144], "datasourc": 35, "ignorebefor": 35, "ephemer": 35, "lookbackdai": 35, "databaseconnectorconfig": 35, "applicationconnectorconfig": 35, "isdocumentset": 35, "mergefileschema": [35, 37], "latestdatasetvers": 35, "external_servic": 35, "worth": 35, "documentset": 35, "create_version_from_file_connector": 35, "create_version_from_database_connector": 35, "create_version_from_application_connector": 35, "create_version_from_upload": 35, "attach_to_project": 35, "remove_from_project": [35, 59], "wait_for_import": [35, 37], "900": [35, 37], "wait_for_inspect": [35, 37], "detecteddatatyp": [36, 56, 138], "detectedfeaturetyp": [36, 56, 138], "originalnam": [36, 56, 105], "validdatatyp": 36, "timeformat": 36, "timestampfrequ": 36, "data_types_url": 36, "rowcount": 37, "incrementalqueriedat": 37, "uploadid": [37, 43, 144], "invalidrecord": 37, "byte": [37, 42, 144], "popul": [37, 43, 60, 133], "deployedat": 38, "projectid": [22, 38, 46, 77, 85, 91, 102, 122, 125, 134], "callspersecond": 38, "region": 38, "batchstreamingupd": 38, "pendingmodelvers": 38, "modeldeploymentconfig": 38, "featuregroupexportconfig": [9, 13, 23, 38, 61, 78, 134], "becam": 38, "elig": [9, 10, 38, 58, 78], "whenev": 38, "switch": 38, "create_webhook": 38, "list_webhook": 38, "set_auto": 38, "set_model_vers": 38, "set_feature_group_vers": 38, "set_feature_group_export_file_connector_output": 38, "set_feature_group_export_database_connector_output": 38, "remove_feature_group_export_output": 38, "wait_for_deploy": 38, "480": 38, "wait_for_pending_deployment_upd": 38, "600": [38, 59, 144], "deploymet": 38, "deploymenttoken": 39, "files": 40, "documnet": 40, "documentannot": [40, 41], "boundingbox": 41, "documentstor": 42, "documentstoreid": [42, 43], "documenttyp": 42, "documentcount": 42, "approximates": 42, "documentstoreimport": 43, "documentstoreimportid": 43, "importingstartedat": 43, "documentsimport": 43, "documentsskip": 43, "replaceexistingfil": 43, "traincolumn": 44, "predictedcolumn": 44, "versu": [44, 45, 57], "featuredistribut": [23, 44, 57, 78, 95], "labeldrift": [45, 92], "predictiondrift": [45, 58], "edaid": [46, 53], "referencefeaturegroupvers": [46, 53], "testfeaturegroupvers": [46, 53], "edaconfig": [46, 91, 95], "latestedavers": 46, "columnnam": [48, 49], "collinearitymatrix": 48, "groupfeaturedict": 48, "collinearitygroup": 48, "columnnamesx": 48, "matrix": 48, "collinearity_group": 48, "7": 48, "transformationcolumnnam": 49, "basedupl": 49, "comparedupl": 49, "dataconsistencydelet": 49, "dataconsistencytransform": 49, "occur": [49, 88, 129, 130], "isscatt": 50, "isboxwhisk": 50, "xaxi": [50, 74], "yaxi": [50, 74], "xaxiscolumnvalu": 50, "yaxiscolumnvalu": 50, "datacolumn": [50, 74], "scatter": 50, "v": [50, 58], "whisker": 50, "vice": 50, "versa": 50, "x_axi": 50, "y_axi": 50, "selectedfeatur": 51, "sortedcolumnnam": 51, "featurecollinear": 51, "forecastingtargetfeatur": 52, "timestampfeatur": 52, "forecastfrequ": 52, "salesacrosstim": 52, "cummulativecontribut": 52, "missingvaluedistribut": 52, "historylength": 52, "numrowshistogram": 52, "productmatur": 52, "could": 52, "forecastinganalysisgraphdata": [52, 74], "averag": [7, 9, 52, 54, 78], "p10": [52, 74, 80], "p90": [52, 74, 80], "median": [7, 9, 52, 74, 78, 80], "sale": 52, "percent": [9, 10, 52, 78], "contribut": [52, 69], "long": 52, "aliv": 52, "edastartedat": 53, "edacompletedat": 53, "wait_for_eda": 53, "1200": [53, 95, 103, 114, 123], "embeddingfeaturedriftdistribut": 54, "jsdistanc": [54, 58], "wsdistanc": [54, 58], "ksstatist": [54, 58], "kl": [54, 58, 92], "diverg": [54, 58, 92], "j": [54, 58], "wasserstein": [54, 58], "kolmogorov": [54, 58], "smirnov": [54, 58], "statist": [54, 57, 58, 75], "selectclaus": [56, 105], "sourcet": [56, 59, 68, 105], "usingclaus": 56, "orderclaus": 56, "whereclaus": 56, "pointintimeinfo": 56, "nestedfeatur": [56, 105], "pointintimefeatur": [56, 115], "featuredriftsummari": 58, "featureindex": 58, "targetcolumn": [58, 90], "dataintegritytimeseri": 58, "nestedsummari": 58, "nullviol": [58, 106], "typeviol": [58, 143], "rangeviol": [58, 132], "catviol": 58, "symmetr": [9, 10, 58, 78], "sum": 58, "discrep": 58, "modificationlock": [59, 100], "featuregroupsourcetyp": 59, "functionnam": [59, 129, 131], "featuregrouptyp": 59, "sqlerror": [59, 136], "latestversionoutd": 59, "referencedfeaturegroup": 59, "lookupkei": [59, 79], "streamingen": 59, "featuregroupus": 59, "mergeconfig": [8, 9, 23, 59, 78], "transformconfig": 59, "cpusiz": [59, 68, 85, 99], "streamingreadi": 59, "featuretag": 59, "modulenam": 59, "templatebind": 59, "featureexpress": 59, "useoriginalcsvnam": [59, 68], "pythonfunctionbind": [59, 68], "pythonfunctionnam": [59, 77], "annotationconfig": [2, 4, 23, 59, 68, 78], "projectconfig": [23, 59, 60, 78, 126], "duplicatefeatur": 59, "pointintimegroup": [59, 68, 116], "indexingconfig": [59, 79], "latestfeaturegroupvers": 59, "outdat": [59, 104], "add_to_project": 59, "set_project_config": 59, "set_typ": 59, "create_sampl": 59, "set_sampling_config": 59, "set_merge_config": 59, "set_transform_config": 59, "set_schema": 59, "add_tag": [59, 125], "remove_tag": [59, 125], "add_annotation_label": 59, "remove_annotation_label": 59, "invalidate_streaming_data": 59, "concatenate_data": 59, "set_indexing_config": 59, "detach_from_templ": 59, "update_template_bind": 59, "update_python_function_bind": 59, "update_sql_definit": 59, "update_dataset_feature_express": 59, "update_function_definit": 59, "update_zip": 59, "update_git": 59, "list_export": 59, "set_modifier_lock": 59, "list_modifi": 59, "add_user_to_modifi": 59, "add_organization_group_to_modifi": 59, "remove_user_from_modifi": 59, "remove_organization_group_from_modifi": 59, "create_vers": [59, 150], "create_templ": 59, "suggest_template_for": 59, "get_recent_streamed_data": 59, "wait_for_dataset": 59, "7200": 59, "wait_for_upload": 59, "wait_for_materi": [59, 68], "wait_for_streaming_readi": 59, "streaming_statu": 59, "load_as_panda": [55, 59, 68], "text_snippet": 59, "ll": 59, "sinc": [9, 10, 59, 78], "lastest": [59, 91], "featuregroupexportid": 60, "fileformat": [60, 61], "objectnam": [60, 61, 65], "writemod": [60, 61, 65], "databasefeaturemap": [60, 61, 65], "idcolumn": [60, 61, 65], "exportcompletedat": [60, 86], "additionalidcolumn": [60, 61, 65], "get_connector_error": 60, "wait_for_result": [55, 60, 68, 86, 152], "3600": [23, 55, 60, 68, 78, 86, 150, 152], "get_result": 60, "downloadurl": 62, "expiresat": 62, "datetim": [9, 10, 62, 78, 138], "featuregrouplineag": 63, "node": 63, "direct": [7, 9, 63, 78], "acycl": 63, "lineag": 63, "featuregrouptemplateid": [66, 136], "issystemtempl": 66, "templatesql": [66, 136], "templatevari": 66, "metadata": [1, 2, 23, 59, 66, 78], "preview_resolut": 66, "featuregrouptemplatevariableopt": 67, "templatevariableopt": 67, "userfeedback": 67, "regard": 67, "export_to_file_connector": 68, "export_to_database_connector": 68, "export_to_consol": 68, "_download_avro_fil": [55, 68], "file_part": [55, 68], "tmp_dir": [55, 68], "max_work": [55, 68], "thread": [55, 68, 144], "shapfeatureimport": 69, "permutationfeatureimport": 69, "nullfeatureimport": 69, "lofofeatureimport": 69, "permut": 69, "writepermiss": [71, 72, 73], "authexpiresat": 71, "eg": [71, 81], "authopt": 72, "itemstatist": [74, 80], "rowwis": 74, "wise": [9, 10, 74, 78], "missing_perc": 74, "standard_devi": 74, "min": [7, 9, 74, 78, 80], "max": [7, 9, 74, 78, 80, 144], "stat": 75, "invoc": 75, "userexcept": [75, 149], "stacktrac": 75, "generatedpitfeatureconfigopt": 76, "displaynam": [76, 88], "short": [76, 144], "graphdashboardid": 77, "pythonfunctionid": [77, 111, 112, 129, 131], "plotreferenceid": 77, "projectnam": 77, "api_class": [23, 78], "annotation_entri": 78, "annotations_statu": 78, "api_client_util": 78, "batch_predict": [78, 134], "categorical_range_viol": 78, "code_sourc": 78, "concatenation_config": 78, "cryptographi": 78, "custom_loss_funct": [9, 10, 78], "custom_metr": [9, 10, 78], "custom_train_function_info": 78, "data_consistency_dupl": 78, "data_filt": [], "data_prep_log": 78, "data_quality_result": 78, "dataset_column": 78, "deployment_auth_token": 78, "document_annot": 78, "document_stor": 78, "document_store_import": 78, "drift_distribut": 78, "eda_collinear": 78, "eda_data_consist": 78, "eda_feature_associ": 78, "eda_feature_collinear": 78, "eda_forecasting_analysi": 78, "embedding_feature_drift_distribut": 78, "feature_drift_summari": 78, "feature_group_export": 78, "feature_group_export_config": [23, 78, 134], "feature_group_export_download_url": 78, "feature_group_lineag": 78, "feature_group_templ": 78, "feature_group_template_variable_opt": 78, "feature_import": 78, "feature_record": 78, "file_connector_instruct": 78, "file_connector_verif": 78, "forecasting_analysis_graph_data": 78, "function_log": 78, "generated_pit_feature_config_opt": 78, "graph_dashboard": 78, "indexing_config": 78, "item_statist": 78, "model_artifacts_export": 78, "model_loc": 78, "model_metr": 78, "model_monitor": [7, 9, 78], "model_monitor_org_summari": 78, "model_monitor_summari": 78, "model_monitor_summary_from_org": 78, "model_training_type_for_deploy": 78, "model_upload": 78, "modification_lock_info": 78, "modul": [9, 78, 154], "monitor_alert": 78, "nested_featur": 78, "null_viol": 78, "organization_group": 78, "point_in_time_featur": 78, "point_in_time_group": 78, "point_in_time_group_featur": 78, "prediction_cli": 78, "prediction_dataset": 78, "prediction_input": 78, "prediction_metr": 78, "prediction_metric_vers": 78, "project_dataset": 78, "project_valid": 78, "python_plot_funct": 78, "range_viol": 78, "refresh_pipeline_run": 78, "refresh_polici": 78, "resolved_feature_group_templ": 78, "streaming_auth_token": 78, "streaming_connector": 78, "training_config_opt": 78, "type_viol": 78, "use_case_requir": 78, "user_except": 78, "predictioncli": [78, 118], "predict_raw": [78, 118], "kwarg": [9, 10, 78, 118, 129, 130], "interfac": [78, 118], "plug": [78, 89, 118], "plai": [78, 89, 118], "arbitrari": [78, 118], "__version__": 78, "conjuct": 79, "missingperc": 80, "stddev": 80, "deviat": 80, "modelconfig": [85, 99], "modelpredictionconfig": [85, 99], "sharedat": 85, "traininginputt": 85, "trainingfeaturegroupid": [85, 91, 99], "ispythonmodel": 85, "defaultalgorithm": [85, 99], "customalgorithmconfig": [85, 99], "restrictedalgorithm": 85, "latestmodelvers": 85, "showcas": 85, "trhough": 85, "regardless": 85, "modelloc": [85, 89], "update_python": 85, "update_python_zip": 85, "update_python_git": 85, "set_training_config": 85, "set_prediction_param": 85, "get_metr": 85, "set_default_algorithm": 85, "list_artifacts_export": 85, "get_training_types_for_deploy": 85, "wait_for_train": [85, 99], "wait_for_evalu": 85, "wait_for_full_automl": [85, 99], "automl": [85, 99], "cycl": [85, 99], "get_automl_statu": 85, "get_train_test_feature_group_as_panda": [85, 99], "modelartifactsexportid": 86, "artifactnam": 89, "baselinemetr": 90, "trainvaltestsplit": 90, "infolog": 90, "val": [9, 10, 78, 90], "predictionfeaturegroupid": 91, "predictionfeaturegroupvers": [91, 95], "trainingfeaturegroupvers": [91, 95], "alertconfig": 91, "biasmetricid": 91, "latestbiasmetricversionid": 91, "predictionmetricid": [91, 122, 123, 134], "latestpredictionmetricversionid": 91, "metricconfig": [91, 95], "featuregroupmonitorconfig": [91, 95], "metrictyp": [91, 95], "monitortyp": 91, "latestmonitormodelvers": 91, "feature_group_monitor": 91, "featuredrift": 92, "dataintegr": [92, 93], "monitordata": 92, "totalstarredmonitor": 92, "modelaccuraci": 93, "modeldrift": 93, "biasviol": 93, "monitoringstartedat": 95, "monitoringcompletedat": 95, "pendingdeploymentid": [95, 99], "faileddeploymentid": [95, 99], "metric_data": 95, "wait_for_monitor": 95, "metricinfo": 96, "metricnam": 96, "metricchart": 96, "othermetr": 96, "actualvaluessupportedfordrilldown": 96, "algo": 96, "drilldown": 96, "backend": 97, "modelupload": 98, "modeluploadid": 98, "embeddingsuploadid": 98, "artifactsuploadid": 98, "verificationsuploadid": 98, "defaultitemsuploadid": 98, "modelfileuploadid": 98, "modelstateuploadid": 98, "inputpreprocessoruploadid": 98, "requirementsuploadid": 98, "resourcesuploadid": 98, "tensorflow": 98, "save": [23, 35, 59, 78, 98], "preprocessor": 98, "resourc": [98, 133], "trainingstartedat": 99, "trainingcompletedat": 99, "automlcomplet": 99, "deployablealgorithm": 99, "bestalgorithm": 99, "featureanalysisstatu": 99, "dataclusterinfo": 99, "lifecycl": [99, 123], "get_feature_importance_bi": 99, "export_custom": 99, "frame": 99, "useremail": 100, "monitoralertid": [102, 103], "conditionconfig": [102, 103], "actionconfig": [102, 103], "conditiondescript": [102, 103], "actiondescript": [102, 103], "latestmonitoralertvers": 102, "alertingstartedat": 103, "alertingcompletedat": 103, "alertresult": 103, "actionstatu": 103, "actionerror": 103, "actionstartedat": 103, "actioncompletedat": 103, "actionfor": 103, "wait_for_monitor_alert": 103, "dataus": 105, "trainingnullfreq": 106, "predictionnullfreq": 106, "anomal": 106, "proport": 106, "organizationgroupid": 107, "groupnam": [107, 115, 116], "defaultgroup": 107, "member": 107, "bill": 107, "invite_us": 107, "add_permiss": 107, "remove_permiss": 107, "add_user_to": 107, "remove_user_from": 107, "set_default": 107, "historytablenam": [115, 116], "timestampkei": 115, "historicaltimestampkei": 115, "lookbackwindow": 116, "lookbackwindowlag": 116, "historywindowkei": 116, "historyaggregationkei": 116, "pointintimegroupfeatur": [116, 117], "pitoperationtyp": 117, "pitoperationconfig": 117, "predictiondataset": [119, 121], "datasettyp": [119, 120, 127, 147], "predictionfeaturegroup": [120, 121], "featuregroupdatasetid": 121, "datasetidremap": 121, "predictionmetr": 122, "predictionmetricconfig": [122, 123], "latestpredictionmetricversiondescript": 122, "predictionmetricvers": [122, 123, 133], "predictionmetriccompletedat": 123, "predictionmetricstartedat": 123, "wait_for_prediction_metric_vers": 123, "requiredfeaturegrouptyp": 124, "optionalfeaturegrouptyp": 124, "usecasessupportcustomalgorithm": 124, "featuregroupsen": 125, "attach_dataset": 125, "project_dataset_typ": 125, "remove_dataset": 125, "dataseterror": 128, "columnhint": 128, "keep": [128, 133], "hint": 128, "functionvariablemap": [112, 129, 131], "functiontyp": [129, 131], "spin": [129, 131], "plotnam": 131, "trainingmin": 132, "trainingmax": 132, "predictionmin": 132, "predictionmax": 132, "freqabovetrainingrang": 132, "freqbelowtrainingrang": 132, "minimum": [9, 10, 78, 132], "below": 132, "abov": [9, 10, 78, 132], "refreshpipelinerunid": 133, "refreshpolicyid": [133, 134, 135], "startedat": 133, "completedat": [114, 133], "refreshtyp": [133, 134, 135], "deploymentvers": [113, 133], "track": 133, "span": 133, "them": [9, 10, 78, 133], "trigger": [133, 153], "wait_for_complet": 133, "nextruntim": [109, 134, 135], "lifecyclemsg": 135, "resolvedvari": 136, "resolvedsql": 136, "final": [9, 10, 78, 136], "resolut": 136, "_get_attribute_as_dict": 137, "detectedfeaturemap": 138, "integ": [7, 9, 78, 81, 138], "struct": 138, "streamingtoken": 139, "streamingconnectorid": 141, "valuetyp": 142, "valueopt": 142, "lastmodelvalu": 142, "needsrefresh": 142, "dict_valu": 142, "again": 142, "trainingdatatyp": 143, "predictiondatatyp": 143, "datasetuploadid": 144, "smaller": 144, "backward": 144, "mark_complet": 144, "upload_arg": 144, "backoff": 144, "upload_fil": 144, "chunksiz": 144, "1024": [7, 9, 78, 144], "wait_timeout": 144, "chunk": [8, 9, 10, 23, 78, 125, 144], "worker": 144, "iobas": 144, "stringio": 144, "mb": 144, "_yield_upload_part": 144, "wait_for_join": 144, "md5": 145, "prettynam": 146, "allowedfeaturemap": 147, "allowednestedfeaturemap": 147, "collect": [15, 147], "allowed_feature_typ": 147, "feature_type_enum": 147, "accept": 148, "traceback": 149, "usercod": 149, "webhookid": 153, "webhookeventtyp": 153, "payloadtempl": 153, "abacusai": 154, "pretrained_sequence_classif": [], "set_annotation_status_featur": [23, 59, 78], "simpl": [23, 78, 118], "exactli": [23, 78, 118], "lower_in": [23, 78, 118], "lower_ex": [23, 78, 118], "upper_in": [23, 78, 118], "upper_ex": [23, 78, 118], "limefeatureimport": 69, "ebmfeatureimport": 69, "lime": 69, "boost": [9, 10, 69, 78], "chartnam": 74, "pretrained_use_cas": [], "10th": 80, "percentil": [9, 10, 78, 80], "90th_percentil": 80, "pretrainedusecas": [], "predictionapi": [], "predictionuidisplaytyp": [], "imgsrc": [], "pretrain": [7, 9, 10, 78], "compon": [23, 78], "parsingconfig": [6, 9, 23, 35, 78], "escap": [6, 9, 78], "52": [], "vision_regress": [7, 9, 23, 78], "pretrained_text_classif": [23, 78], "parsing_config": [23, 35, 78], "pars": [23, 35, 78, 81, 84], "get_clust": [23, 78, 118], "score_imag": [23, 78, 118], "edachartdescript": [47, 74], "charttyp": [47, 74], "chartdescript": 74, "eda_chart_descript": 78, "first_cap_r": 5, "all_cap_r": 5, "upper_snake_cas": 5, "snake_cas": 5, "_upper_snake_case_kei": [5, 9, 10, 78], "_support_kwarg": [5, 9, 10, 78], "user_item_scor": [], "affin": [], "anomaly_detect": [7, 9, 10, 78], "anomaly_new": [7, 9, 78], "anomaly_outli": [7, 9, 78], "clustering_timeseri": [7, 9, 10, 23, 78], "named_entity_extract": [7, 9, 10, 78], "nlp_ner": [7, 9, 78], "natural_language_search": [7, 9, 10, 78], "sentence_boundary_detect": [7, 9, 10, 78], "sentiment_detect": [7, 9, 10, 78], "document_classif": [7, 9, 10, 78], "document_summar": [7, 9, 10, 78], "document_visu": [7, 9, 10, 78], "predictive_model": [7, 9, 10, 78], "custom_trained_model": [7, 9, 10, 78], "plug_and_plai": [7, 9, 78], "image_classif": [7, 9, 78], "vision_classif": [7, 9, 78], "object_detect": [7, 9, 78], "image_value_predict": [7, 9, 78], "pretrained_model": [7, 9, 78], "filllog": [7, 9, 78], "backfil": [7, 9, 78], "bfill": [7, 9, 78], "forwardfil": [7, 9, 78], "ffill": [7, 9, 78], "linear": [7, 9, 78], "batchsiz": [7, 9, 10, 78], "batch_8": [7, 9, 78], "batch_16": [7, 9, 78], "16": [7, 9, 78], "batch_32": [7, 9, 78], "32": [7, 9, 78], "batch_64": [7, 9, 78], "64": [7, 9, 78], "batch_128": [7, 9, 78], "128": [7, 9, 78], "batch_256": [7, 9, 78], "256": [7, 9, 78], "batch_384": [7, 9, 78], "384": [7, 9, 78], "batch_512": [7, 9, 78], "512": [7, 9, 78], "batch_740": [7, 9, 78], "740": [7, 9, 78], "batch_1024": [7, 9, 78], "holidaycalendar": [7, 9, 10, 78], "au": [7, 9, 78], "uk": [7, 9, 78], "u": [7, 9, 10, 78], "forecastingobject": [7, 9, 10, 78], "w_c_accuraci": [7, 9, 78], "wape": [7, 9, 78], "mape": [7, 9, 78], "cmape": [7, 9, 78], "rmse": [7, 9, 78], "cv": [7, 9, 78], "coefficient_of_vari": [7, 9, 78], "srmse": [7, 9, 78], "forecastingfrequ": [7, 9, 10, 78], "1h": [7, 9, 78], "1d": [7, 9, 78], "weekly_sunday_start": [7, 9, 78], "1w": [7, 9, 78], "weekly_monday_start": [7, 9, 78], "w": [7, 9, 78], "mon": [7, 9, 78], "weekly_saturday_start": [7, 9, 78], "sat": [7, 9, 78], "month_start": [7, 9, 78], "m": [7, 9, 78], "month_end": [7, 9, 78], "1m": [7, 9, 78], "quarter_start": [7, 9, 78], "q": [7, 9, 78], "quarter_end": [7, 9, 78], "1q": [7, 9, 78], "1y": [7, 9, 78], "forecastingdatasplittyp": [7, 9, 10, 78], "prediction_length": [7, 9, 10, 78], "forecastinglossfunct": [7, 9, 10, 78], "mean_absolute_error": [7, 9, 78], "mae": [7, 9, 78], "normalized_mean_absolute_error": [7, 9, 78], "nmae": [7, 9, 78], "peaks_mean_absolute_error": [7, 9, 78], "peaks_ma": [7, 9, 78], "mean_absolute_percentage_error": [7, 9, 78], "stable_map": [7, 9, 78], "pointwise_accuraci": [7, 9, 78], "root_mean_square_error": [7, 9, 78], "normalized_root_mean_square_error": [7, 9, 78], "nrmse": [7, 9, 78], "asymmetric_mean_absolute_percentage_error": [7, 9, 78], "asymmetric_map": [7, 9, 78], "stable_standardized_mean_absolute_percentage_error": [7, 9, 78], "stable_standardized_mape_with_cmap": [7, 9, 78], "gaussian": [7, 9, 10, 78], "mle_gaussian_loc": [7, 9, 78], "gaussian_full_covari": [7, 9, 78], "mle_gaussfullcov": [7, 9, 78], "guassian_exponenti": [7, 9, 78], "mle_gaussexp": [7, 9, 78], "mix_gaussian": [7, 9, 78], "mle_gaussmix": [7, 9, 78], "weibul": [7, 9, 78], "mle_weibul": [7, 9, 78], "negative_binomi": [7, 9, 78], "mle_negbinom": [7, 9, 78], "log_root_mean_square_error": [7, 9, 78], "log_rms": [7, 9, 78], "forecastinglocalsc": [7, 9, 10, 78], "zscore": [7, 9, 78], "sliding_zscor": [7, 9, 78], "last_point": [7, 9, 78], "lastpoint": [7, 9, 78], "min_max": [7, 9, 78], "minmax": [7, 9, 78], "min_std": [7, 9, 78], "minstd": [7, 9, 78], "robust": [7, 9, 78], "forecastingfillmethod": [7, 9, 78], "middl": [7, 9, 78], "forecastingquanitlesextensionmethod": [7, 9, 10, 78], "quadrat": [7, 9, 78], "ancestral_simul": [7, 9, 78], "simul": [7, 9, 10, 78], "forecastingtrainingconfig": [9, 10, 78], "param": [9, 10, 78, 88], "timestep": [9, 10, 78], "scheme": [9, 10, 78], "sort_object": [9, 10, 78], "probability_quantil": [9, 10, 78], "quantil": [7, 9, 10, 78], "no_validation_set": [], "force_prediction_length": [9, 10, 78], "filter_item": [9, 10, 78], "small": [9, 10, 78], "volum": [9, 10, 78], "enable_cold_start": [9, 10, 78], "cold": [9, 10, 78], "zero": [7, 9, 10, 78], "enable_multiple_backtest": [9, 10, 78], "backtest": [9, 10, 78], "total_backtesting_window": [], "backtest_window_step_s": [], "shift": [9, 10, 78], "full_data_retrain": [9, 10, 78], "type_of_split": [9, 10, 78], "test_by_item": [9, 10, 78], "rather": [9, 10, 78], "test_start": [9, 10, 78], "test_split": [9, 10, 78], "neural": [9, 10, 78], "network": [9, 10, 78], "underprediction_weight": [9, 10, 78], "weight": [9, 10, 78], "underpredict": [9, 10, 78], "disable_networks_without_analytic_quantil": [9, 10, 78], "analyt": [9, 10, 78], "mixtur": [9, 10, 78], "initial_learning_r": [9, 10, 78], "rate": [9, 10, 78], "l2_regularization_factor": [9, 10, 78], "l2": [9, 10, 78], "dropout_r": [9, 10, 78], "dropout": [9, 10, 78], "recurrent_lay": [9, 10, 78], "recurr": [9, 10, 78], "layer": [9, 10, 78], "stack": [9, 10, 78], "recurrent_unit": [9, 10, 78], "unit": [9, 10, 78], "convolutional_lay": [9, 10, 78], "convolut": [9, 10, 78], "convolution_filt": [9, 10, 78], "local_scaling_mod": [9, 10, 78], "nn": [9, 10, 78], "stationari": [9, 10, 78], "high": [9, 10, 78], "dynam": [9, 10, 78], "zero_predictor": [9, 10, 78], "subnetwork": [9, 10, 78], "skip_miss": [9, 10, 78], "rnn": [9, 10, 78], "batch_siz": [9, 10, 78], "forecastingbatchs": [9, 10, 78], "batch_renorm": [9, 10, 78], "renorm": [9, 10, 78], "much": [9, 10, 78], "prediction_step_s": [9, 10, 78], "training_point_overlap": [9, 10, 78], "overlap": [9, 10, 78], "max_scale_context": [9, 10, 78], "scale": [9, 10, 78], "quantiles_extension_method": [9, 10, 78], "extens": [9, 10, 78], "number_of_sampl": [9, 10, 78], "ancestr": [9, 10, 78], "symmetrize_quantil": [9, 10, 78], "use_log_transform": [9, 10, 78], "logarithm": [7, 9, 10, 78], "smooth_histori": [9, 10, 78], "smooth": [9, 10, 78], "low": [9, 10, 78], "timeseri": [9, 10, 23, 78, 118], "prediction_offset": [], "skip_local_scale_target": [9, 10, 78], "timeseries_weight_column": [9, 10, 78], "item_attributes_weight_column": [9, 10, 78], "use_timeseries_weights_in_object": [9, 10, 78], "use_item_weights_in_object": [9, 10, 78], "skip_timeseries_weight_sc": [9, 10, 78], "avoid": [9, 10, 78], "timeseries_loss_weight_column": [9, 10, 78], "use_item_id": [9, 10, 78], "use_all_item_tot": [9, 10, 78], "handle_zeros_as_miss": [], "demand": [9, 10, 78], "datetime_holiday_calendar": [9, 10, 78], "calendar": [9, 10, 78], "augment": [9, 10, 78], "fill_missing_valu": [9, 10, 78], "fill": [9, 10, 78], "enable_clust": [9, 10, 78], "data_split_feature_group_table_nam": [9, 10, 78], "_trainingconfigfactori": [9, 10, 78], "apiendpoint": [15, 23, 78], "predictendpoint": 15, "chatbotrespons": [], "answer": [9, 10, 22, 78], "chathistori": 22, "bot": [], "_cached_endpoint": 23, "61": [], "_get_prediction_endpoint": 23, "_get_streaming_endpoint": 23, "get_api_endpoint": [23, 78], "get_natural_language_explan": [23, 59, 78], "natur": [23, 59, 78, 104], "naturallanguageexplan": [23, 59, 78, 104], "generate_natural_language_explan": [23, 59, 78], "pretrained_instruct_pix2pix": [23, 78], "pretrained_sequence_classification_2": [], "extract_bounding_box": [23, 78], "create_nlp_drift_monitor": [23, 78, 125], "nlp": [9, 10, 23, 78, 125], "set_natural_language_explan": [23, 78], "short_explan": [23, 78], "long_explan": [23, 78], "succinct": [9, 10, 23, 78, 104], "verbos": [23, 78, 104, 118], "query_feature_group_explor": [], "chat_histori": [23, 78], "segment": 21, "block": [81, 84], "extractboundingbox": 35, "seasonalityyear": 52, "seasonalitymonth": 52, "seasonalityweekofyear": 52, "seasonalitydayofyear": 52, "seasonalitydayofmonth": 52, "seasonalitydayofweek": 52, "seasonalityquart": 52, "seasonalityhour": 52, "seasonalityminut": 52, "seasonalitysecond": 52, "autocorrel": 52, "partialautocorrel": 52, "year": 52, "month": 52, "week": 52, "season": 52, "quarter": 52, "minut": 52, "control": 52, "effect": 52, "interven": 52, "averagedrift": 54, "drifttypesvalu": 54, "api_endpoint": 78, "chat_bot_respons": [], "natural_language_explan": 78, "python_function_valid": 78, "streaming_cli": 78, "streamingcli": [78, 140], "shortexplan": 104, "longexplan": 104, "isoutd": 104, "longer": [9, 10, 78, 104], "due": [84, 104], "validate_loc": 129, "environ": [129, 130], "typeerror": [129, 130], "validate_function_loc": 130, "featureannotationconfig": 2, "statusfeatur": 2, "file_path_with_schema": [6, 9, 78], "list_pipelin": [23, 78, 125], "describe_pipeline_vers": [23, 78], "pipeline_vers": [23, 78], "pipelinevers": [23, 78, 109, 112, 114], "describe_pipeline_step": [23, 78], "pipeline_nam": [23, 78], "step_nam": [23, 78, 109], "pipelinestep": [23, 78, 109, 111], "tabular": [23, 78], "create_pipelin": [23, 78], "describe_pipelin": [23, 78], "delete_pipelin": [23, 78], "list_pipeline_vers": [23, 78], "run_pipelin": [23, 78], "pipeline_variable_map": [23, 78, 109], "create_pipeline_step": [23, 78], "step_input_map": [23, 78, 109, 111], "output_variable_map": [23, 78, 109, 111], "step_depend": [23, 78, 109, 111], "ouput": [23, 78, 109, 111], "delete_pipeline_step": [23, 78], "update_pipeline_step": [23, 78], "featuregroupmetr": 64, "annotation_config": 78, "feature_group_metr": 78, "pipeline_step": [23, 78], "pipeline_step_vers": 78, "multicatalogembeddingsuploadid": 98, "pipelinenam": [109, 111, 114], "pipelineid": [109, 110, 111, 112, 114], "pipelinevariablemap": [109, 114], "pipelinestepid": [111, 112], "stepnam": [111, 112], "stepdepend": [111, 112], "function_id": 111, "pipelinestepvers": [112, 113, 114], "outputvariablemap": [9, 12, 78, 112, 129], "stepvers": 114, "wait_for_pipelin": 114, "_monkeypatch": 130, "sy": 130, "undo": 130, "monkeypatch": 130, "syspath_prepend": 130, "comment": [1, 2, 23, 78], "commentsfeatur": 2, "metadatafeatur": 2, "avro_to_pandas_dtyp": 14, "avro_typ": 14, "get_non_nullable_typ": 14, "chatmessag": [21, 22, 23, 78], "role": 21, "sender": 21, "chatsess": [22, 23, 78, 125], "availableindic": [], "chatsessionid": 22, "chatbot": 22, "chat_session_id": [22, 23, 78], "send_chat_messag": [], "63": [], "execute_async_feature_group_oper": [23, 78], "fg": [23, 78], "executefgoper": [], "download_execute_feature_group_operation_result_part_chunk": [23, 78], "execute_fg_operation_run_id": [], "notebook_id": [23, 78, 125], "get_chat_sess": [23, 78], "evaluate_prompt": [23, 78], "system_messag": [23, 78], "num_output_token": [], "reserv": [], "deem": [], "fit": [], "llmrespons": [23, 78, 84], "search_feature_group": [23, 78], "num_result": [23, 78], "feagur": [23, 78], "llmsearchresult": [], "render_feature_group_data_for_llm": [23, 78], "token_budget": [23, 59, 78], "render_format": [23, 59, 78], "encod": [9, 10, 23, 59, 78, 82], "budget": [23, 59, 78], "compris": [23, 59, 78], "llminput": [23, 59, 78, 82], "query_feature_group_code_gener": [23, 78], "tool": [23, 78], "create_pipeline_step_from_funct": [23, 78], "update_pipeline_step_from_funct": [23, 78], "create_agent_from_funct": [23, 78], "agent_funct": [23, 78], "agent": [9, 10, 23, 78, 85, 118, 125], "host": [23, 78], "update_agent_with_funct": [23, 78], "execute_feature_group_sql": [23, 78], "ai_ag": [7, 9, 10, 23, 78], "zipcod": [23, 78, 125, 138], "save_metadata": [23, 59, 78], "update_annotation_statu": [23, 59, 78], "describe_async_feature_group_oper": [23, 78], "get_execute_feature_group_operation_result_part_count": [23, 78], "monitr": [23, 78], "update_pipelin": [23, 78], "create_chat_sess": [23, 78, 125], "create_ag": [23, 78, 125], "agent_function_nam": [23, 78, 85, 125], "agentfunctionnam": [23, 78, 85, 125], "update_ag": [23, 78, 85], "publish": [23, 78, 85], "render_feature_groups_for_llm": [23, 78], "include_definit": [23, 78], "executefgoperationrunid": [], "wait_for_execut": 55, "render_data_for_llm": 59, "numrow": 64, "numcol": 64, "chat_messag": 78, "chat_sess": 78, "execute_fg_oper": [], "llm_code_block": 78, "llm_input": 78, "llm_respons": 78, "llm_search_result": [], "pipeline_refer": 78, "pipeline_step_version_refer": 78, "llmcodeblock": [81, 84], "soruc": 81, "syntact": 81, "stopreason": 84, "reason": 84, "pipelinerefer": [109, 110], "pipelinereferenceid": 110, "objecttyp": [110, 113], "batchpredictiondescriptionid": 110, "pipelinestepversionrefer": [112, 113], "pipelinestepversionreferenceid": 113, "notebookvers": 113, "execute_ag": [23, 78, 118], "keyword": [23, 78, 118], "paramt": [23, 78, 118], "executefeaturegroupoper": [23, 55, 78], "feature_group_operation_run_id": [23, 78], "keyword_argu": [23, 78, 118], "featuregroupoperationrunid": 55, "execute_feature_group_oper": 78, "wait_for_publish": 85, "return_graph": [23, 78, 85], "set_dataset_database_connector_config": [23, 78], "llm_name": [23, 78], "max_token": [23, 78], "gpt": [23, 78], "turbo": [23, 78], "reach": [23, 78], "moduledepend": 24, "set_database_connector_config": 35, "model_blueprint_export": 78, "model_blueprint_stag": 78, "codeblock": 84, "modelblueprintexport": 87, "currenttrainingconfig": 87, "modelblueprintstag": [87, 88], "blueprint": [87, 88], "predecessor": [87, 88], "stagenam": 88, "directli": 88, "latestpipelinevers": 109, "outputerror": 112, "get_object_from_context": 14, "variable_nam": 14, "return_typ": 14, "_request_context": [23, 78], "get_agent_context_chat_histori": [23, 78], "aiagent": [23, 78], "set_agent_context_chat_histori": [23, 78], "clear_agent_context_chat_histori": [], "clear_agent_context": [23, 78], "add_project_tag": [23, 78], "remove_project_tag": [23, 78], "reference_only_documentset": [23, 78], "get_alternative_assign": [23, 78, 118], "referenceonlydocumentset": 35, "connector_typ": [9, 13, 78], "fileconnectorexportconfig": [9, 13, 78], "databaseconnectorexportconfig": [9, 13, 78], "data_column": [9, 13, 78], "_featuregroupexportconfigfactori": [9, 13, 78], "wish": [23, 78, 125], "unset_pipeline_refresh_schedul": [23, 78], "pipeline_id": [23, 78, 109], "pause_pipeline_refresh_schedul": [23, 78], "resume_pipeline_refresh_schedul": [23, 78], "featuregrouprefreshexportconfig": [65, 134], "exportfileformat": 65, "externalconnectionid": 65, "feature_group_refresh_export_config": 78, "unset_refresh_schedul": 109, "pause_refresh_schedul": 109, "resume_refresh_schedul": 109, "latestupdatedat": 4, "pythonfunctionargumenttyp": [7, 9, 12, 78], "monitor_id": [7, 9, 78], "65": [], "pipeline_step_id": [23, 78, 111], "describe_pipeline_step_by_nam": [23, 78], "update_pipeline_step_by_name_from_funct": [], "chat_config": [23, 78, 118], "specifii": [23, 78, 118], "describe_pipeline_by_nam": [23, 78], "delete_pipeline_step_by_nam": [], "update_pipeline_step_by_nam": [], "trainingdistribut": 57, "predictiondistribut": 57, "numericaltrainingdistribut": 57, "numericalpredictiondistribut": 57, "trainingstatist": 57, "predictionstatist": 57, "typic": 57, "outlin": 65, "feature_distribut": 78, "vector_stor": 78, "vector_store_vers": [23, 78], "create_step": 109, "delete_step_by_nam": [], "update_step_by_nam": [], "describe_step_by_nam": 109, "vectorstor": [23, 78, 125, 150], "vectorstoreid": [150, 152], "trunk": 150, "vectorstorevers": [23, 78, 150, 152], "num": [23, 78, 118], "wait_for_export": 60, "nerobject": [7, 9, 10, 78], "log_loss": [7, 9, 78], "annotations_precis": [7, 9, 78], "annotations_recal": [7, 9, 78], "nermodeltyp": [7, 9, 10, 78], "pretrained_bert": [7, 9, 78], "pretrained_roberta_27": [7, 9, 78], "pretrained_roberta_43": [7, 9, 78], "pretrained_multilingu": [7, 9, 78], "nlpdocumentformat": [7, 9, 10, 78], "doc": [7, 9, 78], "sentimenttyp": [7, 9, 10, 78], "valenc": [7, 9, 78], "emot": [7, 9, 78], "clusteringimputationmethod": [7, 9, 10, 78], "interpol": [7, 9, 78], "python_function_argu": [], "namedentityextractiontrainingconfig": [9, 10, 78], "ner_model_typ": [9, 10, 78], "ner": [9, 10, 78], "test_indicator_column": [], "active_labels_column": [9, 10, 78], "document_format": [9, 10, 78], "include_longform": [9, 10, 78], "longform": [9, 10, 78], "naturallanguagesearchtrainingconfig": [9, 10, 78], "custom_finetuned_model": [], "fine": [], "tune": [], "faster_chat": [], "faster": [9, 10, 78], "num_completion_token": [9, 10, 78], "reduc": [9, 10, 78], "larger_embed": [9, 10, 78], "higher": [9, 10, 78], "dimens": [9, 10, 78], "search_chunk_s": [9, 10, 78], "chunk_overlap_fract": [9, 10, 78], "sentenceboundarydetectiontrainingconfig": [9, 10, 78], "sentimentdetectiontrainingconfig": [9, 10, 78], "sentiment_typ": [9, 10, 78], "compute_metr": [9, 10, 78], "documentclassificationtrainingconfig": [9, 10, 78], "zero_shot_hypothes": [9, 10, 78], "shot": [9, 10, 78], "hypothes": [9, 10, 78], "price": [9, 10, 78], "documentsummarizationtrainingconfig": [9, 10, 78], "documentvisualizationtrainingconfig": [9, 10, 78], "clusteringtrainingconfig": [9, 10, 78], "num_clusters_select": [9, 10, 78], "clusteringtimeseriestrainingconfig": [9, 10, 78], "imput": [9, 10, 78], "is_requir": [9, 12, 78], "pipeline_vari": [9, 12, 78], "66": [], "organizationsearchresult": [23, 78, 108], "organization_search_result": 78, "latestvectorstorevers": 150, "wait_until_readi": [150, 152], "trainable_plug_and_plai": [7, 9, 78], "experimentationmod": [7, 9, 10, 78], "rapid": [7, 9, 10, 78], "thorough": [7, 9, 10, 78], "personalizationtrainingmod": [7, 9, 10, 78], "experiment": [7, 9, 10, 78], "exp": [7, 9, 78], "personalizationobject": [7, 9, 10, 78], "ndcg": [7, 9, 78], "ndcg_5": [7, 9, 78], "ndcg_10": [7, 9, 78], "map_5": [7, 9, 78], "map_10": [7, 9, 78], "mrr": [7, 9, 78], "coverag": [7, 9, 78], "personalizationtrainingconfig": [9, 10, 78], "training_mod": [9, 10, 78], "target_action_typ": [9, 10, 78], "target_action_weight": [9, 10, 78], "session_event_typ": [9, 10, 78], "occurr": [9, 10, 78], "6": [9, 10, 78], "recent_days_for_train": [9, 10, 78], "training_start_d": [9, 10, 78], "timezon": [9, 10, 78], "test_on_user_split": [9, 10, 78], "test_split_on_last_k_item": [9, 10, 78], "global": [9, 10, 78], "test_last_items_length": [9, 10, 78], "test_window_length_hour": [9, 10, 78], "explicit_time_split": [9, 10, 78], "explicit": [9, 10, 78], "boundari": [9, 10, 78], "test_row_ind": [9, 10, 78], "sequential_train": [9, 10, 78], "sequenti": [9, 10, 78], "disable_transform": [9, 10, 78], "disable_gpu": [9, 10, 78], "boo": [9, 10, 78], "filter_histori": [9, 10, 78], "explore_lookback_hour": [9, 10, 78], "max_history_length": [9, 10, 78], "compute_rerank_metr": [9, 10, 78], "item_id_dropout": [9, 10, 78], "randomli": [9, 10, 78], "add_time_featur": [9, 10, 78], "disable_timestamp_scalar_featur": [9, 10, 78], "compute_session_metr": [9, 10, 78], "abl": [9, 10, 78], "max_user_history_len_percentil": [9, 10, 78], "downsample_item_popularity_percentil": [9, 10, 78], "downsampl": [9, 10, 78], "enable_feature_select": [9, 10, 78], "num_backtesting_window": [9, 10, 78], "backtesting_window_step_s": [9, 10, 78], "additional_forecast_kei": [9, 10, 78], "act": [9, 10, 78], "experimentation_mod": [9, 10, 78], "handle_zeros_as_missing_valu": [9, 10, 78], "abacus_internal_model": [9, 10, 78], "question": [9, 10, 78], "index_fract": [9, 10, 78], "cumulativeforecastingtrainingconfig": [9, 10, 78], "historical_frequ": [9, 10, 78], "cumulative_prediction_length": [9, 10, 78], "cumul": [9, 10, 78], "365": [9, 10, 78], "skip_input_transform": [9, 10, 78], "skip_target_transform": [9, 10, 78], "predict_residu": [9, 10, 78], "residu": [9, 10, 78], "anomalydetectiontrainingconfig": [9, 10, 78], "value_high": [9, 10, 78], "unusu": [9, 10, 78], "mixture_of_gaussian": [9, 10, 78], "combin": [9, 10, 23, 78, 125], "variational_autoencod": [9, 10, 78], "variat": [9, 10, 78], "autoencod": [9, 10, 78], "spike_up": [9, 10, 78], "spike_down": [9, 10, 78], "trend_chang": [9, 10, 78], "trend": [9, 10, 78], "themeanalysistrainingconfig": [9, 10, 78], "theme": [9, 10, 78], "aiagenttrainingconfig": [9, 10, 78], "customtrainedmodeltrainingconfig": [9, 10, 78], "max_catalog_s": [9, 10, 78], "max_dimens": [9, 10, 78], "index_output_path": [9, 10, 78], "gc": [9, 10, 78], "docker_image_uri": [9, 10, 78], "docker": [9, 10, 78], "service_port": [9, 10, 78], "port": [9, 10, 78], "request_id": [23, 78], "67": [], "list_chat_sess": [23, 78], "most_recent_per_project": [23, 78], "list_vector_stor": [23, 78, 125], "describe_vector_stor": [23, 78], "vector_store_id": [23, 78, 150], "describe_vector_store_by_nam": [23, 78], "list_vector_store_vers": [23, 78], "describe_vector_store_vers": [23, 78], "create_vector_stor": [23, 78, 125], "cluster_nam": [23, 78, 125], "broken": [23, 78, 125], "togeth": [23, 78, 125], "update_vector_stor": [23, 78], "create_vector_store_vers": [23, 78], "delete_vector_stor": [23, 78], "lookup_vector_stor": [23, 78], "vectorstorelookupresult": [23, 78, 150, 151], "vector_store_lookup_result": 78, "trainedmodeltyp": 99, "regressionobject": [7, 9, 10, 78], "acc": [7, 9, 78], "f1_score": [7, 9, 78], "fscore": [7, 9, 78], "r_squared_coefficient_of_determin": [7, 9, 78], "r": [7, 9, 78], "regressiontreehpomod": [7, 9, 10, 78], "regressionaugmentationstrategi": [7, 9, 10, 78], "smote": [7, 9, 78], "resampl": [7, 9, 78], "regressiontargettransform": [7, 9, 10, 78], "yeo_johnson": [7, 9, 78], "yeo": [7, 9, 78], "johnson": [7, 9, 78], "box_cox": [7, 9, 78], "cox": [7, 9, 78], "regressiontypeofsplit": [7, 9, 10, 78], "random": [7, 9, 78], "timestamp_bas": [7, 9, 78], "row_indicator_bas": [7, 9, 78], "regressiontimesplitmethod": [7, 9, 10, 78], "test_split_percentage_bas": [7, 9, 78], "test_start_timestamp_bas": [7, 9, 78], "regressionlossfunct": [7, 9, 10, 78], "huber": [7, 9, 78], "mse": [7, 9, 78], "squar": [7, 9, 78], "absolut": [7, 9, 78], "msle": [7, 9, 78], "tweedi": [7, 9, 78], "cross_entropi": [7, 9, 78], "cross": [7, 9, 10, 78], "entropi": [7, 9, 78], "focal_cross_entropi": [7, 9, 78], "focal": [7, 9, 78], "regressiontrainingconfig": [9, 10, 78], "tree_hpo_mod": [9, 10, 78], "turn": [9, 10, 78], "off": [9, 10, 78], "disable_test_val_fold": [9, 10, 78], "test_val": [9, 10, 78], "k_fold_cross_valid": [9, 10, 78], "bag": [9, 10, 78], "num_cv_fold": [9, 10, 78], "timestamp_based_splitting_column": [9, 10, 78], "timestamp_based_splitting_method": [9, 10, 78], "test_splitting_timestamp": [9, 10, 78], "sampling_unit_kei": [9, 10, 78], "constrain": [9, 10, 78], "rebalance_class": [9, 10, 78], "invers": [9, 10, 78], "unbalanc": [9, 10, 78], "balanc": [9, 10, 78], "cost": [9, 10, 78], "rare": [9, 10, 78], "rare_class_augmentation_threshold": [9, 10, 78], "frequent": [9, 10, 78], "augmentation_strategi": [9, 10, 78], "deal": [9, 10, 78], "imbal": [9, 10, 78], "training_rows_downsample_ratio": [9, 10, 78], "min_categorical_count": [9, 10, 78], "placehold": [9, 10, 78], "sample_weight": [9, 10, 78], "eval": [9, 10, 78], "numeric_clipping_percentil": [9, 10, 78], "clip": [9, 10, 78], "bottom": [9, 10, 78], "target_transform": [9, 10, 78], "ignore_datetime_featur": [9, 10, 78], "max_text_word": [9, 10, 78], "word": [9, 10, 78], "perform_feature_select": [9, 10, 78], "subset": [9, 10, 78], "feature_selection_intens": [9, 10, 78], "strict": [9, 10, 78], "veri": [9, 10, 78], "lenient": [9, 10, 78], "pretrained_model_nam": [9, 10, 78], "multilingu": [9, 10, 78], "is_multilingu": [9, 10, 78], "loss_paramet": [9, 10, 78], "target_encode_categor": [9, 10, 78], "drop_original_categor": [9, 10, 78], "feed": [9, 10, 78], "mdoel": [9, 10, 78], "customalgorithmtrainingconfig": [9, 10, 78], "github": [9, 10, 78], "repositoti": [9, 10, 78], "optimizationtrainingconfig": [9, 10, 78], "isus": 21, "feedback": 21, "68": [], "get_project_feature_group_config": [23, 78], "describe_project_feature_group": [23, 78], "streaming_evaluate_prompt": [23, 78], "awar": [23, 78], "_get_agent_async_app_request_id": [23, 78], "async": [23, 78], "_get_agent_async_app_cal": [23, 78], "caller": [23, 78], "stream_messag": [23, 78], "print": [], "script": [23, 78], "_stream_llm_call_ui": [], "llm_arg": [23, 78], "_call_aiagent_asyncapp_sync_messag": [23, 78], "asyncapp": [23, 78], "sync": [23, 78], "import_annotation_label": [23, 59, 78], "200": [23, 78, 109], "get_llm_paramet": [23, 78], "parameter": [23, 78], "llmparamet": [23, 78, 83], "get_project_config": 59, "llm_paramet": 78, "_stream_llm_cal": [23, 78], "htmlexplan": 104, "html": 104, "ismaterializationneed": 4, "latestmaterializedannotationconfig": 4, "mergemod": [7, 8, 9, 78], "last_n": [7, 8, 9, 78], "time_window": [7, 8, 9, 78], "lastnmergeconfig": [8, 9, 78], "merge_mod": [8, 9, 78], "num_vers": [8, 9, 78], "timewindowmergeconfig": [8, 9, 78], "timewindow": [8, 9, 78], "time_window_size_m": [8, 9, 78], "max_tim": [8, 9, 78], "_mergeconfigfactori": [8, 9, 78], "featuremappingconfig": 11, "projectfeaturegrouptypemappingsconfig": 11, "69": [23, 78], "check_for_materi": [23, 59, 78], "add_constraint": [23, 78, 118], "involv": [23, 78, 118], "rh": [23, 78, 118]}, "objects": {"": [[78, 0, 0, "-", "abacusai"]], "abacusai": [[78, 1, 1, "", "AIAgentTrainingConfig"], [78, 1, 1, "", "AnomalyDetectionTrainingConfig"], [78, 1, 1, "", "ApiClass"], [78, 1, 1, "", "ApiClient"], [78, 1, 1, "", "ApiEnum"], [78, 4, 1, "", "ApiException"], [78, 1, 1, "", "BatchSize"], [78, 1, 1, "", "ClientOptions"], [78, 1, 1, "", "ClusteringImputationMethod"], [78, 1, 1, "", "ClusteringTimeseriesTrainingConfig"], [78, 1, 1, "", "ClusteringTrainingConfig"], [78, 1, 1, "", "ConnectorType"], [78, 1, 1, "", "CumulativeForecastingTrainingConfig"], [78, 1, 1, "", "CustomAlgorithmTrainingConfig"], [78, 1, 1, "", "CustomTrainedModelTrainingConfig"], [78, 1, 1, "", "DatabaseConnectorExportConfig"], [78, 1, 1, "", "DocumentClassificationTrainingConfig"], [78, 1, 1, "", "DocumentSummarizationTrainingConfig"], [78, 1, 1, "", "DocumentVisualizationTrainingConfig"], [78, 1, 1, "", "ExperimentationMode"], [78, 1, 1, "", "FeatureGroupExportConfig"], [78, 1, 1, "", "FileConnectorExportConfig"], [78, 1, 1, "", "FillLogic"], [78, 1, 1, "", "ForecastingDataSplitType"], [78, 1, 1, "", "ForecastingFillMethod"], [78, 1, 1, "", "ForecastingFrequency"], [78, 1, 1, "", "ForecastingLocalScaling"], [78, 1, 1, "", "ForecastingLossFunction"], [78, 1, 1, "", "ForecastingObjective"], [78, 1, 1, "", "ForecastingQuanitlesExtensionMethod"], [78, 1, 1, "", "ForecastingTrainingConfig"], [78, 1, 1, "", "HolidayCalendars"], [78, 1, 1, "", "LastNMergeConfig"], [78, 1, 1, "", "MergeConfig"], [78, 1, 1, "", "MergeMode"], [78, 1, 1, "", "NERModelType"], [78, 1, 1, "", "NERObjective"], [78, 1, 1, "", "NLPDocumentFormat"], [78, 1, 1, "", "NSamplingConfig"], [78, 1, 1, "", "NamedEntityExtractionTrainingConfig"], [78, 1, 1, "", "NaturalLanguageSearchTrainingConfig"], [78, 1, 1, "", "OptimizationTrainingConfig"], [78, 1, 1, "", "OutputVariableMapping"], [78, 1, 1, "", "ParsingConfig"], [78, 1, 1, "", "PercentSamplingConfig"], [78, 1, 1, "", "PersonalizationObjective"], [78, 1, 1, "", "PersonalizationTrainingConfig"], [78, 1, 1, "", "PersonalizationTrainingMode"], [78, 1, 1, "", "PredictionClient"], [78, 1, 1, "", "ProblemType"], [78, 1, 1, "", "PythonFunctionArgument"], [78, 1, 1, "", "PythonFunctionArgumentType"], [78, 1, 1, "", "ReadOnlyClient"], [78, 1, 1, "", "RegressionAugmentationStrategy"], [78, 1, 1, "", "RegressionLossFunction"], [78, 1, 1, "", "RegressionObjective"], [78, 1, 1, "", "RegressionTargetTransform"], [78, 1, 1, "", "RegressionTimeSplitMethod"], [78, 1, 1, "", "RegressionTrainingConfig"], [78, 1, 1, "", "RegressionTreeHPOMode"], [78, 1, 1, "", "RegressionTypeOfSplit"], [78, 1, 1, "", "SamplingConfig"], [78, 1, 1, "", "SamplingMethodType"], [78, 1, 1, "", "SentenceBoundaryDetectionTrainingConfig"], [78, 1, 1, "", "SentimentDetectionTrainingConfig"], [78, 1, 1, "", "SentimentType"], [78, 1, 1, "", "StreamingClient"], [78, 1, 1, "", "ThemeAnalysisTrainingConfig"], [78, 1, 1, "", "TimeWindowMergeConfig"], [78, 1, 1, "", "TrainingConfig"], [78, 1, 1, "", "_ApiClassFactory"], [78, 1, 1, "", "_FeatureGroupExportConfigFactory"], [78, 1, 1, "", "_MergeConfigFactory"], [78, 1, 1, "", "_SamplingConfigFactory"], [78, 1, 1, "", "_TrainingConfigFactory"], [78, 5, 1, "", "__version__"], [78, 5, 1, "", "_request_context"], [0, 0, 0, "-", "algorithm"], [1, 0, 0, "-", "annotation"], [2, 0, 0, "-", "annotation_config"], [3, 0, 0, "-", "annotation_entry"], [4, 0, 0, "-", "annotations_status"], [9, 0, 0, "-", "api_class"], [14, 0, 0, "-", "api_client_utils"], [15, 0, 0, "-", "api_endpoint"], [16, 0, 0, "-", "api_key"], [17, 0, 0, "-", "application_connector"], [18, 0, 0, "-", "batch_prediction"], [19, 0, 0, "-", "batch_prediction_version"], [20, 0, 0, "-", "categorical_range_violation"], [21, 0, 0, "-", "chat_message"], [22, 0, 0, "-", "chat_session"], [23, 0, 0, "-", "client"], [24, 0, 0, "-", "code_source"], [25, 0, 0, "-", "concatenation_config"], [26, 0, 0, "-", "cryptography"], [27, 0, 0, "-", "custom_loss_function"], [28, 0, 0, "-", "custom_metric"], [29, 0, 0, "-", "custom_metric_version"], [30, 0, 0, "-", "custom_train_function_info"], [31, 0, 0, "-", "data_consistency_duplication"], [32, 0, 0, "-", "data_prep_logs"], [33, 0, 0, "-", "data_quality_results"], [34, 0, 0, "-", "database_connector"], [35, 0, 0, "-", "dataset"], [36, 0, 0, "-", "dataset_column"], [37, 0, 0, "-", "dataset_version"], [38, 0, 0, "-", "deployment"], [39, 0, 0, "-", "deployment_auth_token"], [40, 0, 0, "-", "document"], [41, 0, 0, "-", "document_annotation"], [42, 0, 0, "-", "document_store"], [43, 0, 0, "-", "document_store_import"], [44, 0, 0, "-", "drift_distribution"], [45, 0, 0, "-", "drift_distributions"], [46, 0, 0, "-", "eda"], [47, 0, 0, "-", "eda_chart_description"], [48, 0, 0, "-", "eda_collinearity"], [49, 0, 0, "-", "eda_data_consistency"], [50, 0, 0, "-", "eda_feature_association"], [51, 0, 0, "-", "eda_feature_collinearity"], [52, 0, 0, "-", "eda_forecasting_analysis"], [53, 0, 0, "-", "eda_version"], [54, 0, 0, "-", "embedding_feature_drift_distribution"], [55, 0, 0, "-", "execute_feature_group_operation"], [56, 0, 0, "-", "feature"], [57, 0, 0, "-", "feature_distribution"], [58, 0, 0, "-", "feature_drift_summary"], [59, 0, 0, "-", "feature_group"], [60, 0, 0, "-", "feature_group_export"], [61, 0, 0, "-", "feature_group_export_config"], [62, 0, 0, "-", "feature_group_export_download_url"], [63, 0, 0, "-", "feature_group_lineage"], [64, 0, 0, "-", "feature_group_metrics"], [65, 0, 0, "-", "feature_group_refresh_export_config"], [66, 0, 0, "-", "feature_group_template"], [67, 0, 0, "-", "feature_group_template_variable_options"], [68, 0, 0, "-", "feature_group_version"], [69, 0, 0, "-", "feature_importance"], [70, 0, 0, "-", "feature_record"], [71, 0, 0, "-", "file_connector"], [72, 0, 0, "-", "file_connector_instructions"], [73, 0, 0, "-", "file_connector_verification"], [74, 0, 0, "-", "forecasting_analysis_graph_data"], [75, 0, 0, "-", "function_logs"], [76, 0, 0, "-", "generated_pit_feature_config_option"], [77, 0, 0, "-", "graph_dashboard"], [79, 0, 0, "-", "indexing_config"], [80, 0, 0, "-", "item_statistics"], [81, 0, 0, "-", "llm_code_block"], [82, 0, 0, "-", "llm_input"], [83, 0, 0, "-", "llm_parameters"], [84, 0, 0, "-", "llm_response"], [85, 0, 0, "-", "model"], [86, 0, 0, "-", "model_artifacts_export"], [87, 0, 0, "-", "model_blueprint_export"], [88, 0, 0, "-", "model_blueprint_stage"], [89, 0, 0, "-", "model_location"], [90, 0, 0, "-", "model_metrics"], [91, 0, 0, "-", "model_monitor"], [92, 0, 0, "-", "model_monitor_org_summary"], [93, 0, 0, "-", "model_monitor_summary"], [94, 0, 0, "-", "model_monitor_summary_from_org"], [95, 0, 0, "-", "model_monitor_version"], [96, 0, 0, "-", "model_monitor_version_metric_data"], [97, 0, 0, "-", "model_training_type_for_deployment"], [98, 0, 0, "-", "model_upload"], [99, 0, 0, "-", "model_version"], [100, 0, 0, "-", "modification_lock_info"], [101, 0, 0, "-", "module"], [102, 0, 0, "-", "monitor_alert"], [103, 0, 0, "-", "monitor_alert_version"], [104, 0, 0, "-", "natural_language_explanation"], [105, 0, 0, "-", "nested_feature"], [106, 0, 0, "-", "null_violation"], [107, 0, 0, "-", "organization_group"], [108, 0, 0, "-", "organization_search_result"], [109, 0, 0, "-", "pipeline"], [110, 0, 0, "-", "pipeline_reference"], [111, 0, 0, "-", "pipeline_step"], [112, 0, 0, "-", "pipeline_step_version"], [113, 0, 0, "-", "pipeline_step_version_reference"], [114, 0, 0, "-", "pipeline_version"], [115, 0, 0, "-", "point_in_time_feature"], [116, 0, 0, "-", "point_in_time_group"], [117, 0, 0, "-", "point_in_time_group_feature"], [118, 0, 0, "-", "prediction_client"], [119, 0, 0, "-", "prediction_dataset"], [120, 0, 0, "-", "prediction_feature_group"], [121, 0, 0, "-", "prediction_input"], [122, 0, 0, "-", "prediction_metric"], [123, 0, 0, "-", "prediction_metric_version"], [124, 0, 0, "-", "problem_type"], [125, 0, 0, "-", "project"], [126, 0, 0, "-", "project_config"], [127, 0, 0, "-", "project_dataset"], [128, 0, 0, "-", "project_validation"], [129, 0, 0, "-", "python_function"], [130, 0, 0, "-", "python_function_validator"], [131, 0, 0, "-", "python_plot_function"], [132, 0, 0, "-", "range_violation"], [133, 0, 0, "-", "refresh_pipeline_run"], [134, 0, 0, "-", "refresh_policy"], [135, 0, 0, "-", "refresh_schedule"], [136, 0, 0, "-", "resolved_feature_group_template"], [137, 0, 0, "-", "return_class"], [138, 0, 0, "-", "schema"], [139, 0, 0, "-", "streaming_auth_token"], [140, 0, 0, "-", "streaming_client"], [141, 0, 0, "-", "streaming_connector"], [142, 0, 0, "-", "training_config_options"], [143, 0, 0, "-", "type_violation"], [144, 0, 0, "-", "upload"], [145, 0, 0, "-", "upload_part"], [146, 0, 0, "-", "use_case"], [147, 0, 0, "-", "use_case_requirements"], [148, 0, 0, "-", "user"], [149, 0, 0, "-", "user_exception"], [150, 0, 0, "-", "vector_store"], [151, 0, 0, "-", "vector_store_lookup_result"], [152, 0, 0, "-", "vector_store_version"], [153, 0, 0, "-", "webhook"]], "abacusai.AIAgentTrainingConfig": [[78, 2, 1, "", "description"], [78, 2, 1, "", "problem_type"]], "abacusai.AnomalyDetectionTrainingConfig": [[78, 2, 1, "", "mixture_of_gaussians"], [78, 2, 1, "", "problem_type"], [78, 2, 1, "", "spike_down"], [78, 2, 1, "", "spike_up"], [78, 2, 1, "", "test_split"], [78, 2, 1, "", "trend_change"], [78, 2, 1, "", "value_high"], [78, 2, 1, "", "variational_autoencoder"]], "abacusai.ApiClass": [[78, 3, 1, "", "__post_init__"], [78, 2, 1, "", "_support_kwargs"], [78, 2, 1, "", "_upper_snake_case_keys"], [78, 3, 1, "", "from_dict"], [78, 3, 1, "", "to_dict"]], "abacusai.ApiClient": [[78, 3, 1, "", "_call_aiagent_asyncapp_sync_message"], [78, 3, 1, "", "_get_agent_async_app_caller"], [78, 3, 1, "", "_get_agent_async_app_request_id"], [78, 3, 1, "", "_stream_llm_call"], [78, 3, 1, "", "add_annotatable_feature"], [78, 3, 1, "", "add_annotation"], [78, 3, 1, "", "add_feature_group_annotation_label"], [78, 3, 1, "", "add_feature_group_tag"], [78, 3, 1, "", "add_feature_group_to_project"], [78, 3, 1, "", "add_feature_tag"], [78, 3, 1, "", "add_graph_to_dashboard"], [78, 3, 1, "", "add_multiple_user_item_interactions"], [78, 3, 1, "", "add_organization_group_permission"], [78, 3, 1, "", "add_organization_group_to_feature_group_modifiers"], [78, 3, 1, "", "add_project_tags"], [78, 3, 1, "", "add_user_item_interaction"], [78, 3, 1, "", "add_user_to_feature_group_modifiers"], [78, 3, 1, "", "add_user_to_organization"], [78, 3, 1, "", "add_user_to_organization_group"], [78, 3, 1, "", "append_data"], [78, 3, 1, "", "append_multiple_data"], [78, 3, 1, "", "attach_dataset_to_project"], [78, 3, 1, "", "cancel_upload"], [78, 3, 1, "", "check_constraints"], [78, 3, 1, "", "classify_image"], [78, 3, 1, "", "classify_pdf"], [78, 3, 1, "", "clear_agent_context"], [78, 3, 1, "", "concatenate_feature_group_data"], [78, 3, 1, "", "create_agent"], [78, 3, 1, "", "create_agent_from_function"], [78, 3, 1, "", "create_algorithm"], [78, 3, 1, "", "create_algorithm_from_function"], [78, 3, 1, "", "create_batch_prediction"], [78, 3, 1, "", "create_chat_session"], [78, 3, 1, "", "create_custom_loss_function"], [78, 3, 1, "", "create_custom_loss_function_with_source_code"], [78, 3, 1, "", "create_custom_metric"], [78, 3, 1, "", "create_custom_metric_from_function"], [78, 3, 1, "", "create_dataset_from_application_connector"], [78, 3, 1, "", "create_dataset_from_database_connector"], [78, 3, 1, "", "create_dataset_from_file_connector"], [78, 3, 1, "", "create_dataset_from_pandas"], [78, 3, 1, "", "create_dataset_from_streaming_connector"], [78, 3, 1, "", "create_dataset_from_upload"], [78, 3, 1, "", "create_dataset_version_from_application_connector"], [78, 3, 1, "", "create_dataset_version_from_database_connector"], [78, 3, 1, "", "create_dataset_version_from_file_connector"], [78, 3, 1, "", "create_dataset_version_from_pandas"], [78, 3, 1, "", "create_dataset_version_from_upload"], [78, 3, 1, "", "create_deployment"], [78, 3, 1, "", "create_deployment_token"], [78, 3, 1, "", "create_deployment_webhook"], [78, 3, 1, "", "create_eda"], [78, 3, 1, "", "create_feature"], [78, 3, 1, "", "create_feature_group"], [78, 3, 1, "", "create_feature_group_from_function"], [78, 3, 1, "", "create_feature_group_from_pandas_df"], [78, 3, 1, "", "create_feature_group_from_python_function"], [78, 3, 1, "", "create_feature_group_from_spark_df"], [78, 3, 1, "", "create_feature_group_from_template"], [78, 3, 1, "", "create_feature_group_template"], [78, 3, 1, "", "create_feature_group_version"], [78, 3, 1, "", "create_graph_dashboard"], [78, 3, 1, "", "create_merge_feature_group"], [78, 3, 1, "", "create_model_from_functions"], [78, 3, 1, "", "create_model_from_python"], [78, 3, 1, "", "create_model_monitor"], [78, 3, 1, "", "create_module"], [78, 3, 1, "", "create_module_from_notebook"], [78, 3, 1, "", "create_monitor_alert"], [78, 3, 1, "", "create_nested_feature"], [78, 3, 1, "", "create_nlp_drift_monitor"], [78, 3, 1, "", "create_organization_group"], [78, 3, 1, "", "create_pipeline"], [78, 3, 1, "", "create_pipeline_step"], [78, 3, 1, "", "create_pipeline_step_from_function"], [78, 3, 1, "", "create_point_in_time_feature"], [78, 3, 1, "", "create_point_in_time_group"], [78, 3, 1, "", "create_point_in_time_group_feature"], [78, 3, 1, "", "create_project"], [78, 3, 1, "", "create_python_function"], [78, 3, 1, "", "create_refresh_policy"], [78, 3, 1, "", "create_sampling_feature_group"], [78, 3, 1, "", "create_snapshot_feature_group"], [78, 3, 1, "", "create_spark_df_from_feature_group_version"], [78, 3, 1, "", "create_streaming_dataset"], [78, 3, 1, "", "create_streaming_token"], [78, 3, 1, "", "create_train_test_data_split_feature_group"], [78, 3, 1, "", "create_transform_feature_group"], [78, 3, 1, "", "create_vector_store"], [78, 3, 1, "", "create_vector_store_version"], [78, 3, 1, "", "create_vision_drift_monitor"], [78, 3, 1, "", "delete_algorithm"], [78, 3, 1, "", "delete_api_key"], [78, 3, 1, "", "delete_application_connector"], [78, 3, 1, "", "delete_batch_prediction"], [78, 3, 1, "", "delete_custom_loss_function"], [78, 3, 1, "", "delete_custom_metric"], [78, 3, 1, "", "delete_database_connector"], [78, 3, 1, "", "delete_dataset"], [78, 3, 1, "", "delete_deployment"], [78, 3, 1, "", "delete_deployment_token"], [78, 3, 1, "", "delete_eda"], [78, 3, 1, "", "delete_eda_version"], [78, 3, 1, "", "delete_feature"], [78, 3, 1, "", "delete_feature_group"], [78, 3, 1, "", "delete_feature_group_template"], [78, 3, 1, "", "delete_file_connector"], [78, 3, 1, "", "delete_graph_dashboard"], [78, 3, 1, "", "delete_item_embeddings"], [78, 3, 1, "", "delete_model"], [78, 3, 1, "", "delete_model_monitor"], [78, 3, 1, "", "delete_model_monitor_version"], [78, 3, 1, "", "delete_model_version"], [78, 3, 1, "", "delete_module"], [78, 3, 1, "", "delete_monitor_alert"], [78, 3, 1, "", "delete_nested_feature"], [78, 3, 1, "", "delete_organization_group"], [78, 3, 1, "", "delete_pipeline"], [78, 3, 1, "", "delete_pipeline_step"], [78, 3, 1, "", "delete_point_in_time_group"], [78, 3, 1, "", "delete_project"], [78, 3, 1, "", "delete_python_function"], [78, 3, 1, "", "delete_refresh_policy"], [78, 3, 1, "", "delete_streaming_connector"], [78, 3, 1, "", "delete_streaming_token"], [78, 3, 1, "", "delete_vector_store"], [78, 3, 1, "", "delete_webhook"], [78, 3, 1, "", "describe_annotation"], [78, 3, 1, "", "describe_async_feature_group_operation"], [78, 3, 1, "", "describe_image"], [78, 3, 1, "", "describe_pipeline"], [78, 3, 1, "", "describe_pipeline_by_name"], [78, 3, 1, "", "detach_feature_group_from_template"], [78, 3, 1, "", "evaluate_prompt"], [78, 3, 1, "", "execute_agent"], [78, 3, 1, "", "execute_feature_group_sql"], [78, 3, 1, "", "export_feature_group_version_to_console"], [78, 3, 1, "", "export_feature_group_version_to_database_connector"], [78, 3, 1, "", "export_feature_group_version_to_file_connector"], [78, 3, 1, "", "export_model_artifact_as_feature_group"], [78, 3, 1, "", "generate_image"], [78, 3, 1, "", "get_agent_context_chat_history"], [78, 3, 1, "", "get_alternative_assignments"], [78, 3, 1, "", "get_anomalies"], [78, 3, 1, "", "get_assignments"], [78, 3, 1, "", "get_chat_response"], [78, 3, 1, "", "get_classification"], [78, 3, 1, "", "get_cluster"], [78, 3, 1, "", "get_custom_train_function_info"], [78, 3, 1, "", "get_document_to_annotate"], [78, 3, 1, "", "get_entailment"], [78, 3, 1, "", "get_entities_from_pdf"], [78, 3, 1, "", "get_forecast"], [78, 3, 1, "", "get_k_nearest"], [78, 3, 1, "", "get_labels"], [78, 3, 1, "", "get_llm_parameters"], [78, 3, 1, "", "get_multiple_k_nearest"], [78, 3, 1, "", "get_notebook_cell_completion"], [78, 3, 1, "", "get_objects_from_image"], [78, 3, 1, "", "get_personalized_ranking"], [78, 3, 1, "", "get_ranked_items"], [78, 3, 1, "", "get_recommendations"], [78, 3, 1, "", "get_related_items"], [78, 3, 1, "", "get_search_results"], [78, 3, 1, "", "get_sentiment"], [78, 3, 1, "", "get_summary"], [78, 3, 1, "", "get_train_function_input"], [78, 3, 1, "", "get_train_function_input_from_model_version"], [78, 3, 1, "", "get_training_config_options"], [78, 3, 1, "", "import_annotation_labels"], [78, 3, 1, "", "import_module"], [78, 3, 1, "", "invalidate_streaming_feature_group_data"], [78, 3, 1, "", "is_anomaly"], [78, 3, 1, "", "list_builtin_algorithms"], [78, 3, 1, "", "list_pipeline_versions"], [78, 3, 1, "", "lookup_features"], [78, 3, 1, "", "lookup_vector_store"], [78, 3, 1, "", "mark_upload_complete"], [78, 3, 1, "", "pause_refresh_policy"], [78, 3, 1, "", "predict"], [78, 3, 1, "", "predict_churn"], [78, 3, 1, "", "predict_class"], [78, 3, 1, "", "predict_fraud"], [78, 3, 1, "", "predict_from_datasets"], [78, 3, 1, "", "predict_language"], [78, 3, 1, "", "predict_lead"], [78, 3, 1, "", "predict_multiple"], [78, 3, 1, "", "predict_takeover"], [78, 3, 1, "", "predict_target"], [78, 3, 1, "", "predict_with_binary_data"], [78, 3, 1, "", "preview_feature_group_template_resolution"], [78, 3, 1, "", "remove_column_mapping"], [78, 3, 1, "", "remove_concatenation_config"], [78, 3, 1, "", "remove_dataset_from_project"], [78, 3, 1, "", "remove_deployment_feature_group_export_output"], [78, 3, 1, "", "remove_feature_group_annotation_label"], [78, 3, 1, "", "remove_feature_group_from_project"], [78, 3, 1, "", "remove_feature_group_tag"], [78, 3, 1, "", "remove_feature_tag"], [78, 3, 1, "", "remove_organization_group_from_feature_group_modifiers"], [78, 3, 1, "", "remove_organization_group_permission"], [78, 3, 1, "", "remove_project_tags"], [78, 3, 1, "", "remove_user_from_feature_group_modifiers"], [78, 3, 1, "", "remove_user_from_organization"], [78, 3, 1, "", "remove_user_from_organization_group"], [78, 3, 1, "", "rename_application_connector"], [78, 3, 1, "", "rename_database_connector"], [78, 3, 1, "", "rename_deployment"], [78, 3, 1, "", "rename_eda"], [78, 3, 1, "", "rename_model"], [78, 3, 1, "", "rename_model_monitor"], [78, 3, 1, "", "rename_project"], [78, 3, 1, "", "rename_streaming_connector"], [78, 3, 1, "", "render_feature_groups_for_llm"], [78, 3, 1, "", "rerun_eda"], [78, 3, 1, "", "rerun_model_monitor"], [78, 3, 1, "", "resume_refresh_policy"], [78, 3, 1, "", "retrain_model"], [78, 3, 1, "", "run_monitor_alert"], [78, 3, 1, "", "run_pipeline"], [78, 3, 1, "", "run_refresh_policy"], [78, 3, 1, "", "score_image"], [78, 3, 1, "", "set_agent_context_chat_history"], [78, 3, 1, "", "set_annotation_status_feature"], [78, 3, 1, "", "set_auto_deployment"], [78, 3, 1, "", "set_azure_blob_connection_string"], [78, 3, 1, "", "set_batch_prediction_database_connector_output"], [78, 3, 1, "", "set_batch_prediction_dataset"], [78, 3, 1, "", "set_batch_prediction_dataset_remap"], [78, 3, 1, "", "set_batch_prediction_feature_group"], [78, 3, 1, "", "set_batch_prediction_feature_group_output"], [78, 3, 1, "", "set_batch_prediction_file_connector_output"], [78, 3, 1, "", "set_batch_prediction_output_to_console"], [78, 3, 1, "", "set_column_data_type"], [78, 3, 1, "", "set_column_mapping"], [78, 3, 1, "", "set_dataset_column_data_type"], [78, 3, 1, "", "set_default_organization_group"], [78, 3, 1, "", "set_deployment_feature_group_export_database_connector_output"], [78, 3, 1, "", "set_deployment_feature_group_export_file_connector_output"], [78, 3, 1, "", "set_deployment_feature_group_version"], [78, 3, 1, "", "set_deployment_model_version"], [78, 3, 1, "", "set_feature_as_annotatable_feature"], [78, 3, 1, "", "set_feature_group_indexing_config"], [78, 3, 1, "", "set_feature_group_merge_config"], [78, 3, 1, "", "set_feature_group_modifier_lock"], [78, 3, 1, "", "set_feature_group_sampling_config"], [78, 3, 1, "", "set_feature_group_schema"], [78, 3, 1, "", "set_feature_group_transform_config"], [78, 3, 1, "", "set_feature_group_type"], [78, 3, 1, "", "set_feature_mapping"], [78, 3, 1, "", "set_feature_type"], [78, 3, 1, "", "set_model_prediction_params"], [78, 3, 1, "", "set_model_training_config"], [78, 3, 1, "", "set_natural_language_explanation"], [78, 3, 1, "", "set_project_feature_group_config"], [78, 3, 1, "", "set_streaming_retention_policy"], [78, 3, 1, "", "snapshot_streaming_data"], [78, 3, 1, "", "start_batch_prediction"], [78, 3, 1, "", "start_deployment"], [78, 3, 1, "", "stop_deployment"], [78, 3, 1, "", "stream_message"], [78, 3, 1, "", "streaming_evaluate_prompt"], [78, 3, 1, "", "train_model"], [78, 3, 1, "", "transcribe_audio"], [78, 3, 1, "", "transfer_style"], [78, 3, 1, "", "unset_feature_as_annotatable_feature"], [78, 3, 1, "", "update_agent"], [78, 3, 1, "", "update_agent_with_function"], [78, 3, 1, "", "update_algorithm"], [78, 3, 1, "", "update_algorithm_from_function"], [78, 3, 1, "", "update_annotation_status"], [78, 3, 1, "", "update_batch_prediction"], [78, 3, 1, "", "update_custom_loss_function"], [78, 3, 1, "", "update_custom_loss_function_with_source_code"], [78, 3, 1, "", "update_custom_metric"], [78, 3, 1, "", "update_custom_metric_from_function"], [78, 3, 1, "", "update_dataset_feature_group_feature_expression"], [78, 3, 1, "", "update_deployment"], [78, 3, 1, "", "update_feature"], [78, 3, 1, "", "update_feature_group"], [78, 3, 1, "", "update_feature_group_from_pandas_df"], [78, 3, 1, "", "update_feature_group_from_spark_df"], [78, 3, 1, "", "update_feature_group_function_definition"], [78, 3, 1, "", "update_feature_group_git"], [78, 3, 1, "", "update_feature_group_python_function"], [78, 3, 1, "", "update_feature_group_python_function_bindings"], [78, 3, 1, "", "update_feature_group_sql_definition"], [78, 3, 1, "", "update_feature_group_template"], [78, 3, 1, "", "update_feature_group_template_bindings"], [78, 3, 1, "", "update_feature_group_zip"], [78, 3, 1, "", "update_graph_dashboard"], [78, 3, 1, "", "update_graph_to_dashboard"], [78, 3, 1, "", "update_module"], [78, 3, 1, "", "update_module_from_notebook"], [78, 3, 1, "", "update_monitor_alert"], [78, 3, 1, "", "update_nested_feature"], [78, 3, 1, "", "update_pipeline"], [78, 3, 1, "", "update_pipeline_step"], [78, 3, 1, "", "update_pipeline_step_from_function"], [78, 3, 1, "", "update_point_in_time_feature"], [78, 3, 1, "", "update_point_in_time_group"], [78, 3, 1, "", "update_point_in_time_group_feature"], [78, 3, 1, "", "update_python_function"], [78, 3, 1, "", "update_python_function_code"], [78, 3, 1, "", "update_python_model"], [78, 3, 1, "", "update_python_model_git"], [78, 3, 1, "", "update_python_model_zip"], [78, 3, 1, "", "update_refresh_policy"], [78, 3, 1, "", "update_vector_store"], [78, 3, 1, "", "update_webhook"], [78, 3, 1, "", "upload_part"], [78, 3, 1, "", "upsert_data"], [78, 3, 1, "", "upsert_item_attributes"], [78, 3, 1, "", "upsert_item_embeddings"], [78, 3, 1, "", "upsert_multiple_data"], [78, 3, 1, "", "upsert_multiple_item_attributes"], [78, 3, 1, "", "upsert_multiple_item_embeddings"], [78, 3, 1, "", "upsert_multiple_user_attributes"], [78, 3, 1, "", "upsert_user_attributes"], [78, 3, 1, "", "use_feature_group_for_training"], [78, 3, 1, "", "verify_application_connector"], [78, 3, 1, "", "verify_database_connector"], [78, 3, 1, "", "verify_file_connector"], [78, 3, 1, "", "verify_streaming_connector"]], "abacusai.ApiEnum": [[78, 3, 1, "", "__eq__"], [78, 3, 1, "", "__hash__"]], "abacusai.ApiException": [[78, 3, 1, "", "__str__"]], "abacusai.BatchSize": [[78, 2, 1, "", "BATCH_1024"], [78, 2, 1, "", "BATCH_128"], [78, 2, 1, "", "BATCH_16"], [78, 2, 1, "", "BATCH_256"], [78, 2, 1, "", "BATCH_32"], [78, 2, 1, "", "BATCH_384"], [78, 2, 1, "", "BATCH_512"], [78, 2, 1, "", "BATCH_64"], [78, 2, 1, "", "BATCH_740"], [78, 2, 1, "", "BATCH_8"]], "abacusai.ClusteringImputationMethod": [[78, 2, 1, "", "AUTOMATIC"], [78, 2, 1, "", "INTERPOLATE"], [78, 2, 1, "", "ZEROS"]], "abacusai.ClusteringTimeseriesTrainingConfig": [[78, 2, 1, "", "imputation"], [78, 2, 1, "", "num_clusters_selection"], [78, 2, 1, "", "problem_type"]], "abacusai.ClusteringTrainingConfig": [[78, 2, 1, "", "num_clusters_selection"], [78, 2, 1, "", "problem_type"]], "abacusai.ConnectorType": [[78, 2, 1, "", "APPLICATION"], [78, 2, 1, "", "DATABASE"], [78, 2, 1, "", "FILE"], [78, 2, 1, "", "STREAMING"]], "abacusai.CumulativeForecastingTrainingConfig": [[78, 2, 1, "", "cumulative_prediction_lengths"], [78, 2, 1, "", "historical_frequency"], [78, 2, 1, "", "predict_residuals"], [78, 2, 1, "", "problem_type"], [78, 2, 1, "", "skip_input_transform"], [78, 2, 1, "", "skip_target_transform"], [78, 2, 1, "", "test_split"]], "abacusai.CustomAlgorithmTrainingConfig": [[78, 2, 1, "", "predict_function_name"], [78, 2, 1, "", "predict_many_function_name"], [78, 2, 1, "", "predict_module_name"], [78, 2, 1, "", "problem_type"], [78, 2, 1, "", "test_split"], [78, 2, 1, "", "train_function_name"], [78, 2, 1, "", "train_module_name"], [78, 2, 1, "", "training_input_tables"]], "abacusai.CustomTrainedModelTrainingConfig": [[78, 2, 1, "", "docker_image_uri"], [78, 2, 1, "", "index_output_path"], [78, 2, 1, "", "max_catalog_size"], [78, 2, 1, "", "max_dimension"], [78, 2, 1, "", "problem_type"], [78, 2, 1, "", "service_port"]], "abacusai.DatabaseConnectorExportConfig": [[78, 2, 1, "", "additional_id_columns"], [78, 2, 1, "", "connector_type"], [78, 2, 1, "", "data_columns"], [78, 2, 1, "", "database_connector_id"], [78, 2, 1, "", "id_column"], [78, 2, 1, "", "mode"], [78, 2, 1, "", "object_name"], [78, 3, 1, "", "to_dict"]], "abacusai.DocumentClassificationTrainingConfig": [[78, 2, 1, "", "batch_size"], [78, 2, 1, "", "dropout_rate"], [78, 2, 1, "", "problem_type"], [78, 2, 1, "", "test_split"], [78, 2, 1, "", "zero_shot_hypotheses"]], "abacusai.DocumentSummarizationTrainingConfig": [[78, 2, 1, "", "batch_size"], [78, 2, 1, "", "dropout_rate"], [78, 2, 1, "", "problem_type"], [78, 2, 1, "", "test_split"]], "abacusai.DocumentVisualizationTrainingConfig": [[78, 2, 1, "", "batch_size"], [78, 2, 1, "", "dropout_rate"], [78, 2, 1, "", "problem_type"], [78, 2, 1, "", "test_split"]], "abacusai.ExperimentationMode": [[78, 2, 1, "", "RAPID"], [78, 2, 1, "", "THOROUGH"]], "abacusai.FeatureGroupExportConfig": [[78, 2, 1, "", "connector_type"]], "abacusai.FileConnectorExportConfig": [[78, 2, 1, "", "connector_type"], [78, 2, 1, "", "export_file_format"], [78, 2, 1, "", "location"], [78, 3, 1, "", "to_dict"]], "abacusai.FillLogic": [[78, 2, 1, "", "AVERAGE"], [78, 2, 1, "", "BACKFILL"], [78, 2, 1, "", "CUSTOM"], [78, 2, 1, "", "FORWARDFILL"], [78, 2, 1, "", "LINEAR"], [78, 2, 1, "", "MAX"], [78, 2, 1, "", "MEDIAN"], [78, 2, 1, "", "MIN"], [78, 2, 1, "", "NEAREST"]], "abacusai.ForecastingDataSplitType": [[78, 2, 1, "", "AUTO"], [78, 2, 1, "", "ITEM"], [78, 2, 1, "", "PREDICTION_LENGTH"], [78, 2, 1, "", "TIMESTAMP"]], "abacusai.ForecastingFillMethod": [[78, 2, 1, "", "BACK"], [78, 2, 1, "", "FUTURE"], [78, 2, 1, "", "MIDDLE"]], "abacusai.ForecastingFrequency": [[78, 2, 1, "", "DAILY"], [78, 2, 1, "", "HOURLY"], [78, 2, 1, "", "MONTH_END"], [78, 2, 1, "", "MONTH_START"], [78, 2, 1, "", "QUARTER_END"], [78, 2, 1, "", "QUARTER_START"], [78, 2, 1, "", "WEEKLY_MONDAY_START"], [78, 2, 1, "", "WEEKLY_SATURDAY_START"], [78, 2, 1, "", "WEEKLY_SUNDAY_START"], [78, 2, 1, "", "YEARLY"]], "abacusai.ForecastingLocalScaling": [[78, 2, 1, "", "ITEM"], [78, 2, 1, "", "LAST_POINT"], [78, 2, 1, "", "MIN_MAX"], [78, 2, 1, "", "MIN_STD"], [78, 2, 1, "", "ROBUST"], [78, 2, 1, "", "SLIDING_ZSCORE"], [78, 2, 1, "", "ZSCORE"]], "abacusai.ForecastingLossFunction": [[78, 2, 1, "", "ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [78, 2, 1, "", "CUSTOM"], [78, 2, 1, "", "GAUSSIAN"], [78, 2, 1, "", "GAUSSIAN_FULL_COVARIANCE"], [78, 2, 1, "", "GUASSIAN_EXPONENTIAL"], [78, 2, 1, "", "LOG_ROOT_MEAN_SQUARE_ERROR"], [78, 2, 1, "", "MEAN_ABSOLUTE_ERROR"], [78, 2, 1, "", "MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [78, 2, 1, "", "MIX_GAUSSIANS"], [78, 2, 1, "", "NEGATIVE_BINOMIAL"], [78, 2, 1, "", "NORMALIZED_MEAN_ABSOLUTE_ERROR"], [78, 2, 1, "", "NORMALIZED_ROOT_MEAN_SQUARE_ERROR"], [78, 2, 1, "", "PEAKS_MEAN_ABSOLUTE_ERROR"], [78, 2, 1, "", "POINTWISE_ACCURACY"], [78, 2, 1, "", "ROOT_MEAN_SQUARE_ERROR"], [78, 2, 1, "", "STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [78, 2, 1, "", "WEIBULL"]], "abacusai.ForecastingObjective": [[78, 2, 1, "", "ACCURACY"], [78, 2, 1, "", "BIAS"], [78, 2, 1, "", "CMAPE"], [78, 2, 1, "", "CV"], [78, 2, 1, "", "MAPE"], [78, 2, 1, "", "RMSE"], [78, 2, 1, "", "SRMSE"], [78, 2, 1, "", "WAPE"]], "abacusai.ForecastingQuanitlesExtensionMethod": [[78, 2, 1, "", "ANCESTRAL_SIMULATION"], [78, 2, 1, "", "DIRECT"], [78, 2, 1, "", "QUADRATIC"]], "abacusai.ForecastingTrainingConfig": [[78, 2, 1, "", "additional_forecast_keys"], [78, 2, 1, "", "backtesting_window_step_size"], [78, 2, 1, "", "batch_renormalization"], [78, 2, 1, "", "batch_size"], [78, 2, 1, "", "convolution_filters"], [78, 2, 1, "", "convolutional_layers"], [78, 2, 1, "", "custom_loss_functions"], [78, 2, 1, "", "custom_metrics"], [78, 2, 1, "", "data_split_feature_group_table_name"], [78, 2, 1, "", "datetime_holiday_calendars"], [78, 2, 1, "", "disable_networks_without_analytic_quantiles"], [78, 2, 1, "", "dropout_rate"], [78, 2, 1, "", "enable_clustering"], [78, 2, 1, "", "enable_cold_start"], [78, 2, 1, "", "enable_feature_selection"], [78, 2, 1, "", "enable_multiple_backtests"], [78, 2, 1, "", "experimentation_mode"], [78, 2, 1, "", "fill_missing_values"], [78, 2, 1, "", "filter_items"], [78, 2, 1, "", "force_prediction_length"], [78, 2, 1, "", "forecast_frequency"], [78, 2, 1, "", "full_data_retraining"], [78, 2, 1, "", "handle_zeros_as_missing_values"], [78, 2, 1, "", "history_length"], [78, 2, 1, "", "initial_learning_rate"], [78, 2, 1, "", "item_attributes_weight_column"], [78, 2, 1, "", "l2_regularization_factor"], [78, 2, 1, "", "local_scaling_mode"], [78, 2, 1, "", "loss_function"], [78, 2, 1, "", "max_scale_context"], [78, 2, 1, "", "num_backtesting_windows"], [78, 2, 1, "", "number_of_samples"], [78, 2, 1, "", "objective"], [78, 2, 1, "", "prediction_length"], [78, 2, 1, "", "prediction_step_size"], [78, 2, 1, "", "probability_quantiles"], [78, 2, 1, "", "problem_type"], [78, 2, 1, "", "quantiles_extension_method"], [78, 2, 1, "", "recurrent_layers"], [78, 2, 1, "", "recurrent_units"], [78, 2, 1, "", "skip_local_scale_target"], [78, 2, 1, "", "skip_missing"], [78, 2, 1, "", "skip_timeseries_weight_scaling"], [78, 2, 1, "", "smooth_history"], [78, 2, 1, "", "sort_objective"], [78, 2, 1, "", "symmetrize_quantiles"], [78, 2, 1, "", "test_by_item"], [78, 2, 1, "", "test_split"], [78, 2, 1, "", "test_start"], [78, 2, 1, "", "timeseries_loss_weight_column"], [78, 2, 1, "", "timeseries_weight_column"], [78, 2, 1, "", "training_point_overlap"], [78, 2, 1, "", "type_of_split"], [78, 2, 1, "", "underprediction_weight"], [78, 2, 1, "", "use_all_item_totals"], [78, 2, 1, "", "use_item_id"], [78, 2, 1, "", "use_item_weights_in_objective"], [78, 2, 1, "", "use_log_transforms"], [78, 2, 1, "", "use_timeseries_weights_in_objective"], [78, 2, 1, "", "zero_predictor"]], "abacusai.HolidayCalendars": [[78, 2, 1, "", "AU"], [78, 2, 1, "", "UK"], [78, 2, 1, "", "US"]], "abacusai.LastNMergeConfig": [[78, 2, 1, "", "merge_mode"], [78, 2, 1, "", "num_versions"]], "abacusai.MergeConfig": [[78, 3, 1, "", "__post_init__"]], "abacusai.MergeMode": [[78, 2, 1, "", "LAST_N"], [78, 2, 1, "", "TIME_WINDOW"]], "abacusai.NERModelType": [[78, 2, 1, "", "LEARNED"], [78, 2, 1, "", "PRETRAINED_BERT"], [78, 2, 1, "", "PRETRAINED_MULTILINGUAL"], [78, 2, 1, "", "PRETRAINED_ROBERTA_27"], [78, 2, 1, "", "PRETRAINED_ROBERTA_43"]], "abacusai.NERObjective": [[78, 2, 1, "", "ANNOTATIONS_PRECISION"], [78, 2, 1, "", "ANNOTATIONS_RECALL"], [78, 2, 1, "", "AUC"], [78, 2, 1, "", "LOG_LOSS"], [78, 2, 1, "", "PRECISION"], [78, 2, 1, "", "RECALL"]], "abacusai.NLPDocumentFormat": [[78, 2, 1, "", "AUTO"], [78, 2, 1, "", "DOC"], [78, 2, 1, "", "TEXT"], [78, 2, 1, "", "TOKENS"]], "abacusai.NSamplingConfig": [[78, 2, 1, "", "key_columns"], [78, 2, 1, "", "sample_count"], [78, 2, 1, "", "sampling_method"]], "abacusai.NamedEntityExtractionTrainingConfig": [[78, 2, 1, "", "active_labels_column"], [78, 2, 1, "", "batch_size"], [78, 2, 1, "", "document_format"], [78, 2, 1, "", "dropout_rate"], [78, 2, 1, "", "include_longformer"], [78, 2, 1, "", "ner_model_type"], [78, 2, 1, "", "objective"], [78, 2, 1, "", "problem_type"], [78, 2, 1, "", "sort_objective"], [78, 2, 1, "", "test_row_indicator"], [78, 2, 1, "", "test_split"]], "abacusai.NaturalLanguageSearchTrainingConfig": [[78, 2, 1, "", "abacus_internal_model"], [78, 2, 1, "", "chunk_overlap_fraction"], [78, 2, 1, "", "index_fraction"], [78, 2, 1, "", "larger_embeddings"], [78, 2, 1, "", "num_completion_tokens"], [78, 2, 1, "", "problem_type"], [78, 2, 1, "", "search_chunk_size"]], "abacusai.OptimizationTrainingConfig": [[78, 2, 1, "", "problem_type"]], "abacusai.OutputVariableMapping": [[78, 2, 1, "", "name"], [78, 2, 1, "", "variable_type"]], "abacusai.ParsingConfig": [[78, 2, 1, "", "csv_delimiter"], [78, 2, 1, "", "escape"], [78, 2, 1, "", "file_path_with_schema"]], "abacusai.PercentSamplingConfig": [[78, 2, 1, "", "key_columns"], [78, 2, 1, "", "sample_percent"], [78, 2, 1, "", "sampling_method"]], "abacusai.PersonalizationObjective": [[78, 2, 1, "", "COVERAGE"], [78, 2, 1, "", "MAP"], [78, 2, 1, "", "MAP_10"], [78, 2, 1, "", "MAP_5"], [78, 2, 1, "", "MRR"], [78, 2, 1, "", "NDCG"], [78, 2, 1, "", "NDCG_10"], [78, 2, 1, "", "NDCG_5"], [78, 2, 1, "", "PERSONALIZATION"]], "abacusai.PersonalizationTrainingConfig": [[78, 2, 1, "", "add_time_features"], [78, 2, 1, "", "batch_size"], [78, 2, 1, "", "compute_rerank_metrics"], [78, 2, 1, "", "compute_session_metrics"], [78, 2, 1, "", "data_split_feature_group_table_name"], [78, 2, 1, "", "disable_gpu"], [78, 2, 1, "", "disable_timestamp_scalar_features"], [78, 2, 1, "", "disable_transformer"], [78, 2, 1, "", "downsample_item_popularity_percentile"], [78, 2, 1, "", "dropout_rate"], [78, 2, 1, "", "explicit_time_split"], [78, 2, 1, "", "explore_lookback_hours"], [78, 2, 1, "", "filter_history"], [78, 2, 1, "", "full_data_retraining"], [78, 2, 1, "", "item_id_dropout"], [78, 2, 1, "", "max_history_length"], [78, 2, 1, "", "max_user_history_len_percentile"], [78, 2, 1, "", "objective"], [78, 2, 1, "", "problem_type"], [78, 2, 1, "", "recent_days_for_training"], [78, 2, 1, "", "sequential_training"], [78, 2, 1, "", "session_event_types"], [78, 2, 1, "", "sort_objective"], [78, 2, 1, "", "target_action_types"], [78, 2, 1, "", "target_action_weights"], [78, 2, 1, "", "test_last_items_length"], [78, 2, 1, "", "test_on_user_split"], [78, 2, 1, "", "test_row_indicator"], [78, 2, 1, "", "test_split"], [78, 2, 1, "", "test_split_on_last_k_items"], [78, 2, 1, "", "test_window_length_hours"], [78, 2, 1, "", "training_mode"], [78, 2, 1, "", "training_start_date"]], "abacusai.PersonalizationTrainingMode": [[78, 2, 1, "", "EXPERIMENTAL"], [78, 2, 1, "", "PRODUCTION"]], "abacusai.PredictionClient": [[78, 3, 1, "", "check_constraints"], [78, 3, 1, "", "classify_image"], [78, 3, 1, "", "classify_pdf"], [78, 3, 1, "", "describe_image"], [78, 3, 1, "", "execute_agent"], [78, 3, 1, "", "generate_image"], [78, 3, 1, "", "get_alternative_assignments"], [78, 3, 1, "", "get_anomalies"], [78, 3, 1, "", "get_assignments"], [78, 3, 1, "", "get_chat_response"], [78, 3, 1, "", "get_classification"], [78, 3, 1, "", "get_cluster"], [78, 3, 1, "", "get_entailment"], [78, 3, 1, "", "get_entities_from_pdf"], [78, 3, 1, "", "get_forecast"], [78, 3, 1, "", "get_k_nearest"], [78, 3, 1, "", "get_labels"], [78, 3, 1, "", "get_multiple_k_nearest"], [78, 3, 1, "", "get_objects_from_image"], [78, 3, 1, "", "get_personalized_ranking"], [78, 3, 1, "", "get_ranked_items"], [78, 3, 1, "", "get_recommendations"], [78, 3, 1, "", "get_related_items"], [78, 3, 1, "", "get_search_results"], [78, 3, 1, "", "get_sentiment"], [78, 3, 1, "", "get_summary"], [78, 3, 1, "", "is_anomaly"], [78, 3, 1, "", "lookup_features"], [78, 3, 1, "", "predict"], [78, 3, 1, "", "predict_churn"], [78, 3, 1, "", "predict_class"], [78, 3, 1, "", "predict_fraud"], [78, 3, 1, "", "predict_from_datasets"], [78, 3, 1, "", "predict_language"], [78, 3, 1, "", "predict_lead"], [78, 3, 1, "", "predict_multiple"], [78, 3, 1, "", "predict_raw"], [78, 3, 1, "", "predict_takeover"], [78, 3, 1, "", "predict_target"], [78, 3, 1, "", "predict_with_binary_data"], [78, 3, 1, "", "score_image"], [78, 3, 1, "", "transcribe_audio"], [78, 3, 1, "", "transfer_style"]], "abacusai.ProblemType": [[78, 2, 1, "", "AI_AGENT"], [78, 2, 1, "", "ANOMALY_DETECTION"], [78, 2, 1, "", "ANOMALY_OUTLIERS"], [78, 2, 1, "", "CLUSTERING"], [78, 2, 1, "", "CLUSTERING_TIMESERIES"], [78, 2, 1, "", "CUMULATIVE_FORECASTING"], [78, 2, 1, "", "CUSTOM_ALGORITHM"], [78, 2, 1, "", "CUSTOM_TRAINED_MODEL"], [78, 2, 1, "", "DOCUMENT_CLASSIFICATION"], [78, 2, 1, "", "DOCUMENT_SUMMARIZATION"], [78, 2, 1, "", "DOCUMENT_VISUALIZATION"], [78, 2, 1, "", "FEATURE_STORE"], [78, 2, 1, "", "FORECASTING"], [78, 2, 1, "", "IMAGE_CLASSIFICATION"], [78, 2, 1, "", "IMAGE_VALUE_PREDICTION"], [78, 2, 1, "", "LANGUAGE_DETECTION"], [78, 2, 1, "", "MODEL_MONITORING"], [78, 2, 1, "", "NAMED_ENTITY_EXTRACTION"], [78, 2, 1, "", "NATURAL_LANGUAGE_SEARCH"], [78, 2, 1, "", "OBJECT_DETECTION"], [78, 2, 1, "", "OPTIMIZATION"], [78, 2, 1, "", "PERSONALIZATION"], [78, 2, 1, "", "PREDICTIVE_MODELING"], [78, 2, 1, "", "PRETRAINED_MODELS"], [78, 2, 1, "", "SENTENCE_BOUNDARY_DETECTION"], [78, 2, 1, "", "SENTIMENT_DETECTION"], [78, 2, 1, "", "THEME_ANALYSIS"]], "abacusai.PythonFunctionArgument": [[78, 2, 1, "", "is_required"], [78, 2, 1, "", "name"], [78, 2, 1, "", "pipeline_variable"], [78, 2, 1, "", "value"], [78, 2, 1, "", "variable_type"]], "abacusai.PythonFunctionArgumentType": [[78, 2, 1, "", "BATCH_PREDICTION_ID"], [78, 2, 1, "", "BOOLEAN"], [78, 2, 1, "", "DATASET_ID"], [78, 2, 1, "", "DEPLOYMENT_ID"], [78, 2, 1, "", "FEATURE_GROUP"], [78, 2, 1, "", "FEATURE_GROUP_ID"], [78, 2, 1, "", "FLOAT"], [78, 2, 1, "", "INTEGER"], [78, 2, 1, "", "JSON"], [78, 2, 1, "", "LIST"], [78, 2, 1, "", "MODEL_ID"], [78, 2, 1, "", "MONITOR_ID"], [78, 2, 1, "", "STRING"]], "abacusai.ReadOnlyClient": [[78, 3, 1, "", "delete_graph_from_dashboard"], [78, 3, 1, "", "describe_algorithm"], [78, 3, 1, "", "describe_batch_prediction"], [78, 3, 1, "", "describe_batch_prediction_version"], [78, 3, 1, "", "describe_custom_loss_function"], [78, 3, 1, "", "describe_custom_metric"], [78, 3, 1, "", "describe_custom_metric_version"], [78, 3, 1, "", "describe_dataset"], [78, 3, 1, "", "describe_dataset_version"], [78, 3, 1, "", "describe_deployment"], [78, 3, 1, "", "describe_eda"], [78, 3, 1, "", "describe_eda_version"], [78, 3, 1, "", "describe_feature_group"], [78, 3, 1, "", "describe_feature_group_by_table_name"], [78, 3, 1, "", "describe_feature_group_export"], [78, 3, 1, "", "describe_feature_group_template"], [78, 3, 1, "", "describe_feature_group_version"], [78, 3, 1, "", "describe_graph_dashboard"], [78, 3, 1, "", "describe_graph_for_dashboard"], [78, 3, 1, "", "describe_model"], [78, 3, 1, "", "describe_model_artifacts_export"], [78, 3, 1, "", "describe_model_monitor"], [78, 3, 1, "", "describe_model_monitor_version"], [78, 3, 1, "", "describe_model_version"], [78, 3, 1, "", "describe_module"], [78, 3, 1, "", "describe_monitor_alert"], [78, 3, 1, "", "describe_monitor_alert_version"], [78, 3, 1, "", "describe_organization_group"], [78, 3, 1, "", "describe_pipeline_step"], [78, 3, 1, "", "describe_pipeline_step_by_name"], [78, 3, 1, "", "describe_pipeline_version"], [78, 3, 1, "", "describe_problem_type"], [78, 3, 1, "", "describe_project"], [78, 3, 1, "", "describe_project_feature_group"], [78, 3, 1, "", "describe_python_function"], [78, 3, 1, "", "describe_refresh_pipeline_run"], [78, 3, 1, "", "describe_refresh_policy"], [78, 3, 1, "", "describe_train_test_data_split_feature_group"], [78, 3, 1, "", "describe_train_test_data_split_feature_group_version"], [78, 3, 1, "", "describe_upload"], [78, 3, 1, "", "describe_use_case_requirements"], [78, 3, 1, "", "describe_user"], [78, 3, 1, "", "describe_vector_store"], [78, 3, 1, "", "describe_vector_store_by_name"], [78, 3, 1, "", "describe_vector_store_version"], [78, 3, 1, "", "describe_webhook"], [78, 3, 1, "", "download_batch_prediction_result_chunk"], [78, 3, 1, "", "download_execute_feature_group_operation_result_part_chunk"], [78, 3, 1, "", "execute_async_feature_group_operation"], [78, 3, 1, "", "export_custom_model_version"], [78, 3, 1, "", "generate_natural_language_explanation"], [78, 3, 1, "", "get_annotations_status"], [78, 3, 1, "", "get_api_endpoint"], [78, 3, 1, "", "get_batch_prediction_connector_errors"], [78, 3, 1, "", "get_chat_session"], [78, 3, 1, "", "get_collinearity_for_feature"], [78, 3, 1, "", "get_database_connector_object_schema"], [78, 3, 1, "", "get_dataset_schema"], [78, 3, 1, "", "get_docstore_document"], [78, 3, 1, "", "get_docstore_image"], [78, 3, 1, "", "get_drift_for_feature"], [78, 3, 1, "", "get_eda_collinearity"], [78, 3, 1, "", "get_eda_data_consistency"], [78, 3, 1, "", "get_eda_forecasting_analysis"], [78, 3, 1, "", "get_execute_feature_group_operation_result_part_count"], [78, 3, 1, "", "get_feature_association"], [78, 3, 1, "", "get_feature_group_export_connector_errors"], [78, 3, 1, "", "get_feature_group_schema"], [78, 3, 1, "", "get_feature_group_version_export_download_url"], [78, 3, 1, "", "get_feature_importance_by_model_version"], [78, 3, 1, "", "get_file_connector_instructions"], [78, 3, 1, "", "get_materialization_logs"], [78, 3, 1, "", "get_model_metrics"], [78, 3, 1, "", "get_model_monitor_chart_from_organization"], [78, 3, 1, "", "get_model_monitor_summary"], [78, 3, 1, "", "get_model_monitor_summary_from_organization"], [78, 3, 1, "", "get_model_monitoring_logs"], [78, 3, 1, "", "get_model_training_types_for_deployment"], [78, 3, 1, "", "get_natural_language_explanation"], [78, 3, 1, "", "get_outliers_for_batch_prediction_feature"], [78, 3, 1, "", "get_outliers_for_feature"], [78, 3, 1, "", "get_prediction_drift"], [78, 3, 1, "", "get_project_feature_group_config"], [78, 3, 1, "", "get_recent_feature_group_streamed_data"], [78, 3, 1, "", "get_schema"], [78, 3, 1, "", "get_training_data_logs"], [78, 3, 1, "", "get_training_logs"], [78, 3, 1, "", "list_algorithms"], [78, 3, 1, "", "list_api_keys"], [78, 3, 1, "", "list_application_connector_objects"], [78, 3, 1, "", "list_application_connectors"], [78, 3, 1, "", "list_batch_prediction_versions"], [78, 3, 1, "", "list_batch_predictions"], [78, 3, 1, "", "list_chat_sessions"], [78, 3, 1, "", "list_custom_loss_functions"], [78, 3, 1, "", "list_custom_metrics"], [78, 3, 1, "", "list_database_connector_objects"], [78, 3, 1, "", "list_database_connectors"], [78, 3, 1, "", "list_dataset_versions"], [78, 3, 1, "", "list_datasets"], [78, 3, 1, "", "list_deployment_tokens"], [78, 3, 1, "", "list_deployment_webhooks"], [78, 3, 1, "", "list_deployments"], [78, 3, 1, "", "list_eda"], [78, 3, 1, "", "list_eda_versions"], [78, 3, 1, "", "list_feature_group_exports"], [78, 3, 1, "", "list_feature_group_modifiers"], [78, 3, 1, "", "list_feature_group_templates"], [78, 3, 1, "", "list_feature_group_versions"], [78, 3, 1, "", "list_feature_groups"], [78, 3, 1, "", "list_file_connectors"], [78, 3, 1, "", "list_graph_dashboards"], [78, 3, 1, "", "list_model_artifacts_exports"], [78, 3, 1, "", "list_model_monitor_versions"], [78, 3, 1, "", "list_model_monitors"], [78, 3, 1, "", "list_model_versions"], [78, 3, 1, "", "list_models"], [78, 3, 1, "", "list_modules"], [78, 3, 1, "", "list_monitor_alert_versions_for_monitor_version"], [78, 3, 1, "", "list_monitor_alerts_for_monitor"], [78, 3, 1, "", "list_organization_groups"], [78, 3, 1, "", "list_organization_model_monitors"], [78, 3, 1, "", "list_organization_users"], [78, 3, 1, "", "list_pipelines"], [78, 3, 1, "", "list_project_datasets"], [78, 3, 1, "", "list_project_feature_group_templates"], [78, 3, 1, "", "list_project_feature_groups"], [78, 3, 1, "", "list_projects"], [78, 3, 1, "", "list_python_function_feature_groups"], [78, 3, 1, "", "list_python_functions"], [78, 3, 1, "", "list_refresh_pipeline_runs"], [78, 3, 1, "", "list_refresh_policies"], [78, 3, 1, "", "list_streaming_connectors"], [78, 3, 1, "", "list_streaming_tokens"], [78, 3, 1, "", "list_uploads"], [78, 3, 1, "", "list_use_cases"], [78, 3, 1, "", "list_vector_store_versions"], [78, 3, 1, "", "list_vector_stores"], [78, 3, 1, "", "model_monitor_version_metric_data"], [78, 3, 1, "", "pause_pipeline_refresh_schedule"], [78, 3, 1, "", "query_feature_group_code_generator"], [78, 3, 1, "", "render_feature_group_data_for_llm"], [78, 3, 1, "", "resume_pipeline_refresh_schedule"], [78, 3, 1, "", "search_feature_groups"], [78, 3, 1, "", "set_dataset_database_connector_config"], [78, 3, 1, "", "set_default_model_algorithm"], [78, 3, 1, "", "set_model_objective"], [78, 3, 1, "", "suggest_feature_group_template_for_feature_group"], [78, 3, 1, "", "unset_pipeline_refresh_schedule"], [78, 3, 1, "", "validate_project"], [78, 3, 1, "", "verify_and_describe_annotation"]], "abacusai.RegressionAugmentationStrategy": [[78, 2, 1, "", "RESAMPLE"], [78, 2, 1, "", "SMOTE"]], "abacusai.RegressionLossFunction": [[78, 2, 1, "", "AUTOMATIC"], [78, 2, 1, "", "CROSS_ENTROPY"], [78, 2, 1, "", "CUSTOM"], [78, 2, 1, "", "FOCAL_CROSS_ENTROPY"], [78, 2, 1, "", "HUBER"], [78, 2, 1, "", "MAE"], [78, 2, 1, "", "MAPE"], [78, 2, 1, "", "MSE"], [78, 2, 1, "", "MSLE"], [78, 2, 1, "", "TWEEDIE"]], "abacusai.RegressionObjective": [[78, 2, 1, "", "ACCURACY"], [78, 2, 1, "", "AUC"], [78, 2, 1, "", "F1_SCORE"], [78, 2, 1, "", "LOG_LOSS"], [78, 2, 1, "", "MAE"], [78, 2, 1, "", "MAPE"], [78, 2, 1, "", "PRECISION"], [78, 2, 1, "", "RECALL"], [78, 2, 1, "", "RMSE"], [78, 2, 1, "", "R_SQUARED_COEFFICIENT_OF_DETERMINATION"], [78, 2, 1, "", "WAPE"]], "abacusai.RegressionTargetTransform": [[78, 2, 1, "", "BOX_COX"], [78, 2, 1, "", "LOG"], [78, 2, 1, "", "QUANTILE"], [78, 2, 1, "", "YEO_JOHNSON"]], "abacusai.RegressionTimeSplitMethod": [[78, 2, 1, "", "TEST_SPLIT_PERCENTAGE_BASED"], [78, 2, 1, "", "TEST_START_TIMESTAMP_BASED"]], "abacusai.RegressionTrainingConfig": [[78, 2, 1, "", "active_labels_column"], [78, 2, 1, "", "augmentation_strategy"], [78, 2, 1, "", "batch_size"], [78, 2, 1, "", "custom_loss_functions"], [78, 2, 1, "", "custom_metrics"], [78, 2, 1, "", "data_split_feature_group_table_name"], [78, 2, 1, "", "disable_test_val_fold"], [78, 2, 1, "", "drop_original_categoricals"], [78, 2, 1, "", "dropout_rate"], [78, 2, 1, "", "feature_selection_intensity"], [78, 2, 1, "", "ignore_datetime_features"], [78, 2, 1, "", "is_multilingual"], [78, 2, 1, "", "k_fold_cross_validation"], [78, 2, 1, "", "loss_function"], [78, 2, 1, "", "loss_parameters"], [78, 2, 1, "", "max_text_words"], [78, 2, 1, "", "min_categorical_count"], [78, 2, 1, "", "num_cv_folds"], [78, 2, 1, "", "numeric_clipping_percentile"], [78, 2, 1, "", "objective"], [78, 2, 1, "", "perform_feature_selection"], [78, 2, 1, "", "pretrained_model_name"], [78, 2, 1, "", "problem_type"], [78, 2, 1, "", "rare_class_augmentation_threshold"], [78, 2, 1, "", "rebalance_classes"], [78, 2, 1, "", "sample_weight"], [78, 2, 1, "", "sampling_unit_keys"], [78, 2, 1, "", "sort_objective"], [78, 2, 1, "", "target_encode_categoricals"], [78, 2, 1, "", "target_transform"], [78, 2, 1, "", "test_row_indicator"], [78, 2, 1, "", "test_split"], [78, 2, 1, "", "test_splitting_timestamp"], [78, 2, 1, "", "timestamp_based_splitting_column"], [78, 2, 1, "", "timestamp_based_splitting_method"], [78, 2, 1, "", "training_rows_downsample_ratio"], [78, 2, 1, "", "tree_hpo_mode"], [78, 2, 1, "", "type_of_split"]], "abacusai.RegressionTreeHPOMode": [[78, 2, 1, "", "RAPID"], [78, 2, 1, "", "THOROUGH"]], "abacusai.RegressionTypeOfSplit": [[78, 2, 1, "", "RANDOM"], [78, 2, 1, "", "ROW_INDICATOR_BASED"], [78, 2, 1, "", "TIMESTAMP_BASED"]], "abacusai.SamplingConfig": [[78, 3, 1, "", "__post_init__"]], "abacusai.SamplingMethodType": [[78, 2, 1, "", "N_SAMPLING"], [78, 2, 1, "", "PERCENT_SAMPLING"]], "abacusai.SentenceBoundaryDetectionTrainingConfig": [[78, 2, 1, "", "batch_size"], [78, 2, 1, "", "dropout_rate"], [78, 2, 1, "", "problem_type"], [78, 2, 1, "", "test_split"]], "abacusai.SentimentDetectionTrainingConfig": [[78, 2, 1, "", "batch_size"], [78, 2, 1, "", "compute_metrics"], [78, 2, 1, "", "dropout_rate"], [78, 2, 1, "", "problem_type"], [78, 2, 1, "", "sentiment_type"], [78, 2, 1, "", "test_split"]], "abacusai.SentimentType": [[78, 2, 1, "", "EMOTION"], [78, 2, 1, "", "VALENCE"]], "abacusai.StreamingClient": [[78, 3, 1, "", "append_data"], [78, 3, 1, "", "append_multiple_data"], [78, 3, 1, "", "delete_item_embeddings"], [78, 3, 1, "", "upsert_data"], [78, 3, 1, "", "upsert_item_embeddings"], [78, 3, 1, "", "upsert_multiple_data"], [78, 3, 1, "", "upsert_multiple_item_embeddings"]], "abacusai.ThemeAnalysisTrainingConfig": [[78, 2, 1, "", "problem_type"]], "abacusai.TimeWindowMergeConfig": [[78, 2, 1, "", "feature_name"], [78, 2, 1, "", "merge_mode"], [78, 2, 1, "", "time_window_size_ms"]], "abacusai.TrainingConfig": [[78, 2, 1, "", "_support_kwargs"], [78, 2, 1, "", "_upper_snake_case_keys"], [78, 2, 1, "", "kwargs"], [78, 2, 1, "", "problem_type"]], "abacusai._ApiClassFactory": [[78, 2, 1, "", "config_abstract_class"], [78, 2, 1, "", "config_class_key"], [78, 2, 1, "", "config_class_map"], [78, 3, 1, "", "from_dict"]], "abacusai._FeatureGroupExportConfigFactory": [[78, 2, 1, "", "config_abstract_class"], [78, 2, 1, "", "config_class_key"], [78, 2, 1, "", "config_class_map"]], "abacusai._MergeConfigFactory": [[78, 2, 1, "", "config_class_key"], [78, 2, 1, "", "config_class_map"]], "abacusai._SamplingConfigFactory": [[78, 2, 1, "", "config_class_key"], [78, 2, 1, "", "config_class_map"]], "abacusai._TrainingConfigFactory": [[78, 2, 1, "", "config_abstract_class"], [78, 2, 1, "", "config_class_key"], [78, 2, 1, "", "config_class_map"]], "abacusai.algorithm": [[0, 1, 1, "", "Algorithm"]], "abacusai.algorithm.Algorithm": [[0, 3, 1, "", "__repr__"], [0, 3, 1, "", "to_dict"]], "abacusai.annotation": [[1, 1, 1, "", "Annotation"]], "abacusai.annotation.Annotation": [[1, 3, 1, "", "__repr__"], [1, 3, 1, "", "to_dict"]], "abacusai.annotation_config": [[2, 1, 1, "", "AnnotationConfig"]], "abacusai.annotation_config.AnnotationConfig": [[2, 3, 1, "", "__repr__"], [2, 3, 1, "", "to_dict"]], "abacusai.annotation_entry": [[3, 1, 1, "", "AnnotationEntry"]], "abacusai.annotation_entry.AnnotationEntry": [[3, 3, 1, "", "__repr__"], [3, 3, 1, "", "to_dict"]], "abacusai.annotations_status": [[4, 1, 1, "", "AnnotationsStatus"]], "abacusai.annotations_status.AnnotationsStatus": [[4, 3, 1, "", "__repr__"], [4, 3, 1, "", "to_dict"]], "abacusai.api_class": [[9, 1, 1, "", "AIAgentTrainingConfig"], [9, 1, 1, "", "AnomalyDetectionTrainingConfig"], [9, 1, 1, "id23", "ApiClass"], [9, 1, 1, "", "ApiEnum"], [9, 1, 1, "", "BatchSize"], [9, 1, 1, "", "ClusteringImputationMethod"], [9, 1, 1, "", "ClusteringTimeseriesTrainingConfig"], [9, 1, 1, "", "ClusteringTrainingConfig"], [9, 1, 1, "", "ConnectorType"], [9, 1, 1, "", "CumulativeForecastingTrainingConfig"], [9, 1, 1, "", "CustomAlgorithmTrainingConfig"], [9, 1, 1, "", "CustomTrainedModelTrainingConfig"], [9, 1, 1, "", "DatabaseConnectorExportConfig"], [9, 1, 1, "", "DocumentClassificationTrainingConfig"], [9, 1, 1, "", "DocumentSummarizationTrainingConfig"], [9, 1, 1, "", "DocumentVisualizationTrainingConfig"], [9, 1, 1, "", "ExperimentationMode"], [9, 1, 1, "", "FeatureGroupExportConfig"], [9, 1, 1, "", "FileConnectorExportConfig"], [9, 1, 1, "", "FillLogic"], [9, 1, 1, "", "ForecastingDataSplitType"], [9, 1, 1, "", "ForecastingFillMethod"], [9, 1, 1, "", "ForecastingFrequency"], [9, 1, 1, "", "ForecastingLocalScaling"], [9, 1, 1, "", "ForecastingLossFunction"], [9, 1, 1, "", "ForecastingObjective"], [9, 1, 1, "", "ForecastingQuanitlesExtensionMethod"], [9, 1, 1, "", "ForecastingTrainingConfig"], [9, 1, 1, "", "HolidayCalendars"], [9, 1, 1, "", "LastNMergeConfig"], [9, 1, 1, "", "MergeConfig"], [9, 1, 1, "", "MergeMode"], [9, 1, 1, "", "NERModelType"], [9, 1, 1, "", "NERObjective"], [9, 1, 1, "", "NLPDocumentFormat"], [9, 1, 1, "", "NSamplingConfig"], [9, 1, 1, "", "NamedEntityExtractionTrainingConfig"], [9, 1, 1, "", "NaturalLanguageSearchTrainingConfig"], [9, 1, 1, "", "OptimizationTrainingConfig"], [9, 1, 1, "", "OutputVariableMapping"], [9, 1, 1, "", "ParsingConfig"], [9, 1, 1, "", "PercentSamplingConfig"], [9, 1, 1, "", "PersonalizationObjective"], [9, 1, 1, "", "PersonalizationTrainingConfig"], [9, 1, 1, "", "PersonalizationTrainingMode"], [9, 1, 1, "", "ProblemType"], [9, 1, 1, "", "PythonFunctionArgument"], [9, 1, 1, "", "PythonFunctionArgumentType"], [9, 1, 1, "", "RegressionAugmentationStrategy"], [9, 1, 1, "", "RegressionLossFunction"], [9, 1, 1, "", "RegressionObjective"], [9, 1, 1, "", "RegressionTargetTransform"], [9, 1, 1, "", "RegressionTimeSplitMethod"], [9, 1, 1, "", "RegressionTrainingConfig"], [9, 1, 1, "", "RegressionTreeHPOMode"], [9, 1, 1, "", "RegressionTypeOfSplit"], [9, 1, 1, "", "SamplingConfig"], [9, 1, 1, "", "SamplingMethodType"], [9, 1, 1, "", "SentenceBoundaryDetectionTrainingConfig"], [9, 1, 1, "", "SentimentDetectionTrainingConfig"], [9, 1, 1, "", "SentimentType"], [9, 1, 1, "", "ThemeAnalysisTrainingConfig"], [9, 1, 1, "", "TimeWindowMergeConfig"], [9, 1, 1, "", "TrainingConfig"], [9, 1, 1, "id29", "_ApiClassFactory"], [9, 1, 1, "", "_FeatureGroupExportConfigFactory"], [9, 1, 1, "", "_MergeConfigFactory"], [9, 1, 1, "", "_SamplingConfigFactory"], [9, 1, 1, "", "_TrainingConfigFactory"], [5, 0, 0, "-", "abstract"], [6, 0, 0, "-", "dataset"], [7, 0, 0, "-", "enums"], [8, 0, 0, "-", "feature_group"], [10, 0, 0, "-", "model"], [11, 0, 0, "-", "project"], [12, 0, 0, "-", "python_functions"], [13, 0, 0, "-", "refresh"]], "abacusai.api_class.AIAgentTrainingConfig": [[9, 2, 1, "", "description"], [9, 2, 1, "", "problem_type"]], "abacusai.api_class.AnomalyDetectionTrainingConfig": [[9, 2, 1, "", "mixture_of_gaussians"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "spike_down"], [9, 2, 1, "", "spike_up"], [9, 2, 1, "", "test_split"], [9, 2, 1, "", "trend_change"], [9, 2, 1, "", "value_high"], [9, 2, 1, "", "variational_autoencoder"]], "abacusai.api_class.ApiClass": [[9, 3, 1, "id26", "__post_init__"], [9, 2, 1, "id25", "_support_kwargs"], [9, 2, 1, "id24", "_upper_snake_case_keys"], [9, 3, 1, "id28", "from_dict"], [9, 3, 1, "id27", "to_dict"]], "abacusai.api_class.ApiEnum": [[9, 3, 1, "", "__eq__"], [9, 3, 1, "", "__hash__"]], "abacusai.api_class.BatchSize": [[9, 2, 1, "", "BATCH_1024"], [9, 2, 1, "", "BATCH_128"], [9, 2, 1, "", "BATCH_16"], [9, 2, 1, "", "BATCH_256"], [9, 2, 1, "", "BATCH_32"], [9, 2, 1, "", "BATCH_384"], [9, 2, 1, "", "BATCH_512"], [9, 2, 1, "", "BATCH_64"], [9, 2, 1, "", "BATCH_740"], [9, 2, 1, "", "BATCH_8"]], "abacusai.api_class.ClusteringImputationMethod": [[9, 2, 1, "", "AUTOMATIC"], [9, 2, 1, "", "INTERPOLATE"], [9, 2, 1, "", "ZEROS"]], "abacusai.api_class.ClusteringTimeseriesTrainingConfig": [[9, 2, 1, "", "imputation"], [9, 2, 1, "", "num_clusters_selection"], [9, 2, 1, "", "problem_type"]], "abacusai.api_class.ClusteringTrainingConfig": [[9, 2, 1, "", "num_clusters_selection"], [9, 2, 1, "", "problem_type"]], "abacusai.api_class.ConnectorType": [[9, 2, 1, "", "APPLICATION"], [9, 2, 1, "", "DATABASE"], [9, 2, 1, "", "FILE"], [9, 2, 1, "", "STREAMING"]], "abacusai.api_class.CumulativeForecastingTrainingConfig": [[9, 2, 1, "", "cumulative_prediction_lengths"], [9, 2, 1, "", "historical_frequency"], [9, 2, 1, "", "predict_residuals"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "skip_input_transform"], [9, 2, 1, "", "skip_target_transform"], [9, 2, 1, "", "test_split"]], "abacusai.api_class.CustomAlgorithmTrainingConfig": [[9, 2, 1, "", "predict_function_name"], [9, 2, 1, "", "predict_many_function_name"], [9, 2, 1, "", "predict_module_name"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "test_split"], [9, 2, 1, "", "train_function_name"], [9, 2, 1, "", "train_module_name"], [9, 2, 1, "", "training_input_tables"]], "abacusai.api_class.CustomTrainedModelTrainingConfig": [[9, 2, 1, "", "docker_image_uri"], [9, 2, 1, "", "index_output_path"], [9, 2, 1, "", "max_catalog_size"], [9, 2, 1, "", "max_dimension"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "service_port"]], "abacusai.api_class.DatabaseConnectorExportConfig": [[9, 2, 1, "", "additional_id_columns"], [9, 2, 1, "", "connector_type"], [9, 2, 1, "", "data_columns"], [9, 2, 1, "", "database_connector_id"], [9, 2, 1, "", "id_column"], [9, 2, 1, "", "mode"], [9, 2, 1, "", "object_name"], [9, 3, 1, "", "to_dict"]], "abacusai.api_class.DocumentClassificationTrainingConfig": [[9, 2, 1, "", "batch_size"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "test_split"], [9, 2, 1, "", "zero_shot_hypotheses"]], "abacusai.api_class.DocumentSummarizationTrainingConfig": [[9, 2, 1, "", "batch_size"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "test_split"]], "abacusai.api_class.DocumentVisualizationTrainingConfig": [[9, 2, 1, "", "batch_size"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "test_split"]], "abacusai.api_class.ExperimentationMode": [[9, 2, 1, "", "RAPID"], [9, 2, 1, "", "THOROUGH"]], "abacusai.api_class.FeatureGroupExportConfig": [[9, 2, 1, "", "connector_type"]], "abacusai.api_class.FileConnectorExportConfig": [[9, 2, 1, "", "connector_type"], [9, 2, 1, "", "export_file_format"], [9, 2, 1, "", "location"], [9, 3, 1, "", "to_dict"]], "abacusai.api_class.FillLogic": [[9, 2, 1, "", "AVERAGE"], [9, 2, 1, "", "BACKFILL"], [9, 2, 1, "", "CUSTOM"], [9, 2, 1, "", "FORWARDFILL"], [9, 2, 1, "", "LINEAR"], [9, 2, 1, "", "MAX"], [9, 2, 1, "", "MEDIAN"], [9, 2, 1, "", "MIN"], [9, 2, 1, "", "NEAREST"]], "abacusai.api_class.ForecastingDataSplitType": [[9, 2, 1, "", "AUTO"], [9, 2, 1, "", "ITEM"], [9, 2, 1, "", "PREDICTION_LENGTH"], [9, 2, 1, "", "TIMESTAMP"]], "abacusai.api_class.ForecastingFillMethod": [[9, 2, 1, "", "BACK"], [9, 2, 1, "", "FUTURE"], [9, 2, 1, "", "MIDDLE"]], "abacusai.api_class.ForecastingFrequency": [[9, 2, 1, "", "DAILY"], [9, 2, 1, "", "HOURLY"], [9, 2, 1, "", "MONTH_END"], [9, 2, 1, "", "MONTH_START"], [9, 2, 1, "", "QUARTER_END"], [9, 2, 1, "", "QUARTER_START"], [9, 2, 1, "", "WEEKLY_MONDAY_START"], [9, 2, 1, "", "WEEKLY_SATURDAY_START"], [9, 2, 1, "", "WEEKLY_SUNDAY_START"], [9, 2, 1, "", "YEARLY"]], "abacusai.api_class.ForecastingLocalScaling": [[9, 2, 1, "", "ITEM"], [9, 2, 1, "", "LAST_POINT"], [9, 2, 1, "", "MIN_MAX"], [9, 2, 1, "", "MIN_STD"], [9, 2, 1, "", "ROBUST"], [9, 2, 1, "", "SLIDING_ZSCORE"], [9, 2, 1, "", "ZSCORE"]], "abacusai.api_class.ForecastingLossFunction": [[9, 2, 1, "", "ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [9, 2, 1, "", "CUSTOM"], [9, 2, 1, "", "GAUSSIAN"], [9, 2, 1, "", "GAUSSIAN_FULL_COVARIANCE"], [9, 2, 1, "", "GUASSIAN_EXPONENTIAL"], [9, 2, 1, "", "LOG_ROOT_MEAN_SQUARE_ERROR"], [9, 2, 1, "", "MEAN_ABSOLUTE_ERROR"], [9, 2, 1, "", "MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [9, 2, 1, "", "MIX_GAUSSIANS"], [9, 2, 1, "", "NEGATIVE_BINOMIAL"], [9, 2, 1, "", "NORMALIZED_MEAN_ABSOLUTE_ERROR"], [9, 2, 1, "", "NORMALIZED_ROOT_MEAN_SQUARE_ERROR"], [9, 2, 1, "", "PEAKS_MEAN_ABSOLUTE_ERROR"], [9, 2, 1, "", "POINTWISE_ACCURACY"], [9, 2, 1, "", "ROOT_MEAN_SQUARE_ERROR"], [9, 2, 1, "", "STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [9, 2, 1, "", "WEIBULL"]], "abacusai.api_class.ForecastingObjective": [[9, 2, 1, "", "ACCURACY"], [9, 2, 1, "", "BIAS"], [9, 2, 1, "", "CMAPE"], [9, 2, 1, "", "CV"], [9, 2, 1, "", "MAPE"], [9, 2, 1, "", "RMSE"], [9, 2, 1, "", "SRMSE"], [9, 2, 1, "", "WAPE"]], "abacusai.api_class.ForecastingQuanitlesExtensionMethod": [[9, 2, 1, "", "ANCESTRAL_SIMULATION"], [9, 2, 1, "", "DIRECT"], [9, 2, 1, "", "QUADRATIC"]], "abacusai.api_class.ForecastingTrainingConfig": [[9, 2, 1, "", "additional_forecast_keys"], [9, 2, 1, "", "backtesting_window_step_size"], [9, 2, 1, "", "batch_renormalization"], [9, 2, 1, "", "batch_size"], [9, 2, 1, "", "convolution_filters"], [9, 2, 1, "", "convolutional_layers"], [9, 2, 1, "", "custom_loss_functions"], [9, 2, 1, "", "custom_metrics"], [9, 2, 1, "", "data_split_feature_group_table_name"], [9, 2, 1, "", "datetime_holiday_calendars"], [9, 2, 1, "", "disable_networks_without_analytic_quantiles"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "enable_clustering"], [9, 2, 1, "", "enable_cold_start"], [9, 2, 1, "", "enable_feature_selection"], [9, 2, 1, "", "enable_multiple_backtests"], [9, 2, 1, "", "experimentation_mode"], [9, 2, 1, "", "fill_missing_values"], [9, 2, 1, "", "filter_items"], [9, 2, 1, "", "force_prediction_length"], [9, 2, 1, "", "forecast_frequency"], [9, 2, 1, "", "full_data_retraining"], [9, 2, 1, "", "handle_zeros_as_missing_values"], [9, 2, 1, "", "history_length"], [9, 2, 1, "", "initial_learning_rate"], [9, 2, 1, "", "item_attributes_weight_column"], [9, 2, 1, "", "l2_regularization_factor"], [9, 2, 1, "", "local_scaling_mode"], [9, 2, 1, "", "loss_function"], [9, 2, 1, "", "max_scale_context"], [9, 2, 1, "", "num_backtesting_windows"], [9, 2, 1, "", "number_of_samples"], [9, 2, 1, "", "objective"], [9, 2, 1, "", "prediction_length"], [9, 2, 1, "", "prediction_step_size"], [9, 2, 1, "", "probability_quantiles"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "quantiles_extension_method"], [9, 2, 1, "", "recurrent_layers"], [9, 2, 1, "", "recurrent_units"], [9, 2, 1, "", "skip_local_scale_target"], [9, 2, 1, "", "skip_missing"], [9, 2, 1, "", "skip_timeseries_weight_scaling"], [9, 2, 1, "", "smooth_history"], [9, 2, 1, "", "sort_objective"], [9, 2, 1, "", "symmetrize_quantiles"], [9, 2, 1, "", "test_by_item"], [9, 2, 1, "", "test_split"], [9, 2, 1, "", "test_start"], [9, 2, 1, "", "timeseries_loss_weight_column"], [9, 2, 1, "", "timeseries_weight_column"], [9, 2, 1, "", "training_point_overlap"], [9, 2, 1, "", "type_of_split"], [9, 2, 1, "", "underprediction_weight"], [9, 2, 1, "", "use_all_item_totals"], [9, 2, 1, "", "use_item_id"], [9, 2, 1, "", "use_item_weights_in_objective"], [9, 2, 1, "", "use_log_transforms"], [9, 2, 1, "", "use_timeseries_weights_in_objective"], [9, 2, 1, "", "zero_predictor"]], "abacusai.api_class.HolidayCalendars": [[9, 2, 1, "", "AU"], [9, 2, 1, "", "UK"], [9, 2, 1, "", "US"]], "abacusai.api_class.LastNMergeConfig": [[9, 2, 1, "", "merge_mode"], [9, 2, 1, "", "num_versions"]], "abacusai.api_class.MergeConfig": [[9, 3, 1, "", "__post_init__"]], "abacusai.api_class.MergeMode": [[9, 2, 1, "", "LAST_N"], [9, 2, 1, "", "TIME_WINDOW"]], "abacusai.api_class.NERModelType": [[9, 2, 1, "", "LEARNED"], [9, 2, 1, "", "PRETRAINED_BERT"], [9, 2, 1, "", "PRETRAINED_MULTILINGUAL"], [9, 2, 1, "", "PRETRAINED_ROBERTA_27"], [9, 2, 1, "", "PRETRAINED_ROBERTA_43"]], "abacusai.api_class.NERObjective": [[9, 2, 1, "", "ANNOTATIONS_PRECISION"], [9, 2, 1, "", "ANNOTATIONS_RECALL"], [9, 2, 1, "", "AUC"], [9, 2, 1, "", "LOG_LOSS"], [9, 2, 1, "", "PRECISION"], [9, 2, 1, "", "RECALL"]], "abacusai.api_class.NLPDocumentFormat": [[9, 2, 1, "", "AUTO"], [9, 2, 1, "", "DOC"], [9, 2, 1, "", "TEXT"], [9, 2, 1, "", "TOKENS"]], "abacusai.api_class.NSamplingConfig": [[9, 2, 1, "", "key_columns"], [9, 2, 1, "", "sample_count"], [9, 2, 1, "", "sampling_method"]], "abacusai.api_class.NamedEntityExtractionTrainingConfig": [[9, 2, 1, "", "active_labels_column"], [9, 2, 1, "", "batch_size"], [9, 2, 1, "", "document_format"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "include_longformer"], [9, 2, 1, "", "ner_model_type"], [9, 2, 1, "", "objective"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "sort_objective"], [9, 2, 1, "", "test_row_indicator"], [9, 2, 1, "", "test_split"]], "abacusai.api_class.NaturalLanguageSearchTrainingConfig": [[9, 2, 1, "", "abacus_internal_model"], [9, 2, 1, "", "chunk_overlap_fraction"], [9, 2, 1, "", "index_fraction"], [9, 2, 1, "", "larger_embeddings"], [9, 2, 1, "", "num_completion_tokens"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "search_chunk_size"]], "abacusai.api_class.OptimizationTrainingConfig": [[9, 2, 1, "", "problem_type"]], "abacusai.api_class.OutputVariableMapping": [[9, 2, 1, "", "name"], [9, 2, 1, "", "variable_type"]], "abacusai.api_class.ParsingConfig": [[9, 2, 1, "", "csv_delimiter"], [9, 2, 1, "", "escape"], [9, 2, 1, "", "file_path_with_schema"]], "abacusai.api_class.PercentSamplingConfig": [[9, 2, 1, "", "key_columns"], [9, 2, 1, "", "sample_percent"], [9, 2, 1, "", "sampling_method"]], "abacusai.api_class.PersonalizationObjective": [[9, 2, 1, "", "COVERAGE"], [9, 2, 1, "", "MAP"], [9, 2, 1, "", "MAP_10"], [9, 2, 1, "", "MAP_5"], [9, 2, 1, "", "MRR"], [9, 2, 1, "", "NDCG"], [9, 2, 1, "", "NDCG_10"], [9, 2, 1, "", "NDCG_5"], [9, 2, 1, "", "PERSONALIZATION"]], "abacusai.api_class.PersonalizationTrainingConfig": [[9, 2, 1, "", "add_time_features"], [9, 2, 1, "", "batch_size"], [9, 2, 1, "", "compute_rerank_metrics"], [9, 2, 1, "", "compute_session_metrics"], [9, 2, 1, "", "data_split_feature_group_table_name"], [9, 2, 1, "", "disable_gpu"], [9, 2, 1, "", "disable_timestamp_scalar_features"], [9, 2, 1, "", "disable_transformer"], [9, 2, 1, "", "downsample_item_popularity_percentile"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "explicit_time_split"], [9, 2, 1, "", "explore_lookback_hours"], [9, 2, 1, "", "filter_history"], [9, 2, 1, "", "full_data_retraining"], [9, 2, 1, "", "item_id_dropout"], [9, 2, 1, "", "max_history_length"], [9, 2, 1, "", "max_user_history_len_percentile"], [9, 2, 1, "", "objective"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "recent_days_for_training"], [9, 2, 1, "", "sequential_training"], [9, 2, 1, "", "session_event_types"], [9, 2, 1, "", "sort_objective"], [9, 2, 1, "", "target_action_types"], [9, 2, 1, "", "target_action_weights"], [9, 2, 1, "", "test_last_items_length"], [9, 2, 1, "", "test_on_user_split"], [9, 2, 1, "", "test_row_indicator"], [9, 2, 1, "", "test_split"], [9, 2, 1, "", "test_split_on_last_k_items"], [9, 2, 1, "", "test_window_length_hours"], [9, 2, 1, "", "training_mode"], [9, 2, 1, "", "training_start_date"]], "abacusai.api_class.PersonalizationTrainingMode": [[9, 2, 1, "", "EXPERIMENTAL"], [9, 2, 1, "", "PRODUCTION"]], "abacusai.api_class.ProblemType": [[9, 2, 1, "", "AI_AGENT"], [9, 2, 1, "", "ANOMALY_DETECTION"], [9, 2, 1, "", "ANOMALY_OUTLIERS"], [9, 2, 1, "", "CLUSTERING"], [9, 2, 1, "", "CLUSTERING_TIMESERIES"], [9, 2, 1, "", "CUMULATIVE_FORECASTING"], [9, 2, 1, "", "CUSTOM_ALGORITHM"], [9, 2, 1, "", "CUSTOM_TRAINED_MODEL"], [9, 2, 1, "", "DOCUMENT_CLASSIFICATION"], [9, 2, 1, "", "DOCUMENT_SUMMARIZATION"], [9, 2, 1, "", "DOCUMENT_VISUALIZATION"], [9, 2, 1, "", "FEATURE_STORE"], [9, 2, 1, "", "FORECASTING"], [9, 2, 1, "", "IMAGE_CLASSIFICATION"], [9, 2, 1, "", "IMAGE_VALUE_PREDICTION"], [9, 2, 1, "", "LANGUAGE_DETECTION"], [9, 2, 1, "", "MODEL_MONITORING"], [9, 2, 1, "", "NAMED_ENTITY_EXTRACTION"], [9, 2, 1, "", "NATURAL_LANGUAGE_SEARCH"], [9, 2, 1, "", "OBJECT_DETECTION"], [9, 2, 1, "", "OPTIMIZATION"], [9, 2, 1, "", "PERSONALIZATION"], [9, 2, 1, "", "PREDICTIVE_MODELING"], [9, 2, 1, "", "PRETRAINED_MODELS"], [9, 2, 1, "", "SENTENCE_BOUNDARY_DETECTION"], [9, 2, 1, "", "SENTIMENT_DETECTION"], [9, 2, 1, "", "THEME_ANALYSIS"]], "abacusai.api_class.PythonFunctionArgument": [[9, 2, 1, "", "is_required"], [9, 2, 1, "", "name"], [9, 2, 1, "", "pipeline_variable"], [9, 2, 1, "", "value"], [9, 2, 1, "", "variable_type"]], "abacusai.api_class.PythonFunctionArgumentType": [[9, 2, 1, "", "BATCH_PREDICTION_ID"], [9, 2, 1, "", "BOOLEAN"], [9, 2, 1, "", "DATASET_ID"], [9, 2, 1, "", "DEPLOYMENT_ID"], [9, 2, 1, "", "FEATURE_GROUP"], [9, 2, 1, "", "FEATURE_GROUP_ID"], [9, 2, 1, "", "FLOAT"], [9, 2, 1, "", "INTEGER"], [9, 2, 1, "", "JSON"], [9, 2, 1, "", "LIST"], [9, 2, 1, "", "MODEL_ID"], [9, 2, 1, "", "MONITOR_ID"], [9, 2, 1, "", "STRING"]], "abacusai.api_class.RegressionAugmentationStrategy": [[9, 2, 1, "", "RESAMPLE"], [9, 2, 1, "", "SMOTE"]], "abacusai.api_class.RegressionLossFunction": [[9, 2, 1, "", "AUTOMATIC"], [9, 2, 1, "", "CROSS_ENTROPY"], [9, 2, 1, "", "CUSTOM"], [9, 2, 1, "", "FOCAL_CROSS_ENTROPY"], [9, 2, 1, "", "HUBER"], [9, 2, 1, "", "MAE"], [9, 2, 1, "", "MAPE"], [9, 2, 1, "", "MSE"], [9, 2, 1, "", "MSLE"], [9, 2, 1, "", "TWEEDIE"]], "abacusai.api_class.RegressionObjective": [[9, 2, 1, "", "ACCURACY"], [9, 2, 1, "", "AUC"], [9, 2, 1, "", "F1_SCORE"], [9, 2, 1, "", "LOG_LOSS"], [9, 2, 1, "", "MAE"], [9, 2, 1, "", "MAPE"], [9, 2, 1, "", "PRECISION"], [9, 2, 1, "", "RECALL"], [9, 2, 1, "", "RMSE"], [9, 2, 1, "", "R_SQUARED_COEFFICIENT_OF_DETERMINATION"], [9, 2, 1, "", "WAPE"]], "abacusai.api_class.RegressionTargetTransform": [[9, 2, 1, "", "BOX_COX"], [9, 2, 1, "", "LOG"], [9, 2, 1, "", "QUANTILE"], [9, 2, 1, "", "YEO_JOHNSON"]], "abacusai.api_class.RegressionTimeSplitMethod": [[9, 2, 1, "", "TEST_SPLIT_PERCENTAGE_BASED"], [9, 2, 1, "", "TEST_START_TIMESTAMP_BASED"]], "abacusai.api_class.RegressionTrainingConfig": [[9, 2, 1, "", "active_labels_column"], [9, 2, 1, "", "augmentation_strategy"], [9, 2, 1, "", "batch_size"], [9, 2, 1, "", "custom_loss_functions"], [9, 2, 1, "", "custom_metrics"], [9, 2, 1, "", "data_split_feature_group_table_name"], [9, 2, 1, "", "disable_test_val_fold"], [9, 2, 1, "", "drop_original_categoricals"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "feature_selection_intensity"], [9, 2, 1, "", "ignore_datetime_features"], [9, 2, 1, "", "is_multilingual"], [9, 2, 1, "", "k_fold_cross_validation"], [9, 2, 1, "", "loss_function"], [9, 2, 1, "", "loss_parameters"], [9, 2, 1, "", "max_text_words"], [9, 2, 1, "", "min_categorical_count"], [9, 2, 1, "", "num_cv_folds"], [9, 2, 1, "", "numeric_clipping_percentile"], [9, 2, 1, "", "objective"], [9, 2, 1, "", "perform_feature_selection"], [9, 2, 1, "", "pretrained_model_name"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "rare_class_augmentation_threshold"], [9, 2, 1, "", "rebalance_classes"], [9, 2, 1, "", "sample_weight"], [9, 2, 1, "", "sampling_unit_keys"], [9, 2, 1, "", "sort_objective"], [9, 2, 1, "", "target_encode_categoricals"], [9, 2, 1, "", "target_transform"], [9, 2, 1, "", "test_row_indicator"], [9, 2, 1, "", "test_split"], [9, 2, 1, "", "test_splitting_timestamp"], [9, 2, 1, "", "timestamp_based_splitting_column"], [9, 2, 1, "", "timestamp_based_splitting_method"], [9, 2, 1, "", "training_rows_downsample_ratio"], [9, 2, 1, "", "tree_hpo_mode"], [9, 2, 1, "", "type_of_split"]], "abacusai.api_class.RegressionTreeHPOMode": [[9, 2, 1, "", "RAPID"], [9, 2, 1, "", "THOROUGH"]], "abacusai.api_class.RegressionTypeOfSplit": [[9, 2, 1, "", "RANDOM"], [9, 2, 1, "", "ROW_INDICATOR_BASED"], [9, 2, 1, "", "TIMESTAMP_BASED"]], "abacusai.api_class.SamplingConfig": [[9, 3, 1, "", "__post_init__"]], "abacusai.api_class.SamplingMethodType": [[9, 2, 1, "", "N_SAMPLING"], [9, 2, 1, "", "PERCENT_SAMPLING"]], "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig": [[9, 2, 1, "", "batch_size"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "test_split"]], "abacusai.api_class.SentimentDetectionTrainingConfig": [[9, 2, 1, "", "batch_size"], [9, 2, 1, "", "compute_metrics"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "sentiment_type"], [9, 2, 1, "", "test_split"]], "abacusai.api_class.SentimentType": [[9, 2, 1, "", "EMOTION"], [9, 2, 1, "", "VALENCE"]], "abacusai.api_class.ThemeAnalysisTrainingConfig": [[9, 2, 1, "", "problem_type"]], "abacusai.api_class.TimeWindowMergeConfig": [[9, 2, 1, "", "feature_name"], [9, 2, 1, "", "merge_mode"], [9, 2, 1, "", "time_window_size_ms"]], "abacusai.api_class.TrainingConfig": [[9, 2, 1, "", "_support_kwargs"], [9, 2, 1, "", "_upper_snake_case_keys"], [9, 2, 1, "", "kwargs"], [9, 2, 1, "", "problem_type"]], "abacusai.api_class._ApiClassFactory": [[9, 2, 1, "id30", "config_abstract_class"], [9, 2, 1, "id31", "config_class_key"], [9, 2, 1, "id32", "config_class_map"], [9, 3, 1, "id33", "from_dict"]], "abacusai.api_class._FeatureGroupExportConfigFactory": [[9, 2, 1, "", "config_abstract_class"], [9, 2, 1, "", "config_class_key"], [9, 2, 1, "", "config_class_map"]], "abacusai.api_class._MergeConfigFactory": [[9, 2, 1, "", "config_class_key"], [9, 2, 1, "", "config_class_map"]], "abacusai.api_class._SamplingConfigFactory": [[9, 2, 1, "", "config_class_key"], [9, 2, 1, "", "config_class_map"]], "abacusai.api_class._TrainingConfigFactory": [[9, 2, 1, "", "config_abstract_class"], [9, 2, 1, "", "config_class_key"], [9, 2, 1, "", "config_class_map"]], "abacusai.api_class.abstract": [[5, 5, 1, "", "ALL_CAP_RE"], [5, 1, 1, "", "ApiClass"], [5, 5, 1, "", "FIRST_CAP_RE"], [5, 1, 1, "", "_ApiClassFactory"], [5, 6, 1, "", "camel_case"], [5, 6, 1, "", "snake_case"], [5, 6, 1, "", "upper_snake_case"]], "abacusai.api_class.abstract.ApiClass": [[5, 3, 1, "", "__post_init__"], [5, 2, 1, "", "_support_kwargs"], [5, 2, 1, "", "_upper_snake_case_keys"], [5, 3, 1, "", "from_dict"], [5, 3, 1, "", "to_dict"]], "abacusai.api_class.abstract._ApiClassFactory": [[5, 2, 1, "", "config_abstract_class"], [5, 2, 1, "", "config_class_key"], [5, 2, 1, "", "config_class_map"], [5, 3, 1, "", "from_dict"]], "abacusai.api_class.dataset": [[6, 1, 1, "", "ParsingConfig"]], "abacusai.api_class.dataset.ParsingConfig": [[6, 2, 1, "", "csv_delimiter"], [6, 2, 1, "", "escape"], [6, 2, 1, "", "file_path_with_schema"]], "abacusai.api_class.enums": [[7, 1, 1, "", "ApiEnum"], [7, 1, 1, "", "BatchSize"], [7, 1, 1, "", "ClusteringImputationMethod"], [7, 1, 1, "", "ConnectorType"], [7, 1, 1, "", "ExperimentationMode"], [7, 1, 1, "", "FillLogic"], [7, 1, 1, "", "ForecastingDataSplitType"], [7, 1, 1, "", "ForecastingFillMethod"], [7, 1, 1, "", "ForecastingFrequency"], [7, 1, 1, "", "ForecastingLocalScaling"], [7, 1, 1, "", "ForecastingLossFunction"], [7, 1, 1, "", "ForecastingObjective"], [7, 1, 1, "", "ForecastingQuanitlesExtensionMethod"], [7, 1, 1, "", "HolidayCalendars"], [7, 1, 1, "", "MergeMode"], [7, 1, 1, "", "NERModelType"], [7, 1, 1, "", "NERObjective"], [7, 1, 1, "", "NLPDocumentFormat"], [7, 1, 1, "", "PersonalizationObjective"], [7, 1, 1, "", "PersonalizationTrainingMode"], [7, 1, 1, "", "ProblemType"], [7, 1, 1, "", "PythonFunctionArgumentType"], [7, 1, 1, "", "RegressionAugmentationStrategy"], [7, 1, 1, "", "RegressionLossFunction"], [7, 1, 1, "", "RegressionObjective"], [7, 1, 1, "", "RegressionTargetTransform"], [7, 1, 1, "", "RegressionTimeSplitMethod"], [7, 1, 1, "", "RegressionTreeHPOMode"], [7, 1, 1, "", "RegressionTypeOfSplit"], [7, 1, 1, "", "SamplingMethodType"], [7, 1, 1, "", "SentimentType"]], "abacusai.api_class.enums.ApiEnum": [[7, 3, 1, "", "__eq__"], [7, 3, 1, "", "__hash__"]], "abacusai.api_class.enums.BatchSize": [[7, 2, 1, "", "BATCH_1024"], [7, 2, 1, "", "BATCH_128"], [7, 2, 1, "", "BATCH_16"], [7, 2, 1, "", "BATCH_256"], [7, 2, 1, "", "BATCH_32"], [7, 2, 1, "", "BATCH_384"], [7, 2, 1, "", "BATCH_512"], [7, 2, 1, "", "BATCH_64"], [7, 2, 1, "", "BATCH_740"], [7, 2, 1, "", "BATCH_8"]], "abacusai.api_class.enums.ClusteringImputationMethod": [[7, 2, 1, "", "AUTOMATIC"], [7, 2, 1, "", "INTERPOLATE"], [7, 2, 1, "", "ZEROS"]], "abacusai.api_class.enums.ConnectorType": [[7, 2, 1, "", "APPLICATION"], [7, 2, 1, "", "DATABASE"], [7, 2, 1, "", "FILE"], [7, 2, 1, "", "STREAMING"]], "abacusai.api_class.enums.ExperimentationMode": [[7, 2, 1, "", "RAPID"], [7, 2, 1, "", "THOROUGH"]], "abacusai.api_class.enums.FillLogic": [[7, 2, 1, "", "AVERAGE"], [7, 2, 1, "", "BACKFILL"], [7, 2, 1, "", "CUSTOM"], [7, 2, 1, "", "FORWARDFILL"], [7, 2, 1, "", "LINEAR"], [7, 2, 1, "", "MAX"], [7, 2, 1, "", "MEDIAN"], [7, 2, 1, "", "MIN"], [7, 2, 1, "", "NEAREST"]], "abacusai.api_class.enums.ForecastingDataSplitType": [[7, 2, 1, "", "AUTO"], [7, 2, 1, "", "ITEM"], [7, 2, 1, "", "PREDICTION_LENGTH"], [7, 2, 1, "", "TIMESTAMP"]], "abacusai.api_class.enums.ForecastingFillMethod": [[7, 2, 1, "", "BACK"], [7, 2, 1, "", "FUTURE"], [7, 2, 1, "", "MIDDLE"]], "abacusai.api_class.enums.ForecastingFrequency": [[7, 2, 1, "", "DAILY"], [7, 2, 1, "", "HOURLY"], [7, 2, 1, "", "MONTH_END"], [7, 2, 1, "", "MONTH_START"], [7, 2, 1, "", "QUARTER_END"], [7, 2, 1, "", "QUARTER_START"], [7, 2, 1, "", "WEEKLY_MONDAY_START"], [7, 2, 1, "", "WEEKLY_SATURDAY_START"], [7, 2, 1, "", "WEEKLY_SUNDAY_START"], [7, 2, 1, "", "YEARLY"]], "abacusai.api_class.enums.ForecastingLocalScaling": [[7, 2, 1, "", "ITEM"], [7, 2, 1, "", "LAST_POINT"], [7, 2, 1, "", "MIN_MAX"], [7, 2, 1, "", "MIN_STD"], [7, 2, 1, "", "ROBUST"], [7, 2, 1, "", "SLIDING_ZSCORE"], [7, 2, 1, "", "ZSCORE"]], "abacusai.api_class.enums.ForecastingLossFunction": [[7, 2, 1, "", "ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [7, 2, 1, "", "CUSTOM"], [7, 2, 1, "", "GAUSSIAN"], [7, 2, 1, "", "GAUSSIAN_FULL_COVARIANCE"], [7, 2, 1, "", "GUASSIAN_EXPONENTIAL"], [7, 2, 1, "", "LOG_ROOT_MEAN_SQUARE_ERROR"], [7, 2, 1, "", "MEAN_ABSOLUTE_ERROR"], [7, 2, 1, "", "MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [7, 2, 1, "", "MIX_GAUSSIANS"], [7, 2, 1, "", "NEGATIVE_BINOMIAL"], [7, 2, 1, "", "NORMALIZED_MEAN_ABSOLUTE_ERROR"], [7, 2, 1, "", "NORMALIZED_ROOT_MEAN_SQUARE_ERROR"], [7, 2, 1, "", "PEAKS_MEAN_ABSOLUTE_ERROR"], [7, 2, 1, "", "POINTWISE_ACCURACY"], [7, 2, 1, "", "ROOT_MEAN_SQUARE_ERROR"], [7, 2, 1, "", "STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [7, 2, 1, "", "WEIBULL"]], "abacusai.api_class.enums.ForecastingObjective": [[7, 2, 1, "", "ACCURACY"], [7, 2, 1, "", "BIAS"], [7, 2, 1, "", "CMAPE"], [7, 2, 1, "", "CV"], [7, 2, 1, "", "MAPE"], [7, 2, 1, "", "RMSE"], [7, 2, 1, "", "SRMSE"], [7, 2, 1, "", "WAPE"]], "abacusai.api_class.enums.ForecastingQuanitlesExtensionMethod": [[7, 2, 1, "", "ANCESTRAL_SIMULATION"], [7, 2, 1, "", "DIRECT"], [7, 2, 1, "", "QUADRATIC"]], "abacusai.api_class.enums.HolidayCalendars": [[7, 2, 1, "", "AU"], [7, 2, 1, "", "UK"], [7, 2, 1, "", "US"]], "abacusai.api_class.enums.MergeMode": [[7, 2, 1, "", "LAST_N"], [7, 2, 1, "", "TIME_WINDOW"]], "abacusai.api_class.enums.NERModelType": [[7, 2, 1, "", "LEARNED"], [7, 2, 1, "", "PRETRAINED_BERT"], [7, 2, 1, "", "PRETRAINED_MULTILINGUAL"], [7, 2, 1, "", "PRETRAINED_ROBERTA_27"], [7, 2, 1, "", "PRETRAINED_ROBERTA_43"]], "abacusai.api_class.enums.NERObjective": [[7, 2, 1, "", "ANNOTATIONS_PRECISION"], [7, 2, 1, "", "ANNOTATIONS_RECALL"], [7, 2, 1, "", "AUC"], [7, 2, 1, "", "LOG_LOSS"], [7, 2, 1, "", "PRECISION"], [7, 2, 1, "", "RECALL"]], "abacusai.api_class.enums.NLPDocumentFormat": [[7, 2, 1, "", "AUTO"], [7, 2, 1, "", "DOC"], [7, 2, 1, "", "TEXT"], [7, 2, 1, "", "TOKENS"]], "abacusai.api_class.enums.PersonalizationObjective": [[7, 2, 1, "", "COVERAGE"], [7, 2, 1, "", "MAP"], [7, 2, 1, "", "MAP_10"], [7, 2, 1, "", "MAP_5"], [7, 2, 1, "", "MRR"], [7, 2, 1, "", "NDCG"], [7, 2, 1, "", "NDCG_10"], [7, 2, 1, "", "NDCG_5"], [7, 2, 1, "", "PERSONALIZATION"]], "abacusai.api_class.enums.PersonalizationTrainingMode": [[7, 2, 1, "", "EXPERIMENTAL"], [7, 2, 1, "", "PRODUCTION"]], "abacusai.api_class.enums.ProblemType": [[7, 2, 1, "", "AI_AGENT"], [7, 2, 1, "", "ANOMALY_DETECTION"], [7, 2, 1, "", "ANOMALY_OUTLIERS"], [7, 2, 1, "", "CLUSTERING"], [7, 2, 1, "", "CLUSTERING_TIMESERIES"], [7, 2, 1, "", "CUMULATIVE_FORECASTING"], [7, 2, 1, "", "CUSTOM_ALGORITHM"], [7, 2, 1, "", "CUSTOM_TRAINED_MODEL"], [7, 2, 1, "", "DOCUMENT_CLASSIFICATION"], [7, 2, 1, "", "DOCUMENT_SUMMARIZATION"], [7, 2, 1, "", "DOCUMENT_VISUALIZATION"], [7, 2, 1, "", "FEATURE_STORE"], [7, 2, 1, "", "FORECASTING"], [7, 2, 1, "", "IMAGE_CLASSIFICATION"], [7, 2, 1, "", "IMAGE_VALUE_PREDICTION"], [7, 2, 1, "", "LANGUAGE_DETECTION"], [7, 2, 1, "", "MODEL_MONITORING"], [7, 2, 1, "", "NAMED_ENTITY_EXTRACTION"], [7, 2, 1, "", "NATURAL_LANGUAGE_SEARCH"], [7, 2, 1, "", "OBJECT_DETECTION"], [7, 2, 1, "", "OPTIMIZATION"], [7, 2, 1, "", "PERSONALIZATION"], [7, 2, 1, "", "PREDICTIVE_MODELING"], [7, 2, 1, "", "PRETRAINED_MODELS"], [7, 2, 1, "", "SENTENCE_BOUNDARY_DETECTION"], [7, 2, 1, "", "SENTIMENT_DETECTION"], [7, 2, 1, "", "THEME_ANALYSIS"]], "abacusai.api_class.enums.PythonFunctionArgumentType": [[7, 2, 1, "", "BATCH_PREDICTION_ID"], [7, 2, 1, "", "BOOLEAN"], [7, 2, 1, "", "DATASET_ID"], [7, 2, 1, "", "DEPLOYMENT_ID"], [7, 2, 1, "", "FEATURE_GROUP"], [7, 2, 1, "", "FEATURE_GROUP_ID"], [7, 2, 1, "", "FLOAT"], [7, 2, 1, "", "INTEGER"], [7, 2, 1, "", "JSON"], [7, 2, 1, "", "LIST"], [7, 2, 1, "", "MODEL_ID"], [7, 2, 1, "", "MONITOR_ID"], [7, 2, 1, "", "STRING"]], "abacusai.api_class.enums.RegressionAugmentationStrategy": [[7, 2, 1, "", "RESAMPLE"], [7, 2, 1, "", "SMOTE"]], "abacusai.api_class.enums.RegressionLossFunction": [[7, 2, 1, "", "AUTOMATIC"], [7, 2, 1, "", "CROSS_ENTROPY"], [7, 2, 1, "", "CUSTOM"], [7, 2, 1, "", "FOCAL_CROSS_ENTROPY"], [7, 2, 1, "", "HUBER"], [7, 2, 1, "", "MAE"], [7, 2, 1, "", "MAPE"], [7, 2, 1, "", "MSE"], [7, 2, 1, "", "MSLE"], [7, 2, 1, "", "TWEEDIE"]], "abacusai.api_class.enums.RegressionObjective": [[7, 2, 1, "", "ACCURACY"], [7, 2, 1, "", "AUC"], [7, 2, 1, "", "F1_SCORE"], [7, 2, 1, "", "LOG_LOSS"], [7, 2, 1, "", "MAE"], [7, 2, 1, "", "MAPE"], [7, 2, 1, "", "PRECISION"], [7, 2, 1, "", "RECALL"], [7, 2, 1, "", "RMSE"], [7, 2, 1, "", "R_SQUARED_COEFFICIENT_OF_DETERMINATION"], [7, 2, 1, "", "WAPE"]], "abacusai.api_class.enums.RegressionTargetTransform": [[7, 2, 1, "", "BOX_COX"], [7, 2, 1, "", "LOG"], [7, 2, 1, "", "QUANTILE"], [7, 2, 1, "", "YEO_JOHNSON"]], "abacusai.api_class.enums.RegressionTimeSplitMethod": [[7, 2, 1, "", "TEST_SPLIT_PERCENTAGE_BASED"], [7, 2, 1, "", "TEST_START_TIMESTAMP_BASED"]], "abacusai.api_class.enums.RegressionTreeHPOMode": [[7, 2, 1, "", "RAPID"], [7, 2, 1, "", "THOROUGH"]], "abacusai.api_class.enums.RegressionTypeOfSplit": [[7, 2, 1, "", "RANDOM"], [7, 2, 1, "", "ROW_INDICATOR_BASED"], [7, 2, 1, "", "TIMESTAMP_BASED"]], "abacusai.api_class.enums.SamplingMethodType": [[7, 2, 1, "", "N_SAMPLING"], [7, 2, 1, "", "PERCENT_SAMPLING"]], "abacusai.api_class.enums.SentimentType": [[7, 2, 1, "", "EMOTION"], [7, 2, 1, "", "VALENCE"]], "abacusai.api_class.feature_group": [[8, 1, 1, "", "LastNMergeConfig"], [8, 1, 1, "", "MergeConfig"], [8, 1, 1, "", "NSamplingConfig"], [8, 1, 1, "", "PercentSamplingConfig"], [8, 1, 1, "", "SamplingConfig"], [8, 1, 1, "", "TimeWindowMergeConfig"], [8, 1, 1, "", "_MergeConfigFactory"], [8, 1, 1, "", "_SamplingConfigFactory"]], "abacusai.api_class.feature_group.LastNMergeConfig": [[8, 2, 1, "", "merge_mode"], [8, 2, 1, "", "num_versions"]], "abacusai.api_class.feature_group.MergeConfig": [[8, 3, 1, "", "__post_init__"]], "abacusai.api_class.feature_group.NSamplingConfig": [[8, 2, 1, "", "key_columns"], [8, 2, 1, "", "sample_count"], [8, 2, 1, "", "sampling_method"]], "abacusai.api_class.feature_group.PercentSamplingConfig": [[8, 2, 1, "", "key_columns"], [8, 2, 1, "", "sample_percent"], [8, 2, 1, "", "sampling_method"]], "abacusai.api_class.feature_group.SamplingConfig": [[8, 3, 1, "", "__post_init__"]], "abacusai.api_class.feature_group.TimeWindowMergeConfig": [[8, 2, 1, "", "feature_name"], [8, 2, 1, "", "merge_mode"], [8, 2, 1, "", "time_window_size_ms"]], "abacusai.api_class.feature_group._MergeConfigFactory": [[8, 2, 1, "", "config_class_key"], [8, 2, 1, "", "config_class_map"]], "abacusai.api_class.feature_group._SamplingConfigFactory": [[8, 2, 1, "", "config_class_key"], [8, 2, 1, "", "config_class_map"]], "abacusai.api_class.model": [[10, 1, 1, "", "AIAgentTrainingConfig"], [10, 1, 1, "", "AnomalyDetectionTrainingConfig"], [10, 1, 1, "", "ClusteringTimeseriesTrainingConfig"], [10, 1, 1, "", "ClusteringTrainingConfig"], [10, 1, 1, "", "CumulativeForecastingTrainingConfig"], [10, 1, 1, "", "CustomAlgorithmTrainingConfig"], [10, 1, 1, "", "CustomTrainedModelTrainingConfig"], [10, 1, 1, "", "DocumentClassificationTrainingConfig"], [10, 1, 1, "", "DocumentSummarizationTrainingConfig"], [10, 1, 1, "", "DocumentVisualizationTrainingConfig"], [10, 1, 1, "", "ForecastingTrainingConfig"], [10, 1, 1, "", "NamedEntityExtractionTrainingConfig"], [10, 1, 1, "", "NaturalLanguageSearchTrainingConfig"], [10, 1, 1, "", "OptimizationTrainingConfig"], [10, 1, 1, "", "PersonalizationTrainingConfig"], [10, 1, 1, "", "RegressionTrainingConfig"], [10, 1, 1, "", "SentenceBoundaryDetectionTrainingConfig"], [10, 1, 1, "", "SentimentDetectionTrainingConfig"], [10, 1, 1, "", "ThemeAnalysisTrainingConfig"], [10, 1, 1, "", "TrainingConfig"], [10, 1, 1, "", "_TrainingConfigFactory"]], "abacusai.api_class.model.AIAgentTrainingConfig": [[10, 2, 1, "", "description"], [10, 2, 1, "", "problem_type"]], "abacusai.api_class.model.AnomalyDetectionTrainingConfig": [[10, 2, 1, "", "mixture_of_gaussians"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "spike_down"], [10, 2, 1, "", "spike_up"], [10, 2, 1, "", "test_split"], [10, 2, 1, "", "trend_change"], [10, 2, 1, "", "value_high"], [10, 2, 1, "", "variational_autoencoder"]], "abacusai.api_class.model.ClusteringTimeseriesTrainingConfig": [[10, 2, 1, "", "imputation"], [10, 2, 1, "", "num_clusters_selection"], [10, 2, 1, "", "problem_type"]], "abacusai.api_class.model.ClusteringTrainingConfig": [[10, 2, 1, "", "num_clusters_selection"], [10, 2, 1, "", "problem_type"]], "abacusai.api_class.model.CumulativeForecastingTrainingConfig": [[10, 2, 1, "", "cumulative_prediction_lengths"], [10, 2, 1, "", "historical_frequency"], [10, 2, 1, "", "predict_residuals"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "skip_input_transform"], [10, 2, 1, "", "skip_target_transform"], [10, 2, 1, "", "test_split"]], "abacusai.api_class.model.CustomAlgorithmTrainingConfig": [[10, 2, 1, "", "predict_function_name"], [10, 2, 1, "", "predict_many_function_name"], [10, 2, 1, "", "predict_module_name"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "test_split"], [10, 2, 1, "", "train_function_name"], [10, 2, 1, "", "train_module_name"], [10, 2, 1, "", "training_input_tables"]], "abacusai.api_class.model.CustomTrainedModelTrainingConfig": [[10, 2, 1, "", "docker_image_uri"], [10, 2, 1, "", "index_output_path"], [10, 2, 1, "", "max_catalog_size"], [10, 2, 1, "", "max_dimension"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "service_port"]], "abacusai.api_class.model.DocumentClassificationTrainingConfig": [[10, 2, 1, "", "batch_size"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "test_split"], [10, 2, 1, "", "zero_shot_hypotheses"]], "abacusai.api_class.model.DocumentSummarizationTrainingConfig": [[10, 2, 1, "", "batch_size"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "test_split"]], "abacusai.api_class.model.DocumentVisualizationTrainingConfig": [[10, 2, 1, "", "batch_size"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "test_split"]], "abacusai.api_class.model.ForecastingTrainingConfig": [[10, 2, 1, "", "additional_forecast_keys"], [10, 2, 1, "", "backtesting_window_step_size"], [10, 2, 1, "", "batch_renormalization"], [10, 2, 1, "", "batch_size"], [10, 2, 1, "", "convolution_filters"], [10, 2, 1, "", "convolutional_layers"], [10, 2, 1, "", "custom_loss_functions"], [10, 2, 1, "", "custom_metrics"], [10, 2, 1, "", "data_split_feature_group_table_name"], [10, 2, 1, "", "datetime_holiday_calendars"], [10, 2, 1, "", "disable_networks_without_analytic_quantiles"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "enable_clustering"], [10, 2, 1, "", "enable_cold_start"], [10, 2, 1, "", "enable_feature_selection"], [10, 2, 1, "", "enable_multiple_backtests"], [10, 2, 1, "", "experimentation_mode"], [10, 2, 1, "", "fill_missing_values"], [10, 2, 1, "", "filter_items"], [10, 2, 1, "", "force_prediction_length"], [10, 2, 1, "", "forecast_frequency"], [10, 2, 1, "", "full_data_retraining"], [10, 2, 1, "", "handle_zeros_as_missing_values"], [10, 2, 1, "", "history_length"], [10, 2, 1, "", "initial_learning_rate"], [10, 2, 1, "", "item_attributes_weight_column"], [10, 2, 1, "", "l2_regularization_factor"], [10, 2, 1, "", "local_scaling_mode"], [10, 2, 1, "", "loss_function"], [10, 2, 1, "", "max_scale_context"], [10, 2, 1, "", "num_backtesting_windows"], [10, 2, 1, "", "number_of_samples"], [10, 2, 1, "", "objective"], [10, 2, 1, "", "prediction_length"], [10, 2, 1, "", "prediction_step_size"], [10, 2, 1, "", "probability_quantiles"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "quantiles_extension_method"], [10, 2, 1, "", "recurrent_layers"], [10, 2, 1, "", "recurrent_units"], [10, 2, 1, "", "skip_local_scale_target"], [10, 2, 1, "", "skip_missing"], [10, 2, 1, "", "skip_timeseries_weight_scaling"], [10, 2, 1, "", "smooth_history"], [10, 2, 1, "", "sort_objective"], [10, 2, 1, "", "symmetrize_quantiles"], [10, 2, 1, "", "test_by_item"], [10, 2, 1, "", "test_split"], [10, 2, 1, "", "test_start"], [10, 2, 1, "", "timeseries_loss_weight_column"], [10, 2, 1, "", "timeseries_weight_column"], [10, 2, 1, "", "training_point_overlap"], [10, 2, 1, "", "type_of_split"], [10, 2, 1, "", "underprediction_weight"], [10, 2, 1, "", "use_all_item_totals"], [10, 2, 1, "", "use_item_id"], [10, 2, 1, "", "use_item_weights_in_objective"], [10, 2, 1, "", "use_log_transforms"], [10, 2, 1, "", "use_timeseries_weights_in_objective"], [10, 2, 1, "", "zero_predictor"]], "abacusai.api_class.model.NamedEntityExtractionTrainingConfig": [[10, 2, 1, "", "active_labels_column"], [10, 2, 1, "", "batch_size"], [10, 2, 1, "", "document_format"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "include_longformer"], [10, 2, 1, "", "ner_model_type"], [10, 2, 1, "", "objective"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "sort_objective"], [10, 2, 1, "", "test_row_indicator"], [10, 2, 1, "", "test_split"]], "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig": [[10, 2, 1, "", "abacus_internal_model"], [10, 2, 1, "", "chunk_overlap_fraction"], [10, 2, 1, "", "index_fraction"], [10, 2, 1, "", "larger_embeddings"], [10, 2, 1, "", "num_completion_tokens"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "search_chunk_size"]], "abacusai.api_class.model.OptimizationTrainingConfig": [[10, 2, 1, "", "problem_type"]], "abacusai.api_class.model.PersonalizationTrainingConfig": [[10, 2, 1, "", "add_time_features"], [10, 2, 1, "", "batch_size"], [10, 2, 1, "", "compute_rerank_metrics"], [10, 2, 1, "", "compute_session_metrics"], [10, 2, 1, "", "data_split_feature_group_table_name"], [10, 2, 1, "", "disable_gpu"], [10, 2, 1, "", "disable_timestamp_scalar_features"], [10, 2, 1, "", "disable_transformer"], [10, 2, 1, "", "downsample_item_popularity_percentile"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "explicit_time_split"], [10, 2, 1, "", "explore_lookback_hours"], [10, 2, 1, "", "filter_history"], [10, 2, 1, "", "full_data_retraining"], [10, 2, 1, "", "item_id_dropout"], [10, 2, 1, "", "max_history_length"], [10, 2, 1, "", "max_user_history_len_percentile"], [10, 2, 1, "", "objective"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "recent_days_for_training"], [10, 2, 1, "", "sequential_training"], [10, 2, 1, "", "session_event_types"], [10, 2, 1, "", "sort_objective"], [10, 2, 1, "", "target_action_types"], [10, 2, 1, "", "target_action_weights"], [10, 2, 1, "", "test_last_items_length"], [10, 2, 1, "", "test_on_user_split"], [10, 2, 1, "", "test_row_indicator"], [10, 2, 1, "", "test_split"], [10, 2, 1, "", "test_split_on_last_k_items"], [10, 2, 1, "", "test_window_length_hours"], [10, 2, 1, "", "training_mode"], [10, 2, 1, "", "training_start_date"]], "abacusai.api_class.model.RegressionTrainingConfig": [[10, 2, 1, "", "active_labels_column"], [10, 2, 1, "", "augmentation_strategy"], [10, 2, 1, "", "batch_size"], [10, 2, 1, "", "custom_loss_functions"], [10, 2, 1, "", "custom_metrics"], [10, 2, 1, "", "data_split_feature_group_table_name"], [10, 2, 1, "", "disable_test_val_fold"], [10, 2, 1, "", "drop_original_categoricals"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "feature_selection_intensity"], [10, 2, 1, "", "ignore_datetime_features"], [10, 2, 1, "", "is_multilingual"], [10, 2, 1, "", "k_fold_cross_validation"], [10, 2, 1, "", "loss_function"], [10, 2, 1, "", "loss_parameters"], [10, 2, 1, "", "max_text_words"], [10, 2, 1, "", "min_categorical_count"], [10, 2, 1, "", "num_cv_folds"], [10, 2, 1, "", "numeric_clipping_percentile"], [10, 2, 1, "", "objective"], [10, 2, 1, "", "perform_feature_selection"], [10, 2, 1, "", "pretrained_model_name"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "rare_class_augmentation_threshold"], [10, 2, 1, "", "rebalance_classes"], [10, 2, 1, "", "sample_weight"], [10, 2, 1, "", "sampling_unit_keys"], [10, 2, 1, "", "sort_objective"], [10, 2, 1, "", "target_encode_categoricals"], [10, 2, 1, "", "target_transform"], [10, 2, 1, "", "test_row_indicator"], [10, 2, 1, "", "test_split"], [10, 2, 1, "", "test_splitting_timestamp"], [10, 2, 1, "", "timestamp_based_splitting_column"], [10, 2, 1, "", "timestamp_based_splitting_method"], [10, 2, 1, "", "training_rows_downsample_ratio"], [10, 2, 1, "", "tree_hpo_mode"], [10, 2, 1, "", "type_of_split"]], "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig": [[10, 2, 1, "", "batch_size"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "test_split"]], "abacusai.api_class.model.SentimentDetectionTrainingConfig": [[10, 2, 1, "", "batch_size"], [10, 2, 1, "", "compute_metrics"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "sentiment_type"], [10, 2, 1, "", "test_split"]], "abacusai.api_class.model.ThemeAnalysisTrainingConfig": [[10, 2, 1, "", "problem_type"]], "abacusai.api_class.model.TrainingConfig": [[10, 2, 1, "", "_support_kwargs"], [10, 2, 1, "", "_upper_snake_case_keys"], [10, 2, 1, "", "kwargs"], [10, 2, 1, "", "problem_type"]], "abacusai.api_class.model._TrainingConfigFactory": [[10, 2, 1, "", "config_abstract_class"], [10, 2, 1, "", "config_class_key"], [10, 2, 1, "", "config_class_map"]], "abacusai.api_class.project": [[11, 1, 1, "", "FeatureMappingConfig"], [11, 1, 1, "", "ProjectFeatureGroupTypeMappingsConfig"]], "abacusai.api_class.project.FeatureMappingConfig": [[11, 2, 1, "", "feature_name"], [11, 2, 1, "", "feature_type"], [11, 2, 1, "", "nested_feature_name"]], "abacusai.api_class.project.ProjectFeatureGroupTypeMappingsConfig": [[11, 2, 1, "", "feature_group_id"], [11, 2, 1, "", "feature_group_type"], [11, 2, 1, "", "feature_mappings"], [11, 3, 1, "", "from_dict"]], "abacusai.api_class.python_functions": [[12, 1, 1, "", "OutputVariableMapping"], [12, 1, 1, "", "PythonFunctionArgument"]], "abacusai.api_class.python_functions.OutputVariableMapping": [[12, 2, 1, "", "name"], [12, 2, 1, "", "variable_type"]], "abacusai.api_class.python_functions.PythonFunctionArgument": [[12, 2, 1, "", "is_required"], [12, 2, 1, "", "name"], [12, 2, 1, "", "pipeline_variable"], [12, 2, 1, "", "value"], [12, 2, 1, "", "variable_type"]], "abacusai.api_class.refresh": [[13, 1, 1, "", "DatabaseConnectorExportConfig"], [13, 1, 1, "", "FeatureGroupExportConfig"], [13, 1, 1, "", "FileConnectorExportConfig"], [13, 1, 1, "", "_FeatureGroupExportConfigFactory"]], "abacusai.api_class.refresh.DatabaseConnectorExportConfig": [[13, 2, 1, "", "additional_id_columns"], [13, 2, 1, "", "connector_type"], [13, 2, 1, "", "data_columns"], [13, 2, 1, "", "database_connector_id"], [13, 2, 1, "", "id_column"], [13, 2, 1, "", "mode"], [13, 2, 1, "", "object_name"], [13, 3, 1, "", "to_dict"]], "abacusai.api_class.refresh.FeatureGroupExportConfig": [[13, 2, 1, "", "connector_type"]], "abacusai.api_class.refresh.FileConnectorExportConfig": [[13, 2, 1, "", "connector_type"], [13, 2, 1, "", "export_file_format"], [13, 2, 1, "", "location"], [13, 3, 1, "", "to_dict"]], "abacusai.api_class.refresh._FeatureGroupExportConfigFactory": [[13, 2, 1, "", "config_abstract_class"], [13, 2, 1, "", "config_class_key"], [13, 2, 1, "", "config_class_map"]], "abacusai.api_client_utils": [[14, 5, 1, "", "INVALID_PANDAS_COLUMN_NAME_CHARACTERS"], [14, 6, 1, "", "avro_to_pandas_dtype"], [14, 6, 1, "", "clean_column_name"], [14, 6, 1, "", "get_clean_function_source_code"], [14, 6, 1, "", "get_non_nullable_type"], [14, 6, 1, "", "get_object_from_context"]], "abacusai.api_endpoint": [[15, 1, 1, "", "ApiEndpoint"]], "abacusai.api_endpoint.ApiEndpoint": [[15, 3, 1, "", "__repr__"], [15, 3, 1, "", "to_dict"]], "abacusai.api_key": [[16, 1, 1, "", "ApiKey"]], "abacusai.api_key.ApiKey": [[16, 3, 1, "", "__repr__"], [16, 3, 1, "", "delete"], [16, 3, 1, "", "to_dict"]], "abacusai.application_connector": [[17, 1, 1, "", "ApplicationConnector"]], "abacusai.application_connector.ApplicationConnector": [[17, 3, 1, "", "__repr__"], [17, 3, 1, "", "delete"], [17, 3, 1, "", "list_objects"], [17, 3, 1, "", "rename"], [17, 3, 1, "", "to_dict"], [17, 3, 1, "", "verify"]], "abacusai.batch_prediction": [[18, 1, 1, "", "BatchPrediction"]], "abacusai.batch_prediction.BatchPrediction": [[18, 3, 1, "", "__repr__"], [18, 3, 1, "", "create_refresh_policy"], [18, 3, 1, "", "delete"], [18, 3, 1, "", "describe"], [18, 3, 1, "", "describe_output_feature_group"], [18, 3, 1, "", "get_status"], [18, 3, 1, "", "list_refresh_policies"], [18, 3, 1, "", "list_versions"], [18, 3, 1, "", "refresh"], [18, 3, 1, "", "set_database_connector_output"], [18, 3, 1, "", "set_dataset"], [18, 3, 1, "", "set_dataset_remap"], [18, 3, 1, "", "set_feature_group"], [18, 3, 1, "", "set_feature_group_output"], [18, 3, 1, "", "set_file_connector_output"], [18, 3, 1, "", "set_output_to_console"], [18, 3, 1, "", "start"], [18, 3, 1, "", "to_dict"], [18, 3, 1, "", "update"], [18, 3, 1, "", "wait_for_drift_monitor"], [18, 3, 1, "", "wait_for_predictions"]], "abacusai.batch_prediction_version": [[19, 1, 1, "", "BatchPredictionVersion"]], "abacusai.batch_prediction_version.BatchPredictionVersion": [[19, 3, 1, "", "__repr__"], [19, 3, 1, "", "describe"], [19, 3, 1, "", "download_batch_prediction_result_chunk"], [19, 3, 1, "", "download_result_to_file"], [19, 3, 1, "", "get_batch_prediction_connector_errors"], [19, 3, 1, "", "get_outliers_for_batch_prediction_feature"], [19, 3, 1, "", "get_status"], [19, 3, 1, "", "refresh"], [19, 3, 1, "", "to_dict"], [19, 3, 1, "", "wait_for_drift_monitor"], [19, 3, 1, "", "wait_for_predictions"]], "abacusai.categorical_range_violation": [[20, 1, 1, "", "CategoricalRangeViolation"]], "abacusai.categorical_range_violation.CategoricalRangeViolation": [[20, 3, 1, "", "__repr__"], [20, 3, 1, "", "to_dict"]], "abacusai.chat_message": [[21, 1, 1, "", "ChatMessage"]], "abacusai.chat_message.ChatMessage": [[21, 3, 1, "", "__repr__"], [21, 3, 1, "", "to_dict"]], "abacusai.chat_session": [[22, 1, 1, "", "ChatSession"]], "abacusai.chat_session.ChatSession": [[22, 3, 1, "", "__repr__"], [22, 3, 1, "", "get"], [22, 3, 1, "", "to_dict"]], "abacusai.client": [[23, 1, 1, "", "ApiClient"], [23, 4, 1, "", "ApiException"], [23, 1, 1, "", "BaseApiClient"], [23, 1, 1, "", "ClientOptions"], [23, 5, 1, "", "DEFAULT_SERVER"], [23, 1, 1, "", "ReadOnlyClient"], [23, 5, 1, "", "_cached_endpoints"], [23, 6, 1, "", "_discover_service_url"], [23, 5, 1, "", "_request_context"], [23, 6, 1, "", "_requests_retry_session"], [23, 6, 1, "", "get_module_code_from_notebook"], [23, 6, 1, "", "get_source_code_info"], [23, 6, 1, "", "include_modules"]], "abacusai.client.ApiClient": [[23, 3, 1, "", "_call_aiagent_asyncapp_sync_message"], [23, 3, 1, "", "_get_agent_async_app_caller"], [23, 3, 1, "", "_get_agent_async_app_request_id"], [23, 3, 1, "", "_stream_llm_call"], [23, 3, 1, "", "add_annotatable_feature"], [23, 3, 1, "", "add_annotation"], [23, 3, 1, "", "add_feature_group_annotation_label"], [23, 3, 1, "", "add_feature_group_tag"], [23, 3, 1, "", "add_feature_group_to_project"], [23, 3, 1, "", "add_feature_tag"], [23, 3, 1, "", "add_graph_to_dashboard"], [23, 3, 1, "", "add_multiple_user_item_interactions"], [23, 3, 1, "", "add_organization_group_permission"], [23, 3, 1, "", "add_organization_group_to_feature_group_modifiers"], [23, 3, 1, "", "add_project_tags"], [23, 3, 1, "", "add_user_item_interaction"], [23, 3, 1, "", "add_user_to_feature_group_modifiers"], [23, 3, 1, "", "add_user_to_organization"], [23, 3, 1, "", "add_user_to_organization_group"], [23, 3, 1, "", "append_data"], [23, 3, 1, "", "append_multiple_data"], [23, 3, 1, "", "attach_dataset_to_project"], [23, 3, 1, "", "cancel_upload"], [23, 3, 1, "", "check_constraints"], [23, 3, 1, "", "classify_image"], [23, 3, 1, "", "classify_pdf"], [23, 3, 1, "", "clear_agent_context"], [23, 3, 1, "", "concatenate_feature_group_data"], [23, 3, 1, "", "create_agent"], [23, 3, 1, "", "create_agent_from_function"], [23, 3, 1, "", "create_algorithm"], [23, 3, 1, "", "create_algorithm_from_function"], [23, 3, 1, "", "create_batch_prediction"], [23, 3, 1, "", "create_chat_session"], [23, 3, 1, "", "create_custom_loss_function"], [23, 3, 1, "", "create_custom_loss_function_with_source_code"], [23, 3, 1, "", "create_custom_metric"], [23, 3, 1, "", "create_custom_metric_from_function"], [23, 3, 1, "", "create_dataset_from_application_connector"], [23, 3, 1, "", "create_dataset_from_database_connector"], [23, 3, 1, "", "create_dataset_from_file_connector"], [23, 3, 1, "", "create_dataset_from_pandas"], [23, 3, 1, "", "create_dataset_from_streaming_connector"], [23, 3, 1, "", "create_dataset_from_upload"], [23, 3, 1, "", "create_dataset_version_from_application_connector"], [23, 3, 1, "", "create_dataset_version_from_database_connector"], [23, 3, 1, "", "create_dataset_version_from_file_connector"], [23, 3, 1, "", "create_dataset_version_from_pandas"], [23, 3, 1, "", "create_dataset_version_from_upload"], [23, 3, 1, "", "create_deployment"], [23, 3, 1, "", "create_deployment_token"], [23, 3, 1, "", "create_deployment_webhook"], [23, 3, 1, "", "create_eda"], [23, 3, 1, "", "create_feature"], [23, 3, 1, "", "create_feature_group"], [23, 3, 1, "", "create_feature_group_from_function"], [23, 3, 1, "", "create_feature_group_from_pandas_df"], [23, 3, 1, "", "create_feature_group_from_python_function"], [23, 3, 1, "", "create_feature_group_from_spark_df"], [23, 3, 1, "", "create_feature_group_from_template"], [23, 3, 1, "", "create_feature_group_template"], [23, 3, 1, "", "create_feature_group_version"], [23, 3, 1, "", "create_graph_dashboard"], [23, 3, 1, "", "create_merge_feature_group"], [23, 3, 1, "", "create_model_from_functions"], [23, 3, 1, "", "create_model_from_python"], [23, 3, 1, "", "create_model_monitor"], [23, 3, 1, "", "create_module"], [23, 3, 1, "", "create_module_from_notebook"], [23, 3, 1, "", "create_monitor_alert"], [23, 3, 1, "", "create_nested_feature"], [23, 3, 1, "", "create_nlp_drift_monitor"], [23, 3, 1, "", "create_organization_group"], [23, 3, 1, "", "create_pipeline"], [23, 3, 1, "", "create_pipeline_step"], [23, 3, 1, "", "create_pipeline_step_from_function"], [23, 3, 1, "", "create_point_in_time_feature"], [23, 3, 1, "", "create_point_in_time_group"], [23, 3, 1, "", "create_point_in_time_group_feature"], [23, 3, 1, "", "create_project"], [23, 3, 1, "", "create_python_function"], [23, 3, 1, "", "create_refresh_policy"], [23, 3, 1, "", "create_sampling_feature_group"], [23, 3, 1, "", "create_snapshot_feature_group"], [23, 3, 1, "", "create_spark_df_from_feature_group_version"], [23, 3, 1, "", "create_streaming_dataset"], [23, 3, 1, "", "create_streaming_token"], [23, 3, 1, "", "create_train_test_data_split_feature_group"], [23, 3, 1, "", "create_transform_feature_group"], [23, 3, 1, "", "create_vector_store"], [23, 3, 1, "", "create_vector_store_version"], [23, 3, 1, "", "create_vision_drift_monitor"], [23, 3, 1, "", "delete_algorithm"], [23, 3, 1, "", "delete_api_key"], [23, 3, 1, "", "delete_application_connector"], [23, 3, 1, "", "delete_batch_prediction"], [23, 3, 1, "", "delete_custom_loss_function"], [23, 3, 1, "", "delete_custom_metric"], [23, 3, 1, "", "delete_database_connector"], [23, 3, 1, "", "delete_dataset"], [23, 3, 1, "", "delete_deployment"], [23, 3, 1, "", "delete_deployment_token"], [23, 3, 1, "", "delete_eda"], [23, 3, 1, "", "delete_eda_version"], [23, 3, 1, "", "delete_feature"], [23, 3, 1, "", "delete_feature_group"], [23, 3, 1, "", "delete_feature_group_template"], [23, 3, 1, "", "delete_file_connector"], [23, 3, 1, "", "delete_graph_dashboard"], [23, 3, 1, "", "delete_item_embeddings"], [23, 3, 1, "", "delete_model"], [23, 3, 1, "", "delete_model_monitor"], [23, 3, 1, "", "delete_model_monitor_version"], [23, 3, 1, "", "delete_model_version"], [23, 3, 1, "", "delete_module"], [23, 3, 1, "", "delete_monitor_alert"], [23, 3, 1, "", "delete_nested_feature"], [23, 3, 1, "", "delete_organization_group"], [23, 3, 1, "", "delete_pipeline"], [23, 3, 1, "", "delete_pipeline_step"], [23, 3, 1, "", "delete_point_in_time_group"], [23, 3, 1, "", "delete_project"], [23, 3, 1, "", "delete_python_function"], [23, 3, 1, "", "delete_refresh_policy"], [23, 3, 1, "", "delete_streaming_connector"], [23, 3, 1, "", "delete_streaming_token"], [23, 3, 1, "", "delete_vector_store"], [23, 3, 1, "", "delete_webhook"], [23, 3, 1, "", "describe_annotation"], [23, 3, 1, "", "describe_async_feature_group_operation"], [23, 3, 1, "", "describe_image"], [23, 3, 1, "", "describe_pipeline"], [23, 3, 1, "", "describe_pipeline_by_name"], [23, 3, 1, "", "detach_feature_group_from_template"], [23, 3, 1, "", "evaluate_prompt"], [23, 3, 1, "", "execute_agent"], [23, 3, 1, "", "execute_feature_group_sql"], [23, 3, 1, "", "export_feature_group_version_to_console"], [23, 3, 1, "", "export_feature_group_version_to_database_connector"], [23, 3, 1, "", "export_feature_group_version_to_file_connector"], [23, 3, 1, "", "export_model_artifact_as_feature_group"], [23, 3, 1, "", "generate_image"], [23, 3, 1, "", "get_agent_context_chat_history"], [23, 3, 1, "", "get_alternative_assignments"], [23, 3, 1, "", "get_anomalies"], [23, 3, 1, "", "get_assignments"], [23, 3, 1, "", "get_chat_response"], [23, 3, 1, "", "get_classification"], [23, 3, 1, "", "get_cluster"], [23, 3, 1, "", "get_custom_train_function_info"], [23, 3, 1, "", "get_document_to_annotate"], [23, 3, 1, "", "get_entailment"], [23, 3, 1, "", "get_entities_from_pdf"], [23, 3, 1, "", "get_forecast"], [23, 3, 1, "", "get_k_nearest"], [23, 3, 1, "", "get_labels"], [23, 3, 1, "", "get_llm_parameters"], [23, 3, 1, "", "get_multiple_k_nearest"], [23, 3, 1, "", "get_notebook_cell_completion"], [23, 3, 1, "", "get_objects_from_image"], [23, 3, 1, "", "get_personalized_ranking"], [23, 3, 1, "", "get_ranked_items"], [23, 3, 1, "", "get_recommendations"], [23, 3, 1, "", "get_related_items"], [23, 3, 1, "", "get_search_results"], [23, 3, 1, "", "get_sentiment"], [23, 3, 1, "", "get_summary"], [23, 3, 1, "", "get_train_function_input"], [23, 3, 1, "", "get_train_function_input_from_model_version"], [23, 3, 1, "", "get_training_config_options"], [23, 3, 1, "", "import_annotation_labels"], [23, 3, 1, "", "import_module"], [23, 3, 1, "", "invalidate_streaming_feature_group_data"], [23, 3, 1, "", "is_anomaly"], [23, 3, 1, "", "list_builtin_algorithms"], [23, 3, 1, "", "list_pipeline_versions"], [23, 3, 1, "", "lookup_features"], [23, 3, 1, "", "lookup_vector_store"], [23, 3, 1, "", "mark_upload_complete"], [23, 3, 1, "", "pause_refresh_policy"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "predict_churn"], [23, 3, 1, "", "predict_class"], [23, 3, 1, "", "predict_fraud"], [23, 3, 1, "", "predict_from_datasets"], [23, 3, 1, "", "predict_language"], [23, 3, 1, "", "predict_lead"], [23, 3, 1, "", "predict_multiple"], [23, 3, 1, "", "predict_takeover"], [23, 3, 1, "", "predict_target"], [23, 3, 1, "", "predict_with_binary_data"], [23, 3, 1, "", "preview_feature_group_template_resolution"], [23, 3, 1, "", "remove_column_mapping"], [23, 3, 1, "", "remove_concatenation_config"], [23, 3, 1, "", "remove_dataset_from_project"], [23, 3, 1, "", "remove_deployment_feature_group_export_output"], [23, 3, 1, "", "remove_feature_group_annotation_label"], [23, 3, 1, "", "remove_feature_group_from_project"], [23, 3, 1, "", "remove_feature_group_tag"], [23, 3, 1, "", "remove_feature_tag"], [23, 3, 1, "", "remove_organization_group_from_feature_group_modifiers"], [23, 3, 1, "", "remove_organization_group_permission"], [23, 3, 1, "", "remove_project_tags"], [23, 3, 1, "", "remove_user_from_feature_group_modifiers"], [23, 3, 1, "", "remove_user_from_organization"], [23, 3, 1, "", "remove_user_from_organization_group"], [23, 3, 1, "", "rename_application_connector"], [23, 3, 1, "", "rename_database_connector"], [23, 3, 1, "", "rename_deployment"], [23, 3, 1, "", "rename_eda"], [23, 3, 1, "", "rename_model"], [23, 3, 1, "", "rename_model_monitor"], [23, 3, 1, "", "rename_project"], [23, 3, 1, "", "rename_streaming_connector"], [23, 3, 1, "", "render_feature_groups_for_llm"], [23, 3, 1, "", "rerun_eda"], [23, 3, 1, "", "rerun_model_monitor"], [23, 3, 1, "", "resume_refresh_policy"], [23, 3, 1, "", "retrain_model"], [23, 3, 1, "", "run_monitor_alert"], [23, 3, 1, "", "run_pipeline"], [23, 3, 1, "", "run_refresh_policy"], [23, 3, 1, "", "score_image"], [23, 3, 1, "", "set_agent_context_chat_history"], [23, 3, 1, "", "set_annotation_status_feature"], [23, 3, 1, "", "set_auto_deployment"], [23, 3, 1, "", "set_azure_blob_connection_string"], [23, 3, 1, "", "set_batch_prediction_database_connector_output"], [23, 3, 1, "", "set_batch_prediction_dataset"], [23, 3, 1, "", "set_batch_prediction_dataset_remap"], [23, 3, 1, "", "set_batch_prediction_feature_group"], [23, 3, 1, "", "set_batch_prediction_feature_group_output"], [23, 3, 1, "", "set_batch_prediction_file_connector_output"], [23, 3, 1, "", "set_batch_prediction_output_to_console"], [23, 3, 1, "", "set_column_data_type"], [23, 3, 1, "", "set_column_mapping"], [23, 3, 1, "", "set_dataset_column_data_type"], [23, 3, 1, "", "set_default_organization_group"], [23, 3, 1, "", "set_deployment_feature_group_export_database_connector_output"], [23, 3, 1, "", "set_deployment_feature_group_export_file_connector_output"], [23, 3, 1, "", "set_deployment_feature_group_version"], [23, 3, 1, "", "set_deployment_model_version"], [23, 3, 1, "", "set_feature_as_annotatable_feature"], [23, 3, 1, "", "set_feature_group_indexing_config"], [23, 3, 1, "", "set_feature_group_merge_config"], [23, 3, 1, "", "set_feature_group_modifier_lock"], [23, 3, 1, "", "set_feature_group_sampling_config"], [23, 3, 1, "", "set_feature_group_schema"], [23, 3, 1, "", "set_feature_group_transform_config"], [23, 3, 1, "", "set_feature_group_type"], [23, 3, 1, "", "set_feature_mapping"], [23, 3, 1, "", "set_feature_type"], [23, 3, 1, "", "set_model_prediction_params"], [23, 3, 1, "", "set_model_training_config"], [23, 3, 1, "", "set_natural_language_explanation"], [23, 3, 1, "", "set_project_feature_group_config"], [23, 3, 1, "", "set_streaming_retention_policy"], [23, 3, 1, "", "snapshot_streaming_data"], [23, 3, 1, "", "start_batch_prediction"], [23, 3, 1, "", "start_deployment"], [23, 3, 1, "", "stop_deployment"], [23, 3, 1, "", "stream_message"], [23, 3, 1, "", "streaming_evaluate_prompt"], [23, 3, 1, "", "train_model"], [23, 3, 1, "", "transcribe_audio"], [23, 3, 1, "", "transfer_style"], [23, 3, 1, "", "unset_feature_as_annotatable_feature"], [23, 3, 1, "", "update_agent"], [23, 3, 1, "", "update_agent_with_function"], [23, 3, 1, "", "update_algorithm"], [23, 3, 1, "", "update_algorithm_from_function"], [23, 3, 1, "", "update_annotation_status"], [23, 3, 1, "", "update_batch_prediction"], [23, 3, 1, "", "update_custom_loss_function"], [23, 3, 1, "", "update_custom_loss_function_with_source_code"], [23, 3, 1, "", "update_custom_metric"], [23, 3, 1, "", "update_custom_metric_from_function"], [23, 3, 1, "", "update_dataset_feature_group_feature_expression"], [23, 3, 1, "", "update_deployment"], [23, 3, 1, "", "update_feature"], [23, 3, 1, "", "update_feature_group"], [23, 3, 1, "", "update_feature_group_from_pandas_df"], [23, 3, 1, "", "update_feature_group_from_spark_df"], [23, 3, 1, "", "update_feature_group_function_definition"], [23, 3, 1, "", "update_feature_group_git"], [23, 3, 1, "", "update_feature_group_python_function"], [23, 3, 1, "", "update_feature_group_python_function_bindings"], [23, 3, 1, "", "update_feature_group_sql_definition"], [23, 3, 1, "", "update_feature_group_template"], [23, 3, 1, "", "update_feature_group_template_bindings"], [23, 3, 1, "", "update_feature_group_zip"], [23, 3, 1, "", "update_graph_dashboard"], [23, 3, 1, "", "update_graph_to_dashboard"], [23, 3, 1, "", "update_module"], [23, 3, 1, "", "update_module_from_notebook"], [23, 3, 1, "", "update_monitor_alert"], [23, 3, 1, "", "update_nested_feature"], [23, 3, 1, "", "update_pipeline"], [23, 3, 1, "", "update_pipeline_step"], [23, 3, 1, "", "update_pipeline_step_from_function"], [23, 3, 1, "", "update_point_in_time_feature"], [23, 3, 1, "", "update_point_in_time_group"], [23, 3, 1, "", "update_point_in_time_group_feature"], [23, 3, 1, "", "update_python_function"], [23, 3, 1, "", "update_python_function_code"], [23, 3, 1, "", "update_python_model"], [23, 3, 1, "", "update_python_model_git"], [23, 3, 1, "", "update_python_model_zip"], [23, 3, 1, "", "update_refresh_policy"], [23, 3, 1, "", "update_vector_store"], [23, 3, 1, "", "update_webhook"], [23, 3, 1, "", "upload_part"], [23, 3, 1, "", "upsert_data"], [23, 3, 1, "", "upsert_item_attributes"], [23, 3, 1, "", "upsert_item_embeddings"], [23, 3, 1, "", "upsert_multiple_data"], [23, 3, 1, "", "upsert_multiple_item_attributes"], [23, 3, 1, "", "upsert_multiple_item_embeddings"], [23, 3, 1, "", "upsert_multiple_user_attributes"], [23, 3, 1, "", "upsert_user_attributes"], [23, 3, 1, "", "use_feature_group_for_training"], [23, 3, 1, "", "verify_application_connector"], [23, 3, 1, "", "verify_database_connector"], [23, 3, 1, "", "verify_file_connector"], [23, 3, 1, "", "verify_streaming_connector"]], "abacusai.client.ApiException": [[23, 3, 1, "", "__str__"]], "abacusai.client.BaseApiClient": [[23, 3, 1, "", "_build_class"], [23, 3, 1, "", "_call_api"], [23, 3, 1, "", "_clean_api_objects"], [23, 3, 1, "", "_get_prediction_endpoint"], [23, 3, 1, "", "_get_streaming_endpoint"], [23, 3, 1, "", "_poll"], [23, 3, 1, "", "_request"], [23, 3, 1, "", "_upload_from_pandas"], [23, 3, 1, "", "_upload_from_spark"], [23, 3, 1, "", "_validate_pandas_df"], [23, 2, 1, "", "client_version"]], "abacusai.client.ReadOnlyClient": [[23, 3, 1, "", "delete_graph_from_dashboard"], [23, 3, 1, "", "describe_algorithm"], [23, 3, 1, "", "describe_batch_prediction"], [23, 3, 1, "", "describe_batch_prediction_version"], [23, 3, 1, "", "describe_custom_loss_function"], [23, 3, 1, "", "describe_custom_metric"], [23, 3, 1, "", "describe_custom_metric_version"], [23, 3, 1, "", "describe_dataset"], [23, 3, 1, "", "describe_dataset_version"], [23, 3, 1, "", "describe_deployment"], [23, 3, 1, "", "describe_eda"], [23, 3, 1, "", "describe_eda_version"], [23, 3, 1, "", "describe_feature_group"], [23, 3, 1, "", "describe_feature_group_by_table_name"], [23, 3, 1, "", "describe_feature_group_export"], [23, 3, 1, "", "describe_feature_group_template"], [23, 3, 1, "", "describe_feature_group_version"], [23, 3, 1, "", "describe_graph_dashboard"], [23, 3, 1, "", "describe_graph_for_dashboard"], [23, 3, 1, "", "describe_model"], [23, 3, 1, "", "describe_model_artifacts_export"], [23, 3, 1, "", "describe_model_monitor"], [23, 3, 1, "", "describe_model_monitor_version"], [23, 3, 1, "", "describe_model_version"], [23, 3, 1, "", "describe_module"], [23, 3, 1, "", "describe_monitor_alert"], [23, 3, 1, "", "describe_monitor_alert_version"], [23, 3, 1, "", "describe_organization_group"], [23, 3, 1, "", "describe_pipeline_step"], [23, 3, 1, "", "describe_pipeline_step_by_name"], [23, 3, 1, "", "describe_pipeline_version"], [23, 3, 1, "", "describe_problem_type"], [23, 3, 1, "", "describe_project"], [23, 3, 1, "", "describe_project_feature_group"], [23, 3, 1, "", "describe_python_function"], [23, 3, 1, "", "describe_refresh_pipeline_run"], [23, 3, 1, "", "describe_refresh_policy"], [23, 3, 1, "", "describe_train_test_data_split_feature_group"], [23, 3, 1, "", "describe_train_test_data_split_feature_group_version"], [23, 3, 1, "", "describe_upload"], [23, 3, 1, "", "describe_use_case_requirements"], [23, 3, 1, "", "describe_user"], [23, 3, 1, "", "describe_vector_store"], [23, 3, 1, "", "describe_vector_store_by_name"], [23, 3, 1, "", "describe_vector_store_version"], [23, 3, 1, "", "describe_webhook"], [23, 3, 1, "", "download_batch_prediction_result_chunk"], [23, 3, 1, "", "download_execute_feature_group_operation_result_part_chunk"], [23, 3, 1, "", "execute_async_feature_group_operation"], [23, 3, 1, "", "export_custom_model_version"], [23, 3, 1, "", "generate_natural_language_explanation"], [23, 3, 1, "", "get_annotations_status"], [23, 3, 1, "", "get_api_endpoint"], [23, 3, 1, "", "get_batch_prediction_connector_errors"], [23, 3, 1, "", "get_chat_session"], [23, 3, 1, "", "get_collinearity_for_feature"], [23, 3, 1, "", "get_database_connector_object_schema"], [23, 3, 1, "", "get_dataset_schema"], [23, 3, 1, "", "get_docstore_document"], [23, 3, 1, "", "get_docstore_image"], [23, 3, 1, "", "get_drift_for_feature"], [23, 3, 1, "", "get_eda_collinearity"], [23, 3, 1, "", "get_eda_data_consistency"], [23, 3, 1, "", "get_eda_forecasting_analysis"], [23, 3, 1, "", "get_execute_feature_group_operation_result_part_count"], [23, 3, 1, "", "get_feature_association"], [23, 3, 1, "", "get_feature_group_export_connector_errors"], [23, 3, 1, "", "get_feature_group_schema"], [23, 3, 1, "", "get_feature_group_version_export_download_url"], [23, 3, 1, "", "get_feature_importance_by_model_version"], [23, 3, 1, "", "get_file_connector_instructions"], [23, 3, 1, "", "get_materialization_logs"], [23, 3, 1, "", "get_model_metrics"], [23, 3, 1, "", "get_model_monitor_chart_from_organization"], [23, 3, 1, "", "get_model_monitor_summary"], [23, 3, 1, "", "get_model_monitor_summary_from_organization"], [23, 3, 1, "", "get_model_monitoring_logs"], [23, 3, 1, "", "get_model_training_types_for_deployment"], [23, 3, 1, "", "get_natural_language_explanation"], [23, 3, 1, "", "get_outliers_for_batch_prediction_feature"], [23, 3, 1, "", "get_outliers_for_feature"], [23, 3, 1, "", "get_prediction_drift"], [23, 3, 1, "", "get_project_feature_group_config"], [23, 3, 1, "", "get_recent_feature_group_streamed_data"], [23, 3, 1, "", "get_schema"], [23, 3, 1, "", "get_training_data_logs"], [23, 3, 1, "", "get_training_logs"], [23, 3, 1, "", "list_algorithms"], [23, 3, 1, "", "list_api_keys"], [23, 3, 1, "", "list_application_connector_objects"], [23, 3, 1, "", "list_application_connectors"], [23, 3, 1, "", "list_batch_prediction_versions"], [23, 3, 1, "", "list_batch_predictions"], [23, 3, 1, "", "list_chat_sessions"], [23, 3, 1, "", "list_custom_loss_functions"], [23, 3, 1, "", "list_custom_metrics"], [23, 3, 1, "", "list_database_connector_objects"], [23, 3, 1, "", "list_database_connectors"], [23, 3, 1, "", "list_dataset_versions"], [23, 3, 1, "", "list_datasets"], [23, 3, 1, "", "list_deployment_tokens"], [23, 3, 1, "", "list_deployment_webhooks"], [23, 3, 1, "", "list_deployments"], [23, 3, 1, "", "list_eda"], [23, 3, 1, "", "list_eda_versions"], [23, 3, 1, "", "list_feature_group_exports"], [23, 3, 1, "", "list_feature_group_modifiers"], [23, 3, 1, "", "list_feature_group_templates"], [23, 3, 1, "", "list_feature_group_versions"], [23, 3, 1, "", "list_feature_groups"], [23, 3, 1, "", "list_file_connectors"], [23, 3, 1, "", "list_graph_dashboards"], [23, 3, 1, "", "list_model_artifacts_exports"], [23, 3, 1, "", "list_model_monitor_versions"], [23, 3, 1, "", "list_model_monitors"], [23, 3, 1, "", "list_model_versions"], [23, 3, 1, "", "list_models"], [23, 3, 1, "", "list_modules"], [23, 3, 1, "", "list_monitor_alert_versions_for_monitor_version"], [23, 3, 1, "", "list_monitor_alerts_for_monitor"], [23, 3, 1, "", "list_organization_groups"], [23, 3, 1, "", "list_organization_model_monitors"], [23, 3, 1, "", "list_organization_users"], [23, 3, 1, "", "list_pipelines"], [23, 3, 1, "", "list_project_datasets"], [23, 3, 1, "", "list_project_feature_group_templates"], [23, 3, 1, "", "list_project_feature_groups"], [23, 3, 1, "", "list_projects"], [23, 3, 1, "", "list_python_function_feature_groups"], [23, 3, 1, "", "list_python_functions"], [23, 3, 1, "", "list_refresh_pipeline_runs"], [23, 3, 1, "", "list_refresh_policies"], [23, 3, 1, "", "list_streaming_connectors"], [23, 3, 1, "", "list_streaming_tokens"], [23, 3, 1, "", "list_uploads"], [23, 3, 1, "", "list_use_cases"], [23, 3, 1, "", "list_vector_store_versions"], [23, 3, 1, "", "list_vector_stores"], [23, 3, 1, "", "model_monitor_version_metric_data"], [23, 3, 1, "", "pause_pipeline_refresh_schedule"], [23, 3, 1, "", "query_feature_group_code_generator"], [23, 3, 1, "", "render_feature_group_data_for_llm"], [23, 3, 1, "", "resume_pipeline_refresh_schedule"], [23, 3, 1, "", "search_feature_groups"], [23, 3, 1, "", "set_dataset_database_connector_config"], [23, 3, 1, "", "set_default_model_algorithm"], [23, 3, 1, "", "set_model_objective"], [23, 3, 1, "", "suggest_feature_group_template_for_feature_group"], [23, 3, 1, "", "unset_pipeline_refresh_schedule"], [23, 3, 1, "", "validate_project"], [23, 3, 1, "", "verify_and_describe_annotation"]], "abacusai.code_source": [[24, 1, 1, "", "CodeSource"]], "abacusai.code_source.CodeSource": [[24, 3, 1, "", "__repr__"], [24, 3, 1, "", "to_dict"]], "abacusai.concatenation_config": [[25, 1, 1, "", "ConcatenationConfig"]], "abacusai.concatenation_config.ConcatenationConfig": [[25, 3, 1, "", "__repr__"], [25, 3, 1, "", "to_dict"]], "abacusai.cryptography": [[26, 6, 1, "", "get_public_key"], [26, 6, 1, "", "verify_response"]], "abacusai.custom_loss_function": [[27, 1, 1, "", "CustomLossFunction"]], "abacusai.custom_loss_function.CustomLossFunction": [[27, 3, 1, "", "__repr__"], [27, 3, 1, "", "to_dict"]], "abacusai.custom_metric": [[28, 1, 1, "", "CustomMetric"]], "abacusai.custom_metric.CustomMetric": [[28, 3, 1, "", "__repr__"], [28, 3, 1, "", "to_dict"]], "abacusai.custom_metric_version": [[29, 1, 1, "", "CustomMetricVersion"]], "abacusai.custom_metric_version.CustomMetricVersion": [[29, 3, 1, "", "__repr__"], [29, 3, 1, "", "describe"], [29, 3, 1, "", "refresh"], [29, 3, 1, "", "to_dict"]], "abacusai.custom_train_function_info": [[30, 1, 1, "", "CustomTrainFunctionInfo"]], "abacusai.custom_train_function_info.CustomTrainFunctionInfo": [[30, 3, 1, "", "__repr__"], [30, 3, 1, "", "to_dict"]], "abacusai.data_consistency_duplication": [[31, 1, 1, "", "DataConsistencyDuplication"]], "abacusai.data_consistency_duplication.DataConsistencyDuplication": [[31, 3, 1, "", "__repr__"], [31, 3, 1, "", "to_dict"]], "abacusai.data_prep_logs": [[32, 1, 1, "", "DataPrepLogs"]], "abacusai.data_prep_logs.DataPrepLogs": [[32, 3, 1, "", "__repr__"], [32, 3, 1, "", "to_dict"]], "abacusai.data_quality_results": [[33, 1, 1, "", "DataQualityResults"]], "abacusai.data_quality_results.DataQualityResults": [[33, 3, 1, "", "__repr__"], [33, 3, 1, "", "to_dict"]], "abacusai.database_connector": [[34, 1, 1, "", "DatabaseConnector"]], "abacusai.database_connector.DatabaseConnector": [[34, 3, 1, "", "__repr__"], [34, 3, 1, "", "delete"], [34, 3, 1, "", "get_object_schema"], [34, 3, 1, "", "list_objects"], [34, 3, 1, "", "rename"], [34, 3, 1, "", "to_dict"], [34, 3, 1, "", "verify"]], "abacusai.dataset": [[35, 1, 1, "", "Dataset"]], "abacusai.dataset.Dataset": [[35, 3, 1, "", "__repr__"], [35, 3, 1, "", "attach_to_project"], [35, 3, 1, "", "create_refresh_policy"], [35, 3, 1, "", "create_version_from_application_connector"], [35, 3, 1, "", "create_version_from_database_connector"], [35, 3, 1, "", "create_version_from_file_connector"], [35, 3, 1, "", "create_version_from_upload"], [35, 3, 1, "", "delete"], [35, 3, 1, "", "describe"], [35, 3, 1, "", "describe_feature_group"], [35, 3, 1, "", "get_schema"], [35, 3, 1, "", "get_status"], [35, 3, 1, "", "list_refresh_policies"], [35, 3, 1, "", "list_versions"], [35, 3, 1, "", "refresh"], [35, 3, 1, "", "remove_from_project"], [35, 3, 1, "", "set_column_data_type"], [35, 3, 1, "", "set_database_connector_config"], [35, 3, 1, "", "set_streaming_retention_policy"], [35, 3, 1, "", "snapshot_streaming_data"], [35, 3, 1, "", "to_dict"], [35, 3, 1, "", "wait_for_import"], [35, 3, 1, "", "wait_for_inspection"]], "abacusai.dataset_column": [[36, 1, 1, "", "DatasetColumn"]], "abacusai.dataset_column.DatasetColumn": [[36, 3, 1, "", "__repr__"], [36, 3, 1, "", "to_dict"]], "abacusai.dataset_version": [[37, 1, 1, "", "DatasetVersion"]], "abacusai.dataset_version.DatasetVersion": [[37, 3, 1, "", "__repr__"], [37, 3, 1, "", "describe"], [37, 3, 1, "", "get_status"], [37, 3, 1, "", "refresh"], [37, 3, 1, "", "to_dict"], [37, 3, 1, "", "wait_for_import"], [37, 3, 1, "", "wait_for_inspection"]], "abacusai.deployment": [[38, 1, 1, "", "Deployment"]], "abacusai.deployment.Deployment": [[38, 3, 1, "", "__repr__"], [38, 3, 1, "", "create_batch_prediction"], [38, 3, 1, "", "create_refresh_policy"], [38, 3, 1, "", "create_webhook"], [38, 3, 1, "", "delete"], [38, 3, 1, "", "describe"], [38, 3, 1, "", "get_status"], [38, 3, 1, "", "list_refresh_policies"], [38, 3, 1, "", "list_webhooks"], [38, 3, 1, "", "refresh"], [38, 3, 1, "", "remove_feature_group_export_output"], [38, 3, 1, "", "rename"], [38, 3, 1, "", "set_auto"], [38, 3, 1, "", "set_feature_group_export_database_connector_output"], [38, 3, 1, "", "set_feature_group_export_file_connector_output"], [38, 3, 1, "", "set_feature_group_version"], [38, 3, 1, "", "set_model_version"], [38, 3, 1, "", "start"], [38, 3, 1, "", "stop"], [38, 3, 1, "", "to_dict"], [38, 3, 1, "", "update"], [38, 3, 1, "", "wait_for_deployment"], [38, 3, 1, "", "wait_for_pending_deployment_update"]], "abacusai.deployment_auth_token": [[39, 1, 1, "", "DeploymentAuthToken"]], "abacusai.deployment_auth_token.DeploymentAuthToken": [[39, 3, 1, "", "__repr__"], [39, 3, 1, "", "to_dict"]], "abacusai.document": [[40, 1, 1, "", "Document"]], "abacusai.document.Document": [[40, 3, 1, "", "__repr__"], [40, 3, 1, "", "to_dict"]], "abacusai.document_annotation": [[41, 1, 1, "", "DocumentAnnotation"]], "abacusai.document_annotation.DocumentAnnotation": [[41, 3, 1, "", "__repr__"], [41, 3, 1, "", "to_dict"]], "abacusai.document_store": [[42, 1, 1, "", "DocumentStore"]], "abacusai.document_store.DocumentStore": [[42, 3, 1, "", "__repr__"], [42, 3, 1, "", "to_dict"]], "abacusai.document_store_import": [[43, 1, 1, "", "DocumentStoreImport"]], "abacusai.document_store_import.DocumentStoreImport": [[43, 3, 1, "", "__repr__"], [43, 3, 1, "", "to_dict"]], "abacusai.drift_distribution": [[44, 1, 1, "", "DriftDistribution"]], "abacusai.drift_distribution.DriftDistribution": [[44, 3, 1, "", "__repr__"], [44, 3, 1, "", "to_dict"]], "abacusai.drift_distributions": [[45, 1, 1, "", "DriftDistributions"]], "abacusai.drift_distributions.DriftDistributions": [[45, 3, 1, "", "__repr__"], [45, 3, 1, "", "to_dict"]], "abacusai.eda": [[46, 1, 1, "", "Eda"]], "abacusai.eda.Eda": [[46, 3, 1, "", "__repr__"], [46, 3, 1, "", "delete"], [46, 3, 1, "", "describe"], [46, 3, 1, "", "list_versions"], [46, 3, 1, "", "refresh"], [46, 3, 1, "", "rename"], [46, 3, 1, "", "rerun"], [46, 3, 1, "", "to_dict"]], "abacusai.eda_chart_description": [[47, 1, 1, "", "EdaChartDescription"]], "abacusai.eda_chart_description.EdaChartDescription": [[47, 3, 1, "", "__repr__"], [47, 3, 1, "", "to_dict"]], "abacusai.eda_collinearity": [[48, 1, 1, "", "EdaCollinearity"]], "abacusai.eda_collinearity.EdaCollinearity": [[48, 3, 1, "", "__repr__"], [48, 3, 1, "", "to_dict"]], "abacusai.eda_data_consistency": [[49, 1, 1, "", "EdaDataConsistency"]], "abacusai.eda_data_consistency.EdaDataConsistency": [[49, 3, 1, "", "__repr__"], [49, 3, 1, "", "to_dict"]], "abacusai.eda_feature_association": [[50, 1, 1, "", "EdaFeatureAssociation"]], "abacusai.eda_feature_association.EdaFeatureAssociation": [[50, 3, 1, "", "__repr__"], [50, 3, 1, "", "to_dict"]], "abacusai.eda_feature_collinearity": [[51, 1, 1, "", "EdaFeatureCollinearity"]], "abacusai.eda_feature_collinearity.EdaFeatureCollinearity": [[51, 3, 1, "", "__repr__"], [51, 3, 1, "", "to_dict"]], "abacusai.eda_forecasting_analysis": [[52, 1, 1, "", "EdaForecastingAnalysis"]], "abacusai.eda_forecasting_analysis.EdaForecastingAnalysis": [[52, 3, 1, "", "__repr__"], [52, 3, 1, "", "to_dict"]], "abacusai.eda_version": [[53, 1, 1, "", "EdaVersion"]], "abacusai.eda_version.EdaVersion": [[53, 3, 1, "", "__repr__"], [53, 3, 1, "", "delete"], [53, 3, 1, "", "describe"], [53, 3, 1, "", "get_collinearity_for_feature"], [53, 3, 1, "", "get_eda_collinearity"], [53, 3, 1, "", "get_eda_data_consistency"], [53, 3, 1, "", "get_eda_forecasting_analysis"], [53, 3, 1, "", "get_feature_association"], [53, 3, 1, "", "get_status"], [53, 3, 1, "", "refresh"], [53, 3, 1, "", "to_dict"], [53, 3, 1, "", "wait_for_eda"]], "abacusai.embedding_feature_drift_distribution": [[54, 1, 1, "", "EmbeddingFeatureDriftDistribution"]], "abacusai.embedding_feature_drift_distribution.EmbeddingFeatureDriftDistribution": [[54, 3, 1, "", "__repr__"], [54, 3, 1, "", "to_dict"]], "abacusai.execute_feature_group_operation": [[55, 1, 1, "", "ExecuteFeatureGroupOperation"]], "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation": [[55, 3, 1, "", "__repr__"], [55, 3, 1, "", "_download_avro_file"], [55, 3, 1, "", "describe"], [55, 3, 1, "", "get_status"], [55, 3, 1, "", "load_as_pandas"], [55, 3, 1, "", "refresh"], [55, 3, 1, "", "to_dict"], [55, 3, 1, "", "wait_for_execution"], [55, 3, 1, "", "wait_for_results"]], "abacusai.feature": [[56, 1, 1, "", "Feature"]], "abacusai.feature.Feature": [[56, 3, 1, "", "__repr__"], [56, 3, 1, "", "to_dict"]], "abacusai.feature_distribution": [[57, 1, 1, "", "FeatureDistribution"]], "abacusai.feature_distribution.FeatureDistribution": [[57, 3, 1, "", "__repr__"], [57, 3, 1, "", "to_dict"]], "abacusai.feature_drift_summary": [[58, 1, 1, "", "FeatureDriftSummary"]], "abacusai.feature_drift_summary.FeatureDriftSummary": [[58, 3, 1, "", "__repr__"], [58, 3, 1, "", "to_dict"]], "abacusai.feature_group": [[59, 1, 1, "", "FeatureGroup"]], "abacusai.feature_group.FeatureGroup": [[59, 3, 1, "", "__repr__"], [59, 3, 1, "", "add_annotatable_feature"], [59, 3, 1, "", "add_annotation_label"], [59, 3, 1, "", "add_feature_tag"], [59, 3, 1, "", "add_organization_group_to_modifiers"], [59, 3, 1, "", "add_tag"], [59, 3, 1, "", "add_to_project"], [59, 3, 1, "", "add_user_to_modifiers"], [59, 3, 1, "", "append_data"], [59, 3, 1, "", "append_multiple_data"], [59, 3, 1, "", "concatenate_data"], [59, 3, 1, "", "create_feature"], [59, 3, 1, "", "create_nested_feature"], [59, 3, 1, "", "create_point_in_time_feature"], [59, 3, 1, "", "create_point_in_time_group"], [59, 3, 1, "", "create_point_in_time_group_feature"], [59, 3, 1, "", "create_sampling"], [59, 3, 1, "", "create_template"], [59, 3, 1, "", "create_version"], [59, 3, 1, "", "delete"], [59, 3, 1, "", "delete_feature"], [59, 3, 1, "", "delete_nested_feature"], [59, 3, 1, "", "delete_point_in_time_group"], [59, 3, 1, "", "describe"], [59, 3, 1, "", "describe_annotation"], [59, 3, 1, "", "describe_dataset"], [59, 3, 1, "", "detach_from_template"], [59, 3, 1, "", "generate_natural_language_explanation"], [59, 3, 1, "", "get_annotations_status"], [59, 3, 1, "", "get_document_to_annotate"], [59, 3, 1, "", "get_natural_language_explanation"], [59, 3, 1, "", "get_project_config"], [59, 3, 1, "", "get_recent_streamed_data"], [59, 3, 1, "", "get_schema"], [59, 3, 1, "", "get_status"], [59, 3, 1, "", "import_annotation_labels"], [59, 3, 1, "", "invalidate_streaming_data"], [59, 3, 1, "", "list_exports"], [59, 3, 1, "", "list_modifiers"], [59, 3, 1, "", "list_versions"], [59, 3, 1, "", "load_as_pandas"], [59, 3, 1, "", "materialize"], [59, 3, 1, "", "refresh"], [59, 3, 1, "", "remove_annotation_label"], [59, 3, 1, "", "remove_concatenation_config"], [59, 3, 1, "", "remove_feature_tag"], [59, 3, 1, "", "remove_from_project"], [59, 3, 1, "", "remove_organization_group_from_modifiers"], [59, 3, 1, "", "remove_tag"], [59, 3, 1, "", "remove_user_from_modifiers"], [59, 3, 1, "", "render_data_for_llm"], [59, 3, 1, "", "set_annotation_status_feature"], [59, 3, 1, "", "set_feature_as_annotatable_feature"], [59, 3, 1, "", "set_feature_type"], [59, 3, 1, "", "set_indexing_config"], [59, 3, 1, "", "set_merge_config"], [59, 3, 1, "", "set_modifier_lock"], [59, 3, 1, "", "set_project_config"], [59, 3, 1, "", "set_sampling_config"], [59, 3, 1, "", "set_schema"], [59, 3, 1, "", "set_transform_config"], [59, 3, 1, "", "set_type"], [59, 3, 1, "", "suggest_template_for"], [59, 3, 1, "", "to_dict"], [59, 3, 1, "", "unset_feature_as_annotatable_feature"], [59, 3, 1, "", "update"], [59, 3, 1, "", "update_annotation_status"], [59, 3, 1, "", "update_dataset_feature_expression"], [59, 3, 1, "", "update_feature"], [59, 3, 1, "", "update_function_definition"], [59, 3, 1, "", "update_git"], [59, 3, 1, "", "update_nested_feature"], [59, 3, 1, "", "update_point_in_time_feature"], [59, 3, 1, "", "update_point_in_time_group"], [59, 3, 1, "", "update_point_in_time_group_feature"], [59, 3, 1, "", "update_python_function"], [59, 3, 1, "", "update_python_function_bindings"], [59, 3, 1, "", "update_sql_definition"], [59, 3, 1, "", "update_template_bindings"], [59, 3, 1, "", "update_zip"], [59, 3, 1, "", "upsert_data"], [59, 3, 1, "", "upsert_multiple_data"], [59, 3, 1, "", "use_for_training"], [59, 3, 1, "", "verify_and_describe_annotation"], [59, 3, 1, "", "wait_for_dataset"], [59, 3, 1, "", "wait_for_materialization"], [59, 3, 1, "", "wait_for_streaming_ready"], [59, 3, 1, "", "wait_for_upload"]], "abacusai.feature_group_export": [[60, 1, 1, "", "FeatureGroupExport"]], "abacusai.feature_group_export.FeatureGroupExport": [[60, 3, 1, "", "__repr__"], [60, 3, 1, "", "describe"], [60, 3, 1, "", "get_connector_errors"], [60, 3, 1, "", "get_feature_group_version_export_download_url"], [60, 3, 1, "", "get_results"], [60, 3, 1, "", "get_status"], [60, 3, 1, "", "refresh"], [60, 3, 1, "", "to_dict"], [60, 3, 1, "", "wait_for_export"], [60, 3, 1, "", "wait_for_results"]], "abacusai.feature_group_export_config": [[61, 1, 1, "", "FeatureGroupExportConfig"]], "abacusai.feature_group_export_config.FeatureGroupExportConfig": [[61, 3, 1, "", "__repr__"], [61, 3, 1, "", "to_dict"]], "abacusai.feature_group_export_download_url": [[62, 1, 1, "", "FeatureGroupExportDownloadUrl"]], "abacusai.feature_group_export_download_url.FeatureGroupExportDownloadUrl": [[62, 3, 1, "", "__repr__"], [62, 3, 1, "", "to_dict"]], "abacusai.feature_group_lineage": [[63, 1, 1, "", "FeatureGroupLineage"]], "abacusai.feature_group_lineage.FeatureGroupLineage": [[63, 3, 1, "", "__repr__"], [63, 3, 1, "", "to_dict"]], "abacusai.feature_group_metrics": [[64, 1, 1, "", "FeatureGroupMetrics"]], "abacusai.feature_group_metrics.FeatureGroupMetrics": [[64, 3, 1, "", "__repr__"], [64, 3, 1, "", "to_dict"]], "abacusai.feature_group_refresh_export_config": [[65, 1, 1, "", "FeatureGroupRefreshExportConfig"]], "abacusai.feature_group_refresh_export_config.FeatureGroupRefreshExportConfig": [[65, 3, 1, "", "__repr__"], [65, 3, 1, "", "to_dict"]], "abacusai.feature_group_template": [[66, 1, 1, "", "FeatureGroupTemplate"]], "abacusai.feature_group_template.FeatureGroupTemplate": [[66, 3, 1, "", "__repr__"], [66, 3, 1, "", "delete"], [66, 3, 1, "", "describe"], [66, 3, 1, "", "preview_resolution"], [66, 3, 1, "", "refresh"], [66, 3, 1, "", "to_dict"], [66, 3, 1, "", "update"]], "abacusai.feature_group_template_variable_options": [[67, 1, 1, "", "FeatureGroupTemplateVariableOptions"]], "abacusai.feature_group_template_variable_options.FeatureGroupTemplateVariableOptions": [[67, 3, 1, "", "__repr__"], [67, 3, 1, "", "to_dict"]], "abacusai.feature_group_version": [[68, 1, 1, "", "FeatureGroupVersion"]], "abacusai.feature_group_version.FeatureGroupVersion": [[68, 3, 1, "", "__repr__"], [68, 3, 1, "", "_download_avro_file"], [68, 3, 1, "", "create_snapshot_feature_group"], [68, 3, 1, "", "describe"], [68, 3, 1, "", "export_to_console"], [68, 3, 1, "", "export_to_database_connector"], [68, 3, 1, "", "export_to_file_connector"], [68, 3, 1, "", "get_materialization_logs"], [68, 3, 1, "", "get_status"], [68, 3, 1, "", "load_as_pandas"], [68, 3, 1, "", "refresh"], [68, 3, 1, "", "to_dict"], [68, 3, 1, "", "wait_for_materialization"], [68, 3, 1, "", "wait_for_results"]], "abacusai.feature_importance": [[69, 1, 1, "", "FeatureImportance"]], "abacusai.feature_importance.FeatureImportance": [[69, 3, 1, "", "__repr__"], [69, 3, 1, "", "to_dict"]], "abacusai.feature_record": [[70, 1, 1, "", "FeatureRecord"]], "abacusai.feature_record.FeatureRecord": [[70, 3, 1, "", "__repr__"], [70, 3, 1, "", "to_dict"]], "abacusai.file_connector": [[71, 1, 1, "", "FileConnector"]], "abacusai.file_connector.FileConnector": [[71, 3, 1, "", "__repr__"], [71, 3, 1, "", "to_dict"]], "abacusai.file_connector_instructions": [[72, 1, 1, "", "FileConnectorInstructions"]], "abacusai.file_connector_instructions.FileConnectorInstructions": [[72, 3, 1, "", "__repr__"], [72, 3, 1, "", "to_dict"]], "abacusai.file_connector_verification": [[73, 1, 1, "", "FileConnectorVerification"]], "abacusai.file_connector_verification.FileConnectorVerification": [[73, 3, 1, "", "__repr__"], [73, 3, 1, "", "to_dict"]], "abacusai.forecasting_analysis_graph_data": [[74, 1, 1, "", "ForecastingAnalysisGraphData"]], "abacusai.forecasting_analysis_graph_data.ForecastingAnalysisGraphData": [[74, 3, 1, "", "__repr__"], [74, 3, 1, "", "to_dict"]], "abacusai.function_logs": [[75, 1, 1, "", "FunctionLogs"]], "abacusai.function_logs.FunctionLogs": [[75, 3, 1, "", "__repr__"], [75, 3, 1, "", "to_dict"]], "abacusai.generated_pit_feature_config_option": [[76, 1, 1, "", "GeneratedPitFeatureConfigOption"]], "abacusai.generated_pit_feature_config_option.GeneratedPitFeatureConfigOption": [[76, 3, 1, "", "__repr__"], [76, 3, 1, "", "to_dict"]], "abacusai.graph_dashboard": [[77, 1, 1, "", "GraphDashboard"]], "abacusai.graph_dashboard.GraphDashboard": [[77, 3, 1, "", "__repr__"], [77, 3, 1, "", "delete"], [77, 3, 1, "", "describe"], [77, 3, 1, "", "refresh"], [77, 3, 1, "", "to_dict"], [77, 3, 1, "", "update"]], "abacusai.indexing_config": [[79, 1, 1, "", "IndexingConfig"]], "abacusai.indexing_config.IndexingConfig": [[79, 3, 1, "", "__repr__"], [79, 3, 1, "", "to_dict"]], "abacusai.item_statistics": [[80, 1, 1, "", "ItemStatistics"]], "abacusai.item_statistics.ItemStatistics": [[80, 3, 1, "", "__repr__"], [80, 3, 1, "", "to_dict"]], "abacusai.llm_code_block": [[81, 1, 1, "", "LlmCodeBlock"]], "abacusai.llm_code_block.LlmCodeBlock": [[81, 3, 1, "", "__repr__"], [81, 3, 1, "", "to_dict"]], "abacusai.llm_input": [[82, 1, 1, "", "LlmInput"]], "abacusai.llm_input.LlmInput": [[82, 3, 1, "", "__repr__"], [82, 3, 1, "", "to_dict"]], "abacusai.llm_parameters": [[83, 1, 1, "", "LlmParameters"]], "abacusai.llm_parameters.LlmParameters": [[83, 3, 1, "", "__repr__"], [83, 3, 1, "", "to_dict"]], "abacusai.llm_response": [[84, 1, 1, "", "LlmResponse"]], "abacusai.llm_response.LlmResponse": [[84, 3, 1, "", "__repr__"], [84, 3, 1, "", "to_dict"]], "abacusai.model": [[85, 1, 1, "", "Model"]], "abacusai.model.Model": [[85, 3, 1, "", "__repr__"], [85, 3, 1, "", "create_refresh_policy"], [85, 3, 1, "", "delete"], [85, 3, 1, "", "describe"], [85, 3, 1, "", "describe_train_test_data_split_feature_group"], [85, 3, 1, "", "get_metrics"], [85, 3, 1, "", "get_status"], [85, 3, 1, "", "get_train_test_feature_group_as_pandas"], [85, 3, 1, "", "get_training_types_for_deployment"], [85, 3, 1, "", "list_artifacts_exports"], [85, 3, 1, "", "list_refresh_policies"], [85, 3, 1, "", "list_versions"], [85, 3, 1, "", "refresh"], [85, 3, 1, "", "rename"], [85, 3, 1, "", "retrain"], [85, 3, 1, "", "set_default_algorithm"], [85, 3, 1, "", "set_prediction_params"], [85, 3, 1, "", "set_training_config"], [85, 3, 1, "", "to_dict"], [85, 3, 1, "", "update_agent"], [85, 3, 1, "", "update_python"], [85, 3, 1, "", "update_python_git"], [85, 3, 1, "", "update_python_zip"], [85, 3, 1, "", "wait_for_evaluation"], [85, 3, 1, "", "wait_for_full_automl"], [85, 3, 1, "", "wait_for_publish"], [85, 3, 1, "", "wait_for_training"]], "abacusai.model_artifacts_export": [[86, 1, 1, "", "ModelArtifactsExport"]], "abacusai.model_artifacts_export.ModelArtifactsExport": [[86, 3, 1, "", "__repr__"], [86, 3, 1, "", "describe"], [86, 3, 1, "", "get_status"], [86, 3, 1, "", "refresh"], [86, 3, 1, "", "to_dict"], [86, 3, 1, "", "wait_for_results"]], "abacusai.model_blueprint_export": [[87, 1, 1, "", "ModelBlueprintExport"]], "abacusai.model_blueprint_export.ModelBlueprintExport": [[87, 3, 1, "", "__repr__"], [87, 3, 1, "", "to_dict"]], "abacusai.model_blueprint_stage": [[88, 1, 1, "", "ModelBlueprintStage"]], "abacusai.model_blueprint_stage.ModelBlueprintStage": [[88, 3, 1, "", "__repr__"], [88, 3, 1, "", "to_dict"]], "abacusai.model_location": [[89, 1, 1, "", "ModelLocation"]], "abacusai.model_location.ModelLocation": [[89, 3, 1, "", "__repr__"], [89, 3, 1, "", "to_dict"]], "abacusai.model_metrics": [[90, 1, 1, "", "ModelMetrics"]], "abacusai.model_metrics.ModelMetrics": [[90, 3, 1, "", "__repr__"], [90, 3, 1, "", "to_dict"]], "abacusai.model_monitor": [[91, 1, 1, "", "ModelMonitor"]], "abacusai.model_monitor.ModelMonitor": [[91, 3, 1, "", "__repr__"], [91, 3, 1, "", "delete"], [91, 3, 1, "", "describe"], [91, 3, 1, "", "get_summary"], [91, 3, 1, "", "list_monitor_alerts_for_monitor"], [91, 3, 1, "", "list_versions"], [91, 3, 1, "", "refresh"], [91, 3, 1, "", "rename"], [91, 3, 1, "", "rerun"], [91, 3, 1, "", "to_dict"]], "abacusai.model_monitor_org_summary": [[92, 1, 1, "", "ModelMonitorOrgSummary"]], "abacusai.model_monitor_org_summary.ModelMonitorOrgSummary": [[92, 3, 1, "", "__repr__"], [92, 3, 1, "", "to_dict"]], "abacusai.model_monitor_summary": [[93, 1, 1, "", "ModelMonitorSummary"]], "abacusai.model_monitor_summary.ModelMonitorSummary": [[93, 3, 1, "", "__repr__"], [93, 3, 1, "", "to_dict"]], "abacusai.model_monitor_summary_from_org": [[94, 1, 1, "", "ModelMonitorSummaryFromOrg"]], "abacusai.model_monitor_summary_from_org.ModelMonitorSummaryFromOrg": [[94, 3, 1, "", "__repr__"], [94, 3, 1, "", "to_dict"]], "abacusai.model_monitor_version": [[95, 1, 1, "", "ModelMonitorVersion"]], "abacusai.model_monitor_version.ModelMonitorVersion": [[95, 3, 1, "", "__repr__"], [95, 3, 1, "", "delete"], [95, 3, 1, "", "describe"], [95, 3, 1, "", "get_drift_for_feature"], [95, 3, 1, "", "get_model_monitoring_logs"], [95, 3, 1, "", "get_outliers_for_feature"], [95, 3, 1, "", "get_prediction_drift"], [95, 3, 1, "", "get_status"], [95, 3, 1, "", "list_monitor_alert_versions_for_monitor_version"], [95, 3, 1, "", "metric_data"], [95, 3, 1, "", "refresh"], [95, 3, 1, "", "to_dict"], [95, 3, 1, "", "wait_for_monitor"]], "abacusai.model_monitor_version_metric_data": [[96, 1, 1, "", "ModelMonitorVersionMetricData"]], "abacusai.model_monitor_version_metric_data.ModelMonitorVersionMetricData": [[96, 3, 1, "", "__repr__"], [96, 3, 1, "", "to_dict"]], "abacusai.model_training_type_for_deployment": [[97, 1, 1, "", "ModelTrainingTypeForDeployment"]], "abacusai.model_training_type_for_deployment.ModelTrainingTypeForDeployment": [[97, 3, 1, "", "__repr__"], [97, 3, 1, "", "to_dict"]], "abacusai.model_upload": [[98, 1, 1, "", "ModelUpload"]], "abacusai.model_upload.ModelUpload": [[98, 3, 1, "", "__repr__"], [98, 3, 1, "", "to_dict"]], "abacusai.model_version": [[99, 1, 1, "", "ModelVersion"]], "abacusai.model_version.ModelVersion": [[99, 3, 1, "", "__repr__"], [99, 3, 1, "", "delete"], [99, 3, 1, "", "describe"], [99, 3, 1, "", "describe_train_test_data_split_feature_group_version"], [99, 3, 1, "", "export_custom"], [99, 3, 1, "", "export_model_artifact_as_feature_group"], [99, 3, 1, "", "get_feature_importance_by"], [99, 3, 1, "", "get_status"], [99, 3, 1, "", "get_train_test_feature_group_as_pandas"], [99, 3, 1, "", "get_training_data_logs"], [99, 3, 1, "", "get_training_logs"], [99, 3, 1, "", "refresh"], [99, 3, 1, "", "set_model_objective"], [99, 3, 1, "", "to_dict"], [99, 3, 1, "", "wait_for_full_automl"], [99, 3, 1, "", "wait_for_training"]], "abacusai.modification_lock_info": [[100, 1, 1, "", "ModificationLockInfo"]], "abacusai.modification_lock_info.ModificationLockInfo": [[100, 3, 1, "", "__repr__"], [100, 3, 1, "", "to_dict"]], "abacusai.module": [[101, 1, 1, "", "Module"]], "abacusai.module.Module": [[101, 3, 1, "", "__repr__"], [101, 3, 1, "", "to_dict"]], "abacusai.monitor_alert": [[102, 1, 1, "", "MonitorAlert"]], "abacusai.monitor_alert.MonitorAlert": [[102, 3, 1, "", "__repr__"], [102, 3, 1, "", "delete"], [102, 3, 1, "", "describe"], [102, 3, 1, "", "refresh"], [102, 3, 1, "", "run"], [102, 3, 1, "", "to_dict"], [102, 3, 1, "", "update"]], "abacusai.monitor_alert_version": [[103, 1, 1, "", "MonitorAlertVersion"]], "abacusai.monitor_alert_version.MonitorAlertVersion": [[103, 3, 1, "", "__repr__"], [103, 3, 1, "", "describe"], [103, 3, 1, "", "get_status"], [103, 3, 1, "", "refresh"], [103, 3, 1, "", "to_dict"], [103, 3, 1, "", "wait_for_monitor_alert"]], "abacusai.natural_language_explanation": [[104, 1, 1, "", "NaturalLanguageExplanation"]], "abacusai.natural_language_explanation.NaturalLanguageExplanation": [[104, 3, 1, "", "__repr__"], [104, 3, 1, "", "to_dict"]], "abacusai.nested_feature": [[105, 1, 1, "", "NestedFeature"]], "abacusai.nested_feature.NestedFeature": [[105, 3, 1, "", "__repr__"], [105, 3, 1, "", "to_dict"]], "abacusai.null_violation": [[106, 1, 1, "", "NullViolation"]], "abacusai.null_violation.NullViolation": [[106, 3, 1, "", "__repr__"], [106, 3, 1, "", "to_dict"]], "abacusai.organization_group": [[107, 1, 1, "", "OrganizationGroup"]], "abacusai.organization_group.OrganizationGroup": [[107, 3, 1, "", "__repr__"], [107, 3, 1, "", "add_permission"], [107, 3, 1, "", "add_user_to"], [107, 3, 1, "", "delete"], [107, 3, 1, "", "describe"], [107, 3, 1, "", "refresh"], [107, 3, 1, "", "remove_permission"], [107, 3, 1, "", "remove_user_from"], [107, 3, 1, "", "set_default"], [107, 3, 1, "", "to_dict"]], "abacusai.organization_search_result": [[108, 1, 1, "", "OrganizationSearchResult"]], "abacusai.organization_search_result.OrganizationSearchResult": [[108, 3, 1, "", "__repr__"], [108, 3, 1, "", "to_dict"]], "abacusai.pipeline": [[109, 1, 1, "", "Pipeline"]], "abacusai.pipeline.Pipeline": [[109, 3, 1, "", "__repr__"], [109, 3, 1, "", "create_step"], [109, 3, 1, "", "delete"], [109, 3, 1, "", "describe"], [109, 3, 1, "", "describe_step_by_name"], [109, 3, 1, "", "list_versions"], [109, 3, 1, "", "pause_refresh_schedule"], [109, 3, 1, "", "refresh"], [109, 3, 1, "", "resume_refresh_schedule"], [109, 3, 1, "", "run"], [109, 3, 1, "", "to_dict"], [109, 3, 1, "", "unset_refresh_schedule"], [109, 3, 1, "", "update"]], "abacusai.pipeline_reference": [[110, 1, 1, "", "PipelineReference"]], "abacusai.pipeline_reference.PipelineReference": [[110, 3, 1, "", "__repr__"], [110, 3, 1, "", "to_dict"]], "abacusai.pipeline_step": [[111, 1, 1, "", "PipelineStep"]], "abacusai.pipeline_step.PipelineStep": [[111, 3, 1, "", "__repr__"], [111, 3, 1, "", "delete"], [111, 3, 1, "", "describe"], [111, 3, 1, "", "refresh"], [111, 3, 1, "", "to_dict"], [111, 3, 1, "", "update"]], "abacusai.pipeline_step_version": [[112, 1, 1, "", "PipelineStepVersion"]], "abacusai.pipeline_step_version.PipelineStepVersion": [[112, 3, 1, "", "__repr__"], [112, 3, 1, "", "to_dict"]], "abacusai.pipeline_step_version_reference": [[113, 1, 1, "", "PipelineStepVersionReference"]], "abacusai.pipeline_step_version_reference.PipelineStepVersionReference": [[113, 3, 1, "", "__repr__"], [113, 3, 1, "", "to_dict"]], "abacusai.pipeline_version": [[114, 1, 1, "", "PipelineVersion"]], "abacusai.pipeline_version.PipelineVersion": [[114, 3, 1, "", "__repr__"], [114, 3, 1, "", "describe"], [114, 3, 1, "", "get_status"], [114, 3, 1, "", "refresh"], [114, 3, 1, "", "to_dict"], [114, 3, 1, "", "wait_for_pipeline"]], "abacusai.point_in_time_feature": [[115, 1, 1, "", "PointInTimeFeature"]], "abacusai.point_in_time_feature.PointInTimeFeature": [[115, 3, 1, "", "__repr__"], [115, 3, 1, "", "to_dict"]], "abacusai.point_in_time_group": [[116, 1, 1, "", "PointInTimeGroup"]], "abacusai.point_in_time_group.PointInTimeGroup": [[116, 3, 1, "", "__repr__"], [116, 3, 1, "", "to_dict"]], "abacusai.point_in_time_group_feature": [[117, 1, 1, "", "PointInTimeGroupFeature"]], "abacusai.point_in_time_group_feature.PointInTimeGroupFeature": [[117, 3, 1, "", "__repr__"], [117, 3, 1, "", "to_dict"]], "abacusai.prediction_client": [[118, 1, 1, "", "PredictionClient"]], "abacusai.prediction_client.PredictionClient": [[118, 3, 1, "", "check_constraints"], [118, 3, 1, "", "classify_image"], [118, 3, 1, "", "classify_pdf"], [118, 3, 1, "", "describe_image"], [118, 3, 1, "", "execute_agent"], [118, 3, 1, "", "generate_image"], [118, 3, 1, "", "get_alternative_assignments"], [118, 3, 1, "", "get_anomalies"], [118, 3, 1, "", "get_assignments"], [118, 3, 1, "", "get_chat_response"], [118, 3, 1, "", "get_classification"], [118, 3, 1, "", "get_cluster"], [118, 3, 1, "", "get_entailment"], [118, 3, 1, "", "get_entities_from_pdf"], [118, 3, 1, "", "get_forecast"], [118, 3, 1, "", "get_k_nearest"], [118, 3, 1, "", "get_labels"], [118, 3, 1, "", "get_multiple_k_nearest"], [118, 3, 1, "", "get_objects_from_image"], [118, 3, 1, "", "get_personalized_ranking"], [118, 3, 1, "", "get_ranked_items"], [118, 3, 1, "", "get_recommendations"], [118, 3, 1, "", "get_related_items"], [118, 3, 1, "", "get_search_results"], [118, 3, 1, "", "get_sentiment"], [118, 3, 1, "", "get_summary"], [118, 3, 1, "", "is_anomaly"], [118, 3, 1, "", "lookup_features"], [118, 3, 1, "", "predict"], [118, 3, 1, "", "predict_churn"], [118, 3, 1, "", "predict_class"], [118, 3, 1, "", "predict_fraud"], [118, 3, 1, "", "predict_from_datasets"], [118, 3, 1, "", "predict_language"], [118, 3, 1, "", "predict_lead"], [118, 3, 1, "", "predict_multiple"], [118, 3, 1, "", "predict_raw"], [118, 3, 1, "", "predict_takeover"], [118, 3, 1, "", "predict_target"], [118, 3, 1, "", "predict_with_binary_data"], [118, 3, 1, "", "score_image"], [118, 3, 1, "", "transcribe_audio"], [118, 3, 1, "", "transfer_style"]], "abacusai.prediction_dataset": [[119, 1, 1, "", "PredictionDataset"]], "abacusai.prediction_dataset.PredictionDataset": [[119, 3, 1, "", "__repr__"], [119, 3, 1, "", "to_dict"]], "abacusai.prediction_feature_group": [[120, 1, 1, "", "PredictionFeatureGroup"]], "abacusai.prediction_feature_group.PredictionFeatureGroup": [[120, 3, 1, "", "__repr__"], [120, 3, 1, "", "to_dict"]], "abacusai.prediction_input": [[121, 1, 1, "", "PredictionInput"]], "abacusai.prediction_input.PredictionInput": [[121, 3, 1, "", "__repr__"], [121, 3, 1, "", "to_dict"]], "abacusai.prediction_metric": [[122, 1, 1, "", "PredictionMetric"]], "abacusai.prediction_metric.PredictionMetric": [[122, 3, 1, "", "__repr__"], [122, 3, 1, "", "to_dict"]], "abacusai.prediction_metric_version": [[123, 1, 1, "", "PredictionMetricVersion"]], "abacusai.prediction_metric_version.PredictionMetricVersion": [[123, 3, 1, "", "__repr__"], [123, 3, 1, "", "get_status"], [123, 3, 1, "", "to_dict"], [123, 3, 1, "", "wait_for_prediction_metric_version"]], "abacusai.problem_type": [[124, 1, 1, "", "ProblemType"]], "abacusai.problem_type.ProblemType": [[124, 3, 1, "", "__repr__"], [124, 3, 1, "", "to_dict"]], "abacusai.project": [[125, 1, 1, "", "Project"]], "abacusai.project.Project": [[125, 3, 1, "", "__repr__"], [125, 3, 1, "", "add_tags"], [125, 3, 1, "", "attach_dataset"], [125, 3, 1, "", "create_agent"], [125, 3, 1, "", "create_chat_session"], [125, 3, 1, "", "create_deployment_token"], [125, 3, 1, "", "create_eda"], [125, 3, 1, "", "create_graph_dashboard"], [125, 3, 1, "", "create_model_from_functions"], [125, 3, 1, "", "create_model_from_python"], [125, 3, 1, "", "create_model_monitor"], [125, 3, 1, "", "create_monitor_alert"], [125, 3, 1, "", "create_nlp_drift_monitor"], [125, 3, 1, "", "create_train_test_data_split_feature_group"], [125, 3, 1, "", "create_vector_store"], [125, 3, 1, "", "create_vision_drift_monitor"], [125, 3, 1, "", "delete"], [125, 3, 1, "", "describe"], [125, 3, 1, "", "describe_feature_group"], [125, 3, 1, "", "get_custom_train_function_info"], [125, 3, 1, "", "get_schema"], [125, 3, 1, "", "get_training_config_options"], [125, 3, 1, "", "list_batch_predictions"], [125, 3, 1, "", "list_builtin_algorithms"], [125, 3, 1, "", "list_datasets"], [125, 3, 1, "", "list_deployment_tokens"], [125, 3, 1, "", "list_deployments"], [125, 3, 1, "", "list_eda"], [125, 3, 1, "", "list_feature_group_templates"], [125, 3, 1, "", "list_feature_groups"], [125, 3, 1, "", "list_graph_dashboards"], [125, 3, 1, "", "list_model_monitors"], [125, 3, 1, "", "list_models"], [125, 3, 1, "", "list_pipelines"], [125, 3, 1, "", "list_refresh_policies"], [125, 3, 1, "", "list_vector_stores"], [125, 3, 1, "", "refresh"], [125, 3, 1, "", "remove_column_mapping"], [125, 3, 1, "", "remove_dataset"], [125, 3, 1, "", "remove_tags"], [125, 3, 1, "", "rename"], [125, 3, 1, "", "set_column_data_type"], [125, 3, 1, "", "set_column_mapping"], [125, 3, 1, "", "set_feature_mapping"], [125, 3, 1, "", "to_dict"], [125, 3, 1, "", "train_model"], [125, 3, 1, "", "validate"]], "abacusai.project_config": [[126, 1, 1, "", "ProjectConfig"]], "abacusai.project_config.ProjectConfig": [[126, 3, 1, "", "__repr__"], [126, 3, 1, "", "to_dict"]], "abacusai.project_dataset": [[127, 1, 1, "", "ProjectDataset"]], "abacusai.project_dataset.ProjectDataset": [[127, 3, 1, "", "__repr__"], [127, 3, 1, "", "to_dict"]], "abacusai.project_validation": [[128, 1, 1, "", "ProjectValidation"]], "abacusai.project_validation.ProjectValidation": [[128, 3, 1, "", "__repr__"], [128, 3, 1, "", "to_dict"]], "abacusai.python_function": [[129, 1, 1, "", "PythonFunction"]], "abacusai.python_function.PythonFunction": [[129, 3, 1, "", "__repr__"], [129, 3, 1, "", "add_graph_to_dashboard"], [129, 3, 1, "", "to_dict"], [129, 3, 1, "", "validate_locally"]], "abacusai.python_function_validator": [[130, 1, 1, "", "_MonkeyPatch"], [130, 6, 1, "", "validate_function_locally"]], "abacusai.python_function_validator._MonkeyPatch": [[130, 3, 1, "", "context"], [130, 3, 1, "", "syspath_prepend"], [130, 3, 1, "", "undo"]], "abacusai.python_plot_function": [[131, 1, 1, "", "PythonPlotFunction"]], "abacusai.python_plot_function.PythonPlotFunction": [[131, 3, 1, "", "__repr__"], [131, 3, 1, "", "to_dict"]], "abacusai.range_violation": [[132, 1, 1, "", "RangeViolation"]], "abacusai.range_violation.RangeViolation": [[132, 3, 1, "", "__repr__"], [132, 3, 1, "", "to_dict"]], "abacusai.refresh_pipeline_run": [[133, 1, 1, "", "RefreshPipelineRun"]], "abacusai.refresh_pipeline_run.RefreshPipelineRun": [[133, 3, 1, "", "__repr__"], [133, 3, 1, "", "describe"], [133, 3, 1, "", "get_status"], [133, 3, 1, "", "refresh"], [133, 3, 1, "", "to_dict"], [133, 3, 1, "", "wait_for_complete"]], "abacusai.refresh_policy": [[134, 1, 1, "", "RefreshPolicy"]], "abacusai.refresh_policy.RefreshPolicy": [[134, 3, 1, "", "__repr__"], [134, 3, 1, "", "delete"], [134, 3, 1, "", "describe"], [134, 3, 1, "", "list_refresh_pipeline_runs"], [134, 3, 1, "", "pause"], [134, 3, 1, "", "refresh"], [134, 3, 1, "", "resume"], [134, 3, 1, "", "run"], [134, 3, 1, "", "to_dict"], [134, 3, 1, "", "update"]], "abacusai.refresh_schedule": [[135, 1, 1, "", "RefreshSchedule"]], "abacusai.refresh_schedule.RefreshSchedule": [[135, 3, 1, "", "__repr__"], [135, 3, 1, "", "to_dict"]], "abacusai.resolved_feature_group_template": [[136, 1, 1, "", "ResolvedFeatureGroupTemplate"]], "abacusai.resolved_feature_group_template.ResolvedFeatureGroupTemplate": [[136, 3, 1, "", "__repr__"], [136, 3, 1, "", "to_dict"]], "abacusai.return_class": [[137, 1, 1, "", "AbstractApiClass"]], "abacusai.return_class.AbstractApiClass": [[137, 3, 1, "", "__eq__"], [137, 3, 1, "", "_get_attribute_as_dict"]], "abacusai.schema": [[138, 1, 1, "", "Schema"]], "abacusai.schema.Schema": [[138, 3, 1, "", "__repr__"], [138, 3, 1, "", "to_dict"]], "abacusai.streaming_auth_token": [[139, 1, 1, "", "StreamingAuthToken"]], "abacusai.streaming_auth_token.StreamingAuthToken": [[139, 3, 1, "", "__repr__"], [139, 3, 1, "", "to_dict"]], "abacusai.streaming_client": [[140, 1, 1, "", "StreamingClient"]], "abacusai.streaming_client.StreamingClient": [[140, 3, 1, "", "append_data"], [140, 3, 1, "", "append_multiple_data"], [140, 3, 1, "", "delete_item_embeddings"], [140, 3, 1, "", "upsert_data"], [140, 3, 1, "", "upsert_item_embeddings"], [140, 3, 1, "", "upsert_multiple_data"], [140, 3, 1, "", "upsert_multiple_item_embeddings"]], "abacusai.streaming_connector": [[141, 1, 1, "", "StreamingConnector"]], "abacusai.streaming_connector.StreamingConnector": [[141, 3, 1, "", "__repr__"], [141, 3, 1, "", "delete"], [141, 3, 1, "", "rename"], [141, 3, 1, "", "to_dict"], [141, 3, 1, "", "verify"]], "abacusai.training_config_options": [[142, 1, 1, "", "TrainingConfigOptions"]], "abacusai.training_config_options.TrainingConfigOptions": [[142, 3, 1, "", "__repr__"], [142, 3, 1, "", "to_dict"]], "abacusai.type_violation": [[143, 1, 1, "", "TypeViolation"]], "abacusai.type_violation.TypeViolation": [[143, 3, 1, "", "__repr__"], [143, 3, 1, "", "to_dict"]], "abacusai.upload": [[144, 1, 1, "", "Upload"]], "abacusai.upload.Upload": [[144, 3, 1, "", "__repr__"], [144, 3, 1, "", "_yield_upload_part"], [144, 3, 1, "", "cancel"], [144, 3, 1, "", "describe"], [144, 3, 1, "", "get_status"], [144, 3, 1, "", "mark_complete"], [144, 3, 1, "", "part"], [144, 3, 1, "", "refresh"], [144, 3, 1, "", "to_dict"], [144, 3, 1, "", "upload_file"], [144, 3, 1, "", "upload_part"], [144, 3, 1, "", "wait_for_join"]], "abacusai.upload_part": [[145, 1, 1, "", "UploadPart"]], "abacusai.upload_part.UploadPart": [[145, 3, 1, "", "__repr__"], [145, 3, 1, "", "to_dict"]], "abacusai.use_case": [[146, 1, 1, "", "UseCase"]], "abacusai.use_case.UseCase": [[146, 3, 1, "", "__repr__"], [146, 3, 1, "", "to_dict"]], "abacusai.use_case_requirements": [[147, 1, 1, "", "UseCaseRequirements"]], "abacusai.use_case_requirements.UseCaseRequirements": [[147, 3, 1, "", "__repr__"], [147, 3, 1, "", "to_dict"]], "abacusai.user": [[148, 1, 1, "", "User"]], "abacusai.user.User": [[148, 3, 1, "", "__repr__"], [148, 3, 1, "", "to_dict"]], "abacusai.user_exception": [[149, 1, 1, "", "UserException"]], "abacusai.user_exception.UserException": [[149, 3, 1, "", "__repr__"], [149, 3, 1, "", "to_dict"]], "abacusai.vector_store": [[150, 1, 1, "", "VectorStore"]], "abacusai.vector_store.VectorStore": [[150, 3, 1, "", "__repr__"], [150, 3, 1, "", "create_version"], [150, 3, 1, "", "delete"], [150, 3, 1, "", "describe"], [150, 3, 1, "", "get_status"], [150, 3, 1, "", "list_versions"], [150, 3, 1, "", "lookup"], [150, 3, 1, "", "refresh"], [150, 3, 1, "", "to_dict"], [150, 3, 1, "", "update"], [150, 3, 1, "", "wait_until_ready"]], "abacusai.vector_store_lookup_result": [[151, 1, 1, "", "VectorStoreLookupResult"]], "abacusai.vector_store_lookup_result.VectorStoreLookupResult": [[151, 3, 1, "", "__repr__"], [151, 3, 1, "", "to_dict"]], "abacusai.vector_store_version": [[152, 1, 1, "", "VectorStoreVersion"]], "abacusai.vector_store_version.VectorStoreVersion": [[152, 3, 1, "", "__repr__"], [152, 3, 1, "", "describe"], [152, 3, 1, "", "get_status"], [152, 3, 1, "", "refresh"], [152, 3, 1, "", "to_dict"], [152, 3, 1, "", "wait_for_results"], [152, 3, 1, "", "wait_until_ready"]], "abacusai.webhook": [[153, 1, 1, "", "Webhook"]], "abacusai.webhook.Webhook": [[153, 3, 1, "", "__repr__"], [153, 3, 1, "", "delete"], [153, 3, 1, "", "describe"], [153, 3, 1, "", "refresh"], [153, 3, 1, "", "to_dict"], [153, 3, 1, "", "update"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:exception", "5": "py:data", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"], "5": ["py", "data", "Python data"], "6": ["py", "function", "Python function"]}, "titleterms": {"abacusai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "algorithm": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "annot": 1, "annotation_entri": 3, "annotations_statu": 4, "api_class": [5, 6, 7, 8, 9, 10, 11, 12, 13], "abstract": 5, "function": [5, 14, 23, 26, 130], "enum": 7, "feature_group": [8, 59], "submodul": [9, 78], "packag": [9, 78], "api_client_util": 14, "attribut": [5, 14, 23, 78], "api_kei": 16, "application_connector": 17, "batch_predict": 18, "batch_prediction_vers": 19, "categorical_range_viol": 20, "client": [23, 154], "code_sourc": 24, "concatenation_config": 25, "cryptographi": 26, "custom_loss_funct": 27, "custom_metr": 28, "custom_metric_vers": 29, "custom_train_function_info": 30, "data_consistency_dupl": 31, "data_filt": [], "data_prep_log": 32, "data_quality_result": 33, "database_connector": 34, "dataset": [6, 35], "dataset_column": 36, "dataset_vers": 37, "deploy": 38, "deployment_auth_token": 39, "document": 40, "document_annot": 41, "document_stor": 42, "document_store_import": 43, "drift_distribut": [44, 45], "eda": 46, "eda_collinear": 48, "eda_data_consist": 49, "eda_feature_associ": 50, "eda_feature_collinear": 51, "eda_forecasting_analysi": 52, "eda_vers": 53, "embedding_feature_drift_distribut": 54, "featur": 56, "feature_drift_summari": 58, "feature_group_export": 60, "feature_group_export_config": 61, "feature_group_export_download_url": 62, "feature_group_lineag": 63, "feature_group_templ": 66, "feature_group_template_variable_opt": 67, "feature_group_vers": 68, "feature_import": 69, "feature_record": 70, "file_connector": 71, "file_connector_instruct": 72, "file_connector_verif": 73, "forecasting_analysis_graph_data": 74, "function_log": 75, "generated_pit_feature_config_opt": 76, "graph_dashboard": 77, "subpackag": 78, "indexing_config": 79, "item_statist": 80, "model": [10, 85], "model_artifacts_export": 86, "model_loc": 89, "model_metr": 90, "model_monitor": 91, "model_monitor_org_summari": 92, "model_monitor_summari": 93, "model_monitor_summary_from_org": 94, "model_monitor_vers": 95, "model_monitor_version_metric_data": 96, "model_training_type_for_deploy": 97, "model_upload": 98, "model_vers": 99, "modification_lock_info": 100, "monitor_alert": 102, "monitor_alert_vers": 103, "nested_featur": 105, "null_viol": 106, "organization_group": 107, "point_in_time_featur": 115, "point_in_time_group": 116, "point_in_time_group_featur": 117, "prediction_cli": 118, "prediction_dataset": 119, "prediction_feature_group": 120, "prediction_input": 121, "prediction_metr": 122, "prediction_metric_vers": 123, "problem_typ": 124, "project": [11, 125], "project_dataset": 127, "project_valid": 128, "python_funct": [12, 129], "python_plot_funct": 131, "range_viol": 132, "refresh_pipeline_run": 133, "refresh_polici": 134, "refresh_schedul": 135, "resolved_feature_group_templ": 136, "return_class": 137, "schema": 138, "streaming_auth_token": 139, "streaming_connector": 141, "training_config_opt": 142, "type_viol": 143, "upload": 144, "upload_part": 145, "use_cas": 146, "use_case_requir": 147, "user": 148, "user_except": 149, "webhook": 153, "abacu": 154, "ai": 154, "api": 154, "pydoc": 154, "indic": 154, "pretrained_use_cas": [], "eda_chart_descript": 47, "api_endpoint": 15, "chat_bot_respons": [], "natural_language_explan": 104, "python_function_valid": 130, "streaming_cli": 140, "annotation_config": 2, "feature_group_metr": 64, "pipelin": 109, "pipeline_step": 111, "pipeline_step_vers": 112, "pipeline_vers": 114, "chat_messag": 21, "chat_sess": 22, "execute_fg_oper": [], "llm_code_block": 81, "llm_input": 82, "llm_respons": 84, "llm_search_result": [], "pipeline_refer": 110, "pipeline_step_version_refer": 113, "execute_feature_group_oper": 55, "model_blueprint_export": 87, "model_blueprint_stag": 88, "refresh": 13, "feature_group_refresh_export_config": 65, "feature_distribut": 57, "vector_stor": 150, "vector_store_vers": 152, "python_function_argu": [], "organization_search_result": 108, "vector_store_lookup_result": 151, "llm_paramet": 83, "project_config": 126}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Abacus.AI API Client PyDocs": [[154, "abacus-ai-api-client-pydocs"]], "Indices": [[154, "indices"]], "abacusai.algorithm": [[0, "module-abacusai.algorithm"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [100, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [112, "module-contents"], [113, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [121, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"]], "Classes": [[0, "classes"], [1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [68, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [128, "classes"], [129, "classes"], [130, "classes"], [131, "classes"], [132, "classes"], [133, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"]], "abacusai.annotation": [[1, "module-abacusai.annotation"]], "abacusai.annotation_config": [[2, "module-abacusai.annotation_config"]], "abacusai.annotation_entry": [[3, "module-abacusai.annotation_entry"]], "abacusai.annotations_status": [[4, "module-abacusai.annotations_status"]], "abacusai.api_class.abstract": [[5, "module-abacusai.api_class.abstract"]], "Functions": [[5, "functions"], [14, "functions"], [23, "functions"], [26, "functions"], [130, "functions"]], "Attributes": [[5, "attributes"], [14, "attributes"], [23, "attributes"], [78, "attributes"]], "abacusai.api_class.dataset": [[6, "module-abacusai.api_class.dataset"]], "abacusai.api_class.enums": [[7, "module-abacusai.api_class.enums"]], "abacusai.api_class.feature_group": [[8, "module-abacusai.api_class.feature_group"]], "abacusai.api_class": [[9, "module-abacusai.api_class"]], "Submodules": [[9, "submodules"], [78, "submodules"]], "Package Contents": [[9, "package-contents"], [78, "package-contents"]], "abacusai.api_class.model": [[10, "module-abacusai.api_class.model"]], "abacusai.api_class.project": [[11, "module-abacusai.api_class.project"]], "abacusai.api_class.python_functions": [[12, "module-abacusai.api_class.python_functions"]], "abacusai.api_class.refresh": [[13, "module-abacusai.api_class.refresh"]], "abacusai.api_client_utils": [[14, "module-abacusai.api_client_utils"]], "abacusai.api_endpoint": [[15, "module-abacusai.api_endpoint"]], "abacusai.api_key": [[16, "module-abacusai.api_key"]], "abacusai.application_connector": [[17, "module-abacusai.application_connector"]], "abacusai.batch_prediction": [[18, "module-abacusai.batch_prediction"]], "abacusai.batch_prediction_version": [[19, "module-abacusai.batch_prediction_version"]], "abacusai.categorical_range_violation": [[20, "module-abacusai.categorical_range_violation"]], "abacusai.chat_message": [[21, "module-abacusai.chat_message"]], "abacusai.chat_session": [[22, "module-abacusai.chat_session"]], "abacusai.client": [[23, "module-abacusai.client"]], "abacusai.code_source": [[24, "module-abacusai.code_source"]], "abacusai.concatenation_config": [[25, "module-abacusai.concatenation_config"]], "abacusai.cryptography": [[26, "module-abacusai.cryptography"]], "abacusai.custom_loss_function": [[27, "module-abacusai.custom_loss_function"]], "abacusai.custom_metric": [[28, "module-abacusai.custom_metric"]], "abacusai.custom_metric_version": [[29, "module-abacusai.custom_metric_version"]], "abacusai.custom_train_function_info": [[30, "module-abacusai.custom_train_function_info"]], "abacusai.data_consistency_duplication": [[31, "module-abacusai.data_consistency_duplication"]], "abacusai.data_prep_logs": [[32, "module-abacusai.data_prep_logs"]], "abacusai.data_quality_results": [[33, "module-abacusai.data_quality_results"]], "abacusai.database_connector": [[34, "module-abacusai.database_connector"]], "abacusai.dataset": [[35, "module-abacusai.dataset"]], "abacusai.dataset_column": [[36, "module-abacusai.dataset_column"]], "abacusai.dataset_version": [[37, "module-abacusai.dataset_version"]], "abacusai.deployment": [[38, "module-abacusai.deployment"]], "abacusai.deployment_auth_token": [[39, "module-abacusai.deployment_auth_token"]], "abacusai.document": [[40, "module-abacusai.document"]], "abacusai.document_annotation": [[41, "module-abacusai.document_annotation"]], "abacusai.document_store": [[42, "module-abacusai.document_store"]], "abacusai.document_store_import": [[43, "module-abacusai.document_store_import"]], "abacusai.drift_distribution": [[44, "module-abacusai.drift_distribution"]], "abacusai.drift_distributions": [[45, "module-abacusai.drift_distributions"]], "abacusai.eda": [[46, "module-abacusai.eda"]], "abacusai.eda_chart_description": [[47, "module-abacusai.eda_chart_description"]], "abacusai.eda_collinearity": [[48, "module-abacusai.eda_collinearity"]], "abacusai.eda_data_consistency": [[49, "module-abacusai.eda_data_consistency"]], "abacusai.eda_feature_association": [[50, "module-abacusai.eda_feature_association"]], "abacusai.eda_feature_collinearity": [[51, "module-abacusai.eda_feature_collinearity"]], "abacusai.eda_forecasting_analysis": [[52, "module-abacusai.eda_forecasting_analysis"]], "abacusai.eda_version": [[53, "module-abacusai.eda_version"]], "abacusai.embedding_feature_drift_distribution": [[54, "module-abacusai.embedding_feature_drift_distribution"]], "abacusai.execute_feature_group_operation": [[55, "module-abacusai.execute_feature_group_operation"]], "abacusai.feature": [[56, "module-abacusai.feature"]], "abacusai.feature_distribution": [[57, "module-abacusai.feature_distribution"]], "abacusai.feature_drift_summary": [[58, "module-abacusai.feature_drift_summary"]], "abacusai.feature_group": [[59, "module-abacusai.feature_group"]], "abacusai.feature_group_export": [[60, "module-abacusai.feature_group_export"]], "abacusai.feature_group_export_config": [[61, "module-abacusai.feature_group_export_config"]], "abacusai.feature_group_export_download_url": [[62, "module-abacusai.feature_group_export_download_url"]], "abacusai.feature_group_lineage": [[63, "module-abacusai.feature_group_lineage"]], "abacusai.feature_group_metrics": [[64, "module-abacusai.feature_group_metrics"]], "abacusai.feature_group_refresh_export_config": [[65, "module-abacusai.feature_group_refresh_export_config"]], "abacusai.feature_group_template": [[66, "module-abacusai.feature_group_template"]], "abacusai.feature_group_template_variable_options": [[67, "module-abacusai.feature_group_template_variable_options"]], "abacusai.feature_group_version": [[68, "module-abacusai.feature_group_version"]], "abacusai.feature_importance": [[69, "module-abacusai.feature_importance"]], "abacusai.feature_record": [[70, "module-abacusai.feature_record"]], "abacusai.file_connector": [[71, "module-abacusai.file_connector"]], "abacusai.file_connector_instructions": [[72, "module-abacusai.file_connector_instructions"]], "abacusai.file_connector_verification": [[73, "module-abacusai.file_connector_verification"]], "abacusai.forecasting_analysis_graph_data": [[74, "module-abacusai.forecasting_analysis_graph_data"]], "abacusai.function_logs": [[75, "module-abacusai.function_logs"]], "abacusai.generated_pit_feature_config_option": [[76, "module-abacusai.generated_pit_feature_config_option"]], "abacusai.graph_dashboard": [[77, "module-abacusai.graph_dashboard"]], "abacusai": [[78, "module-abacusai"]], "Subpackages": [[78, "subpackages"]], "abacusai.indexing_config": [[79, "module-abacusai.indexing_config"]], "abacusai.item_statistics": [[80, "module-abacusai.item_statistics"]], "abacusai.llm_code_block": [[81, "module-abacusai.llm_code_block"]], "abacusai.llm_input": [[82, "module-abacusai.llm_input"]], "abacusai.llm_parameters": [[83, "module-abacusai.llm_parameters"]], "abacusai.llm_response": [[84, "module-abacusai.llm_response"]], "abacusai.model": [[85, "module-abacusai.model"]], "abacusai.model_artifacts_export": [[86, "module-abacusai.model_artifacts_export"]], "abacusai.model_blueprint_export": [[87, "module-abacusai.model_blueprint_export"]], "abacusai.model_blueprint_stage": [[88, "module-abacusai.model_blueprint_stage"]], "abacusai.model_location": [[89, "module-abacusai.model_location"]], "abacusai.model_metrics": [[90, "module-abacusai.model_metrics"]], "abacusai.model_monitor": [[91, "module-abacusai.model_monitor"]], "abacusai.model_monitor_org_summary": [[92, "module-abacusai.model_monitor_org_summary"]], "abacusai.model_monitor_summary": [[93, "module-abacusai.model_monitor_summary"]], "abacusai.model_monitor_summary_from_org": [[94, "module-abacusai.model_monitor_summary_from_org"]], "abacusai.model_monitor_version": [[95, "module-abacusai.model_monitor_version"]], "abacusai.model_monitor_version_metric_data": [[96, "module-abacusai.model_monitor_version_metric_data"]], "abacusai.model_training_type_for_deployment": [[97, "module-abacusai.model_training_type_for_deployment"]], "abacusai.model_upload": [[98, "module-abacusai.model_upload"]], "abacusai.model_version": [[99, "module-abacusai.model_version"]], "abacusai.modification_lock_info": [[100, "module-abacusai.modification_lock_info"]], "abacusai.module": [[101, "module-abacusai.module"]], "abacusai.monitor_alert": [[102, "module-abacusai.monitor_alert"]], "abacusai.monitor_alert_version": [[103, "module-abacusai.monitor_alert_version"]], "abacusai.natural_language_explanation": [[104, "module-abacusai.natural_language_explanation"]], "abacusai.nested_feature": [[105, "module-abacusai.nested_feature"]], "abacusai.null_violation": [[106, "module-abacusai.null_violation"]], "abacusai.organization_group": [[107, "module-abacusai.organization_group"]], "abacusai.organization_search_result": [[108, "module-abacusai.organization_search_result"]], "abacusai.pipeline": [[109, "module-abacusai.pipeline"]], "abacusai.pipeline_reference": [[110, "module-abacusai.pipeline_reference"]], "abacusai.pipeline_step": [[111, "module-abacusai.pipeline_step"]], "abacusai.pipeline_step_version": [[112, "module-abacusai.pipeline_step_version"]], "abacusai.pipeline_step_version_reference": [[113, "module-abacusai.pipeline_step_version_reference"]], "abacusai.pipeline_version": [[114, "module-abacusai.pipeline_version"]], "abacusai.point_in_time_feature": [[115, "module-abacusai.point_in_time_feature"]], "abacusai.point_in_time_group": [[116, "module-abacusai.point_in_time_group"]], "abacusai.point_in_time_group_feature": [[117, "module-abacusai.point_in_time_group_feature"]], "abacusai.prediction_client": [[118, "module-abacusai.prediction_client"]], "abacusai.prediction_dataset": [[119, "module-abacusai.prediction_dataset"]], "abacusai.prediction_feature_group": [[120, "module-abacusai.prediction_feature_group"]], "abacusai.prediction_input": [[121, "module-abacusai.prediction_input"]], "abacusai.prediction_metric": [[122, "module-abacusai.prediction_metric"]], "abacusai.prediction_metric_version": [[123, "module-abacusai.prediction_metric_version"]], "abacusai.problem_type": [[124, "module-abacusai.problem_type"]], "abacusai.project": [[125, "module-abacusai.project"]], "abacusai.project_config": [[126, "module-abacusai.project_config"]], "abacusai.project_dataset": [[127, "module-abacusai.project_dataset"]], "abacusai.project_validation": [[128, "module-abacusai.project_validation"]], "abacusai.python_function": [[129, "module-abacusai.python_function"]], "abacusai.python_function_validator": [[130, "module-abacusai.python_function_validator"]], "abacusai.python_plot_function": [[131, "module-abacusai.python_plot_function"]], "abacusai.range_violation": [[132, "module-abacusai.range_violation"]], "abacusai.refresh_pipeline_run": [[133, "module-abacusai.refresh_pipeline_run"]], "abacusai.refresh_policy": [[134, "module-abacusai.refresh_policy"]], "abacusai.refresh_schedule": [[135, "module-abacusai.refresh_schedule"]], "abacusai.resolved_feature_group_template": [[136, "module-abacusai.resolved_feature_group_template"]], "abacusai.return_class": [[137, "module-abacusai.return_class"]], "abacusai.schema": [[138, "module-abacusai.schema"]], "abacusai.streaming_auth_token": [[139, "module-abacusai.streaming_auth_token"]], "abacusai.streaming_client": [[140, "module-abacusai.streaming_client"]], "abacusai.streaming_connector": [[141, "module-abacusai.streaming_connector"]], "abacusai.training_config_options": [[142, "module-abacusai.training_config_options"]], "abacusai.type_violation": [[143, "module-abacusai.type_violation"]], "abacusai.upload": [[144, "module-abacusai.upload"]], "abacusai.upload_part": [[145, "module-abacusai.upload_part"]], "abacusai.use_case": [[146, "module-abacusai.use_case"]], "abacusai.use_case_requirements": [[147, "module-abacusai.use_case_requirements"]], "abacusai.user": [[148, "module-abacusai.user"]], "abacusai.user_exception": [[149, "module-abacusai.user_exception"]], "abacusai.vector_store": [[150, "module-abacusai.vector_store"]], "abacusai.vector_store_lookup_result": [[151, "module-abacusai.vector_store_lookup_result"]], "abacusai.vector_store_version": [[152, "module-abacusai.vector_store_version"]], "abacusai.webhook": [[153, "module-abacusai.webhook"]]}, "indexentries": {"algorithm (class in abacusai.algorithm)": [[0, "abacusai.algorithm.Algorithm"]], "__repr__() (abacusai.algorithm.algorithm method)": [[0, "abacusai.algorithm.Algorithm.__repr__"]], "abacusai.algorithm": [[0, "module-abacusai.algorithm"]], "module": [[0, "module-abacusai.algorithm"], [1, "module-abacusai.annotation"], [2, "module-abacusai.annotation_config"], [3, "module-abacusai.annotation_entry"], [4, "module-abacusai.annotations_status"], [5, "module-abacusai.api_class.abstract"], [6, "module-abacusai.api_class.dataset"], [7, "module-abacusai.api_class.enums"], [8, "module-abacusai.api_class.feature_group"], [9, "module-abacusai.api_class"], [10, "module-abacusai.api_class.model"], [11, "module-abacusai.api_class.project"], [12, "module-abacusai.api_class.python_functions"], [13, "module-abacusai.api_class.refresh"], [14, "module-abacusai.api_client_utils"], [15, "module-abacusai.api_endpoint"], [16, "module-abacusai.api_key"], [17, "module-abacusai.application_connector"], [18, "module-abacusai.batch_prediction"], [19, "module-abacusai.batch_prediction_version"], [20, "module-abacusai.categorical_range_violation"], [21, "module-abacusai.chat_message"], [22, "module-abacusai.chat_session"], [23, "module-abacusai.client"], [24, "module-abacusai.code_source"], [25, "module-abacusai.concatenation_config"], [26, "module-abacusai.cryptography"], [27, "module-abacusai.custom_loss_function"], [28, "module-abacusai.custom_metric"], [29, "module-abacusai.custom_metric_version"], [30, "module-abacusai.custom_train_function_info"], [31, "module-abacusai.data_consistency_duplication"], [32, "module-abacusai.data_prep_logs"], [33, "module-abacusai.data_quality_results"], [34, "module-abacusai.database_connector"], [35, "module-abacusai.dataset"], [36, "module-abacusai.dataset_column"], [37, "module-abacusai.dataset_version"], [38, "module-abacusai.deployment"], [39, "module-abacusai.deployment_auth_token"], [40, "module-abacusai.document"], [41, "module-abacusai.document_annotation"], [42, "module-abacusai.document_store"], [43, "module-abacusai.document_store_import"], [44, "module-abacusai.drift_distribution"], [45, "module-abacusai.drift_distributions"], [46, "module-abacusai.eda"], [47, "module-abacusai.eda_chart_description"], [48, "module-abacusai.eda_collinearity"], [49, "module-abacusai.eda_data_consistency"], [50, "module-abacusai.eda_feature_association"], [51, "module-abacusai.eda_feature_collinearity"], [52, "module-abacusai.eda_forecasting_analysis"], [53, "module-abacusai.eda_version"], [54, "module-abacusai.embedding_feature_drift_distribution"], [55, "module-abacusai.execute_feature_group_operation"], [56, "module-abacusai.feature"], [57, "module-abacusai.feature_distribution"], [58, "module-abacusai.feature_drift_summary"], [59, "module-abacusai.feature_group"], [60, "module-abacusai.feature_group_export"], [61, "module-abacusai.feature_group_export_config"], [62, "module-abacusai.feature_group_export_download_url"], [63, "module-abacusai.feature_group_lineage"], [64, "module-abacusai.feature_group_metrics"], [65, "module-abacusai.feature_group_refresh_export_config"], [66, "module-abacusai.feature_group_template"], [67, "module-abacusai.feature_group_template_variable_options"], [68, "module-abacusai.feature_group_version"], [69, "module-abacusai.feature_importance"], [70, "module-abacusai.feature_record"], [71, "module-abacusai.file_connector"], [72, "module-abacusai.file_connector_instructions"], [73, "module-abacusai.file_connector_verification"], [74, "module-abacusai.forecasting_analysis_graph_data"], [75, "module-abacusai.function_logs"], [76, "module-abacusai.generated_pit_feature_config_option"], [77, "module-abacusai.graph_dashboard"], [78, "module-abacusai"], [79, "module-abacusai.indexing_config"], [80, "module-abacusai.item_statistics"], [81, "module-abacusai.llm_code_block"], [82, "module-abacusai.llm_input"], [83, "module-abacusai.llm_parameters"], [84, "module-abacusai.llm_response"], [85, "module-abacusai.model"], [86, "module-abacusai.model_artifacts_export"], [87, "module-abacusai.model_blueprint_export"], [88, "module-abacusai.model_blueprint_stage"], [89, "module-abacusai.model_location"], [90, "module-abacusai.model_metrics"], [91, "module-abacusai.model_monitor"], [92, "module-abacusai.model_monitor_org_summary"], [93, "module-abacusai.model_monitor_summary"], [94, "module-abacusai.model_monitor_summary_from_org"], [95, "module-abacusai.model_monitor_version"], [96, "module-abacusai.model_monitor_version_metric_data"], [97, "module-abacusai.model_training_type_for_deployment"], [98, "module-abacusai.model_upload"], [99, "module-abacusai.model_version"], [100, "module-abacusai.modification_lock_info"], [101, "module-abacusai.module"], [102, "module-abacusai.monitor_alert"], [103, "module-abacusai.monitor_alert_version"], [104, "module-abacusai.natural_language_explanation"], [105, "module-abacusai.nested_feature"], [106, "module-abacusai.null_violation"], [107, "module-abacusai.organization_group"], [108, "module-abacusai.organization_search_result"], [109, "module-abacusai.pipeline"], [110, "module-abacusai.pipeline_reference"], [111, "module-abacusai.pipeline_step"], [112, "module-abacusai.pipeline_step_version"], [113, "module-abacusai.pipeline_step_version_reference"], [114, "module-abacusai.pipeline_version"], [115, "module-abacusai.point_in_time_feature"], [116, "module-abacusai.point_in_time_group"], [117, "module-abacusai.point_in_time_group_feature"], [118, "module-abacusai.prediction_client"], [119, "module-abacusai.prediction_dataset"], [120, "module-abacusai.prediction_feature_group"], [121, "module-abacusai.prediction_input"], [122, "module-abacusai.prediction_metric"], [123, "module-abacusai.prediction_metric_version"], [124, "module-abacusai.problem_type"], [125, "module-abacusai.project"], [126, "module-abacusai.project_config"], [127, "module-abacusai.project_dataset"], [128, "module-abacusai.project_validation"], [129, "module-abacusai.python_function"], [130, "module-abacusai.python_function_validator"], [131, "module-abacusai.python_plot_function"], [132, "module-abacusai.range_violation"], [133, "module-abacusai.refresh_pipeline_run"], [134, "module-abacusai.refresh_policy"], [135, "module-abacusai.refresh_schedule"], [136, "module-abacusai.resolved_feature_group_template"], [137, "module-abacusai.return_class"], [138, "module-abacusai.schema"], [139, "module-abacusai.streaming_auth_token"], [140, "module-abacusai.streaming_client"], [141, "module-abacusai.streaming_connector"], [142, "module-abacusai.training_config_options"], [143, "module-abacusai.type_violation"], [144, "module-abacusai.upload"], [145, "module-abacusai.upload_part"], [146, "module-abacusai.use_case"], [147, "module-abacusai.use_case_requirements"], [148, "module-abacusai.user"], [149, "module-abacusai.user_exception"], [150, "module-abacusai.vector_store"], [151, "module-abacusai.vector_store_lookup_result"], [152, "module-abacusai.vector_store_version"], [153, "module-abacusai.webhook"]], "to_dict() (abacusai.algorithm.algorithm method)": [[0, "abacusai.algorithm.Algorithm.to_dict"]], "annotation (class in abacusai.annotation)": [[1, "abacusai.annotation.Annotation"]], "__repr__() (abacusai.annotation.annotation method)": [[1, "abacusai.annotation.Annotation.__repr__"]], "abacusai.annotation": [[1, "module-abacusai.annotation"]], "to_dict() (abacusai.annotation.annotation method)": [[1, "abacusai.annotation.Annotation.to_dict"]], "annotationconfig (class in abacusai.annotation_config)": [[2, "abacusai.annotation_config.AnnotationConfig"]], "__repr__() (abacusai.annotation_config.annotationconfig method)": [[2, "abacusai.annotation_config.AnnotationConfig.__repr__"]], "abacusai.annotation_config": [[2, "module-abacusai.annotation_config"]], "to_dict() (abacusai.annotation_config.annotationconfig method)": [[2, "abacusai.annotation_config.AnnotationConfig.to_dict"]], "annotationentry (class in abacusai.annotation_entry)": [[3, "abacusai.annotation_entry.AnnotationEntry"]], "__repr__() (abacusai.annotation_entry.annotationentry method)": [[3, "abacusai.annotation_entry.AnnotationEntry.__repr__"]], "abacusai.annotation_entry": [[3, "module-abacusai.annotation_entry"]], "to_dict() (abacusai.annotation_entry.annotationentry method)": [[3, "abacusai.annotation_entry.AnnotationEntry.to_dict"]], "annotationsstatus (class in abacusai.annotations_status)": [[4, "abacusai.annotations_status.AnnotationsStatus"]], "__repr__() (abacusai.annotations_status.annotationsstatus method)": [[4, "abacusai.annotations_status.AnnotationsStatus.__repr__"]], "abacusai.annotations_status": [[4, "module-abacusai.annotations_status"]], "to_dict() (abacusai.annotations_status.annotationsstatus method)": [[4, "abacusai.annotations_status.AnnotationsStatus.to_dict"]], "all_cap_re (in module abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.ALL_CAP_RE"]], "apiclass (class in abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.ApiClass"]], "first_cap_re (in module abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.FIRST_CAP_RE"]], "_apiclassfactory (class in abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract._ApiClassFactory"]], "__post_init__() (abacusai.api_class.abstract.apiclass method)": [[5, "abacusai.api_class.abstract.ApiClass.__post_init__"]], "_support_kwargs (abacusai.api_class.abstract.apiclass attribute)": [[5, "abacusai.api_class.abstract.ApiClass._support_kwargs"]], "_upper_snake_case_keys (abacusai.api_class.abstract.apiclass attribute)": [[5, "abacusai.api_class.abstract.ApiClass._upper_snake_case_keys"]], "abacusai.api_class.abstract": [[5, "module-abacusai.api_class.abstract"]], "camel_case() (in module abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.camel_case"]], "config_abstract_class (abacusai.api_class.abstract._apiclassfactory attribute)": [[5, "abacusai.api_class.abstract._ApiClassFactory.config_abstract_class"]], "config_class_key (abacusai.api_class.abstract._apiclassfactory attribute)": [[5, "abacusai.api_class.abstract._ApiClassFactory.config_class_key"]], "config_class_map (abacusai.api_class.abstract._apiclassfactory attribute)": [[5, "abacusai.api_class.abstract._ApiClassFactory.config_class_map"]], "from_dict() (abacusai.api_class.abstract.apiclass class method)": [[5, "abacusai.api_class.abstract.ApiClass.from_dict"]], "from_dict() (abacusai.api_class.abstract._apiclassfactory class method)": [[5, "abacusai.api_class.abstract._ApiClassFactory.from_dict"]], "snake_case() (in module abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.snake_case"]], "to_dict() (abacusai.api_class.abstract.apiclass method)": [[5, "abacusai.api_class.abstract.ApiClass.to_dict"]], "upper_snake_case() (in module abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.upper_snake_case"]], "parsingconfig (class in abacusai.api_class.dataset)": [[6, "abacusai.api_class.dataset.ParsingConfig"]], "abacusai.api_class.dataset": [[6, "module-abacusai.api_class.dataset"]], "csv_delimiter (abacusai.api_class.dataset.parsingconfig attribute)": [[6, "abacusai.api_class.dataset.ParsingConfig.csv_delimiter"]], "escape (abacusai.api_class.dataset.parsingconfig attribute)": [[6, "abacusai.api_class.dataset.ParsingConfig.escape"]], "file_path_with_schema (abacusai.api_class.dataset.parsingconfig attribute)": [[6, "abacusai.api_class.dataset.ParsingConfig.file_path_with_schema"]], "accuracy (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.ACCURACY"]], "accuracy (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.ACCURACY"]], "ai_agent (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.AI_AGENT"]], "ancestral_simulation (abacusai.api_class.enums.forecastingquanitlesextensionmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingQuanitlesExtensionMethod.ANCESTRAL_SIMULATION"]], "annotations_precision (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.ANNOTATIONS_PRECISION"]], "annotations_recall (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.ANNOTATIONS_RECALL"]], "anomaly_detection (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.ANOMALY_DETECTION"]], "anomaly_outliers (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.ANOMALY_OUTLIERS"]], "application (abacusai.api_class.enums.connectortype attribute)": [[7, "abacusai.api_class.enums.ConnectorType.APPLICATION"]], "asymmetric_mean_absolute_percentage_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "au (abacusai.api_class.enums.holidaycalendars attribute)": [[7, "abacusai.api_class.enums.HolidayCalendars.AU"]], "auc (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.AUC"]], "auc (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.AUC"]], "auto (abacusai.api_class.enums.forecastingdatasplittype attribute)": [[7, "abacusai.api_class.enums.ForecastingDataSplitType.AUTO"]], "auto (abacusai.api_class.enums.nlpdocumentformat attribute)": [[7, "abacusai.api_class.enums.NLPDocumentFormat.AUTO"]], "automatic (abacusai.api_class.enums.clusteringimputationmethod attribute)": [[7, "abacusai.api_class.enums.ClusteringImputationMethod.AUTOMATIC"]], "automatic (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.AUTOMATIC"]], "average (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.AVERAGE"]], "apienum (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ApiEnum"]], "back (abacusai.api_class.enums.forecastingfillmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingFillMethod.BACK"]], "backfill (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.BACKFILL"]], "batch_1024 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_1024"]], "batch_128 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_128"]], "batch_16 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_16"]], "batch_256 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_256"]], "batch_32 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_32"]], "batch_384 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_384"]], "batch_512 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_512"]], "batch_64 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_64"]], "batch_740 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_740"]], "batch_8 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_8"]], "batch_prediction_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.BATCH_PREDICTION_ID"]], "bias (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.BIAS"]], "boolean (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.BOOLEAN"]], "box_cox (abacusai.api_class.enums.regressiontargettransform attribute)": [[7, "abacusai.api_class.enums.RegressionTargetTransform.BOX_COX"]], "batchsize (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.BatchSize"]], "clustering (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.CLUSTERING"]], "clustering_timeseries (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.CLUSTERING_TIMESERIES"]], "cmape (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.CMAPE"]], "coverage (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.COVERAGE"]], "cross_entropy (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.CROSS_ENTROPY"]], "cumulative_forecasting (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.CUMULATIVE_FORECASTING"]], "custom (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.CUSTOM"]], "custom (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.CUSTOM"]], "custom (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.CUSTOM"]], "custom_algorithm (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.CUSTOM_ALGORITHM"]], "custom_trained_model (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.CUSTOM_TRAINED_MODEL"]], "cv (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.CV"]], "clusteringimputationmethod (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ClusteringImputationMethod"]], "connectortype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ConnectorType"]], "daily (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.DAILY"]], "database (abacusai.api_class.enums.connectortype attribute)": [[7, "abacusai.api_class.enums.ConnectorType.DATABASE"]], "dataset_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.DATASET_ID"]], "deployment_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.DEPLOYMENT_ID"]], "direct (abacusai.api_class.enums.forecastingquanitlesextensionmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingQuanitlesExtensionMethod.DIRECT"]], "doc (abacusai.api_class.enums.nlpdocumentformat attribute)": [[7, "abacusai.api_class.enums.NLPDocumentFormat.DOC"]], "document_classification (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.DOCUMENT_CLASSIFICATION"]], "document_summarization (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.DOCUMENT_SUMMARIZATION"]], "document_visualization (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.DOCUMENT_VISUALIZATION"]], "emotion (abacusai.api_class.enums.sentimenttype attribute)": [[7, "abacusai.api_class.enums.SentimentType.EMOTION"]], "experimental (abacusai.api_class.enums.personalizationtrainingmode attribute)": [[7, "abacusai.api_class.enums.PersonalizationTrainingMode.EXPERIMENTAL"]], "experimentationmode (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ExperimentationMode"]], "f1_score (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.F1_SCORE"]], "feature_group (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.FEATURE_GROUP"]], "feature_group_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.FEATURE_GROUP_ID"]], "feature_store (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.FEATURE_STORE"]], "file (abacusai.api_class.enums.connectortype attribute)": [[7, "abacusai.api_class.enums.ConnectorType.FILE"]], "float (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.FLOAT"]], "focal_cross_entropy (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.FOCAL_CROSS_ENTROPY"]], "forecasting (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.FORECASTING"]], "forwardfill (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.FORWARDFILL"]], "future (abacusai.api_class.enums.forecastingfillmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingFillMethod.FUTURE"]], "filllogic (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.FillLogic"]], "forecastingdatasplittype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingDataSplitType"]], "forecastingfillmethod (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingFillMethod"]], "forecastingfrequency (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingFrequency"]], "forecastinglocalscaling (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling"]], "forecastinglossfunction (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingLossFunction"]], "forecastingobjective (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingObjective"]], "forecastingquanitlesextensionmethod (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingQuanitlesExtensionMethod"]], "gaussian (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.GAUSSIAN"]], "gaussian_full_covariance (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.GAUSSIAN_FULL_COVARIANCE"]], "guassian_exponential (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.GUASSIAN_EXPONENTIAL"]], "hourly (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.HOURLY"]], "huber (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.HUBER"]], "holidaycalendars (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.HolidayCalendars"]], "image_classification (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.IMAGE_CLASSIFICATION"]], "image_value_prediction (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.IMAGE_VALUE_PREDICTION"]], "integer (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.INTEGER"]], "interpolate (abacusai.api_class.enums.clusteringimputationmethod attribute)": [[7, "abacusai.api_class.enums.ClusteringImputationMethod.INTERPOLATE"]], "item (abacusai.api_class.enums.forecastingdatasplittype attribute)": [[7, "abacusai.api_class.enums.ForecastingDataSplitType.ITEM"]], "item (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.ITEM"]], "json (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.JSON"]], "language_detection (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.LANGUAGE_DETECTION"]], "last_n (abacusai.api_class.enums.mergemode attribute)": [[7, "abacusai.api_class.enums.MergeMode.LAST_N"]], "last_point (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.LAST_POINT"]], "learned (abacusai.api_class.enums.nermodeltype attribute)": [[7, "abacusai.api_class.enums.NERModelType.LEARNED"]], "linear (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.LINEAR"]], "list (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.LIST"]], "log (abacusai.api_class.enums.regressiontargettransform attribute)": [[7, "abacusai.api_class.enums.RegressionTargetTransform.LOG"]], "log_loss (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.LOG_LOSS"]], "log_loss (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.LOG_LOSS"]], "log_root_mean_square_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.LOG_ROOT_MEAN_SQUARE_ERROR"]], "mae (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.MAE"]], "mae (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.MAE"]], "map (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.MAP"]], "mape (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.MAPE"]], "mape (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.MAPE"]], "mape (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.MAPE"]], "map_10 (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.MAP_10"]], "map_5 (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.MAP_5"]], "max (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.MAX"]], "mean_absolute_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.MEAN_ABSOLUTE_ERROR"]], "mean_absolute_percentage_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "median (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.MEDIAN"]], "middle (abacusai.api_class.enums.forecastingfillmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingFillMethod.MIDDLE"]], "min (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.MIN"]], "min_max (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.MIN_MAX"]], "min_std (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.MIN_STD"]], "mix_gaussians (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.MIX_GAUSSIANS"]], "model_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.MODEL_ID"]], "model_monitoring (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.MODEL_MONITORING"]], "monitor_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.MONITOR_ID"]], "month_end (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.MONTH_END"]], "month_start (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.MONTH_START"]], "mrr (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.MRR"]], "mse (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.MSE"]], "msle (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.MSLE"]], "mergemode (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.MergeMode"]], "named_entity_extraction (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.NAMED_ENTITY_EXTRACTION"]], "natural_language_search (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.NATURAL_LANGUAGE_SEARCH"]], "ndcg (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.NDCG"]], "ndcg_10 (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.NDCG_10"]], "ndcg_5 (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.NDCG_5"]], "nearest (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.NEAREST"]], "negative_binomial (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.NEGATIVE_BINOMIAL"]], "nermodeltype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.NERModelType"]], "nerobjective (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.NERObjective"]], "nlpdocumentformat (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.NLPDocumentFormat"]], "normalized_mean_absolute_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.NORMALIZED_MEAN_ABSOLUTE_ERROR"]], "normalized_root_mean_square_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.NORMALIZED_ROOT_MEAN_SQUARE_ERROR"]], "n_sampling (abacusai.api_class.enums.samplingmethodtype attribute)": [[7, "abacusai.api_class.enums.SamplingMethodType.N_SAMPLING"]], "object_detection (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.OBJECT_DETECTION"]], "optimization (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.OPTIMIZATION"]], "peaks_mean_absolute_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.PEAKS_MEAN_ABSOLUTE_ERROR"]], "percent_sampling (abacusai.api_class.enums.samplingmethodtype attribute)": [[7, "abacusai.api_class.enums.SamplingMethodType.PERCENT_SAMPLING"]], "personalization (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.PERSONALIZATION"]], "personalization (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.PERSONALIZATION"]], "pointwise_accuracy (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.POINTWISE_ACCURACY"]], "precision (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.PRECISION"]], "precision (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.PRECISION"]], "prediction_length (abacusai.api_class.enums.forecastingdatasplittype attribute)": [[7, "abacusai.api_class.enums.ForecastingDataSplitType.PREDICTION_LENGTH"]], "predictive_modeling (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.PREDICTIVE_MODELING"]], "pretrained_bert (abacusai.api_class.enums.nermodeltype attribute)": [[7, "abacusai.api_class.enums.NERModelType.PRETRAINED_BERT"]], "pretrained_models (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.PRETRAINED_MODELS"]], "pretrained_multilingual (abacusai.api_class.enums.nermodeltype attribute)": [[7, "abacusai.api_class.enums.NERModelType.PRETRAINED_MULTILINGUAL"]], "pretrained_roberta_27 (abacusai.api_class.enums.nermodeltype attribute)": [[7, "abacusai.api_class.enums.NERModelType.PRETRAINED_ROBERTA_27"]], "pretrained_roberta_43 (abacusai.api_class.enums.nermodeltype attribute)": [[7, "abacusai.api_class.enums.NERModelType.PRETRAINED_ROBERTA_43"]], "production (abacusai.api_class.enums.personalizationtrainingmode attribute)": [[7, "abacusai.api_class.enums.PersonalizationTrainingMode.PRODUCTION"]], "personalizationobjective (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.PersonalizationObjective"]], "personalizationtrainingmode (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.PersonalizationTrainingMode"]], "problemtype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ProblemType"]], "pythonfunctionargumenttype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType"]], "quadratic (abacusai.api_class.enums.forecastingquanitlesextensionmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingQuanitlesExtensionMethod.QUADRATIC"]], "quantile (abacusai.api_class.enums.regressiontargettransform attribute)": [[7, "abacusai.api_class.enums.RegressionTargetTransform.QUANTILE"]], "quarter_end (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.QUARTER_END"]], "quarter_start (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.QUARTER_START"]], "random (abacusai.api_class.enums.regressiontypeofsplit attribute)": [[7, "abacusai.api_class.enums.RegressionTypeOfSplit.RANDOM"]], "rapid (abacusai.api_class.enums.experimentationmode attribute)": [[7, "abacusai.api_class.enums.ExperimentationMode.RAPID"]], "rapid (abacusai.api_class.enums.regressiontreehpomode attribute)": [[7, "abacusai.api_class.enums.RegressionTreeHPOMode.RAPID"]], "recall (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.RECALL"]], "recall (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.RECALL"]], "resample (abacusai.api_class.enums.regressionaugmentationstrategy attribute)": [[7, "abacusai.api_class.enums.RegressionAugmentationStrategy.RESAMPLE"]], "rmse (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.RMSE"]], "rmse (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.RMSE"]], "robust (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.ROBUST"]], "root_mean_square_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.ROOT_MEAN_SQUARE_ERROR"]], "row_indicator_based (abacusai.api_class.enums.regressiontypeofsplit attribute)": [[7, "abacusai.api_class.enums.RegressionTypeOfSplit.ROW_INDICATOR_BASED"]], "r_squared_coefficient_of_determination (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.R_SQUARED_COEFFICIENT_OF_DETERMINATION"]], "regressionaugmentationstrategy (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionAugmentationStrategy"]], "regressionlossfunction (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionLossFunction"]], "regressionobjective (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionObjective"]], "regressiontargettransform (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionTargetTransform"]], "regressiontimesplitmethod (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionTimeSplitMethod"]], "regressiontreehpomode (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionTreeHPOMode"]], "regressiontypeofsplit (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionTypeOfSplit"]], "sentence_boundary_detection (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.SENTENCE_BOUNDARY_DETECTION"]], "sentiment_detection (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.SENTIMENT_DETECTION"]], "sliding_zscore (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.SLIDING_ZSCORE"]], "smote (abacusai.api_class.enums.regressionaugmentationstrategy attribute)": [[7, "abacusai.api_class.enums.RegressionAugmentationStrategy.SMOTE"]], "srmse (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.SRMSE"]], "stable_standardized_mean_absolute_percentage_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "streaming (abacusai.api_class.enums.connectortype attribute)": [[7, "abacusai.api_class.enums.ConnectorType.STREAMING"]], "string (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.STRING"]], "samplingmethodtype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.SamplingMethodType"]], "sentimenttype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.SentimentType"]], "test_split_percentage_based (abacusai.api_class.enums.regressiontimesplitmethod attribute)": [[7, "abacusai.api_class.enums.RegressionTimeSplitMethod.TEST_SPLIT_PERCENTAGE_BASED"]], "test_start_timestamp_based (abacusai.api_class.enums.regressiontimesplitmethod attribute)": [[7, "abacusai.api_class.enums.RegressionTimeSplitMethod.TEST_START_TIMESTAMP_BASED"]], "text (abacusai.api_class.enums.nlpdocumentformat attribute)": [[7, "abacusai.api_class.enums.NLPDocumentFormat.TEXT"]], "theme_analysis (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.THEME_ANALYSIS"]], "thorough (abacusai.api_class.enums.experimentationmode attribute)": [[7, "abacusai.api_class.enums.ExperimentationMode.THOROUGH"]], "thorough (abacusai.api_class.enums.regressiontreehpomode attribute)": [[7, "abacusai.api_class.enums.RegressionTreeHPOMode.THOROUGH"]], "timestamp (abacusai.api_class.enums.forecastingdatasplittype attribute)": [[7, "abacusai.api_class.enums.ForecastingDataSplitType.TIMESTAMP"]], "timestamp_based (abacusai.api_class.enums.regressiontypeofsplit attribute)": [[7, "abacusai.api_class.enums.RegressionTypeOfSplit.TIMESTAMP_BASED"]], "time_window (abacusai.api_class.enums.mergemode attribute)": [[7, "abacusai.api_class.enums.MergeMode.TIME_WINDOW"]], "tokens (abacusai.api_class.enums.nlpdocumentformat attribute)": [[7, "abacusai.api_class.enums.NLPDocumentFormat.TOKENS"]], "tweedie (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.TWEEDIE"]], "uk (abacusai.api_class.enums.holidaycalendars attribute)": [[7, "abacusai.api_class.enums.HolidayCalendars.UK"]], "us (abacusai.api_class.enums.holidaycalendars attribute)": [[7, "abacusai.api_class.enums.HolidayCalendars.US"]], "valence (abacusai.api_class.enums.sentimenttype attribute)": [[7, "abacusai.api_class.enums.SentimentType.VALENCE"]], "wape (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.WAPE"]], "wape (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.WAPE"]], "weekly_monday_start (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.WEEKLY_MONDAY_START"]], "weekly_saturday_start (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.WEEKLY_SATURDAY_START"]], "weekly_sunday_start (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.WEEKLY_SUNDAY_START"]], "weibull (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.WEIBULL"]], "yearly (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.YEARLY"]], "yeo_johnson (abacusai.api_class.enums.regressiontargettransform attribute)": [[7, "abacusai.api_class.enums.RegressionTargetTransform.YEO_JOHNSON"]], "zeros (abacusai.api_class.enums.clusteringimputationmethod attribute)": [[7, "abacusai.api_class.enums.ClusteringImputationMethod.ZEROS"]], "zscore (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.ZSCORE"]], "__eq__() (abacusai.api_class.enums.apienum method)": [[7, "abacusai.api_class.enums.ApiEnum.__eq__"]], "__hash__() (abacusai.api_class.enums.apienum method)": [[7, "abacusai.api_class.enums.ApiEnum.__hash__"]], "abacusai.api_class.enums": [[7, "module-abacusai.api_class.enums"]], "lastnmergeconfig (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group.LastNMergeConfig"]], "mergeconfig (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group.MergeConfig"]], "nsamplingconfig (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group.NSamplingConfig"]], "percentsamplingconfig (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group.PercentSamplingConfig"]], "samplingconfig (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group.SamplingConfig"]], "timewindowmergeconfig (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group.TimeWindowMergeConfig"]], "_mergeconfigfactory (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group._MergeConfigFactory"]], "_samplingconfigfactory (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group._SamplingConfigFactory"]], "__post_init__() (abacusai.api_class.feature_group.mergeconfig method)": [[8, "abacusai.api_class.feature_group.MergeConfig.__post_init__"]], "__post_init__() (abacusai.api_class.feature_group.samplingconfig method)": [[8, "abacusai.api_class.feature_group.SamplingConfig.__post_init__"]], "abacusai.api_class.feature_group": [[8, "module-abacusai.api_class.feature_group"]], "config_class_key (abacusai.api_class.feature_group._mergeconfigfactory attribute)": [[8, "abacusai.api_class.feature_group._MergeConfigFactory.config_class_key"]], "config_class_key (abacusai.api_class.feature_group._samplingconfigfactory attribute)": [[8, "abacusai.api_class.feature_group._SamplingConfigFactory.config_class_key"]], "config_class_map (abacusai.api_class.feature_group._mergeconfigfactory attribute)": [[8, "abacusai.api_class.feature_group._MergeConfigFactory.config_class_map"]], "config_class_map (abacusai.api_class.feature_group._samplingconfigfactory attribute)": [[8, "abacusai.api_class.feature_group._SamplingConfigFactory.config_class_map"]], "feature_name (abacusai.api_class.feature_group.timewindowmergeconfig attribute)": [[8, "abacusai.api_class.feature_group.TimeWindowMergeConfig.feature_name"]], "key_columns (abacusai.api_class.feature_group.nsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.NSamplingConfig.key_columns"]], "key_columns (abacusai.api_class.feature_group.percentsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.PercentSamplingConfig.key_columns"]], "merge_mode (abacusai.api_class.feature_group.lastnmergeconfig attribute)": [[8, "abacusai.api_class.feature_group.LastNMergeConfig.merge_mode"]], "merge_mode (abacusai.api_class.feature_group.timewindowmergeconfig attribute)": [[8, "abacusai.api_class.feature_group.TimeWindowMergeConfig.merge_mode"]], "num_versions (abacusai.api_class.feature_group.lastnmergeconfig attribute)": [[8, "abacusai.api_class.feature_group.LastNMergeConfig.num_versions"]], "sample_count (abacusai.api_class.feature_group.nsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.NSamplingConfig.sample_count"]], "sample_percent (abacusai.api_class.feature_group.percentsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.PercentSamplingConfig.sample_percent"]], "sampling_method (abacusai.api_class.feature_group.nsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.NSamplingConfig.sampling_method"]], "sampling_method (abacusai.api_class.feature_group.percentsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.PercentSamplingConfig.sampling_method"]], "time_window_size_ms (abacusai.api_class.feature_group.timewindowmergeconfig attribute)": [[8, "abacusai.api_class.feature_group.TimeWindowMergeConfig.time_window_size_ms"]], "accuracy (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.ACCURACY"]], "accuracy (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.ACCURACY"]], "aiagenttrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.AIAgentTrainingConfig"]], "ai_agent (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.AI_AGENT"]], "ancestral_simulation (abacusai.api_class.forecastingquanitlesextensionmethod attribute)": [[9, "abacusai.api_class.ForecastingQuanitlesExtensionMethod.ANCESTRAL_SIMULATION"]], "annotations_precision (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.ANNOTATIONS_PRECISION"]], "annotations_recall (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.ANNOTATIONS_RECALL"]], "anomaly_detection (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.ANOMALY_DETECTION"]], "anomaly_outliers (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.ANOMALY_OUTLIERS"]], "application (abacusai.api_class.connectortype attribute)": [[9, "abacusai.api_class.ConnectorType.APPLICATION"]], "asymmetric_mean_absolute_percentage_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "au (abacusai.api_class.holidaycalendars attribute)": [[9, "abacusai.api_class.HolidayCalendars.AU"]], "auc (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.AUC"]], "auc (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.AUC"]], "auto (abacusai.api_class.forecastingdatasplittype attribute)": [[9, "abacusai.api_class.ForecastingDataSplitType.AUTO"]], "auto (abacusai.api_class.nlpdocumentformat attribute)": [[9, "abacusai.api_class.NLPDocumentFormat.AUTO"]], "automatic (abacusai.api_class.clusteringimputationmethod attribute)": [[9, "abacusai.api_class.ClusteringImputationMethod.AUTOMATIC"]], "automatic (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.AUTOMATIC"]], "average (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.AVERAGE"]], "anomalydetectiontrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig"]], "apiclass (class in abacusai.api_class)": [[9, "abacusai.api_class.ApiClass"], [9, "id0"], [9, "id17"], [9, "id23"], [9, "id6"]], "apienum (class in abacusai.api_class)": [[9, "abacusai.api_class.ApiEnum"]], "back (abacusai.api_class.forecastingfillmethod attribute)": [[9, "abacusai.api_class.ForecastingFillMethod.BACK"]], "backfill (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.BACKFILL"]], "batch_1024 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_1024"]], "batch_128 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_128"]], "batch_16 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_16"]], "batch_256 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_256"]], "batch_32 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_32"]], "batch_384 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_384"]], "batch_512 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_512"]], "batch_64 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_64"]], "batch_740 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_740"]], "batch_8 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_8"]], "batch_prediction_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.BATCH_PREDICTION_ID"]], "bias (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.BIAS"]], "boolean (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.BOOLEAN"]], "box_cox (abacusai.api_class.regressiontargettransform attribute)": [[9, "abacusai.api_class.RegressionTargetTransform.BOX_COX"]], "batchsize (class in abacusai.api_class)": [[9, "abacusai.api_class.BatchSize"]], "clustering (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.CLUSTERING"]], "clustering_timeseries (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.CLUSTERING_TIMESERIES"]], "cmape (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.CMAPE"]], "coverage (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.COVERAGE"]], "cross_entropy (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.CROSS_ENTROPY"]], "cumulative_forecasting (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.CUMULATIVE_FORECASTING"]], "custom (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.CUSTOM"]], "custom (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.CUSTOM"]], "custom (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.CUSTOM"]], "custom_algorithm (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.CUSTOM_ALGORITHM"]], "custom_trained_model (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.CUSTOM_TRAINED_MODEL"]], "cv (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.CV"]], "clusteringimputationmethod (class in abacusai.api_class)": [[9, "abacusai.api_class.ClusteringImputationMethod"]], "clusteringtimeseriestrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.ClusteringTimeseriesTrainingConfig"]], "clusteringtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.ClusteringTrainingConfig"]], "connectortype (class in abacusai.api_class)": [[9, "abacusai.api_class.ConnectorType"]], "cumulativeforecastingtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig"]], "customalgorithmtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig"]], "customtrainedmodeltrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig"]], "daily (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.DAILY"]], "database (abacusai.api_class.connectortype attribute)": [[9, "abacusai.api_class.ConnectorType.DATABASE"]], "dataset_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.DATASET_ID"]], "deployment_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.DEPLOYMENT_ID"]], "direct (abacusai.api_class.forecastingquanitlesextensionmethod attribute)": [[9, "abacusai.api_class.ForecastingQuanitlesExtensionMethod.DIRECT"]], "doc (abacusai.api_class.nlpdocumentformat attribute)": [[9, "abacusai.api_class.NLPDocumentFormat.DOC"]], "document_classification (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.DOCUMENT_CLASSIFICATION"]], "document_summarization (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.DOCUMENT_SUMMARIZATION"]], "document_visualization (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.DOCUMENT_VISUALIZATION"]], "databaseconnectorexportconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig"]], "documentclassificationtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig"]], "documentsummarizationtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.DocumentSummarizationTrainingConfig"]], "documentvisualizationtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.DocumentVisualizationTrainingConfig"]], "emotion (abacusai.api_class.sentimenttype attribute)": [[9, "abacusai.api_class.SentimentType.EMOTION"]], "experimental (abacusai.api_class.personalizationtrainingmode attribute)": [[9, "abacusai.api_class.PersonalizationTrainingMode.EXPERIMENTAL"]], "experimentationmode (class in abacusai.api_class)": [[9, "abacusai.api_class.ExperimentationMode"]], "f1_score (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.F1_SCORE"]], "feature_group (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.FEATURE_GROUP"]], "feature_group_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.FEATURE_GROUP_ID"]], "feature_store (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.FEATURE_STORE"]], "file (abacusai.api_class.connectortype attribute)": [[9, "abacusai.api_class.ConnectorType.FILE"]], "float (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.FLOAT"]], "focal_cross_entropy (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.FOCAL_CROSS_ENTROPY"]], "forecasting (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.FORECASTING"]], "forwardfill (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.FORWARDFILL"]], "future (abacusai.api_class.forecastingfillmethod attribute)": [[9, "abacusai.api_class.ForecastingFillMethod.FUTURE"]], "featuregroupexportconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.FeatureGroupExportConfig"]], "fileconnectorexportconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.FileConnectorExportConfig"]], "filllogic (class in abacusai.api_class)": [[9, "abacusai.api_class.FillLogic"]], "forecastingdatasplittype (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingDataSplitType"]], "forecastingfillmethod (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingFillMethod"]], "forecastingfrequency (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingFrequency"]], "forecastinglocalscaling (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingLocalScaling"]], "forecastinglossfunction (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingLossFunction"]], "forecastingobjective (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingObjective"]], "forecastingquanitlesextensionmethod (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingQuanitlesExtensionMethod"]], "forecastingtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingTrainingConfig"]], "gaussian (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.GAUSSIAN"]], "gaussian_full_covariance (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.GAUSSIAN_FULL_COVARIANCE"]], "guassian_exponential (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.GUASSIAN_EXPONENTIAL"]], "hourly (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.HOURLY"]], "huber (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.HUBER"]], "holidaycalendars (class in abacusai.api_class)": [[9, "abacusai.api_class.HolidayCalendars"]], "image_classification (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.IMAGE_CLASSIFICATION"]], "image_value_prediction (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.IMAGE_VALUE_PREDICTION"]], "integer (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.INTEGER"]], "interpolate (abacusai.api_class.clusteringimputationmethod attribute)": [[9, "abacusai.api_class.ClusteringImputationMethod.INTERPOLATE"]], "item (abacusai.api_class.forecastingdatasplittype attribute)": [[9, "abacusai.api_class.ForecastingDataSplitType.ITEM"]], "item (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.ITEM"]], "json (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.JSON"]], "language_detection (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.LANGUAGE_DETECTION"]], "last_n (abacusai.api_class.mergemode attribute)": [[9, "abacusai.api_class.MergeMode.LAST_N"]], "last_point (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.LAST_POINT"]], "learned (abacusai.api_class.nermodeltype attribute)": [[9, "abacusai.api_class.NERModelType.LEARNED"]], "linear (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.LINEAR"]], "list (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.LIST"]], "log (abacusai.api_class.regressiontargettransform attribute)": [[9, "abacusai.api_class.RegressionTargetTransform.LOG"]], "log_loss (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.LOG_LOSS"]], "log_loss (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.LOG_LOSS"]], "log_root_mean_square_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.LOG_ROOT_MEAN_SQUARE_ERROR"]], "lastnmergeconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.LastNMergeConfig"]], "mae (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.MAE"]], "mae (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.MAE"]], "map (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.MAP"]], "mape (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.MAPE"]], "mape (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.MAPE"]], "mape (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.MAPE"]], "map_10 (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.MAP_10"]], "map_5 (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.MAP_5"]], "max (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.MAX"]], "mean_absolute_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.MEAN_ABSOLUTE_ERROR"]], "mean_absolute_percentage_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "median (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.MEDIAN"]], "middle (abacusai.api_class.forecastingfillmethod attribute)": [[9, "abacusai.api_class.ForecastingFillMethod.MIDDLE"]], "min (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.MIN"]], "min_max (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.MIN_MAX"]], "min_std (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.MIN_STD"]], "mix_gaussians (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.MIX_GAUSSIANS"]], "model_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.MODEL_ID"]], "model_monitoring (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.MODEL_MONITORING"]], "monitor_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.MONITOR_ID"]], "month_end (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.MONTH_END"]], "month_start (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.MONTH_START"]], "mrr (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.MRR"]], "mse (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.MSE"]], "msle (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.MSLE"]], "mergeconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.MergeConfig"]], "mergemode (class in abacusai.api_class)": [[9, "abacusai.api_class.MergeMode"]], "named_entity_extraction (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.NAMED_ENTITY_EXTRACTION"]], "natural_language_search (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.NATURAL_LANGUAGE_SEARCH"]], "ndcg (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.NDCG"]], "ndcg_10 (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.NDCG_10"]], "ndcg_5 (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.NDCG_5"]], "nearest (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.NEAREST"]], "negative_binomial (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.NEGATIVE_BINOMIAL"]], "nermodeltype (class in abacusai.api_class)": [[9, "abacusai.api_class.NERModelType"]], "nerobjective (class in abacusai.api_class)": [[9, "abacusai.api_class.NERObjective"]], "nlpdocumentformat (class in abacusai.api_class)": [[9, "abacusai.api_class.NLPDocumentFormat"]], "normalized_mean_absolute_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.NORMALIZED_MEAN_ABSOLUTE_ERROR"]], "normalized_root_mean_square_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.NORMALIZED_ROOT_MEAN_SQUARE_ERROR"]], "nsamplingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.NSamplingConfig"]], "n_sampling (abacusai.api_class.samplingmethodtype attribute)": [[9, "abacusai.api_class.SamplingMethodType.N_SAMPLING"]], "namedentityextractiontrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig"]], "naturallanguagesearchtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig"]], "object_detection (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.OBJECT_DETECTION"]], "optimization (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.OPTIMIZATION"]], "optimizationtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.OptimizationTrainingConfig"]], "outputvariablemapping (class in abacusai.api_class)": [[9, "abacusai.api_class.OutputVariableMapping"]], "peaks_mean_absolute_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.PEAKS_MEAN_ABSOLUTE_ERROR"]], "percent_sampling (abacusai.api_class.samplingmethodtype attribute)": [[9, "abacusai.api_class.SamplingMethodType.PERCENT_SAMPLING"]], "personalization (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.PERSONALIZATION"]], "personalization (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.PERSONALIZATION"]], "pointwise_accuracy (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.POINTWISE_ACCURACY"]], "precision (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.PRECISION"]], "precision (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.PRECISION"]], "prediction_length (abacusai.api_class.forecastingdatasplittype attribute)": [[9, "abacusai.api_class.ForecastingDataSplitType.PREDICTION_LENGTH"]], "predictive_modeling (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.PREDICTIVE_MODELING"]], "pretrained_bert (abacusai.api_class.nermodeltype attribute)": [[9, "abacusai.api_class.NERModelType.PRETRAINED_BERT"]], "pretrained_models (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.PRETRAINED_MODELS"]], "pretrained_multilingual (abacusai.api_class.nermodeltype attribute)": [[9, "abacusai.api_class.NERModelType.PRETRAINED_MULTILINGUAL"]], "pretrained_roberta_27 (abacusai.api_class.nermodeltype attribute)": [[9, "abacusai.api_class.NERModelType.PRETRAINED_ROBERTA_27"]], "pretrained_roberta_43 (abacusai.api_class.nermodeltype attribute)": [[9, "abacusai.api_class.NERModelType.PRETRAINED_ROBERTA_43"]], "production (abacusai.api_class.personalizationtrainingmode attribute)": [[9, "abacusai.api_class.PersonalizationTrainingMode.PRODUCTION"]], "parsingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.ParsingConfig"]], "percentsamplingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.PercentSamplingConfig"]], "personalizationobjective (class in abacusai.api_class)": [[9, "abacusai.api_class.PersonalizationObjective"]], "personalizationtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.PersonalizationTrainingConfig"]], "personalizationtrainingmode (class in abacusai.api_class)": [[9, "abacusai.api_class.PersonalizationTrainingMode"]], "problemtype (class in abacusai.api_class)": [[9, "abacusai.api_class.ProblemType"]], "pythonfunctionargument (class in abacusai.api_class)": [[9, "abacusai.api_class.PythonFunctionArgument"]], "pythonfunctionargumenttype (class in abacusai.api_class)": [[9, "abacusai.api_class.PythonFunctionArgumentType"]], "quadratic (abacusai.api_class.forecastingquanitlesextensionmethod attribute)": [[9, "abacusai.api_class.ForecastingQuanitlesExtensionMethod.QUADRATIC"]], "quantile (abacusai.api_class.regressiontargettransform attribute)": [[9, "abacusai.api_class.RegressionTargetTransform.QUANTILE"]], "quarter_end (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.QUARTER_END"]], "quarter_start (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.QUARTER_START"]], "random (abacusai.api_class.regressiontypeofsplit attribute)": [[9, "abacusai.api_class.RegressionTypeOfSplit.RANDOM"]], "rapid (abacusai.api_class.experimentationmode attribute)": [[9, "abacusai.api_class.ExperimentationMode.RAPID"]], "rapid (abacusai.api_class.regressiontreehpomode attribute)": [[9, "abacusai.api_class.RegressionTreeHPOMode.RAPID"]], "recall (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.RECALL"]], "recall (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.RECALL"]], "resample (abacusai.api_class.regressionaugmentationstrategy attribute)": [[9, "abacusai.api_class.RegressionAugmentationStrategy.RESAMPLE"]], "rmse (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.RMSE"]], "rmse (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.RMSE"]], "robust (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.ROBUST"]], "root_mean_square_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.ROOT_MEAN_SQUARE_ERROR"]], "row_indicator_based (abacusai.api_class.regressiontypeofsplit attribute)": [[9, "abacusai.api_class.RegressionTypeOfSplit.ROW_INDICATOR_BASED"]], "r_squared_coefficient_of_determination (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.R_SQUARED_COEFFICIENT_OF_DETERMINATION"]], "regressionaugmentationstrategy (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionAugmentationStrategy"]], "regressionlossfunction (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionLossFunction"]], "regressionobjective (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionObjective"]], "regressiontargettransform (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionTargetTransform"]], "regressiontimesplitmethod (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionTimeSplitMethod"]], "regressiontrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionTrainingConfig"]], "regressiontreehpomode (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionTreeHPOMode"]], "regressiontypeofsplit (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionTypeOfSplit"]], "sentence_boundary_detection (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.SENTENCE_BOUNDARY_DETECTION"]], "sentiment_detection (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.SENTIMENT_DETECTION"]], "sliding_zscore (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.SLIDING_ZSCORE"]], "smote (abacusai.api_class.regressionaugmentationstrategy attribute)": [[9, "abacusai.api_class.RegressionAugmentationStrategy.SMOTE"]], "srmse (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.SRMSE"]], "stable_standardized_mean_absolute_percentage_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "streaming (abacusai.api_class.connectortype attribute)": [[9, "abacusai.api_class.ConnectorType.STREAMING"]], "string (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.STRING"]], "samplingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.SamplingConfig"]], "samplingmethodtype (class in abacusai.api_class)": [[9, "abacusai.api_class.SamplingMethodType"]], "sentenceboundarydetectiontrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig"]], "sentimentdetectiontrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig"]], "sentimenttype (class in abacusai.api_class)": [[9, "abacusai.api_class.SentimentType"]], "test_split_percentage_based (abacusai.api_class.regressiontimesplitmethod attribute)": [[9, "abacusai.api_class.RegressionTimeSplitMethod.TEST_SPLIT_PERCENTAGE_BASED"]], "test_start_timestamp_based (abacusai.api_class.regressiontimesplitmethod attribute)": [[9, "abacusai.api_class.RegressionTimeSplitMethod.TEST_START_TIMESTAMP_BASED"]], "text (abacusai.api_class.nlpdocumentformat attribute)": [[9, "abacusai.api_class.NLPDocumentFormat.TEXT"]], "theme_analysis (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.THEME_ANALYSIS"]], "thorough (abacusai.api_class.experimentationmode attribute)": [[9, "abacusai.api_class.ExperimentationMode.THOROUGH"]], "thorough (abacusai.api_class.regressiontreehpomode attribute)": [[9, "abacusai.api_class.RegressionTreeHPOMode.THOROUGH"]], "timestamp (abacusai.api_class.forecastingdatasplittype attribute)": [[9, "abacusai.api_class.ForecastingDataSplitType.TIMESTAMP"]], "timestamp_based (abacusai.api_class.regressiontypeofsplit attribute)": [[9, "abacusai.api_class.RegressionTypeOfSplit.TIMESTAMP_BASED"]], "time_window (abacusai.api_class.mergemode attribute)": [[9, "abacusai.api_class.MergeMode.TIME_WINDOW"]], "tokens (abacusai.api_class.nlpdocumentformat attribute)": [[9, "abacusai.api_class.NLPDocumentFormat.TOKENS"]], "tweedie (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.TWEEDIE"]], "themeanalysistrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.ThemeAnalysisTrainingConfig"]], "timewindowmergeconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.TimeWindowMergeConfig"]], "trainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.TrainingConfig"]], "uk (abacusai.api_class.holidaycalendars attribute)": [[9, "abacusai.api_class.HolidayCalendars.UK"]], "us (abacusai.api_class.holidaycalendars attribute)": [[9, "abacusai.api_class.HolidayCalendars.US"]], "valence (abacusai.api_class.sentimenttype attribute)": [[9, "abacusai.api_class.SentimentType.VALENCE"]], "wape (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.WAPE"]], "wape (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.WAPE"]], "weekly_monday_start (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.WEEKLY_MONDAY_START"]], "weekly_saturday_start (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.WEEKLY_SATURDAY_START"]], "weekly_sunday_start (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.WEEKLY_SUNDAY_START"]], "weibull (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.WEIBULL"]], "yearly (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.YEARLY"]], "yeo_johnson (abacusai.api_class.regressiontargettransform attribute)": [[9, "abacusai.api_class.RegressionTargetTransform.YEO_JOHNSON"]], "zeros (abacusai.api_class.clusteringimputationmethod attribute)": [[9, "abacusai.api_class.ClusteringImputationMethod.ZEROS"]], "zscore (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.ZSCORE"]], "_apiclassfactory (class in abacusai.api_class)": [[9, "abacusai.api_class._ApiClassFactory"], [9, "id12"], [9, "id29"]], "_featuregroupexportconfigfactory (class in abacusai.api_class)": [[9, "abacusai.api_class._FeatureGroupExportConfigFactory"]], "_mergeconfigfactory (class in abacusai.api_class)": [[9, "abacusai.api_class._MergeConfigFactory"]], "_samplingconfigfactory (class in abacusai.api_class)": [[9, "abacusai.api_class._SamplingConfigFactory"]], "_trainingconfigfactory (class in abacusai.api_class)": [[9, "abacusai.api_class._TrainingConfigFactory"]], "__eq__() (abacusai.api_class.apienum method)": [[9, "abacusai.api_class.ApiEnum.__eq__"]], "__hash__() (abacusai.api_class.apienum method)": [[9, "abacusai.api_class.ApiEnum.__hash__"]], "__post_init__() (abacusai.api_class.apiclass method)": [[9, "abacusai.api_class.ApiClass.__post_init__"], [9, "id20"], [9, "id26"], [9, "id3"], [9, "id9"]], "__post_init__() (abacusai.api_class.mergeconfig method)": [[9, "abacusai.api_class.MergeConfig.__post_init__"]], "__post_init__() (abacusai.api_class.samplingconfig method)": [[9, "abacusai.api_class.SamplingConfig.__post_init__"]], "_support_kwargs (abacusai.api_class.apiclass attribute)": [[9, "abacusai.api_class.ApiClass._support_kwargs"], [9, "id19"], [9, "id2"], [9, "id25"], [9, "id8"]], "_support_kwargs (abacusai.api_class.trainingconfig attribute)": [[9, "abacusai.api_class.TrainingConfig._support_kwargs"]], "_upper_snake_case_keys (abacusai.api_class.apiclass attribute)": [[9, "abacusai.api_class.ApiClass._upper_snake_case_keys"], [9, "id1"], [9, "id18"], [9, "id24"], [9, "id7"]], "_upper_snake_case_keys (abacusai.api_class.trainingconfig attribute)": [[9, "abacusai.api_class.TrainingConfig._upper_snake_case_keys"]], "abacus_internal_model (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.abacus_internal_model"]], "abacusai.api_class": [[9, "module-abacusai.api_class"]], "active_labels_column (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.active_labels_column"]], "active_labels_column (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.active_labels_column"]], "add_time_features (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.add_time_features"]], "additional_forecast_keys (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.additional_forecast_keys"]], "additional_id_columns (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.additional_id_columns"]], "augmentation_strategy (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.augmentation_strategy"]], "backtesting_window_step_size (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.backtesting_window_step_size"]], "batch_renormalization (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.batch_renormalization"]], "batch_size (abacusai.api_class.documentclassificationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.documentsummarizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentSummarizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.documentvisualizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentVisualizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.sentenceboundarydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.batch_size"]], "chunk_overlap_fraction (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.chunk_overlap_fraction"]], "compute_metrics (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.compute_metrics"]], "compute_rerank_metrics (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.compute_rerank_metrics"]], "compute_session_metrics (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.compute_session_metrics"]], "config_abstract_class (abacusai.api_class._apiclassfactory attribute)": [[9, "abacusai.api_class._ApiClassFactory.config_abstract_class"], [9, "id13"], [9, "id30"]], "config_abstract_class (abacusai.api_class._featuregroupexportconfigfactory attribute)": [[9, "abacusai.api_class._FeatureGroupExportConfigFactory.config_abstract_class"]], "config_abstract_class (abacusai.api_class._trainingconfigfactory attribute)": [[9, "abacusai.api_class._TrainingConfigFactory.config_abstract_class"]], "config_class_key (abacusai.api_class._apiclassfactory attribute)": [[9, "abacusai.api_class._ApiClassFactory.config_class_key"], [9, "id14"], [9, "id31"]], "config_class_key (abacusai.api_class._featuregroupexportconfigfactory attribute)": [[9, "abacusai.api_class._FeatureGroupExportConfigFactory.config_class_key"]], "config_class_key (abacusai.api_class._mergeconfigfactory attribute)": [[9, "abacusai.api_class._MergeConfigFactory.config_class_key"]], "config_class_key (abacusai.api_class._samplingconfigfactory attribute)": [[9, "abacusai.api_class._SamplingConfigFactory.config_class_key"]], "config_class_key (abacusai.api_class._trainingconfigfactory attribute)": [[9, "abacusai.api_class._TrainingConfigFactory.config_class_key"]], "config_class_map (abacusai.api_class._apiclassfactory attribute)": [[9, "abacusai.api_class._ApiClassFactory.config_class_map"], [9, "id15"], [9, "id32"]], "config_class_map (abacusai.api_class._featuregroupexportconfigfactory attribute)": [[9, "abacusai.api_class._FeatureGroupExportConfigFactory.config_class_map"]], "config_class_map (abacusai.api_class._mergeconfigfactory attribute)": [[9, "abacusai.api_class._MergeConfigFactory.config_class_map"]], "config_class_map (abacusai.api_class._samplingconfigfactory attribute)": [[9, "abacusai.api_class._SamplingConfigFactory.config_class_map"]], "config_class_map (abacusai.api_class._trainingconfigfactory attribute)": [[9, "abacusai.api_class._TrainingConfigFactory.config_class_map"]], "connector_type (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.connector_type"]], "connector_type (abacusai.api_class.featuregroupexportconfig attribute)": [[9, "abacusai.api_class.FeatureGroupExportConfig.connector_type"]], "connector_type (abacusai.api_class.fileconnectorexportconfig attribute)": [[9, "abacusai.api_class.FileConnectorExportConfig.connector_type"]], "convolution_filters (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.convolution_filters"]], "convolutional_layers (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.convolutional_layers"]], "csv_delimiter (abacusai.api_class.parsingconfig attribute)": [[9, "abacusai.api_class.ParsingConfig.csv_delimiter"]], "cumulative_prediction_lengths (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.cumulative_prediction_lengths"]], "custom_loss_functions (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.custom_loss_functions"]], "custom_loss_functions (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.custom_loss_functions"]], "custom_metrics (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.custom_metrics"]], "custom_metrics (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.custom_metrics"]], "data_columns (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.data_columns"]], "data_split_feature_group_table_name (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.data_split_feature_group_table_name"]], "database_connector_id (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.database_connector_id"]], "datetime_holiday_calendars (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.datetime_holiday_calendars"]], "description (abacusai.api_class.aiagenttrainingconfig attribute)": [[9, "abacusai.api_class.AIAgentTrainingConfig.description"]], "disable_gpu (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.disable_gpu"]], "disable_networks_without_analytic_quantiles (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.disable_networks_without_analytic_quantiles"]], "disable_test_val_fold (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.disable_test_val_fold"]], "disable_timestamp_scalar_features (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.disable_timestamp_scalar_features"]], "disable_transformer (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.disable_transformer"]], "docker_image_uri (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.docker_image_uri"]], "document_format (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.document_format"]], "downsample_item_popularity_percentile (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.downsample_item_popularity_percentile"]], "drop_original_categoricals (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.drop_original_categoricals"]], "dropout_rate (abacusai.api_class.documentclassificationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.documentsummarizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentSummarizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.documentvisualizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentVisualizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.sentenceboundarydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.dropout_rate"]], "enable_clustering (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.enable_clustering"]], "enable_cold_start (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.enable_cold_start"]], "enable_feature_selection (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.enable_feature_selection"]], "enable_multiple_backtests (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.enable_multiple_backtests"]], "escape (abacusai.api_class.parsingconfig attribute)": [[9, "abacusai.api_class.ParsingConfig.escape"]], "experimentation_mode (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.experimentation_mode"]], "explicit_time_split (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.explicit_time_split"]], "explore_lookback_hours (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.explore_lookback_hours"]], "export_file_format (abacusai.api_class.fileconnectorexportconfig attribute)": [[9, "abacusai.api_class.FileConnectorExportConfig.export_file_format"]], "feature_name (abacusai.api_class.timewindowmergeconfig attribute)": [[9, "abacusai.api_class.TimeWindowMergeConfig.feature_name"]], "feature_selection_intensity (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.feature_selection_intensity"]], "file_path_with_schema (abacusai.api_class.parsingconfig attribute)": [[9, "abacusai.api_class.ParsingConfig.file_path_with_schema"]], "fill_missing_values (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.fill_missing_values"]], "filter_history (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.filter_history"]], "filter_items (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.filter_items"]], "force_prediction_length (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.force_prediction_length"]], "forecast_frequency (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.forecast_frequency"]], "from_dict() (abacusai.api_class.apiclass class method)": [[9, "abacusai.api_class.ApiClass.from_dict"], [9, "id11"], [9, "id22"], [9, "id28"], [9, "id5"]], "from_dict() (abacusai.api_class._apiclassfactory class method)": [[9, "abacusai.api_class._ApiClassFactory.from_dict"], [9, "id16"], [9, "id33"]], "full_data_retraining (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.full_data_retraining"]], "full_data_retraining (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.full_data_retraining"]], "handle_zeros_as_missing_values (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.handle_zeros_as_missing_values"]], "historical_frequency (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.historical_frequency"]], "history_length (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.history_length"]], "id_column (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.id_column"]], "ignore_datetime_features (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.ignore_datetime_features"]], "imputation (abacusai.api_class.clusteringtimeseriestrainingconfig attribute)": [[9, "abacusai.api_class.ClusteringTimeseriesTrainingConfig.imputation"]], "include_longformer (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.include_longformer"]], "index_fraction (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.index_fraction"]], "index_output_path (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.index_output_path"]], "initial_learning_rate (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.initial_learning_rate"]], "is_multilingual (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.is_multilingual"]], "is_required (abacusai.api_class.pythonfunctionargument attribute)": [[9, "abacusai.api_class.PythonFunctionArgument.is_required"]], "item_attributes_weight_column (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.item_attributes_weight_column"]], "item_id_dropout (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.item_id_dropout"]], "k_fold_cross_validation (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.k_fold_cross_validation"]], "key_columns (abacusai.api_class.nsamplingconfig attribute)": [[9, "abacusai.api_class.NSamplingConfig.key_columns"]], "key_columns (abacusai.api_class.percentsamplingconfig attribute)": [[9, "abacusai.api_class.PercentSamplingConfig.key_columns"]], "kwargs (abacusai.api_class.trainingconfig attribute)": [[9, "abacusai.api_class.TrainingConfig.kwargs"]], "l2_regularization_factor (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.l2_regularization_factor"]], "larger_embeddings (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.larger_embeddings"]], "local_scaling_mode (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.local_scaling_mode"]], "location (abacusai.api_class.fileconnectorexportconfig attribute)": [[9, "abacusai.api_class.FileConnectorExportConfig.location"]], "loss_function (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.loss_function"]], "loss_function (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.loss_function"]], "loss_parameters (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.loss_parameters"]], "max_catalog_size (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.max_catalog_size"]], "max_dimension (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.max_dimension"]], "max_history_length (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.max_history_length"]], "max_scale_context (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.max_scale_context"]], "max_text_words (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.max_text_words"]], "max_user_history_len_percentile (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.max_user_history_len_percentile"]], "merge_mode (abacusai.api_class.lastnmergeconfig attribute)": [[9, "abacusai.api_class.LastNMergeConfig.merge_mode"]], "merge_mode (abacusai.api_class.timewindowmergeconfig attribute)": [[9, "abacusai.api_class.TimeWindowMergeConfig.merge_mode"]], "min_categorical_count (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.min_categorical_count"]], "mixture_of_gaussians (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.mixture_of_gaussians"]], "mode (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.mode"]], "name (abacusai.api_class.outputvariablemapping attribute)": [[9, "abacusai.api_class.OutputVariableMapping.name"]], "name (abacusai.api_class.pythonfunctionargument attribute)": [[9, "abacusai.api_class.PythonFunctionArgument.name"]], "ner_model_type (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.ner_model_type"]], "num_backtesting_windows (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.num_backtesting_windows"]], "num_clusters_selection (abacusai.api_class.clusteringtimeseriestrainingconfig attribute)": [[9, "abacusai.api_class.ClusteringTimeseriesTrainingConfig.num_clusters_selection"]], "num_clusters_selection (abacusai.api_class.clusteringtrainingconfig attribute)": [[9, "abacusai.api_class.ClusteringTrainingConfig.num_clusters_selection"]], "num_completion_tokens (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.num_completion_tokens"]], "num_cv_folds (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.num_cv_folds"]], "num_versions (abacusai.api_class.lastnmergeconfig attribute)": [[9, "abacusai.api_class.LastNMergeConfig.num_versions"]], "number_of_samples (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.number_of_samples"]], "numeric_clipping_percentile (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.numeric_clipping_percentile"]], "object_name (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.object_name"]], "objective (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.objective"]], "objective (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.objective"]], "objective (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.objective"]], "objective (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.objective"]], "perform_feature_selection (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.perform_feature_selection"]], "pipeline_variable (abacusai.api_class.pythonfunctionargument attribute)": [[9, "abacusai.api_class.PythonFunctionArgument.pipeline_variable"]], "predict_function_name (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.predict_function_name"]], "predict_many_function_name (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.predict_many_function_name"]], "predict_module_name (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.predict_module_name"]], "predict_residuals (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.predict_residuals"]], "prediction_length (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.prediction_length"]], "prediction_step_size (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.prediction_step_size"]], "pretrained_model_name (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.pretrained_model_name"]], "probability_quantiles (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.probability_quantiles"]], "problem_type (abacusai.api_class.aiagenttrainingconfig attribute)": [[9, "abacusai.api_class.AIAgentTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.clusteringtimeseriestrainingconfig attribute)": [[9, "abacusai.api_class.ClusteringTimeseriesTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.clusteringtrainingconfig attribute)": [[9, "abacusai.api_class.ClusteringTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.documentclassificationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.documentsummarizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentSummarizationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.documentvisualizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentVisualizationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.optimizationtrainingconfig attribute)": [[9, "abacusai.api_class.OptimizationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.sentenceboundarydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.themeanalysistrainingconfig attribute)": [[9, "abacusai.api_class.ThemeAnalysisTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.trainingconfig attribute)": [[9, "abacusai.api_class.TrainingConfig.problem_type"]], "quantiles_extension_method (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.quantiles_extension_method"]], "rare_class_augmentation_threshold (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.rare_class_augmentation_threshold"]], "rebalance_classes (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.rebalance_classes"]], "recent_days_for_training (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.recent_days_for_training"]], "recurrent_layers (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.recurrent_layers"]], "recurrent_units (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.recurrent_units"]], "sample_count (abacusai.api_class.nsamplingconfig attribute)": [[9, "abacusai.api_class.NSamplingConfig.sample_count"]], "sample_percent (abacusai.api_class.percentsamplingconfig attribute)": [[9, "abacusai.api_class.PercentSamplingConfig.sample_percent"]], "sample_weight (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.sample_weight"]], "sampling_method (abacusai.api_class.nsamplingconfig attribute)": [[9, "abacusai.api_class.NSamplingConfig.sampling_method"]], "sampling_method (abacusai.api_class.percentsamplingconfig attribute)": [[9, "abacusai.api_class.PercentSamplingConfig.sampling_method"]], "sampling_unit_keys (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.sampling_unit_keys"]], "search_chunk_size (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.search_chunk_size"]], "sentiment_type (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.sentiment_type"]], "sequential_training (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.sequential_training"]], "service_port (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.service_port"]], "session_event_types (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.session_event_types"]], "skip_input_transform (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.skip_input_transform"]], "skip_local_scale_target (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.skip_local_scale_target"]], "skip_missing (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.skip_missing"]], "skip_target_transform (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.skip_target_transform"]], "skip_timeseries_weight_scaling (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.skip_timeseries_weight_scaling"]], "smooth_history (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.smooth_history"]], "sort_objective (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.sort_objective"]], "spike_down (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.spike_down"]], "spike_up (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.spike_up"]], "symmetrize_quantiles (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.symmetrize_quantiles"]], "target_action_types (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.target_action_types"]], "target_action_weights (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.target_action_weights"]], "target_encode_categoricals (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.target_encode_categoricals"]], "target_transform (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.target_transform"]], "test_by_item (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.test_by_item"]], "test_last_items_length (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_last_items_length"]], "test_on_user_split (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_on_user_split"]], "test_row_indicator (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.test_row_indicator"]], "test_split (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.test_split"]], "test_split (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.test_split"]], "test_split (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.test_split"]], "test_split (abacusai.api_class.documentclassificationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig.test_split"]], "test_split (abacusai.api_class.documentsummarizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentSummarizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.documentvisualizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentVisualizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.test_split"]], "test_split (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.test_split"]], "test_split (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.test_split"]], "test_split (abacusai.api_class.sentenceboundarydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig.test_split"]], "test_split (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.test_split"]], "test_split_on_last_k_items (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_split_on_last_k_items"]], "test_splitting_timestamp (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.test_splitting_timestamp"]], "test_start (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.test_start"]], "test_window_length_hours (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_window_length_hours"]], "time_window_size_ms (abacusai.api_class.timewindowmergeconfig attribute)": [[9, "abacusai.api_class.TimeWindowMergeConfig.time_window_size_ms"]], "timeseries_loss_weight_column (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.timeseries_loss_weight_column"]], "timeseries_weight_column (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.timeseries_weight_column"]], "timestamp_based_splitting_column (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.timestamp_based_splitting_column"]], "timestamp_based_splitting_method (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.timestamp_based_splitting_method"]], "to_dict() (abacusai.api_class.apiclass method)": [[9, "abacusai.api_class.ApiClass.to_dict"], [9, "id10"], [9, "id21"], [9, "id27"], [9, "id4"]], "to_dict() (abacusai.api_class.databaseconnectorexportconfig method)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.to_dict"]], "to_dict() (abacusai.api_class.fileconnectorexportconfig method)": [[9, "abacusai.api_class.FileConnectorExportConfig.to_dict"]], "train_function_name (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.train_function_name"]], "train_module_name (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.train_module_name"]], "training_input_tables (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.training_input_tables"]], "training_mode (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.training_mode"]], "training_point_overlap (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.training_point_overlap"]], "training_rows_downsample_ratio (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.training_rows_downsample_ratio"]], "training_start_date (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.training_start_date"]], "tree_hpo_mode (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.tree_hpo_mode"]], "trend_change (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.trend_change"]], "type_of_split (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.type_of_split"]], "type_of_split (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.type_of_split"]], "underprediction_weight (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.underprediction_weight"]], "use_all_item_totals (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.use_all_item_totals"]], "use_item_id (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.use_item_id"]], "use_item_weights_in_objective (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.use_item_weights_in_objective"]], "use_log_transforms (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.use_log_transforms"]], "use_timeseries_weights_in_objective (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.use_timeseries_weights_in_objective"]], "value (abacusai.api_class.pythonfunctionargument attribute)": [[9, "abacusai.api_class.PythonFunctionArgument.value"]], "value_high (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.value_high"]], "variable_type (abacusai.api_class.outputvariablemapping attribute)": [[9, "abacusai.api_class.OutputVariableMapping.variable_type"]], "variable_type (abacusai.api_class.pythonfunctionargument attribute)": [[9, "abacusai.api_class.PythonFunctionArgument.variable_type"]], "variational_autoencoder (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.variational_autoencoder"]], "zero_predictor (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.zero_predictor"]], "zero_shot_hypotheses (abacusai.api_class.documentclassificationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig.zero_shot_hypotheses"]], "aiagenttrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.AIAgentTrainingConfig"]], "anomalydetectiontrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig"]], "clusteringtimeseriestrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.ClusteringTimeseriesTrainingConfig"]], "clusteringtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.ClusteringTrainingConfig"]], "cumulativeforecastingtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig"]], "customalgorithmtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig"]], "customtrainedmodeltrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig"]], "documentclassificationtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig"]], "documentsummarizationtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.DocumentSummarizationTrainingConfig"]], "documentvisualizationtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.DocumentVisualizationTrainingConfig"]], "forecastingtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig"]], "namedentityextractiontrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig"]], "naturallanguagesearchtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig"]], "optimizationtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.OptimizationTrainingConfig"]], "personalizationtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig"]], "regressiontrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.RegressionTrainingConfig"]], "sentenceboundarydetectiontrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig"]], "sentimentdetectiontrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig"]], "themeanalysistrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.ThemeAnalysisTrainingConfig"]], "trainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.TrainingConfig"]], "_trainingconfigfactory (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model._TrainingConfigFactory"]], "_support_kwargs (abacusai.api_class.model.trainingconfig attribute)": [[10, "abacusai.api_class.model.TrainingConfig._support_kwargs"]], "_upper_snake_case_keys (abacusai.api_class.model.trainingconfig attribute)": [[10, "abacusai.api_class.model.TrainingConfig._upper_snake_case_keys"]], "abacus_internal_model (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.abacus_internal_model"]], "abacusai.api_class.model": [[10, "module-abacusai.api_class.model"]], "active_labels_column (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.active_labels_column"]], "active_labels_column (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.active_labels_column"]], "add_time_features (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.add_time_features"]], "additional_forecast_keys (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.additional_forecast_keys"]], "augmentation_strategy (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.augmentation_strategy"]], "backtesting_window_step_size (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.backtesting_window_step_size"]], "batch_renormalization (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.batch_renormalization"]], "batch_size (abacusai.api_class.model.documentclassificationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.documentsummarizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentSummarizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.documentvisualizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentVisualizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.sentenceboundarydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.batch_size"]], "chunk_overlap_fraction (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.chunk_overlap_fraction"]], "compute_metrics (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.compute_metrics"]], "compute_rerank_metrics (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.compute_rerank_metrics"]], "compute_session_metrics (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.compute_session_metrics"]], "config_abstract_class (abacusai.api_class.model._trainingconfigfactory attribute)": [[10, "abacusai.api_class.model._TrainingConfigFactory.config_abstract_class"]], "config_class_key (abacusai.api_class.model._trainingconfigfactory attribute)": [[10, "abacusai.api_class.model._TrainingConfigFactory.config_class_key"]], "config_class_map (abacusai.api_class.model._trainingconfigfactory attribute)": [[10, "abacusai.api_class.model._TrainingConfigFactory.config_class_map"]], "convolution_filters (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.convolution_filters"]], "convolutional_layers (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.convolutional_layers"]], "cumulative_prediction_lengths (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.cumulative_prediction_lengths"]], "custom_loss_functions (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.custom_loss_functions"]], "custom_loss_functions (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.custom_loss_functions"]], "custom_metrics (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.custom_metrics"]], "custom_metrics (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.custom_metrics"]], "data_split_feature_group_table_name (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.data_split_feature_group_table_name"]], "datetime_holiday_calendars (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.datetime_holiday_calendars"]], "description (abacusai.api_class.model.aiagenttrainingconfig attribute)": [[10, "abacusai.api_class.model.AIAgentTrainingConfig.description"]], "disable_gpu (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.disable_gpu"]], "disable_networks_without_analytic_quantiles (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.disable_networks_without_analytic_quantiles"]], "disable_test_val_fold (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.disable_test_val_fold"]], "disable_timestamp_scalar_features (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.disable_timestamp_scalar_features"]], "disable_transformer (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.disable_transformer"]], "docker_image_uri (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.docker_image_uri"]], "document_format (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.document_format"]], "downsample_item_popularity_percentile (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.downsample_item_popularity_percentile"]], "drop_original_categoricals (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.drop_original_categoricals"]], "dropout_rate (abacusai.api_class.model.documentclassificationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.documentsummarizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentSummarizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.documentvisualizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentVisualizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.sentenceboundarydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.dropout_rate"]], "enable_clustering (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.enable_clustering"]], "enable_cold_start (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.enable_cold_start"]], "enable_feature_selection (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.enable_feature_selection"]], "enable_multiple_backtests (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.enable_multiple_backtests"]], "experimentation_mode (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.experimentation_mode"]], "explicit_time_split (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.explicit_time_split"]], "explore_lookback_hours (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.explore_lookback_hours"]], "feature_selection_intensity (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.feature_selection_intensity"]], "fill_missing_values (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.fill_missing_values"]], "filter_history (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.filter_history"]], "filter_items (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.filter_items"]], "force_prediction_length (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.force_prediction_length"]], "forecast_frequency (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.forecast_frequency"]], "full_data_retraining (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.full_data_retraining"]], "full_data_retraining (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.full_data_retraining"]], "handle_zeros_as_missing_values (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.handle_zeros_as_missing_values"]], "historical_frequency (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.historical_frequency"]], "history_length (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.history_length"]], "ignore_datetime_features (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.ignore_datetime_features"]], "imputation (abacusai.api_class.model.clusteringtimeseriestrainingconfig attribute)": [[10, "abacusai.api_class.model.ClusteringTimeseriesTrainingConfig.imputation"]], "include_longformer (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.include_longformer"]], "index_fraction (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.index_fraction"]], "index_output_path (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.index_output_path"]], "initial_learning_rate (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.initial_learning_rate"]], "is_multilingual (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.is_multilingual"]], "item_attributes_weight_column (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.item_attributes_weight_column"]], "item_id_dropout (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.item_id_dropout"]], "k_fold_cross_validation (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.k_fold_cross_validation"]], "kwargs (abacusai.api_class.model.trainingconfig attribute)": [[10, "abacusai.api_class.model.TrainingConfig.kwargs"]], "l2_regularization_factor (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.l2_regularization_factor"]], "larger_embeddings (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.larger_embeddings"]], "local_scaling_mode (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.local_scaling_mode"]], "loss_function (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.loss_function"]], "loss_function (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.loss_function"]], "loss_parameters (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.loss_parameters"]], "max_catalog_size (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.max_catalog_size"]], "max_dimension (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.max_dimension"]], "max_history_length (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.max_history_length"]], "max_scale_context (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.max_scale_context"]], "max_text_words (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.max_text_words"]], "max_user_history_len_percentile (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.max_user_history_len_percentile"]], "min_categorical_count (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.min_categorical_count"]], "mixture_of_gaussians (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.mixture_of_gaussians"]], "ner_model_type (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.ner_model_type"]], "num_backtesting_windows (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.num_backtesting_windows"]], "num_clusters_selection (abacusai.api_class.model.clusteringtimeseriestrainingconfig attribute)": [[10, "abacusai.api_class.model.ClusteringTimeseriesTrainingConfig.num_clusters_selection"]], "num_clusters_selection (abacusai.api_class.model.clusteringtrainingconfig attribute)": [[10, "abacusai.api_class.model.ClusteringTrainingConfig.num_clusters_selection"]], "num_completion_tokens (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.num_completion_tokens"]], "num_cv_folds (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.num_cv_folds"]], "number_of_samples (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.number_of_samples"]], "numeric_clipping_percentile (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.numeric_clipping_percentile"]], "objective (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.objective"]], "objective (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.objective"]], "objective (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.objective"]], "objective (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.objective"]], "perform_feature_selection (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.perform_feature_selection"]], "predict_function_name (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.predict_function_name"]], "predict_many_function_name (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.predict_many_function_name"]], "predict_module_name (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.predict_module_name"]], "predict_residuals (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.predict_residuals"]], "prediction_length (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.prediction_length"]], "prediction_step_size (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.prediction_step_size"]], "pretrained_model_name (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.pretrained_model_name"]], "probability_quantiles (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.probability_quantiles"]], "problem_type (abacusai.api_class.model.aiagenttrainingconfig attribute)": [[10, "abacusai.api_class.model.AIAgentTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.clusteringtimeseriestrainingconfig attribute)": [[10, "abacusai.api_class.model.ClusteringTimeseriesTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.clusteringtrainingconfig attribute)": [[10, "abacusai.api_class.model.ClusteringTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.documentclassificationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.documentsummarizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentSummarizationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.documentvisualizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentVisualizationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.optimizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.OptimizationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.sentenceboundarydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.themeanalysistrainingconfig attribute)": [[10, "abacusai.api_class.model.ThemeAnalysisTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.trainingconfig attribute)": [[10, "abacusai.api_class.model.TrainingConfig.problem_type"]], "quantiles_extension_method (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.quantiles_extension_method"]], "rare_class_augmentation_threshold (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.rare_class_augmentation_threshold"]], "rebalance_classes (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.rebalance_classes"]], "recent_days_for_training (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.recent_days_for_training"]], "recurrent_layers (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.recurrent_layers"]], "recurrent_units (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.recurrent_units"]], "sample_weight (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.sample_weight"]], "sampling_unit_keys (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.sampling_unit_keys"]], "search_chunk_size (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.search_chunk_size"]], "sentiment_type (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.sentiment_type"]], "sequential_training (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.sequential_training"]], "service_port (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.service_port"]], "session_event_types (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.session_event_types"]], "skip_input_transform (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.skip_input_transform"]], "skip_local_scale_target (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.skip_local_scale_target"]], "skip_missing (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.skip_missing"]], "skip_target_transform (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.skip_target_transform"]], "skip_timeseries_weight_scaling (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.skip_timeseries_weight_scaling"]], "smooth_history (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.smooth_history"]], "sort_objective (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.sort_objective"]], "spike_down (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.spike_down"]], "spike_up (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.spike_up"]], "symmetrize_quantiles (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.symmetrize_quantiles"]], "target_action_types (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.target_action_types"]], "target_action_weights (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.target_action_weights"]], "target_encode_categoricals (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.target_encode_categoricals"]], "target_transform (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.target_transform"]], "test_by_item (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.test_by_item"]], "test_last_items_length (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_last_items_length"]], "test_on_user_split (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_on_user_split"]], "test_row_indicator (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.test_row_indicator"]], "test_split (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.documentclassificationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.documentsummarizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentSummarizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.documentvisualizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentVisualizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.sentenceboundarydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.test_split"]], "test_split_on_last_k_items (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_split_on_last_k_items"]], "test_splitting_timestamp (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.test_splitting_timestamp"]], "test_start (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.test_start"]], "test_window_length_hours (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_window_length_hours"]], "timeseries_loss_weight_column (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.timeseries_loss_weight_column"]], "timeseries_weight_column (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.timeseries_weight_column"]], "timestamp_based_splitting_column (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.timestamp_based_splitting_column"]], "timestamp_based_splitting_method (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.timestamp_based_splitting_method"]], "train_function_name (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.train_function_name"]], "train_module_name (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.train_module_name"]], "training_input_tables (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.training_input_tables"]], "training_mode (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.training_mode"]], "training_point_overlap (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.training_point_overlap"]], "training_rows_downsample_ratio (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.training_rows_downsample_ratio"]], "training_start_date (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.training_start_date"]], "tree_hpo_mode (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.tree_hpo_mode"]], "trend_change (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.trend_change"]], "type_of_split (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.type_of_split"]], "type_of_split (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.type_of_split"]], "underprediction_weight (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.underprediction_weight"]], "use_all_item_totals (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.use_all_item_totals"]], "use_item_id (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.use_item_id"]], "use_item_weights_in_objective (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.use_item_weights_in_objective"]], "use_log_transforms (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.use_log_transforms"]], "use_timeseries_weights_in_objective (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.use_timeseries_weights_in_objective"]], "value_high (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.value_high"]], "variational_autoencoder (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.variational_autoencoder"]], "zero_predictor (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.zero_predictor"]], "zero_shot_hypotheses (abacusai.api_class.model.documentclassificationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig.zero_shot_hypotheses"]], "featuremappingconfig (class in abacusai.api_class.project)": [[11, "abacusai.api_class.project.FeatureMappingConfig"]], "projectfeaturegrouptypemappingsconfig (class in abacusai.api_class.project)": [[11, "abacusai.api_class.project.ProjectFeatureGroupTypeMappingsConfig"]], "abacusai.api_class.project": [[11, "module-abacusai.api_class.project"]], "feature_group_id (abacusai.api_class.project.projectfeaturegrouptypemappingsconfig attribute)": [[11, "abacusai.api_class.project.ProjectFeatureGroupTypeMappingsConfig.feature_group_id"]], "feature_group_type (abacusai.api_class.project.projectfeaturegrouptypemappingsconfig attribute)": [[11, "abacusai.api_class.project.ProjectFeatureGroupTypeMappingsConfig.feature_group_type"]], "feature_mappings (abacusai.api_class.project.projectfeaturegrouptypemappingsconfig attribute)": [[11, "abacusai.api_class.project.ProjectFeatureGroupTypeMappingsConfig.feature_mappings"]], "feature_name (abacusai.api_class.project.featuremappingconfig attribute)": [[11, "abacusai.api_class.project.FeatureMappingConfig.feature_name"]], "feature_type (abacusai.api_class.project.featuremappingconfig attribute)": [[11, "abacusai.api_class.project.FeatureMappingConfig.feature_type"]], "from_dict() (abacusai.api_class.project.projectfeaturegrouptypemappingsconfig class method)": [[11, "abacusai.api_class.project.ProjectFeatureGroupTypeMappingsConfig.from_dict"]], "nested_feature_name (abacusai.api_class.project.featuremappingconfig attribute)": [[11, "abacusai.api_class.project.FeatureMappingConfig.nested_feature_name"]], "outputvariablemapping (class in abacusai.api_class.python_functions)": [[12, "abacusai.api_class.python_functions.OutputVariableMapping"]], "pythonfunctionargument (class in abacusai.api_class.python_functions)": [[12, "abacusai.api_class.python_functions.PythonFunctionArgument"]], "abacusai.api_class.python_functions": [[12, "module-abacusai.api_class.python_functions"]], "is_required (abacusai.api_class.python_functions.pythonfunctionargument attribute)": [[12, "abacusai.api_class.python_functions.PythonFunctionArgument.is_required"]], "name (abacusai.api_class.python_functions.outputvariablemapping attribute)": [[12, "abacusai.api_class.python_functions.OutputVariableMapping.name"]], "name (abacusai.api_class.python_functions.pythonfunctionargument attribute)": [[12, "abacusai.api_class.python_functions.PythonFunctionArgument.name"]], "pipeline_variable (abacusai.api_class.python_functions.pythonfunctionargument attribute)": [[12, "abacusai.api_class.python_functions.PythonFunctionArgument.pipeline_variable"]], "value (abacusai.api_class.python_functions.pythonfunctionargument attribute)": [[12, "abacusai.api_class.python_functions.PythonFunctionArgument.value"]], "variable_type (abacusai.api_class.python_functions.outputvariablemapping attribute)": [[12, "abacusai.api_class.python_functions.OutputVariableMapping.variable_type"]], "variable_type (abacusai.api_class.python_functions.pythonfunctionargument attribute)": [[12, "abacusai.api_class.python_functions.PythonFunctionArgument.variable_type"]], "databaseconnectorexportconfig (class in abacusai.api_class.refresh)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig"]], "featuregroupexportconfig (class in abacusai.api_class.refresh)": [[13, "abacusai.api_class.refresh.FeatureGroupExportConfig"]], "fileconnectorexportconfig (class in abacusai.api_class.refresh)": [[13, "abacusai.api_class.refresh.FileConnectorExportConfig"]], "_featuregroupexportconfigfactory (class in abacusai.api_class.refresh)": [[13, "abacusai.api_class.refresh._FeatureGroupExportConfigFactory"]], "abacusai.api_class.refresh": [[13, "module-abacusai.api_class.refresh"]], "additional_id_columns (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.additional_id_columns"]], "config_abstract_class (abacusai.api_class.refresh._featuregroupexportconfigfactory attribute)": [[13, "abacusai.api_class.refresh._FeatureGroupExportConfigFactory.config_abstract_class"]], "config_class_key (abacusai.api_class.refresh._featuregroupexportconfigfactory attribute)": [[13, "abacusai.api_class.refresh._FeatureGroupExportConfigFactory.config_class_key"]], "config_class_map (abacusai.api_class.refresh._featuregroupexportconfigfactory attribute)": [[13, "abacusai.api_class.refresh._FeatureGroupExportConfigFactory.config_class_map"]], "connector_type (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.connector_type"]], "connector_type (abacusai.api_class.refresh.featuregroupexportconfig attribute)": [[13, "abacusai.api_class.refresh.FeatureGroupExportConfig.connector_type"]], "connector_type (abacusai.api_class.refresh.fileconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.FileConnectorExportConfig.connector_type"]], "data_columns (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.data_columns"]], "database_connector_id (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.database_connector_id"]], "export_file_format (abacusai.api_class.refresh.fileconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.FileConnectorExportConfig.export_file_format"]], "id_column (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.id_column"]], "location (abacusai.api_class.refresh.fileconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.FileConnectorExportConfig.location"]], "mode (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.mode"]], "object_name (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.object_name"]], "to_dict() (abacusai.api_class.refresh.databaseconnectorexportconfig method)": [[13, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.to_dict"]], "to_dict() (abacusai.api_class.refresh.fileconnectorexportconfig method)": [[13, "abacusai.api_class.refresh.FileConnectorExportConfig.to_dict"]], "invalid_pandas_column_name_characters (in module abacusai.api_client_utils)": [[14, "abacusai.api_client_utils.INVALID_PANDAS_COLUMN_NAME_CHARACTERS"]], "abacusai.api_client_utils": [[14, "module-abacusai.api_client_utils"]], "avro_to_pandas_dtype() (in module abacusai.api_client_utils)": [[14, "abacusai.api_client_utils.avro_to_pandas_dtype"]], "clean_column_name() (in module abacusai.api_client_utils)": [[14, "abacusai.api_client_utils.clean_column_name"]], "get_clean_function_source_code() (in module abacusai.api_client_utils)": [[14, "abacusai.api_client_utils.get_clean_function_source_code"]], "get_non_nullable_type() (in module abacusai.api_client_utils)": [[14, "abacusai.api_client_utils.get_non_nullable_type"]], "get_object_from_context() (in module abacusai.api_client_utils)": [[14, "abacusai.api_client_utils.get_object_from_context"]], "apiendpoint (class in abacusai.api_endpoint)": [[15, "abacusai.api_endpoint.ApiEndpoint"]], "__repr__() (abacusai.api_endpoint.apiendpoint method)": [[15, "abacusai.api_endpoint.ApiEndpoint.__repr__"]], "abacusai.api_endpoint": [[15, "module-abacusai.api_endpoint"]], "to_dict() (abacusai.api_endpoint.apiendpoint method)": [[15, "abacusai.api_endpoint.ApiEndpoint.to_dict"]], "apikey (class in abacusai.api_key)": [[16, "abacusai.api_key.ApiKey"]], "__repr__() (abacusai.api_key.apikey method)": [[16, "abacusai.api_key.ApiKey.__repr__"]], "abacusai.api_key": [[16, "module-abacusai.api_key"]], "delete() (abacusai.api_key.apikey method)": [[16, "abacusai.api_key.ApiKey.delete"]], "to_dict() (abacusai.api_key.apikey method)": [[16, "abacusai.api_key.ApiKey.to_dict"]], "applicationconnector (class in abacusai.application_connector)": [[17, "abacusai.application_connector.ApplicationConnector"]], "__repr__() (abacusai.application_connector.applicationconnector method)": [[17, "abacusai.application_connector.ApplicationConnector.__repr__"]], "abacusai.application_connector": [[17, "module-abacusai.application_connector"]], "delete() (abacusai.application_connector.applicationconnector method)": [[17, "abacusai.application_connector.ApplicationConnector.delete"]], "list_objects() (abacusai.application_connector.applicationconnector method)": [[17, "abacusai.application_connector.ApplicationConnector.list_objects"]], "rename() (abacusai.application_connector.applicationconnector method)": [[17, "abacusai.application_connector.ApplicationConnector.rename"]], "to_dict() (abacusai.application_connector.applicationconnector method)": [[17, "abacusai.application_connector.ApplicationConnector.to_dict"]], "verify() (abacusai.application_connector.applicationconnector method)": [[17, "abacusai.application_connector.ApplicationConnector.verify"]], "batchprediction (class in abacusai.batch_prediction)": [[18, "abacusai.batch_prediction.BatchPrediction"]], "__repr__() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.__repr__"]], "abacusai.batch_prediction": [[18, "module-abacusai.batch_prediction"]], "create_refresh_policy() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.create_refresh_policy"]], "delete() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.delete"]], "describe() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.describe"]], "describe_output_feature_group() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.describe_output_feature_group"]], "get_status() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.get_status"]], "list_refresh_policies() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.list_refresh_policies"]], "list_versions() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.list_versions"]], "refresh() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.refresh"]], "set_database_connector_output() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.set_database_connector_output"]], "set_dataset() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.set_dataset"]], "set_dataset_remap() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.set_dataset_remap"]], "set_feature_group() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.set_feature_group"]], "set_feature_group_output() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.set_feature_group_output"]], "set_file_connector_output() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.set_file_connector_output"]], "set_output_to_console() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.set_output_to_console"]], "start() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.start"]], "to_dict() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.to_dict"]], "update() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.update"]], "wait_for_drift_monitor() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.wait_for_drift_monitor"]], "wait_for_predictions() (abacusai.batch_prediction.batchprediction method)": [[18, "abacusai.batch_prediction.BatchPrediction.wait_for_predictions"]], "batchpredictionversion (class in abacusai.batch_prediction_version)": [[19, "abacusai.batch_prediction_version.BatchPredictionVersion"]], "__repr__() (abacusai.batch_prediction_version.batchpredictionversion method)": [[19, "abacusai.batch_prediction_version.BatchPredictionVersion.__repr__"]], "abacusai.batch_prediction_version": [[19, "module-abacusai.batch_prediction_version"]], "describe() (abacusai.batch_prediction_version.batchpredictionversion method)": [[19, "abacusai.batch_prediction_version.BatchPredictionVersion.describe"]], "download_batch_prediction_result_chunk() (abacusai.batch_prediction_version.batchpredictionversion method)": [[19, "abacusai.batch_prediction_version.BatchPredictionVersion.download_batch_prediction_result_chunk"]], "download_result_to_file() (abacusai.batch_prediction_version.batchpredictionversion method)": [[19, "abacusai.batch_prediction_version.BatchPredictionVersion.download_result_to_file"]], "get_batch_prediction_connector_errors() (abacusai.batch_prediction_version.batchpredictionversion method)": [[19, "abacusai.batch_prediction_version.BatchPredictionVersion.get_batch_prediction_connector_errors"]], "get_outliers_for_batch_prediction_feature() (abacusai.batch_prediction_version.batchpredictionversion method)": [[19, "abacusai.batch_prediction_version.BatchPredictionVersion.get_outliers_for_batch_prediction_feature"]], "get_status() (abacusai.batch_prediction_version.batchpredictionversion method)": [[19, "abacusai.batch_prediction_version.BatchPredictionVersion.get_status"]], "refresh() (abacusai.batch_prediction_version.batchpredictionversion method)": [[19, "abacusai.batch_prediction_version.BatchPredictionVersion.refresh"]], "to_dict() (abacusai.batch_prediction_version.batchpredictionversion method)": [[19, "abacusai.batch_prediction_version.BatchPredictionVersion.to_dict"]], "wait_for_drift_monitor() (abacusai.batch_prediction_version.batchpredictionversion method)": [[19, "abacusai.batch_prediction_version.BatchPredictionVersion.wait_for_drift_monitor"]], "wait_for_predictions() (abacusai.batch_prediction_version.batchpredictionversion method)": [[19, "abacusai.batch_prediction_version.BatchPredictionVersion.wait_for_predictions"]], "categoricalrangeviolation (class in abacusai.categorical_range_violation)": [[20, "abacusai.categorical_range_violation.CategoricalRangeViolation"]], "__repr__() (abacusai.categorical_range_violation.categoricalrangeviolation method)": [[20, "abacusai.categorical_range_violation.CategoricalRangeViolation.__repr__"]], "abacusai.categorical_range_violation": [[20, "module-abacusai.categorical_range_violation"]], "to_dict() (abacusai.categorical_range_violation.categoricalrangeviolation method)": [[20, "abacusai.categorical_range_violation.CategoricalRangeViolation.to_dict"]], "chatmessage (class in abacusai.chat_message)": [[21, "abacusai.chat_message.ChatMessage"]], "__repr__() (abacusai.chat_message.chatmessage method)": [[21, "abacusai.chat_message.ChatMessage.__repr__"]], "abacusai.chat_message": [[21, "module-abacusai.chat_message"]], "to_dict() (abacusai.chat_message.chatmessage method)": [[21, "abacusai.chat_message.ChatMessage.to_dict"]], "chatsession (class in abacusai.chat_session)": [[22, "abacusai.chat_session.ChatSession"]], "__repr__() (abacusai.chat_session.chatsession method)": [[22, "abacusai.chat_session.ChatSession.__repr__"]], "abacusai.chat_session": [[22, "module-abacusai.chat_session"]], "get() (abacusai.chat_session.chatsession method)": [[22, "abacusai.chat_session.ChatSession.get"]], "to_dict() (abacusai.chat_session.chatsession method)": [[22, "abacusai.chat_session.ChatSession.to_dict"]], "apiclient (class in abacusai.client)": [[23, "abacusai.client.ApiClient"]], "apiexception": [[23, "abacusai.client.ApiException"], [78, "abacusai.ApiException"]], "baseapiclient (class in abacusai.client)": [[23, "abacusai.client.BaseApiClient"]], "clientoptions (class in abacusai.client)": [[23, "abacusai.client.ClientOptions"]], "default_server (in module abacusai.client)": [[23, "abacusai.client.DEFAULT_SERVER"]], "readonlyclient (class in abacusai.client)": [[23, "abacusai.client.ReadOnlyClient"]], "__str__() (abacusai.client.apiexception method)": [[23, "abacusai.client.ApiException.__str__"]], "_build_class() (abacusai.client.baseapiclient method)": [[23, "abacusai.client.BaseApiClient._build_class"]], "_cached_endpoints (in module abacusai.client)": [[23, "abacusai.client._cached_endpoints"]], "_call_aiagent_asyncapp_sync_message() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient._call_aiagent_asyncapp_sync_message"]], "_call_api() (abacusai.client.baseapiclient method)": [[23, "abacusai.client.BaseApiClient._call_api"]], "_clean_api_objects() (abacusai.client.baseapiclient method)": [[23, "abacusai.client.BaseApiClient._clean_api_objects"]], "_discover_service_url() (in module abacusai.client)": [[23, "abacusai.client._discover_service_url"]], "_get_agent_async_app_caller() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient._get_agent_async_app_caller"]], "_get_agent_async_app_request_id() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient._get_agent_async_app_request_id"]], "_get_prediction_endpoint() (abacusai.client.baseapiclient method)": [[23, "abacusai.client.BaseApiClient._get_prediction_endpoint"]], "_get_streaming_endpoint() (abacusai.client.baseapiclient method)": [[23, "abacusai.client.BaseApiClient._get_streaming_endpoint"]], "_poll() (abacusai.client.baseapiclient method)": [[23, "abacusai.client.BaseApiClient._poll"]], "_request() (abacusai.client.baseapiclient method)": [[23, "abacusai.client.BaseApiClient._request"]], "_request_context (in module abacusai.client)": [[23, "abacusai.client._request_context"]], "_requests_retry_session() (in module abacusai.client)": [[23, "abacusai.client._requests_retry_session"]], "_stream_llm_call() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient._stream_llm_call"]], "_upload_from_pandas() (abacusai.client.baseapiclient method)": [[23, "abacusai.client.BaseApiClient._upload_from_pandas"]], "_upload_from_spark() (abacusai.client.baseapiclient method)": [[23, "abacusai.client.BaseApiClient._upload_from_spark"]], "_validate_pandas_df() (abacusai.client.baseapiclient method)": [[23, "abacusai.client.BaseApiClient._validate_pandas_df"]], "abacusai.client": [[23, "module-abacusai.client"]], "add_annotatable_feature() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.add_annotatable_feature"]], "add_annotation() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.add_annotation"]], "add_feature_group_annotation_label() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.add_feature_group_annotation_label"]], "add_feature_group_tag() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.add_feature_group_tag"]], "add_feature_group_to_project() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.add_feature_group_to_project"]], "add_feature_tag() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.add_feature_tag"]], "add_graph_to_dashboard() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.add_graph_to_dashboard"]], "add_multiple_user_item_interactions() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.add_multiple_user_item_interactions"]], "add_organization_group_permission() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.add_organization_group_permission"]], "add_organization_group_to_feature_group_modifiers() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.add_organization_group_to_feature_group_modifiers"]], "add_project_tags() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.add_project_tags"]], "add_user_item_interaction() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.add_user_item_interaction"]], "add_user_to_feature_group_modifiers() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.add_user_to_feature_group_modifiers"]], "add_user_to_organization() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.add_user_to_organization"]], "add_user_to_organization_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.add_user_to_organization_group"]], "append_data() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.append_data"]], "append_multiple_data() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.append_multiple_data"]], "attach_dataset_to_project() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.attach_dataset_to_project"]], "cancel_upload() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.cancel_upload"]], "check_constraints() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.check_constraints"]], "classify_image() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.classify_image"]], "classify_pdf() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.classify_pdf"]], "clear_agent_context() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.clear_agent_context"]], "client_version (abacusai.client.baseapiclient attribute)": [[23, "abacusai.client.BaseApiClient.client_version"]], "concatenate_feature_group_data() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.concatenate_feature_group_data"]], "create_agent() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_agent"]], "create_agent_from_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_agent_from_function"]], "create_algorithm() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_algorithm"]], "create_algorithm_from_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_algorithm_from_function"]], "create_batch_prediction() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_batch_prediction"]], "create_chat_session() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_chat_session"]], "create_custom_loss_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_custom_loss_function"]], "create_custom_loss_function_with_source_code() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_custom_loss_function_with_source_code"]], "create_custom_metric() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_custom_metric"]], "create_custom_metric_from_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_custom_metric_from_function"]], "create_dataset_from_application_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_dataset_from_application_connector"]], "create_dataset_from_database_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_dataset_from_database_connector"]], "create_dataset_from_file_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_dataset_from_file_connector"]], "create_dataset_from_pandas() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_dataset_from_pandas"]], "create_dataset_from_streaming_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_dataset_from_streaming_connector"]], "create_dataset_from_upload() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_dataset_from_upload"]], "create_dataset_version_from_application_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_dataset_version_from_application_connector"]], "create_dataset_version_from_database_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_dataset_version_from_database_connector"]], "create_dataset_version_from_file_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_dataset_version_from_file_connector"]], "create_dataset_version_from_pandas() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_dataset_version_from_pandas"]], "create_dataset_version_from_upload() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_dataset_version_from_upload"]], "create_deployment() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_deployment"]], "create_deployment_token() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_deployment_token"]], "create_deployment_webhook() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_deployment_webhook"]], "create_eda() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_eda"]], "create_feature() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_feature"]], "create_feature_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_feature_group"]], "create_feature_group_from_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_feature_group_from_function"]], "create_feature_group_from_pandas_df() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_feature_group_from_pandas_df"]], "create_feature_group_from_python_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_feature_group_from_python_function"]], "create_feature_group_from_spark_df() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_feature_group_from_spark_df"]], "create_feature_group_from_template() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_feature_group_from_template"]], "create_feature_group_template() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_feature_group_template"]], "create_feature_group_version() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_feature_group_version"]], "create_graph_dashboard() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_graph_dashboard"]], "create_merge_feature_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_merge_feature_group"]], "create_model_from_functions() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_model_from_functions"]], "create_model_from_python() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_model_from_python"]], "create_model_monitor() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_model_monitor"]], "create_module() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_module"]], "create_module_from_notebook() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_module_from_notebook"]], "create_monitor_alert() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_monitor_alert"]], "create_nested_feature() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_nested_feature"]], "create_nlp_drift_monitor() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_nlp_drift_monitor"]], "create_organization_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_organization_group"]], "create_pipeline() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_pipeline"]], "create_pipeline_step() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_pipeline_step"]], "create_pipeline_step_from_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_pipeline_step_from_function"]], "create_point_in_time_feature() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_point_in_time_feature"]], "create_point_in_time_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_point_in_time_group"]], "create_point_in_time_group_feature() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_point_in_time_group_feature"]], "create_project() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_project"]], "create_python_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_python_function"]], "create_refresh_policy() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_refresh_policy"]], "create_sampling_feature_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_sampling_feature_group"]], "create_snapshot_feature_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_snapshot_feature_group"]], "create_spark_df_from_feature_group_version() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_spark_df_from_feature_group_version"]], "create_streaming_dataset() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_streaming_dataset"]], "create_streaming_token() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_streaming_token"]], "create_train_test_data_split_feature_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_train_test_data_split_feature_group"]], "create_transform_feature_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_transform_feature_group"]], "create_vector_store() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_vector_store"]], "create_vector_store_version() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_vector_store_version"]], "create_vision_drift_monitor() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.create_vision_drift_monitor"]], "delete_algorithm() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_algorithm"]], "delete_api_key() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_api_key"]], "delete_application_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_application_connector"]], "delete_batch_prediction() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_batch_prediction"]], "delete_custom_loss_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_custom_loss_function"]], "delete_custom_metric() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_custom_metric"]], "delete_database_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_database_connector"]], "delete_dataset() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_dataset"]], "delete_deployment() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_deployment"]], "delete_deployment_token() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_deployment_token"]], "delete_eda() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_eda"]], "delete_eda_version() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_eda_version"]], "delete_feature() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_feature"]], "delete_feature_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_feature_group"]], "delete_feature_group_template() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_feature_group_template"]], "delete_file_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_file_connector"]], "delete_graph_dashboard() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_graph_dashboard"]], "delete_graph_from_dashboard() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.delete_graph_from_dashboard"]], "delete_item_embeddings() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_item_embeddings"]], "delete_model() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_model"]], "delete_model_monitor() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_model_monitor"]], "delete_model_monitor_version() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_model_monitor_version"]], "delete_model_version() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_model_version"]], "delete_module() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_module"]], "delete_monitor_alert() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_monitor_alert"]], "delete_nested_feature() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_nested_feature"]], "delete_organization_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_organization_group"]], "delete_pipeline() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_pipeline"]], "delete_pipeline_step() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_pipeline_step"]], "delete_point_in_time_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_point_in_time_group"]], "delete_project() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_project"]], "delete_python_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_python_function"]], "delete_refresh_policy() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_refresh_policy"]], "delete_streaming_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_streaming_connector"]], "delete_streaming_token() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_streaming_token"]], "delete_vector_store() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_vector_store"]], "delete_webhook() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.delete_webhook"]], "describe_algorithm() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_algorithm"]], "describe_annotation() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.describe_annotation"]], "describe_async_feature_group_operation() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.describe_async_feature_group_operation"]], "describe_batch_prediction() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_batch_prediction"]], "describe_batch_prediction_version() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_batch_prediction_version"]], "describe_custom_loss_function() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_custom_loss_function"]], "describe_custom_metric() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_custom_metric"]], "describe_custom_metric_version() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_custom_metric_version"]], "describe_dataset() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_dataset"]], "describe_dataset_version() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_dataset_version"]], "describe_deployment() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_deployment"]], "describe_eda() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_eda"]], "describe_eda_version() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_eda_version"]], "describe_feature_group() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_feature_group"]], "describe_feature_group_by_table_name() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_feature_group_by_table_name"]], "describe_feature_group_export() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_feature_group_export"]], "describe_feature_group_template() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_feature_group_template"]], "describe_feature_group_version() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_feature_group_version"]], "describe_graph_dashboard() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_graph_dashboard"]], "describe_graph_for_dashboard() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_graph_for_dashboard"]], "describe_image() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.describe_image"]], "describe_model() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_model"]], "describe_model_artifacts_export() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_model_artifacts_export"]], "describe_model_monitor() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_model_monitor"]], "describe_model_monitor_version() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_model_monitor_version"]], "describe_model_version() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_model_version"]], "describe_module() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_module"]], "describe_monitor_alert() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_monitor_alert"]], "describe_monitor_alert_version() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_monitor_alert_version"]], "describe_organization_group() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_organization_group"]], "describe_pipeline() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.describe_pipeline"]], "describe_pipeline_by_name() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.describe_pipeline_by_name"]], "describe_pipeline_step() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_pipeline_step"]], "describe_pipeline_step_by_name() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_pipeline_step_by_name"]], "describe_pipeline_version() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_pipeline_version"]], "describe_problem_type() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_problem_type"]], "describe_project() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_project"]], "describe_project_feature_group() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_project_feature_group"]], "describe_python_function() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_python_function"]], "describe_refresh_pipeline_run() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_refresh_pipeline_run"]], "describe_refresh_policy() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_refresh_policy"]], "describe_train_test_data_split_feature_group() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_train_test_data_split_feature_group"]], "describe_train_test_data_split_feature_group_version() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_train_test_data_split_feature_group_version"]], "describe_upload() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_upload"]], "describe_use_case_requirements() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_use_case_requirements"]], "describe_user() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_user"]], "describe_vector_store() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_vector_store"]], "describe_vector_store_by_name() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_vector_store_by_name"]], "describe_vector_store_version() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_vector_store_version"]], "describe_webhook() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.describe_webhook"]], "detach_feature_group_from_template() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.detach_feature_group_from_template"]], "download_batch_prediction_result_chunk() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.download_batch_prediction_result_chunk"]], "download_execute_feature_group_operation_result_part_chunk() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.download_execute_feature_group_operation_result_part_chunk"]], "evaluate_prompt() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.evaluate_prompt"]], "execute_agent() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.execute_agent"]], "execute_async_feature_group_operation() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.execute_async_feature_group_operation"]], "execute_feature_group_sql() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.execute_feature_group_sql"]], "export_custom_model_version() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.export_custom_model_version"]], "export_feature_group_version_to_console() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.export_feature_group_version_to_console"]], "export_feature_group_version_to_database_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.export_feature_group_version_to_database_connector"]], "export_feature_group_version_to_file_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.export_feature_group_version_to_file_connector"]], "export_model_artifact_as_feature_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.export_model_artifact_as_feature_group"]], "generate_image() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.generate_image"]], "generate_natural_language_explanation() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.generate_natural_language_explanation"]], "get_agent_context_chat_history() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_agent_context_chat_history"]], "get_alternative_assignments() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_alternative_assignments"]], "get_annotations_status() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_annotations_status"]], "get_anomalies() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_anomalies"]], "get_api_endpoint() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_api_endpoint"]], "get_assignments() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_assignments"]], "get_batch_prediction_connector_errors() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_batch_prediction_connector_errors"]], "get_chat_response() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_chat_response"]], "get_chat_session() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_chat_session"]], "get_classification() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_classification"]], "get_cluster() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_cluster"]], "get_collinearity_for_feature() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_collinearity_for_feature"]], "get_custom_train_function_info() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_custom_train_function_info"]], "get_database_connector_object_schema() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_database_connector_object_schema"]], "get_dataset_schema() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_dataset_schema"]], "get_docstore_document() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_docstore_document"]], "get_docstore_image() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_docstore_image"]], "get_document_to_annotate() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_document_to_annotate"]], "get_drift_for_feature() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_drift_for_feature"]], "get_eda_collinearity() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_eda_collinearity"]], "get_eda_data_consistency() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_eda_data_consistency"]], "get_eda_forecasting_analysis() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_eda_forecasting_analysis"]], "get_entailment() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_entailment"]], "get_entities_from_pdf() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_entities_from_pdf"]], "get_execute_feature_group_operation_result_part_count() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_execute_feature_group_operation_result_part_count"]], "get_feature_association() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_feature_association"]], "get_feature_group_export_connector_errors() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_feature_group_export_connector_errors"]], "get_feature_group_schema() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_feature_group_schema"]], "get_feature_group_version_export_download_url() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_feature_group_version_export_download_url"]], "get_feature_importance_by_model_version() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_feature_importance_by_model_version"]], "get_file_connector_instructions() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_file_connector_instructions"]], "get_forecast() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_forecast"]], "get_k_nearest() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_k_nearest"]], "get_labels() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_labels"]], "get_llm_parameters() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_llm_parameters"]], "get_materialization_logs() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_materialization_logs"]], "get_model_metrics() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_model_metrics"]], "get_model_monitor_chart_from_organization() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_model_monitor_chart_from_organization"]], "get_model_monitor_summary() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_model_monitor_summary"]], "get_model_monitor_summary_from_organization() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_model_monitor_summary_from_organization"]], "get_model_monitoring_logs() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_model_monitoring_logs"]], "get_model_training_types_for_deployment() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_model_training_types_for_deployment"]], "get_module_code_from_notebook() (in module abacusai.client)": [[23, "abacusai.client.get_module_code_from_notebook"]], "get_multiple_k_nearest() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_multiple_k_nearest"]], "get_natural_language_explanation() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_natural_language_explanation"]], "get_notebook_cell_completion() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_notebook_cell_completion"]], "get_objects_from_image() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_objects_from_image"]], "get_outliers_for_batch_prediction_feature() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_outliers_for_batch_prediction_feature"]], "get_outliers_for_feature() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_outliers_for_feature"]], "get_personalized_ranking() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_personalized_ranking"]], "get_prediction_drift() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_prediction_drift"]], "get_project_feature_group_config() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_project_feature_group_config"]], "get_ranked_items() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_ranked_items"]], "get_recent_feature_group_streamed_data() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_recent_feature_group_streamed_data"]], "get_recommendations() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_recommendations"]], "get_related_items() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_related_items"]], "get_schema() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_schema"]], "get_search_results() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_search_results"]], "get_sentiment() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_sentiment"]], "get_source_code_info() (in module abacusai.client)": [[23, "abacusai.client.get_source_code_info"]], "get_summary() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_summary"]], "get_train_function_input() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_train_function_input"]], "get_train_function_input_from_model_version() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_train_function_input_from_model_version"]], "get_training_config_options() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.get_training_config_options"]], "get_training_data_logs() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_training_data_logs"]], "get_training_logs() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.get_training_logs"]], "import_annotation_labels() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.import_annotation_labels"]], "import_module() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.import_module"]], "include_modules() (in module abacusai.client)": [[23, "abacusai.client.include_modules"]], "invalidate_streaming_feature_group_data() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.invalidate_streaming_feature_group_data"]], "is_anomaly() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.is_anomaly"]], "list_algorithms() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_algorithms"]], "list_api_keys() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_api_keys"]], "list_application_connector_objects() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_application_connector_objects"]], "list_application_connectors() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_application_connectors"]], "list_batch_prediction_versions() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_batch_prediction_versions"]], "list_batch_predictions() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_batch_predictions"]], "list_builtin_algorithms() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.list_builtin_algorithms"]], "list_chat_sessions() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_chat_sessions"]], "list_custom_loss_functions() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_custom_loss_functions"]], "list_custom_metrics() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_custom_metrics"]], "list_database_connector_objects() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_database_connector_objects"]], "list_database_connectors() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_database_connectors"]], "list_dataset_versions() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_dataset_versions"]], "list_datasets() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_datasets"]], "list_deployment_tokens() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_deployment_tokens"]], "list_deployment_webhooks() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_deployment_webhooks"]], "list_deployments() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_deployments"]], "list_eda() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_eda"]], "list_eda_versions() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_eda_versions"]], "list_feature_group_exports() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_feature_group_exports"]], "list_feature_group_modifiers() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_feature_group_modifiers"]], "list_feature_group_templates() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_feature_group_templates"]], "list_feature_group_versions() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_feature_group_versions"]], "list_feature_groups() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_feature_groups"]], "list_file_connectors() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_file_connectors"]], "list_graph_dashboards() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_graph_dashboards"]], "list_model_artifacts_exports() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_model_artifacts_exports"]], "list_model_monitor_versions() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_model_monitor_versions"]], "list_model_monitors() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_model_monitors"]], "list_model_versions() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_model_versions"]], "list_models() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_models"]], "list_modules() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_modules"]], "list_monitor_alert_versions_for_monitor_version() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_monitor_alert_versions_for_monitor_version"]], "list_monitor_alerts_for_monitor() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_monitor_alerts_for_monitor"]], "list_organization_groups() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_organization_groups"]], "list_organization_model_monitors() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_organization_model_monitors"]], "list_organization_users() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_organization_users"]], "list_pipeline_versions() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.list_pipeline_versions"]], "list_pipelines() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_pipelines"]], "list_project_datasets() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_project_datasets"]], "list_project_feature_group_templates() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_project_feature_group_templates"]], "list_project_feature_groups() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_project_feature_groups"]], "list_projects() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_projects"]], "list_python_function_feature_groups() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_python_function_feature_groups"]], "list_python_functions() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_python_functions"]], "list_refresh_pipeline_runs() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_refresh_pipeline_runs"]], "list_refresh_policies() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_refresh_policies"]], "list_streaming_connectors() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_streaming_connectors"]], "list_streaming_tokens() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_streaming_tokens"]], "list_uploads() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_uploads"]], "list_use_cases() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_use_cases"]], "list_vector_store_versions() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_vector_store_versions"]], "list_vector_stores() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.list_vector_stores"]], "lookup_features() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.lookup_features"]], "lookup_vector_store() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.lookup_vector_store"]], "mark_upload_complete() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.mark_upload_complete"]], "model_monitor_version_metric_data() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.model_monitor_version_metric_data"]], "pause_pipeline_refresh_schedule() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.pause_pipeline_refresh_schedule"]], "pause_refresh_policy() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.pause_refresh_policy"]], "predict() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.predict"]], "predict_churn() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.predict_churn"]], "predict_class() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.predict_class"]], "predict_fraud() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.predict_fraud"]], "predict_from_datasets() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.predict_from_datasets"]], "predict_language() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.predict_language"]], "predict_lead() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.predict_lead"]], "predict_multiple() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.predict_multiple"]], "predict_takeover() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.predict_takeover"]], "predict_target() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.predict_target"]], "predict_with_binary_data() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.predict_with_binary_data"]], "preview_feature_group_template_resolution() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.preview_feature_group_template_resolution"]], "query_feature_group_code_generator() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.query_feature_group_code_generator"]], "remove_column_mapping() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.remove_column_mapping"]], "remove_concatenation_config() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.remove_concatenation_config"]], "remove_dataset_from_project() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.remove_dataset_from_project"]], "remove_deployment_feature_group_export_output() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.remove_deployment_feature_group_export_output"]], "remove_feature_group_annotation_label() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.remove_feature_group_annotation_label"]], "remove_feature_group_from_project() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.remove_feature_group_from_project"]], "remove_feature_group_tag() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.remove_feature_group_tag"]], "remove_feature_tag() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.remove_feature_tag"]], "remove_organization_group_from_feature_group_modifiers() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.remove_organization_group_from_feature_group_modifiers"]], "remove_organization_group_permission() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.remove_organization_group_permission"]], "remove_project_tags() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.remove_project_tags"]], "remove_user_from_feature_group_modifiers() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.remove_user_from_feature_group_modifiers"]], "remove_user_from_organization() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.remove_user_from_organization"]], "remove_user_from_organization_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.remove_user_from_organization_group"]], "rename_application_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.rename_application_connector"]], "rename_database_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.rename_database_connector"]], "rename_deployment() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.rename_deployment"]], "rename_eda() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.rename_eda"]], "rename_model() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.rename_model"]], "rename_model_monitor() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.rename_model_monitor"]], "rename_project() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.rename_project"]], "rename_streaming_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.rename_streaming_connector"]], "render_feature_group_data_for_llm() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.render_feature_group_data_for_llm"]], "render_feature_groups_for_llm() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.render_feature_groups_for_llm"]], "rerun_eda() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.rerun_eda"]], "rerun_model_monitor() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.rerun_model_monitor"]], "resume_pipeline_refresh_schedule() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.resume_pipeline_refresh_schedule"]], "resume_refresh_policy() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.resume_refresh_policy"]], "retrain_model() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.retrain_model"]], "run_monitor_alert() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.run_monitor_alert"]], "run_pipeline() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.run_pipeline"]], "run_refresh_policy() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.run_refresh_policy"]], "score_image() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.score_image"]], "search_feature_groups() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.search_feature_groups"]], "set_agent_context_chat_history() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_agent_context_chat_history"]], "set_annotation_status_feature() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_annotation_status_feature"]], "set_auto_deployment() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_auto_deployment"]], "set_azure_blob_connection_string() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_azure_blob_connection_string"]], "set_batch_prediction_database_connector_output() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_batch_prediction_database_connector_output"]], "set_batch_prediction_dataset() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_batch_prediction_dataset"]], "set_batch_prediction_dataset_remap() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_batch_prediction_dataset_remap"]], "set_batch_prediction_feature_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_batch_prediction_feature_group"]], "set_batch_prediction_feature_group_output() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_batch_prediction_feature_group_output"]], "set_batch_prediction_file_connector_output() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_batch_prediction_file_connector_output"]], "set_batch_prediction_output_to_console() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_batch_prediction_output_to_console"]], "set_column_data_type() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_column_data_type"]], "set_column_mapping() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_column_mapping"]], "set_dataset_column_data_type() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_dataset_column_data_type"]], "set_dataset_database_connector_config() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.set_dataset_database_connector_config"]], "set_default_model_algorithm() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.set_default_model_algorithm"]], "set_default_organization_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_default_organization_group"]], "set_deployment_feature_group_export_database_connector_output() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_deployment_feature_group_export_database_connector_output"]], "set_deployment_feature_group_export_file_connector_output() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_deployment_feature_group_export_file_connector_output"]], "set_deployment_feature_group_version() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_deployment_feature_group_version"]], "set_deployment_model_version() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_deployment_model_version"]], "set_feature_as_annotatable_feature() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_feature_as_annotatable_feature"]], "set_feature_group_indexing_config() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_feature_group_indexing_config"]], "set_feature_group_merge_config() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_feature_group_merge_config"]], "set_feature_group_modifier_lock() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_feature_group_modifier_lock"]], "set_feature_group_sampling_config() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_feature_group_sampling_config"]], "set_feature_group_schema() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_feature_group_schema"]], "set_feature_group_transform_config() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_feature_group_transform_config"]], "set_feature_group_type() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_feature_group_type"]], "set_feature_mapping() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_feature_mapping"]], "set_feature_type() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_feature_type"]], "set_model_objective() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.set_model_objective"]], "set_model_prediction_params() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_model_prediction_params"]], "set_model_training_config() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_model_training_config"]], "set_natural_language_explanation() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_natural_language_explanation"]], "set_project_feature_group_config() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_project_feature_group_config"]], "set_streaming_retention_policy() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.set_streaming_retention_policy"]], "snapshot_streaming_data() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.snapshot_streaming_data"]], "start_batch_prediction() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.start_batch_prediction"]], "start_deployment() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.start_deployment"]], "stop_deployment() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.stop_deployment"]], "stream_message() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.stream_message"]], "streaming_evaluate_prompt() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.streaming_evaluate_prompt"]], "suggest_feature_group_template_for_feature_group() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.suggest_feature_group_template_for_feature_group"]], "train_model() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.train_model"]], "transcribe_audio() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.transcribe_audio"]], "transfer_style() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.transfer_style"]], "unset_feature_as_annotatable_feature() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.unset_feature_as_annotatable_feature"]], "unset_pipeline_refresh_schedule() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.unset_pipeline_refresh_schedule"]], "update_agent() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_agent"]], "update_agent_with_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_agent_with_function"]], "update_algorithm() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_algorithm"]], "update_algorithm_from_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_algorithm_from_function"]], "update_annotation_status() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_annotation_status"]], "update_batch_prediction() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_batch_prediction"]], "update_custom_loss_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_custom_loss_function"]], "update_custom_loss_function_with_source_code() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_custom_loss_function_with_source_code"]], "update_custom_metric() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_custom_metric"]], "update_custom_metric_from_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_custom_metric_from_function"]], "update_dataset_feature_group_feature_expression() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_dataset_feature_group_feature_expression"]], "update_deployment() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_deployment"]], "update_feature() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_feature"]], "update_feature_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_feature_group"]], "update_feature_group_from_pandas_df() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_feature_group_from_pandas_df"]], "update_feature_group_from_spark_df() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_feature_group_from_spark_df"]], "update_feature_group_function_definition() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_feature_group_function_definition"]], "update_feature_group_git() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_feature_group_git"]], "update_feature_group_python_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_feature_group_python_function"]], "update_feature_group_python_function_bindings() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_feature_group_python_function_bindings"]], "update_feature_group_sql_definition() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_feature_group_sql_definition"]], "update_feature_group_template() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_feature_group_template"]], "update_feature_group_template_bindings() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_feature_group_template_bindings"]], "update_feature_group_zip() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_feature_group_zip"]], "update_graph_dashboard() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_graph_dashboard"]], "update_graph_to_dashboard() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_graph_to_dashboard"]], "update_module() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_module"]], "update_module_from_notebook() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_module_from_notebook"]], "update_monitor_alert() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_monitor_alert"]], "update_nested_feature() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_nested_feature"]], "update_pipeline() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_pipeline"]], "update_pipeline_step() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_pipeline_step"]], "update_pipeline_step_from_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_pipeline_step_from_function"]], "update_point_in_time_feature() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_point_in_time_feature"]], "update_point_in_time_group() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_point_in_time_group"]], "update_point_in_time_group_feature() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_point_in_time_group_feature"]], "update_python_function() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_python_function"]], "update_python_function_code() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_python_function_code"]], "update_python_model() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_python_model"]], "update_python_model_git() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_python_model_git"]], "update_python_model_zip() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_python_model_zip"]], "update_refresh_policy() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_refresh_policy"]], "update_vector_store() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_vector_store"]], "update_webhook() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.update_webhook"]], "upload_part() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.upload_part"]], "upsert_data() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.upsert_data"]], "upsert_item_attributes() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.upsert_item_attributes"]], "upsert_item_embeddings() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.upsert_item_embeddings"]], "upsert_multiple_data() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.upsert_multiple_data"]], "upsert_multiple_item_attributes() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.upsert_multiple_item_attributes"]], "upsert_multiple_item_embeddings() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.upsert_multiple_item_embeddings"]], "upsert_multiple_user_attributes() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.upsert_multiple_user_attributes"]], "upsert_user_attributes() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.upsert_user_attributes"]], "use_feature_group_for_training() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.use_feature_group_for_training"]], "validate_project() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.validate_project"]], "verify_and_describe_annotation() (abacusai.client.readonlyclient method)": [[23, "abacusai.client.ReadOnlyClient.verify_and_describe_annotation"]], "verify_application_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.verify_application_connector"]], "verify_database_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.verify_database_connector"]], "verify_file_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.verify_file_connector"]], "verify_streaming_connector() (abacusai.client.apiclient method)": [[23, "abacusai.client.ApiClient.verify_streaming_connector"]], "codesource (class in abacusai.code_source)": [[24, "abacusai.code_source.CodeSource"]], "__repr__() (abacusai.code_source.codesource method)": [[24, "abacusai.code_source.CodeSource.__repr__"]], "abacusai.code_source": [[24, "module-abacusai.code_source"]], "to_dict() (abacusai.code_source.codesource method)": [[24, "abacusai.code_source.CodeSource.to_dict"]], "concatenationconfig (class in abacusai.concatenation_config)": [[25, "abacusai.concatenation_config.ConcatenationConfig"]], "__repr__() (abacusai.concatenation_config.concatenationconfig method)": [[25, "abacusai.concatenation_config.ConcatenationConfig.__repr__"]], "abacusai.concatenation_config": [[25, "module-abacusai.concatenation_config"]], "to_dict() (abacusai.concatenation_config.concatenationconfig method)": [[25, "abacusai.concatenation_config.ConcatenationConfig.to_dict"]], "abacusai.cryptography": [[26, "module-abacusai.cryptography"]], "get_public_key() (in module abacusai.cryptography)": [[26, "abacusai.cryptography.get_public_key"]], "verify_response() (in module abacusai.cryptography)": [[26, "abacusai.cryptography.verify_response"]], "customlossfunction (class in abacusai.custom_loss_function)": [[27, "abacusai.custom_loss_function.CustomLossFunction"]], "__repr__() (abacusai.custom_loss_function.customlossfunction method)": [[27, "abacusai.custom_loss_function.CustomLossFunction.__repr__"]], "abacusai.custom_loss_function": [[27, "module-abacusai.custom_loss_function"]], "to_dict() (abacusai.custom_loss_function.customlossfunction method)": [[27, "abacusai.custom_loss_function.CustomLossFunction.to_dict"]], "custommetric (class in abacusai.custom_metric)": [[28, "abacusai.custom_metric.CustomMetric"]], "__repr__() (abacusai.custom_metric.custommetric method)": [[28, "abacusai.custom_metric.CustomMetric.__repr__"]], "abacusai.custom_metric": [[28, "module-abacusai.custom_metric"]], "to_dict() (abacusai.custom_metric.custommetric method)": [[28, "abacusai.custom_metric.CustomMetric.to_dict"]], "custommetricversion (class in abacusai.custom_metric_version)": [[29, "abacusai.custom_metric_version.CustomMetricVersion"]], "__repr__() (abacusai.custom_metric_version.custommetricversion method)": [[29, "abacusai.custom_metric_version.CustomMetricVersion.__repr__"]], "abacusai.custom_metric_version": [[29, "module-abacusai.custom_metric_version"]], "describe() (abacusai.custom_metric_version.custommetricversion method)": [[29, "abacusai.custom_metric_version.CustomMetricVersion.describe"]], "refresh() (abacusai.custom_metric_version.custommetricversion method)": [[29, "abacusai.custom_metric_version.CustomMetricVersion.refresh"]], "to_dict() (abacusai.custom_metric_version.custommetricversion method)": [[29, "abacusai.custom_metric_version.CustomMetricVersion.to_dict"]], "customtrainfunctioninfo (class in abacusai.custom_train_function_info)": [[30, "abacusai.custom_train_function_info.CustomTrainFunctionInfo"]], "__repr__() (abacusai.custom_train_function_info.customtrainfunctioninfo method)": [[30, "abacusai.custom_train_function_info.CustomTrainFunctionInfo.__repr__"]], "abacusai.custom_train_function_info": [[30, "module-abacusai.custom_train_function_info"]], "to_dict() (abacusai.custom_train_function_info.customtrainfunctioninfo method)": [[30, "abacusai.custom_train_function_info.CustomTrainFunctionInfo.to_dict"]], "dataconsistencyduplication (class in abacusai.data_consistency_duplication)": [[31, "abacusai.data_consistency_duplication.DataConsistencyDuplication"]], "__repr__() (abacusai.data_consistency_duplication.dataconsistencyduplication method)": [[31, "abacusai.data_consistency_duplication.DataConsistencyDuplication.__repr__"]], "abacusai.data_consistency_duplication": [[31, "module-abacusai.data_consistency_duplication"]], "to_dict() (abacusai.data_consistency_duplication.dataconsistencyduplication method)": [[31, "abacusai.data_consistency_duplication.DataConsistencyDuplication.to_dict"]], "datapreplogs (class in abacusai.data_prep_logs)": [[32, "abacusai.data_prep_logs.DataPrepLogs"]], "__repr__() (abacusai.data_prep_logs.datapreplogs method)": [[32, "abacusai.data_prep_logs.DataPrepLogs.__repr__"]], "abacusai.data_prep_logs": [[32, "module-abacusai.data_prep_logs"]], "to_dict() (abacusai.data_prep_logs.datapreplogs method)": [[32, "abacusai.data_prep_logs.DataPrepLogs.to_dict"]], "dataqualityresults (class in abacusai.data_quality_results)": [[33, "abacusai.data_quality_results.DataQualityResults"]], "__repr__() (abacusai.data_quality_results.dataqualityresults method)": [[33, "abacusai.data_quality_results.DataQualityResults.__repr__"]], "abacusai.data_quality_results": [[33, "module-abacusai.data_quality_results"]], "to_dict() (abacusai.data_quality_results.dataqualityresults method)": [[33, "abacusai.data_quality_results.DataQualityResults.to_dict"]], "databaseconnector (class in abacusai.database_connector)": [[34, "abacusai.database_connector.DatabaseConnector"]], "__repr__() (abacusai.database_connector.databaseconnector method)": [[34, "abacusai.database_connector.DatabaseConnector.__repr__"]], "abacusai.database_connector": [[34, "module-abacusai.database_connector"]], "delete() (abacusai.database_connector.databaseconnector method)": [[34, "abacusai.database_connector.DatabaseConnector.delete"]], "get_object_schema() (abacusai.database_connector.databaseconnector method)": [[34, "abacusai.database_connector.DatabaseConnector.get_object_schema"]], "list_objects() (abacusai.database_connector.databaseconnector method)": [[34, "abacusai.database_connector.DatabaseConnector.list_objects"]], "rename() (abacusai.database_connector.databaseconnector method)": [[34, "abacusai.database_connector.DatabaseConnector.rename"]], "to_dict() (abacusai.database_connector.databaseconnector method)": [[34, "abacusai.database_connector.DatabaseConnector.to_dict"]], "verify() (abacusai.database_connector.databaseconnector method)": [[34, "abacusai.database_connector.DatabaseConnector.verify"]], "dataset (class in abacusai.dataset)": [[35, "abacusai.dataset.Dataset"]], "__repr__() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.__repr__"]], "abacusai.dataset": [[35, "module-abacusai.dataset"]], "attach_to_project() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.attach_to_project"]], "create_refresh_policy() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.create_refresh_policy"]], "create_version_from_application_connector() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.create_version_from_application_connector"]], "create_version_from_database_connector() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.create_version_from_database_connector"]], "create_version_from_file_connector() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.create_version_from_file_connector"]], "create_version_from_upload() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.create_version_from_upload"]], "delete() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.delete"]], "describe() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.describe"]], "describe_feature_group() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.describe_feature_group"]], "get_schema() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.get_schema"]], "get_status() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.get_status"]], "list_refresh_policies() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.list_refresh_policies"]], "list_versions() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.list_versions"]], "refresh() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.refresh"]], "remove_from_project() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.remove_from_project"]], "set_column_data_type() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.set_column_data_type"]], "set_database_connector_config() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.set_database_connector_config"]], "set_streaming_retention_policy() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.set_streaming_retention_policy"]], "snapshot_streaming_data() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.snapshot_streaming_data"]], "to_dict() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.to_dict"]], "wait_for_import() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.wait_for_import"]], "wait_for_inspection() (abacusai.dataset.dataset method)": [[35, "abacusai.dataset.Dataset.wait_for_inspection"]], "datasetcolumn (class in abacusai.dataset_column)": [[36, "abacusai.dataset_column.DatasetColumn"]], "__repr__() (abacusai.dataset_column.datasetcolumn method)": [[36, "abacusai.dataset_column.DatasetColumn.__repr__"]], "abacusai.dataset_column": [[36, "module-abacusai.dataset_column"]], "to_dict() (abacusai.dataset_column.datasetcolumn method)": [[36, "abacusai.dataset_column.DatasetColumn.to_dict"]], "datasetversion (class in abacusai.dataset_version)": [[37, "abacusai.dataset_version.DatasetVersion"]], "__repr__() (abacusai.dataset_version.datasetversion method)": [[37, "abacusai.dataset_version.DatasetVersion.__repr__"]], "abacusai.dataset_version": [[37, "module-abacusai.dataset_version"]], "describe() (abacusai.dataset_version.datasetversion method)": [[37, "abacusai.dataset_version.DatasetVersion.describe"]], "get_status() (abacusai.dataset_version.datasetversion method)": [[37, "abacusai.dataset_version.DatasetVersion.get_status"]], "refresh() (abacusai.dataset_version.datasetversion method)": [[37, "abacusai.dataset_version.DatasetVersion.refresh"]], "to_dict() (abacusai.dataset_version.datasetversion method)": [[37, "abacusai.dataset_version.DatasetVersion.to_dict"]], "wait_for_import() (abacusai.dataset_version.datasetversion method)": [[37, "abacusai.dataset_version.DatasetVersion.wait_for_import"]], "wait_for_inspection() (abacusai.dataset_version.datasetversion method)": [[37, "abacusai.dataset_version.DatasetVersion.wait_for_inspection"]], "deployment (class in abacusai.deployment)": [[38, "abacusai.deployment.Deployment"]], "__repr__() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.__repr__"]], "abacusai.deployment": [[38, "module-abacusai.deployment"]], "create_batch_prediction() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.create_batch_prediction"]], "create_refresh_policy() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.create_refresh_policy"]], "create_webhook() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.create_webhook"]], "delete() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.delete"]], "describe() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.describe"]], "get_status() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.get_status"]], "list_refresh_policies() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.list_refresh_policies"]], "list_webhooks() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.list_webhooks"]], "refresh() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.refresh"]], "remove_feature_group_export_output() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.remove_feature_group_export_output"]], "rename() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.rename"]], "set_auto() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.set_auto"]], "set_feature_group_export_database_connector_output() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.set_feature_group_export_database_connector_output"]], "set_feature_group_export_file_connector_output() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.set_feature_group_export_file_connector_output"]], "set_feature_group_version() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.set_feature_group_version"]], "set_model_version() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.set_model_version"]], "start() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.start"]], "stop() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.stop"]], "to_dict() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.to_dict"]], "update() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.update"]], "wait_for_deployment() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.wait_for_deployment"]], "wait_for_pending_deployment_update() (abacusai.deployment.deployment method)": [[38, "abacusai.deployment.Deployment.wait_for_pending_deployment_update"]], "deploymentauthtoken (class in abacusai.deployment_auth_token)": [[39, "abacusai.deployment_auth_token.DeploymentAuthToken"]], "__repr__() (abacusai.deployment_auth_token.deploymentauthtoken method)": [[39, "abacusai.deployment_auth_token.DeploymentAuthToken.__repr__"]], "abacusai.deployment_auth_token": [[39, "module-abacusai.deployment_auth_token"]], "to_dict() (abacusai.deployment_auth_token.deploymentauthtoken method)": [[39, "abacusai.deployment_auth_token.DeploymentAuthToken.to_dict"]], "document (class in abacusai.document)": [[40, "abacusai.document.Document"]], "__repr__() (abacusai.document.document method)": [[40, "abacusai.document.Document.__repr__"]], "abacusai.document": [[40, "module-abacusai.document"]], "to_dict() (abacusai.document.document method)": [[40, "abacusai.document.Document.to_dict"]], "documentannotation (class in abacusai.document_annotation)": [[41, "abacusai.document_annotation.DocumentAnnotation"]], "__repr__() (abacusai.document_annotation.documentannotation method)": [[41, "abacusai.document_annotation.DocumentAnnotation.__repr__"]], "abacusai.document_annotation": [[41, "module-abacusai.document_annotation"]], "to_dict() (abacusai.document_annotation.documentannotation method)": [[41, "abacusai.document_annotation.DocumentAnnotation.to_dict"]], "documentstore (class in abacusai.document_store)": [[42, "abacusai.document_store.DocumentStore"]], "__repr__() (abacusai.document_store.documentstore method)": [[42, "abacusai.document_store.DocumentStore.__repr__"]], "abacusai.document_store": [[42, "module-abacusai.document_store"]], "to_dict() (abacusai.document_store.documentstore method)": [[42, "abacusai.document_store.DocumentStore.to_dict"]], "documentstoreimport (class in abacusai.document_store_import)": [[43, "abacusai.document_store_import.DocumentStoreImport"]], "__repr__() (abacusai.document_store_import.documentstoreimport method)": [[43, "abacusai.document_store_import.DocumentStoreImport.__repr__"]], "abacusai.document_store_import": [[43, "module-abacusai.document_store_import"]], "to_dict() (abacusai.document_store_import.documentstoreimport method)": [[43, "abacusai.document_store_import.DocumentStoreImport.to_dict"]], "driftdistribution (class in abacusai.drift_distribution)": [[44, "abacusai.drift_distribution.DriftDistribution"]], "__repr__() (abacusai.drift_distribution.driftdistribution method)": [[44, "abacusai.drift_distribution.DriftDistribution.__repr__"]], "abacusai.drift_distribution": [[44, "module-abacusai.drift_distribution"]], "to_dict() (abacusai.drift_distribution.driftdistribution method)": [[44, "abacusai.drift_distribution.DriftDistribution.to_dict"]], "driftdistributions (class in abacusai.drift_distributions)": [[45, "abacusai.drift_distributions.DriftDistributions"]], "__repr__() (abacusai.drift_distributions.driftdistributions method)": [[45, "abacusai.drift_distributions.DriftDistributions.__repr__"]], "abacusai.drift_distributions": [[45, "module-abacusai.drift_distributions"]], "to_dict() (abacusai.drift_distributions.driftdistributions method)": [[45, "abacusai.drift_distributions.DriftDistributions.to_dict"]], "eda (class in abacusai.eda)": [[46, "abacusai.eda.Eda"]], "__repr__() (abacusai.eda.eda method)": [[46, "abacusai.eda.Eda.__repr__"]], "abacusai.eda": [[46, "module-abacusai.eda"]], "delete() (abacusai.eda.eda method)": [[46, "abacusai.eda.Eda.delete"]], "describe() (abacusai.eda.eda method)": [[46, "abacusai.eda.Eda.describe"]], "list_versions() (abacusai.eda.eda method)": [[46, "abacusai.eda.Eda.list_versions"]], "refresh() (abacusai.eda.eda method)": [[46, "abacusai.eda.Eda.refresh"]], "rename() (abacusai.eda.eda method)": [[46, "abacusai.eda.Eda.rename"]], "rerun() (abacusai.eda.eda method)": [[46, "abacusai.eda.Eda.rerun"]], "to_dict() (abacusai.eda.eda method)": [[46, "abacusai.eda.Eda.to_dict"]], "edachartdescription (class in abacusai.eda_chart_description)": [[47, "abacusai.eda_chart_description.EdaChartDescription"]], "__repr__() (abacusai.eda_chart_description.edachartdescription method)": [[47, "abacusai.eda_chart_description.EdaChartDescription.__repr__"]], "abacusai.eda_chart_description": [[47, "module-abacusai.eda_chart_description"]], "to_dict() (abacusai.eda_chart_description.edachartdescription method)": [[47, "abacusai.eda_chart_description.EdaChartDescription.to_dict"]], "edacollinearity (class in abacusai.eda_collinearity)": [[48, "abacusai.eda_collinearity.EdaCollinearity"]], "__repr__() (abacusai.eda_collinearity.edacollinearity method)": [[48, "abacusai.eda_collinearity.EdaCollinearity.__repr__"]], "abacusai.eda_collinearity": [[48, "module-abacusai.eda_collinearity"]], "to_dict() (abacusai.eda_collinearity.edacollinearity method)": [[48, "abacusai.eda_collinearity.EdaCollinearity.to_dict"]], "edadataconsistency (class in abacusai.eda_data_consistency)": [[49, "abacusai.eda_data_consistency.EdaDataConsistency"]], "__repr__() (abacusai.eda_data_consistency.edadataconsistency method)": [[49, "abacusai.eda_data_consistency.EdaDataConsistency.__repr__"]], "abacusai.eda_data_consistency": [[49, "module-abacusai.eda_data_consistency"]], "to_dict() (abacusai.eda_data_consistency.edadataconsistency method)": [[49, "abacusai.eda_data_consistency.EdaDataConsistency.to_dict"]], "edafeatureassociation (class in abacusai.eda_feature_association)": [[50, "abacusai.eda_feature_association.EdaFeatureAssociation"]], "__repr__() (abacusai.eda_feature_association.edafeatureassociation method)": [[50, "abacusai.eda_feature_association.EdaFeatureAssociation.__repr__"]], "abacusai.eda_feature_association": [[50, "module-abacusai.eda_feature_association"]], "to_dict() (abacusai.eda_feature_association.edafeatureassociation method)": [[50, "abacusai.eda_feature_association.EdaFeatureAssociation.to_dict"]], "edafeaturecollinearity (class in abacusai.eda_feature_collinearity)": [[51, "abacusai.eda_feature_collinearity.EdaFeatureCollinearity"]], "__repr__() (abacusai.eda_feature_collinearity.edafeaturecollinearity method)": [[51, "abacusai.eda_feature_collinearity.EdaFeatureCollinearity.__repr__"]], "abacusai.eda_feature_collinearity": [[51, "module-abacusai.eda_feature_collinearity"]], "to_dict() (abacusai.eda_feature_collinearity.edafeaturecollinearity method)": [[51, "abacusai.eda_feature_collinearity.EdaFeatureCollinearity.to_dict"]], "edaforecastinganalysis (class in abacusai.eda_forecasting_analysis)": [[52, "abacusai.eda_forecasting_analysis.EdaForecastingAnalysis"]], "__repr__() (abacusai.eda_forecasting_analysis.edaforecastinganalysis method)": [[52, "abacusai.eda_forecasting_analysis.EdaForecastingAnalysis.__repr__"]], "abacusai.eda_forecasting_analysis": [[52, "module-abacusai.eda_forecasting_analysis"]], "to_dict() (abacusai.eda_forecasting_analysis.edaforecastinganalysis method)": [[52, "abacusai.eda_forecasting_analysis.EdaForecastingAnalysis.to_dict"]], "edaversion (class in abacusai.eda_version)": [[53, "abacusai.eda_version.EdaVersion"]], "__repr__() (abacusai.eda_version.edaversion method)": [[53, "abacusai.eda_version.EdaVersion.__repr__"]], "abacusai.eda_version": [[53, "module-abacusai.eda_version"]], "delete() (abacusai.eda_version.edaversion method)": [[53, "abacusai.eda_version.EdaVersion.delete"]], "describe() (abacusai.eda_version.edaversion method)": [[53, "abacusai.eda_version.EdaVersion.describe"]], "get_collinearity_for_feature() (abacusai.eda_version.edaversion method)": [[53, "abacusai.eda_version.EdaVersion.get_collinearity_for_feature"]], "get_eda_collinearity() (abacusai.eda_version.edaversion method)": [[53, "abacusai.eda_version.EdaVersion.get_eda_collinearity"]], "get_eda_data_consistency() (abacusai.eda_version.edaversion method)": [[53, "abacusai.eda_version.EdaVersion.get_eda_data_consistency"]], "get_eda_forecasting_analysis() (abacusai.eda_version.edaversion method)": [[53, "abacusai.eda_version.EdaVersion.get_eda_forecasting_analysis"]], "get_feature_association() (abacusai.eda_version.edaversion method)": [[53, "abacusai.eda_version.EdaVersion.get_feature_association"]], "get_status() (abacusai.eda_version.edaversion method)": [[53, "abacusai.eda_version.EdaVersion.get_status"]], "refresh() (abacusai.eda_version.edaversion method)": [[53, "abacusai.eda_version.EdaVersion.refresh"]], "to_dict() (abacusai.eda_version.edaversion method)": [[53, "abacusai.eda_version.EdaVersion.to_dict"]], "wait_for_eda() (abacusai.eda_version.edaversion method)": [[53, "abacusai.eda_version.EdaVersion.wait_for_eda"]], "embeddingfeaturedriftdistribution (class in abacusai.embedding_feature_drift_distribution)": [[54, "abacusai.embedding_feature_drift_distribution.EmbeddingFeatureDriftDistribution"]], "__repr__() (abacusai.embedding_feature_drift_distribution.embeddingfeaturedriftdistribution method)": [[54, "abacusai.embedding_feature_drift_distribution.EmbeddingFeatureDriftDistribution.__repr__"]], "abacusai.embedding_feature_drift_distribution": [[54, "module-abacusai.embedding_feature_drift_distribution"]], "to_dict() (abacusai.embedding_feature_drift_distribution.embeddingfeaturedriftdistribution method)": [[54, "abacusai.embedding_feature_drift_distribution.EmbeddingFeatureDriftDistribution.to_dict"]], "executefeaturegroupoperation (class in abacusai.execute_feature_group_operation)": [[55, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation"]], "__repr__() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[55, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.__repr__"]], "_download_avro_file() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[55, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation._download_avro_file"]], "abacusai.execute_feature_group_operation": [[55, "module-abacusai.execute_feature_group_operation"]], "describe() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[55, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.describe"]], "get_status() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[55, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.get_status"]], "load_as_pandas() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[55, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.load_as_pandas"]], "refresh() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[55, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.refresh"]], "to_dict() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[55, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.to_dict"]], "wait_for_execution() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[55, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.wait_for_execution"]], "wait_for_results() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[55, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.wait_for_results"]], "feature (class in abacusai.feature)": [[56, "abacusai.feature.Feature"]], "__repr__() (abacusai.feature.feature method)": [[56, "abacusai.feature.Feature.__repr__"]], "abacusai.feature": [[56, "module-abacusai.feature"]], "to_dict() (abacusai.feature.feature method)": [[56, "abacusai.feature.Feature.to_dict"]], "featuredistribution (class in abacusai.feature_distribution)": [[57, "abacusai.feature_distribution.FeatureDistribution"]], "__repr__() (abacusai.feature_distribution.featuredistribution method)": [[57, "abacusai.feature_distribution.FeatureDistribution.__repr__"]], "abacusai.feature_distribution": [[57, "module-abacusai.feature_distribution"]], "to_dict() (abacusai.feature_distribution.featuredistribution method)": [[57, "abacusai.feature_distribution.FeatureDistribution.to_dict"]], "featuredriftsummary (class in abacusai.feature_drift_summary)": [[58, "abacusai.feature_drift_summary.FeatureDriftSummary"]], "__repr__() (abacusai.feature_drift_summary.featuredriftsummary method)": [[58, "abacusai.feature_drift_summary.FeatureDriftSummary.__repr__"]], "abacusai.feature_drift_summary": [[58, "module-abacusai.feature_drift_summary"]], "to_dict() (abacusai.feature_drift_summary.featuredriftsummary method)": [[58, "abacusai.feature_drift_summary.FeatureDriftSummary.to_dict"]], "featuregroup (class in abacusai.feature_group)": [[59, "abacusai.feature_group.FeatureGroup"]], "__repr__() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.__repr__"]], "abacusai.feature_group": [[59, "module-abacusai.feature_group"]], "add_annotatable_feature() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.add_annotatable_feature"]], "add_annotation_label() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.add_annotation_label"]], "add_feature_tag() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.add_feature_tag"]], "add_organization_group_to_modifiers() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.add_organization_group_to_modifiers"]], "add_tag() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.add_tag"]], "add_to_project() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.add_to_project"]], "add_user_to_modifiers() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.add_user_to_modifiers"]], "append_data() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.append_data"]], "append_multiple_data() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.append_multiple_data"]], "concatenate_data() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.concatenate_data"]], "create_feature() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.create_feature"]], "create_nested_feature() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.create_nested_feature"]], "create_point_in_time_feature() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.create_point_in_time_feature"]], "create_point_in_time_group() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.create_point_in_time_group"]], "create_point_in_time_group_feature() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.create_point_in_time_group_feature"]], "create_sampling() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.create_sampling"]], "create_template() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.create_template"]], "create_version() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.create_version"]], "delete() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.delete"]], "delete_feature() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.delete_feature"]], "delete_nested_feature() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.delete_nested_feature"]], "delete_point_in_time_group() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.delete_point_in_time_group"]], "describe() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.describe"]], "describe_annotation() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.describe_annotation"]], "describe_dataset() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.describe_dataset"]], "detach_from_template() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.detach_from_template"]], "generate_natural_language_explanation() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.generate_natural_language_explanation"]], "get_annotations_status() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.get_annotations_status"]], "get_document_to_annotate() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.get_document_to_annotate"]], "get_natural_language_explanation() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.get_natural_language_explanation"]], "get_project_config() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.get_project_config"]], "get_recent_streamed_data() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.get_recent_streamed_data"]], "get_schema() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.get_schema"]], "get_status() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.get_status"]], "import_annotation_labels() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.import_annotation_labels"]], "invalidate_streaming_data() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.invalidate_streaming_data"]], "list_exports() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.list_exports"]], "list_modifiers() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.list_modifiers"]], "list_versions() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.list_versions"]], "load_as_pandas() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.load_as_pandas"]], "materialize() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.materialize"]], "refresh() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.refresh"]], "remove_annotation_label() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.remove_annotation_label"]], "remove_concatenation_config() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.remove_concatenation_config"]], "remove_feature_tag() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.remove_feature_tag"]], "remove_from_project() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.remove_from_project"]], "remove_organization_group_from_modifiers() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.remove_organization_group_from_modifiers"]], "remove_tag() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.remove_tag"]], "remove_user_from_modifiers() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.remove_user_from_modifiers"]], "render_data_for_llm() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.render_data_for_llm"]], "set_annotation_status_feature() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.set_annotation_status_feature"]], "set_feature_as_annotatable_feature() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.set_feature_as_annotatable_feature"]], "set_feature_type() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.set_feature_type"]], "set_indexing_config() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.set_indexing_config"]], "set_merge_config() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.set_merge_config"]], "set_modifier_lock() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.set_modifier_lock"]], "set_project_config() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.set_project_config"]], "set_sampling_config() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.set_sampling_config"]], "set_schema() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.set_schema"]], "set_transform_config() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.set_transform_config"]], "set_type() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.set_type"]], "suggest_template_for() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.suggest_template_for"]], "to_dict() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.to_dict"]], "unset_feature_as_annotatable_feature() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.unset_feature_as_annotatable_feature"]], "update() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.update"]], "update_annotation_status() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.update_annotation_status"]], "update_dataset_feature_expression() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.update_dataset_feature_expression"]], "update_feature() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.update_feature"]], "update_function_definition() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.update_function_definition"]], "update_git() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.update_git"]], "update_nested_feature() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.update_nested_feature"]], "update_point_in_time_feature() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.update_point_in_time_feature"]], "update_point_in_time_group() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.update_point_in_time_group"]], "update_point_in_time_group_feature() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.update_point_in_time_group_feature"]], "update_python_function() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.update_python_function"]], "update_python_function_bindings() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.update_python_function_bindings"]], "update_sql_definition() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.update_sql_definition"]], "update_template_bindings() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.update_template_bindings"]], "update_zip() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.update_zip"]], "upsert_data() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.upsert_data"]], "upsert_multiple_data() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.upsert_multiple_data"]], "use_for_training() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.use_for_training"]], "verify_and_describe_annotation() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.verify_and_describe_annotation"]], "wait_for_dataset() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.wait_for_dataset"]], "wait_for_materialization() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.wait_for_materialization"]], "wait_for_streaming_ready() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.wait_for_streaming_ready"]], "wait_for_upload() (abacusai.feature_group.featuregroup method)": [[59, "abacusai.feature_group.FeatureGroup.wait_for_upload"]], "featuregroupexport (class in abacusai.feature_group_export)": [[60, "abacusai.feature_group_export.FeatureGroupExport"]], "__repr__() (abacusai.feature_group_export.featuregroupexport method)": [[60, "abacusai.feature_group_export.FeatureGroupExport.__repr__"]], "abacusai.feature_group_export": [[60, "module-abacusai.feature_group_export"]], "describe() (abacusai.feature_group_export.featuregroupexport method)": [[60, "abacusai.feature_group_export.FeatureGroupExport.describe"]], "get_connector_errors() (abacusai.feature_group_export.featuregroupexport method)": [[60, "abacusai.feature_group_export.FeatureGroupExport.get_connector_errors"]], "get_feature_group_version_export_download_url() (abacusai.feature_group_export.featuregroupexport method)": [[60, "abacusai.feature_group_export.FeatureGroupExport.get_feature_group_version_export_download_url"]], "get_results() (abacusai.feature_group_export.featuregroupexport method)": [[60, "abacusai.feature_group_export.FeatureGroupExport.get_results"]], "get_status() (abacusai.feature_group_export.featuregroupexport method)": [[60, "abacusai.feature_group_export.FeatureGroupExport.get_status"]], "refresh() (abacusai.feature_group_export.featuregroupexport method)": [[60, "abacusai.feature_group_export.FeatureGroupExport.refresh"]], "to_dict() (abacusai.feature_group_export.featuregroupexport method)": [[60, "abacusai.feature_group_export.FeatureGroupExport.to_dict"]], "wait_for_export() (abacusai.feature_group_export.featuregroupexport method)": [[60, "abacusai.feature_group_export.FeatureGroupExport.wait_for_export"]], "wait_for_results() (abacusai.feature_group_export.featuregroupexport method)": [[60, "abacusai.feature_group_export.FeatureGroupExport.wait_for_results"]], "featuregroupexportconfig (class in abacusai.feature_group_export_config)": [[61, "abacusai.feature_group_export_config.FeatureGroupExportConfig"]], "__repr__() (abacusai.feature_group_export_config.featuregroupexportconfig method)": [[61, "abacusai.feature_group_export_config.FeatureGroupExportConfig.__repr__"]], "abacusai.feature_group_export_config": [[61, "module-abacusai.feature_group_export_config"]], "to_dict() (abacusai.feature_group_export_config.featuregroupexportconfig method)": [[61, "abacusai.feature_group_export_config.FeatureGroupExportConfig.to_dict"]], "featuregroupexportdownloadurl (class in abacusai.feature_group_export_download_url)": [[62, "abacusai.feature_group_export_download_url.FeatureGroupExportDownloadUrl"]], "__repr__() (abacusai.feature_group_export_download_url.featuregroupexportdownloadurl method)": [[62, "abacusai.feature_group_export_download_url.FeatureGroupExportDownloadUrl.__repr__"]], "abacusai.feature_group_export_download_url": [[62, "module-abacusai.feature_group_export_download_url"]], "to_dict() (abacusai.feature_group_export_download_url.featuregroupexportdownloadurl method)": [[62, "abacusai.feature_group_export_download_url.FeatureGroupExportDownloadUrl.to_dict"]], "featuregrouplineage (class in abacusai.feature_group_lineage)": [[63, "abacusai.feature_group_lineage.FeatureGroupLineage"]], "__repr__() (abacusai.feature_group_lineage.featuregrouplineage method)": [[63, "abacusai.feature_group_lineage.FeatureGroupLineage.__repr__"]], "abacusai.feature_group_lineage": [[63, "module-abacusai.feature_group_lineage"]], "to_dict() (abacusai.feature_group_lineage.featuregrouplineage method)": [[63, "abacusai.feature_group_lineage.FeatureGroupLineage.to_dict"]], "featuregroupmetrics (class in abacusai.feature_group_metrics)": [[64, "abacusai.feature_group_metrics.FeatureGroupMetrics"]], "__repr__() (abacusai.feature_group_metrics.featuregroupmetrics method)": [[64, "abacusai.feature_group_metrics.FeatureGroupMetrics.__repr__"]], "abacusai.feature_group_metrics": [[64, "module-abacusai.feature_group_metrics"]], "to_dict() (abacusai.feature_group_metrics.featuregroupmetrics method)": [[64, "abacusai.feature_group_metrics.FeatureGroupMetrics.to_dict"]], "featuregrouprefreshexportconfig (class in abacusai.feature_group_refresh_export_config)": [[65, "abacusai.feature_group_refresh_export_config.FeatureGroupRefreshExportConfig"]], "__repr__() (abacusai.feature_group_refresh_export_config.featuregrouprefreshexportconfig method)": [[65, "abacusai.feature_group_refresh_export_config.FeatureGroupRefreshExportConfig.__repr__"]], "abacusai.feature_group_refresh_export_config": [[65, "module-abacusai.feature_group_refresh_export_config"]], "to_dict() (abacusai.feature_group_refresh_export_config.featuregrouprefreshexportconfig method)": [[65, "abacusai.feature_group_refresh_export_config.FeatureGroupRefreshExportConfig.to_dict"]], "featuregrouptemplate (class in abacusai.feature_group_template)": [[66, "abacusai.feature_group_template.FeatureGroupTemplate"]], "__repr__() (abacusai.feature_group_template.featuregrouptemplate method)": [[66, "abacusai.feature_group_template.FeatureGroupTemplate.__repr__"]], "abacusai.feature_group_template": [[66, "module-abacusai.feature_group_template"]], "delete() (abacusai.feature_group_template.featuregrouptemplate method)": [[66, "abacusai.feature_group_template.FeatureGroupTemplate.delete"]], "describe() (abacusai.feature_group_template.featuregrouptemplate method)": [[66, "abacusai.feature_group_template.FeatureGroupTemplate.describe"]], "preview_resolution() (abacusai.feature_group_template.featuregrouptemplate method)": [[66, "abacusai.feature_group_template.FeatureGroupTemplate.preview_resolution"]], "refresh() (abacusai.feature_group_template.featuregrouptemplate method)": [[66, "abacusai.feature_group_template.FeatureGroupTemplate.refresh"]], "to_dict() (abacusai.feature_group_template.featuregrouptemplate method)": [[66, "abacusai.feature_group_template.FeatureGroupTemplate.to_dict"]], "update() (abacusai.feature_group_template.featuregrouptemplate method)": [[66, "abacusai.feature_group_template.FeatureGroupTemplate.update"]], "featuregrouptemplatevariableoptions (class in abacusai.feature_group_template_variable_options)": [[67, "abacusai.feature_group_template_variable_options.FeatureGroupTemplateVariableOptions"]], "__repr__() (abacusai.feature_group_template_variable_options.featuregrouptemplatevariableoptions method)": [[67, "abacusai.feature_group_template_variable_options.FeatureGroupTemplateVariableOptions.__repr__"]], "abacusai.feature_group_template_variable_options": [[67, "module-abacusai.feature_group_template_variable_options"]], "to_dict() (abacusai.feature_group_template_variable_options.featuregrouptemplatevariableoptions method)": [[67, "abacusai.feature_group_template_variable_options.FeatureGroupTemplateVariableOptions.to_dict"]], "featuregroupversion (class in abacusai.feature_group_version)": [[68, "abacusai.feature_group_version.FeatureGroupVersion"]], "__repr__() (abacusai.feature_group_version.featuregroupversion method)": [[68, "abacusai.feature_group_version.FeatureGroupVersion.__repr__"]], "_download_avro_file() (abacusai.feature_group_version.featuregroupversion method)": [[68, "abacusai.feature_group_version.FeatureGroupVersion._download_avro_file"]], "abacusai.feature_group_version": [[68, "module-abacusai.feature_group_version"]], "create_snapshot_feature_group() (abacusai.feature_group_version.featuregroupversion method)": [[68, "abacusai.feature_group_version.FeatureGroupVersion.create_snapshot_feature_group"]], "describe() (abacusai.feature_group_version.featuregroupversion method)": [[68, "abacusai.feature_group_version.FeatureGroupVersion.describe"]], "export_to_console() (abacusai.feature_group_version.featuregroupversion method)": [[68, "abacusai.feature_group_version.FeatureGroupVersion.export_to_console"]], "export_to_database_connector() (abacusai.feature_group_version.featuregroupversion method)": [[68, "abacusai.feature_group_version.FeatureGroupVersion.export_to_database_connector"]], "export_to_file_connector() (abacusai.feature_group_version.featuregroupversion method)": [[68, "abacusai.feature_group_version.FeatureGroupVersion.export_to_file_connector"]], "get_materialization_logs() (abacusai.feature_group_version.featuregroupversion method)": [[68, "abacusai.feature_group_version.FeatureGroupVersion.get_materialization_logs"]], "get_status() (abacusai.feature_group_version.featuregroupversion method)": [[68, "abacusai.feature_group_version.FeatureGroupVersion.get_status"]], "load_as_pandas() (abacusai.feature_group_version.featuregroupversion method)": [[68, "abacusai.feature_group_version.FeatureGroupVersion.load_as_pandas"]], "refresh() (abacusai.feature_group_version.featuregroupversion method)": [[68, "abacusai.feature_group_version.FeatureGroupVersion.refresh"]], "to_dict() (abacusai.feature_group_version.featuregroupversion method)": [[68, "abacusai.feature_group_version.FeatureGroupVersion.to_dict"]], "wait_for_materialization() (abacusai.feature_group_version.featuregroupversion method)": [[68, "abacusai.feature_group_version.FeatureGroupVersion.wait_for_materialization"]], "wait_for_results() (abacusai.feature_group_version.featuregroupversion method)": [[68, "abacusai.feature_group_version.FeatureGroupVersion.wait_for_results"]], "featureimportance (class in abacusai.feature_importance)": [[69, "abacusai.feature_importance.FeatureImportance"]], "__repr__() (abacusai.feature_importance.featureimportance method)": [[69, "abacusai.feature_importance.FeatureImportance.__repr__"]], "abacusai.feature_importance": [[69, "module-abacusai.feature_importance"]], "to_dict() (abacusai.feature_importance.featureimportance method)": [[69, "abacusai.feature_importance.FeatureImportance.to_dict"]], "featurerecord (class in abacusai.feature_record)": [[70, "abacusai.feature_record.FeatureRecord"]], "__repr__() (abacusai.feature_record.featurerecord method)": [[70, "abacusai.feature_record.FeatureRecord.__repr__"]], "abacusai.feature_record": [[70, "module-abacusai.feature_record"]], "to_dict() (abacusai.feature_record.featurerecord method)": [[70, "abacusai.feature_record.FeatureRecord.to_dict"]], "fileconnector (class in abacusai.file_connector)": [[71, "abacusai.file_connector.FileConnector"]], "__repr__() (abacusai.file_connector.fileconnector method)": [[71, "abacusai.file_connector.FileConnector.__repr__"]], "abacusai.file_connector": [[71, "module-abacusai.file_connector"]], "to_dict() (abacusai.file_connector.fileconnector method)": [[71, "abacusai.file_connector.FileConnector.to_dict"]], "fileconnectorinstructions (class in abacusai.file_connector_instructions)": [[72, "abacusai.file_connector_instructions.FileConnectorInstructions"]], "__repr__() (abacusai.file_connector_instructions.fileconnectorinstructions method)": [[72, "abacusai.file_connector_instructions.FileConnectorInstructions.__repr__"]], "abacusai.file_connector_instructions": [[72, "module-abacusai.file_connector_instructions"]], "to_dict() (abacusai.file_connector_instructions.fileconnectorinstructions method)": [[72, "abacusai.file_connector_instructions.FileConnectorInstructions.to_dict"]], "fileconnectorverification (class in abacusai.file_connector_verification)": [[73, "abacusai.file_connector_verification.FileConnectorVerification"]], "__repr__() (abacusai.file_connector_verification.fileconnectorverification method)": [[73, "abacusai.file_connector_verification.FileConnectorVerification.__repr__"]], "abacusai.file_connector_verification": [[73, "module-abacusai.file_connector_verification"]], "to_dict() (abacusai.file_connector_verification.fileconnectorverification method)": [[73, "abacusai.file_connector_verification.FileConnectorVerification.to_dict"]], "forecastinganalysisgraphdata (class in abacusai.forecasting_analysis_graph_data)": [[74, "abacusai.forecasting_analysis_graph_data.ForecastingAnalysisGraphData"]], "__repr__() (abacusai.forecasting_analysis_graph_data.forecastinganalysisgraphdata method)": [[74, "abacusai.forecasting_analysis_graph_data.ForecastingAnalysisGraphData.__repr__"]], "abacusai.forecasting_analysis_graph_data": [[74, "module-abacusai.forecasting_analysis_graph_data"]], "to_dict() (abacusai.forecasting_analysis_graph_data.forecastinganalysisgraphdata method)": [[74, "abacusai.forecasting_analysis_graph_data.ForecastingAnalysisGraphData.to_dict"]], "functionlogs (class in abacusai.function_logs)": [[75, "abacusai.function_logs.FunctionLogs"]], "__repr__() (abacusai.function_logs.functionlogs method)": [[75, "abacusai.function_logs.FunctionLogs.__repr__"]], "abacusai.function_logs": [[75, "module-abacusai.function_logs"]], "to_dict() (abacusai.function_logs.functionlogs method)": [[75, "abacusai.function_logs.FunctionLogs.to_dict"]], "generatedpitfeatureconfigoption (class in abacusai.generated_pit_feature_config_option)": [[76, "abacusai.generated_pit_feature_config_option.GeneratedPitFeatureConfigOption"]], "__repr__() (abacusai.generated_pit_feature_config_option.generatedpitfeatureconfigoption method)": [[76, "abacusai.generated_pit_feature_config_option.GeneratedPitFeatureConfigOption.__repr__"]], "abacusai.generated_pit_feature_config_option": [[76, "module-abacusai.generated_pit_feature_config_option"]], "to_dict() (abacusai.generated_pit_feature_config_option.generatedpitfeatureconfigoption method)": [[76, "abacusai.generated_pit_feature_config_option.GeneratedPitFeatureConfigOption.to_dict"]], "graphdashboard (class in abacusai.graph_dashboard)": [[77, "abacusai.graph_dashboard.GraphDashboard"]], "__repr__() (abacusai.graph_dashboard.graphdashboard method)": [[77, "abacusai.graph_dashboard.GraphDashboard.__repr__"]], "abacusai.graph_dashboard": [[77, "module-abacusai.graph_dashboard"]], "delete() (abacusai.graph_dashboard.graphdashboard method)": [[77, "abacusai.graph_dashboard.GraphDashboard.delete"]], "describe() (abacusai.graph_dashboard.graphdashboard method)": [[77, "abacusai.graph_dashboard.GraphDashboard.describe"]], "refresh() (abacusai.graph_dashboard.graphdashboard method)": [[77, "abacusai.graph_dashboard.GraphDashboard.refresh"]], "to_dict() (abacusai.graph_dashboard.graphdashboard method)": [[77, "abacusai.graph_dashboard.GraphDashboard.to_dict"]], "update() (abacusai.graph_dashboard.graphdashboard method)": [[77, "abacusai.graph_dashboard.GraphDashboard.update"]], "accuracy (abacusai.forecastingobjective attribute)": [[78, "abacusai.ForecastingObjective.ACCURACY"]], "accuracy (abacusai.regressionobjective attribute)": [[78, "abacusai.RegressionObjective.ACCURACY"]], "aiagenttrainingconfig (class in abacusai)": [[78, "abacusai.AIAgentTrainingConfig"]], "ai_agent (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.AI_AGENT"]], "ancestral_simulation (abacusai.forecastingquanitlesextensionmethod attribute)": [[78, "abacusai.ForecastingQuanitlesExtensionMethod.ANCESTRAL_SIMULATION"]], "annotations_precision (abacusai.nerobjective attribute)": [[78, "abacusai.NERObjective.ANNOTATIONS_PRECISION"]], "annotations_recall (abacusai.nerobjective attribute)": [[78, "abacusai.NERObjective.ANNOTATIONS_RECALL"]], "anomaly_detection (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.ANOMALY_DETECTION"]], "anomaly_outliers (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.ANOMALY_OUTLIERS"]], "application (abacusai.connectortype attribute)": [[78, "abacusai.ConnectorType.APPLICATION"]], "asymmetric_mean_absolute_percentage_error (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "au (abacusai.holidaycalendars attribute)": [[78, "abacusai.HolidayCalendars.AU"]], "auc (abacusai.nerobjective attribute)": [[78, "abacusai.NERObjective.AUC"]], "auc (abacusai.regressionobjective attribute)": [[78, "abacusai.RegressionObjective.AUC"]], "auto (abacusai.forecastingdatasplittype attribute)": [[78, "abacusai.ForecastingDataSplitType.AUTO"]], "auto (abacusai.nlpdocumentformat attribute)": [[78, "abacusai.NLPDocumentFormat.AUTO"]], "automatic (abacusai.clusteringimputationmethod attribute)": [[78, "abacusai.ClusteringImputationMethod.AUTOMATIC"]], "automatic (abacusai.regressionlossfunction attribute)": [[78, "abacusai.RegressionLossFunction.AUTOMATIC"]], "average (abacusai.filllogic attribute)": [[78, "abacusai.FillLogic.AVERAGE"]], "anomalydetectiontrainingconfig (class in abacusai)": [[78, "abacusai.AnomalyDetectionTrainingConfig"]], "apiclass (class in abacusai)": [[78, "abacusai.ApiClass"]], "apiclient (class in abacusai)": [[78, "abacusai.ApiClient"]], "apienum (class in abacusai)": [[78, "abacusai.ApiEnum"]], "back (abacusai.forecastingfillmethod attribute)": [[78, "abacusai.ForecastingFillMethod.BACK"]], "backfill (abacusai.filllogic attribute)": [[78, "abacusai.FillLogic.BACKFILL"]], "batch_1024 (abacusai.batchsize attribute)": [[78, "abacusai.BatchSize.BATCH_1024"]], "batch_128 (abacusai.batchsize attribute)": [[78, "abacusai.BatchSize.BATCH_128"]], "batch_16 (abacusai.batchsize attribute)": [[78, "abacusai.BatchSize.BATCH_16"]], "batch_256 (abacusai.batchsize attribute)": [[78, "abacusai.BatchSize.BATCH_256"]], "batch_32 (abacusai.batchsize attribute)": [[78, "abacusai.BatchSize.BATCH_32"]], "batch_384 (abacusai.batchsize attribute)": [[78, "abacusai.BatchSize.BATCH_384"]], "batch_512 (abacusai.batchsize attribute)": [[78, "abacusai.BatchSize.BATCH_512"]], "batch_64 (abacusai.batchsize attribute)": [[78, "abacusai.BatchSize.BATCH_64"]], "batch_740 (abacusai.batchsize attribute)": [[78, "abacusai.BatchSize.BATCH_740"]], "batch_8 (abacusai.batchsize attribute)": [[78, "abacusai.BatchSize.BATCH_8"]], "batch_prediction_id (abacusai.pythonfunctionargumenttype attribute)": [[78, "abacusai.PythonFunctionArgumentType.BATCH_PREDICTION_ID"]], "bias (abacusai.forecastingobjective attribute)": [[78, "abacusai.ForecastingObjective.BIAS"]], "boolean (abacusai.pythonfunctionargumenttype attribute)": [[78, "abacusai.PythonFunctionArgumentType.BOOLEAN"]], "box_cox (abacusai.regressiontargettransform attribute)": [[78, "abacusai.RegressionTargetTransform.BOX_COX"]], "batchsize (class in abacusai)": [[78, "abacusai.BatchSize"]], "clustering (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.CLUSTERING"]], "clustering_timeseries (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.CLUSTERING_TIMESERIES"]], "cmape (abacusai.forecastingobjective attribute)": [[78, "abacusai.ForecastingObjective.CMAPE"]], "coverage (abacusai.personalizationobjective attribute)": [[78, "abacusai.PersonalizationObjective.COVERAGE"]], "cross_entropy (abacusai.regressionlossfunction attribute)": [[78, "abacusai.RegressionLossFunction.CROSS_ENTROPY"]], "cumulative_forecasting (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.CUMULATIVE_FORECASTING"]], "custom (abacusai.filllogic attribute)": [[78, "abacusai.FillLogic.CUSTOM"]], "custom (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.CUSTOM"]], "custom (abacusai.regressionlossfunction attribute)": [[78, "abacusai.RegressionLossFunction.CUSTOM"]], "custom_algorithm (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.CUSTOM_ALGORITHM"]], "custom_trained_model (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.CUSTOM_TRAINED_MODEL"]], "cv (abacusai.forecastingobjective attribute)": [[78, "abacusai.ForecastingObjective.CV"]], "clientoptions (class in abacusai)": [[78, "abacusai.ClientOptions"]], "clusteringimputationmethod (class in abacusai)": [[78, "abacusai.ClusteringImputationMethod"]], "clusteringtimeseriestrainingconfig (class in abacusai)": [[78, "abacusai.ClusteringTimeseriesTrainingConfig"]], "clusteringtrainingconfig (class in abacusai)": [[78, "abacusai.ClusteringTrainingConfig"]], "connectortype (class in abacusai)": [[78, "abacusai.ConnectorType"]], "cumulativeforecastingtrainingconfig (class in abacusai)": [[78, "abacusai.CumulativeForecastingTrainingConfig"]], "customalgorithmtrainingconfig (class in abacusai)": [[78, "abacusai.CustomAlgorithmTrainingConfig"]], "customtrainedmodeltrainingconfig (class in abacusai)": [[78, "abacusai.CustomTrainedModelTrainingConfig"]], "daily (abacusai.forecastingfrequency attribute)": [[78, "abacusai.ForecastingFrequency.DAILY"]], "database (abacusai.connectortype attribute)": [[78, "abacusai.ConnectorType.DATABASE"]], "dataset_id (abacusai.pythonfunctionargumenttype attribute)": [[78, "abacusai.PythonFunctionArgumentType.DATASET_ID"]], "deployment_id (abacusai.pythonfunctionargumenttype attribute)": [[78, "abacusai.PythonFunctionArgumentType.DEPLOYMENT_ID"]], "direct (abacusai.forecastingquanitlesextensionmethod attribute)": [[78, "abacusai.ForecastingQuanitlesExtensionMethod.DIRECT"]], "doc (abacusai.nlpdocumentformat attribute)": [[78, "abacusai.NLPDocumentFormat.DOC"]], "document_classification (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.DOCUMENT_CLASSIFICATION"]], "document_summarization (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.DOCUMENT_SUMMARIZATION"]], "document_visualization (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.DOCUMENT_VISUALIZATION"]], "databaseconnectorexportconfig (class in abacusai)": [[78, "abacusai.DatabaseConnectorExportConfig"]], "documentclassificationtrainingconfig (class in abacusai)": [[78, "abacusai.DocumentClassificationTrainingConfig"]], "documentsummarizationtrainingconfig (class in abacusai)": [[78, "abacusai.DocumentSummarizationTrainingConfig"]], "documentvisualizationtrainingconfig (class in abacusai)": [[78, "abacusai.DocumentVisualizationTrainingConfig"]], "emotion (abacusai.sentimenttype attribute)": [[78, "abacusai.SentimentType.EMOTION"]], "experimental (abacusai.personalizationtrainingmode attribute)": [[78, "abacusai.PersonalizationTrainingMode.EXPERIMENTAL"]], "experimentationmode (class in abacusai)": [[78, "abacusai.ExperimentationMode"]], "f1_score (abacusai.regressionobjective attribute)": [[78, "abacusai.RegressionObjective.F1_SCORE"]], "feature_group (abacusai.pythonfunctionargumenttype attribute)": [[78, "abacusai.PythonFunctionArgumentType.FEATURE_GROUP"]], "feature_group_id (abacusai.pythonfunctionargumenttype attribute)": [[78, "abacusai.PythonFunctionArgumentType.FEATURE_GROUP_ID"]], "feature_store (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.FEATURE_STORE"]], "file (abacusai.connectortype attribute)": [[78, "abacusai.ConnectorType.FILE"]], "float (abacusai.pythonfunctionargumenttype attribute)": [[78, "abacusai.PythonFunctionArgumentType.FLOAT"]], "focal_cross_entropy (abacusai.regressionlossfunction attribute)": [[78, "abacusai.RegressionLossFunction.FOCAL_CROSS_ENTROPY"]], "forecasting (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.FORECASTING"]], "forwardfill (abacusai.filllogic attribute)": [[78, "abacusai.FillLogic.FORWARDFILL"]], "future (abacusai.forecastingfillmethod attribute)": [[78, "abacusai.ForecastingFillMethod.FUTURE"]], "featuregroupexportconfig (class in abacusai)": [[78, "abacusai.FeatureGroupExportConfig"]], "fileconnectorexportconfig (class in abacusai)": [[78, "abacusai.FileConnectorExportConfig"]], "filllogic (class in abacusai)": [[78, "abacusai.FillLogic"]], "forecastingdatasplittype (class in abacusai)": [[78, "abacusai.ForecastingDataSplitType"]], "forecastingfillmethod (class in abacusai)": [[78, "abacusai.ForecastingFillMethod"]], "forecastingfrequency (class in abacusai)": [[78, "abacusai.ForecastingFrequency"]], "forecastinglocalscaling (class in abacusai)": [[78, "abacusai.ForecastingLocalScaling"]], "forecastinglossfunction (class in abacusai)": [[78, "abacusai.ForecastingLossFunction"]], "forecastingobjective (class in abacusai)": [[78, "abacusai.ForecastingObjective"]], "forecastingquanitlesextensionmethod (class in abacusai)": [[78, "abacusai.ForecastingQuanitlesExtensionMethod"]], "forecastingtrainingconfig (class in abacusai)": [[78, "abacusai.ForecastingTrainingConfig"]], "gaussian (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.GAUSSIAN"]], "gaussian_full_covariance (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.GAUSSIAN_FULL_COVARIANCE"]], "guassian_exponential (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.GUASSIAN_EXPONENTIAL"]], "hourly (abacusai.forecastingfrequency attribute)": [[78, "abacusai.ForecastingFrequency.HOURLY"]], "huber (abacusai.regressionlossfunction attribute)": [[78, "abacusai.RegressionLossFunction.HUBER"]], "holidaycalendars (class in abacusai)": [[78, "abacusai.HolidayCalendars"]], "image_classification (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.IMAGE_CLASSIFICATION"]], "image_value_prediction (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.IMAGE_VALUE_PREDICTION"]], "integer (abacusai.pythonfunctionargumenttype attribute)": [[78, "abacusai.PythonFunctionArgumentType.INTEGER"]], "interpolate (abacusai.clusteringimputationmethod attribute)": [[78, "abacusai.ClusteringImputationMethod.INTERPOLATE"]], "item (abacusai.forecastingdatasplittype attribute)": [[78, "abacusai.ForecastingDataSplitType.ITEM"]], "item (abacusai.forecastinglocalscaling attribute)": [[78, "abacusai.ForecastingLocalScaling.ITEM"]], "json (abacusai.pythonfunctionargumenttype attribute)": [[78, "abacusai.PythonFunctionArgumentType.JSON"]], "language_detection (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.LANGUAGE_DETECTION"]], "last_n (abacusai.mergemode attribute)": [[78, "abacusai.MergeMode.LAST_N"]], "last_point (abacusai.forecastinglocalscaling attribute)": [[78, "abacusai.ForecastingLocalScaling.LAST_POINT"]], "learned (abacusai.nermodeltype attribute)": [[78, "abacusai.NERModelType.LEARNED"]], "linear (abacusai.filllogic attribute)": [[78, "abacusai.FillLogic.LINEAR"]], "list (abacusai.pythonfunctionargumenttype attribute)": [[78, "abacusai.PythonFunctionArgumentType.LIST"]], "log (abacusai.regressiontargettransform attribute)": [[78, "abacusai.RegressionTargetTransform.LOG"]], "log_loss (abacusai.nerobjective attribute)": [[78, "abacusai.NERObjective.LOG_LOSS"]], "log_loss (abacusai.regressionobjective attribute)": [[78, "abacusai.RegressionObjective.LOG_LOSS"]], "log_root_mean_square_error (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.LOG_ROOT_MEAN_SQUARE_ERROR"]], "lastnmergeconfig (class in abacusai)": [[78, "abacusai.LastNMergeConfig"]], "mae (abacusai.regressionlossfunction attribute)": [[78, "abacusai.RegressionLossFunction.MAE"]], "mae (abacusai.regressionobjective attribute)": [[78, "abacusai.RegressionObjective.MAE"]], "map (abacusai.personalizationobjective attribute)": [[78, "abacusai.PersonalizationObjective.MAP"]], "mape (abacusai.forecastingobjective attribute)": [[78, "abacusai.ForecastingObjective.MAPE"]], "mape (abacusai.regressionlossfunction attribute)": [[78, "abacusai.RegressionLossFunction.MAPE"]], "mape (abacusai.regressionobjective attribute)": [[78, "abacusai.RegressionObjective.MAPE"]], "map_10 (abacusai.personalizationobjective attribute)": [[78, "abacusai.PersonalizationObjective.MAP_10"]], "map_5 (abacusai.personalizationobjective attribute)": [[78, "abacusai.PersonalizationObjective.MAP_5"]], "max (abacusai.filllogic attribute)": [[78, "abacusai.FillLogic.MAX"]], "mean_absolute_error (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.MEAN_ABSOLUTE_ERROR"]], "mean_absolute_percentage_error (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "median (abacusai.filllogic attribute)": [[78, "abacusai.FillLogic.MEDIAN"]], "middle (abacusai.forecastingfillmethod attribute)": [[78, "abacusai.ForecastingFillMethod.MIDDLE"]], "min (abacusai.filllogic attribute)": [[78, "abacusai.FillLogic.MIN"]], "min_max (abacusai.forecastinglocalscaling attribute)": [[78, "abacusai.ForecastingLocalScaling.MIN_MAX"]], "min_std (abacusai.forecastinglocalscaling attribute)": [[78, "abacusai.ForecastingLocalScaling.MIN_STD"]], "mix_gaussians (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.MIX_GAUSSIANS"]], "model_id (abacusai.pythonfunctionargumenttype attribute)": [[78, "abacusai.PythonFunctionArgumentType.MODEL_ID"]], "model_monitoring (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.MODEL_MONITORING"]], "monitor_id (abacusai.pythonfunctionargumenttype attribute)": [[78, "abacusai.PythonFunctionArgumentType.MONITOR_ID"]], "month_end (abacusai.forecastingfrequency attribute)": [[78, "abacusai.ForecastingFrequency.MONTH_END"]], "month_start (abacusai.forecastingfrequency attribute)": [[78, "abacusai.ForecastingFrequency.MONTH_START"]], "mrr (abacusai.personalizationobjective attribute)": [[78, "abacusai.PersonalizationObjective.MRR"]], "mse (abacusai.regressionlossfunction attribute)": [[78, "abacusai.RegressionLossFunction.MSE"]], "msle (abacusai.regressionlossfunction attribute)": [[78, "abacusai.RegressionLossFunction.MSLE"]], "mergeconfig (class in abacusai)": [[78, "abacusai.MergeConfig"]], "mergemode (class in abacusai)": [[78, "abacusai.MergeMode"]], "named_entity_extraction (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.NAMED_ENTITY_EXTRACTION"]], "natural_language_search (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.NATURAL_LANGUAGE_SEARCH"]], "ndcg (abacusai.personalizationobjective attribute)": [[78, "abacusai.PersonalizationObjective.NDCG"]], "ndcg_10 (abacusai.personalizationobjective attribute)": [[78, "abacusai.PersonalizationObjective.NDCG_10"]], "ndcg_5 (abacusai.personalizationobjective attribute)": [[78, "abacusai.PersonalizationObjective.NDCG_5"]], "nearest (abacusai.filllogic attribute)": [[78, "abacusai.FillLogic.NEAREST"]], "negative_binomial (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.NEGATIVE_BINOMIAL"]], "nermodeltype (class in abacusai)": [[78, "abacusai.NERModelType"]], "nerobjective (class in abacusai)": [[78, "abacusai.NERObjective"]], "nlpdocumentformat (class in abacusai)": [[78, "abacusai.NLPDocumentFormat"]], "normalized_mean_absolute_error (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.NORMALIZED_MEAN_ABSOLUTE_ERROR"]], "normalized_root_mean_square_error (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.NORMALIZED_ROOT_MEAN_SQUARE_ERROR"]], "nsamplingconfig (class in abacusai)": [[78, "abacusai.NSamplingConfig"]], "n_sampling (abacusai.samplingmethodtype attribute)": [[78, "abacusai.SamplingMethodType.N_SAMPLING"]], "namedentityextractiontrainingconfig (class in abacusai)": [[78, "abacusai.NamedEntityExtractionTrainingConfig"]], "naturallanguagesearchtrainingconfig (class in abacusai)": [[78, "abacusai.NaturalLanguageSearchTrainingConfig"]], "object_detection (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.OBJECT_DETECTION"]], "optimization (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.OPTIMIZATION"]], "optimizationtrainingconfig (class in abacusai)": [[78, "abacusai.OptimizationTrainingConfig"]], "outputvariablemapping (class in abacusai)": [[78, "abacusai.OutputVariableMapping"]], "peaks_mean_absolute_error (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.PEAKS_MEAN_ABSOLUTE_ERROR"]], "percent_sampling (abacusai.samplingmethodtype attribute)": [[78, "abacusai.SamplingMethodType.PERCENT_SAMPLING"]], "personalization (abacusai.personalizationobjective attribute)": [[78, "abacusai.PersonalizationObjective.PERSONALIZATION"]], "personalization (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.PERSONALIZATION"]], "pointwise_accuracy (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.POINTWISE_ACCURACY"]], "precision (abacusai.nerobjective attribute)": [[78, "abacusai.NERObjective.PRECISION"]], "precision (abacusai.regressionobjective attribute)": [[78, "abacusai.RegressionObjective.PRECISION"]], "prediction_length (abacusai.forecastingdatasplittype attribute)": [[78, "abacusai.ForecastingDataSplitType.PREDICTION_LENGTH"]], "predictive_modeling (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.PREDICTIVE_MODELING"]], "pretrained_bert (abacusai.nermodeltype attribute)": [[78, "abacusai.NERModelType.PRETRAINED_BERT"]], "pretrained_models (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.PRETRAINED_MODELS"]], "pretrained_multilingual (abacusai.nermodeltype attribute)": [[78, "abacusai.NERModelType.PRETRAINED_MULTILINGUAL"]], "pretrained_roberta_27 (abacusai.nermodeltype attribute)": [[78, "abacusai.NERModelType.PRETRAINED_ROBERTA_27"]], "pretrained_roberta_43 (abacusai.nermodeltype attribute)": [[78, "abacusai.NERModelType.PRETRAINED_ROBERTA_43"]], "production (abacusai.personalizationtrainingmode attribute)": [[78, "abacusai.PersonalizationTrainingMode.PRODUCTION"]], "parsingconfig (class in abacusai)": [[78, "abacusai.ParsingConfig"]], "percentsamplingconfig (class in abacusai)": [[78, "abacusai.PercentSamplingConfig"]], "personalizationobjective (class in abacusai)": [[78, "abacusai.PersonalizationObjective"]], "personalizationtrainingconfig (class in abacusai)": [[78, "abacusai.PersonalizationTrainingConfig"]], "personalizationtrainingmode (class in abacusai)": [[78, "abacusai.PersonalizationTrainingMode"]], "predictionclient (class in abacusai)": [[78, "abacusai.PredictionClient"]], "problemtype (class in abacusai)": [[78, "abacusai.ProblemType"]], "pythonfunctionargument (class in abacusai)": [[78, "abacusai.PythonFunctionArgument"]], "pythonfunctionargumenttype (class in abacusai)": [[78, "abacusai.PythonFunctionArgumentType"]], "quadratic (abacusai.forecastingquanitlesextensionmethod attribute)": [[78, "abacusai.ForecastingQuanitlesExtensionMethod.QUADRATIC"]], "quantile (abacusai.regressiontargettransform attribute)": [[78, "abacusai.RegressionTargetTransform.QUANTILE"]], "quarter_end (abacusai.forecastingfrequency attribute)": [[78, "abacusai.ForecastingFrequency.QUARTER_END"]], "quarter_start (abacusai.forecastingfrequency attribute)": [[78, "abacusai.ForecastingFrequency.QUARTER_START"]], "random (abacusai.regressiontypeofsplit attribute)": [[78, "abacusai.RegressionTypeOfSplit.RANDOM"]], "rapid (abacusai.experimentationmode attribute)": [[78, "abacusai.ExperimentationMode.RAPID"]], "rapid (abacusai.regressiontreehpomode attribute)": [[78, "abacusai.RegressionTreeHPOMode.RAPID"]], "recall (abacusai.nerobjective attribute)": [[78, "abacusai.NERObjective.RECALL"]], "recall (abacusai.regressionobjective attribute)": [[78, "abacusai.RegressionObjective.RECALL"]], "resample (abacusai.regressionaugmentationstrategy attribute)": [[78, "abacusai.RegressionAugmentationStrategy.RESAMPLE"]], "rmse (abacusai.forecastingobjective attribute)": [[78, "abacusai.ForecastingObjective.RMSE"]], "rmse (abacusai.regressionobjective attribute)": [[78, "abacusai.RegressionObjective.RMSE"]], "robust (abacusai.forecastinglocalscaling attribute)": [[78, "abacusai.ForecastingLocalScaling.ROBUST"]], "root_mean_square_error (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.ROOT_MEAN_SQUARE_ERROR"]], "row_indicator_based (abacusai.regressiontypeofsplit attribute)": [[78, "abacusai.RegressionTypeOfSplit.ROW_INDICATOR_BASED"]], "r_squared_coefficient_of_determination (abacusai.regressionobjective attribute)": [[78, "abacusai.RegressionObjective.R_SQUARED_COEFFICIENT_OF_DETERMINATION"]], "readonlyclient (class in abacusai)": [[78, "abacusai.ReadOnlyClient"]], "regressionaugmentationstrategy (class in abacusai)": [[78, "abacusai.RegressionAugmentationStrategy"]], "regressionlossfunction (class in abacusai)": [[78, "abacusai.RegressionLossFunction"]], "regressionobjective (class in abacusai)": [[78, "abacusai.RegressionObjective"]], "regressiontargettransform (class in abacusai)": [[78, "abacusai.RegressionTargetTransform"]], "regressiontimesplitmethod (class in abacusai)": [[78, "abacusai.RegressionTimeSplitMethod"]], "regressiontrainingconfig (class in abacusai)": [[78, "abacusai.RegressionTrainingConfig"]], "regressiontreehpomode (class in abacusai)": [[78, "abacusai.RegressionTreeHPOMode"]], "regressiontypeofsplit (class in abacusai)": [[78, "abacusai.RegressionTypeOfSplit"]], "sentence_boundary_detection (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.SENTENCE_BOUNDARY_DETECTION"]], "sentiment_detection (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.SENTIMENT_DETECTION"]], "sliding_zscore (abacusai.forecastinglocalscaling attribute)": [[78, "abacusai.ForecastingLocalScaling.SLIDING_ZSCORE"]], "smote (abacusai.regressionaugmentationstrategy attribute)": [[78, "abacusai.RegressionAugmentationStrategy.SMOTE"]], "srmse (abacusai.forecastingobjective attribute)": [[78, "abacusai.ForecastingObjective.SRMSE"]], "stable_standardized_mean_absolute_percentage_error (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "streaming (abacusai.connectortype attribute)": [[78, "abacusai.ConnectorType.STREAMING"]], "string (abacusai.pythonfunctionargumenttype attribute)": [[78, "abacusai.PythonFunctionArgumentType.STRING"]], "samplingconfig (class in abacusai)": [[78, "abacusai.SamplingConfig"]], "samplingmethodtype (class in abacusai)": [[78, "abacusai.SamplingMethodType"]], "sentenceboundarydetectiontrainingconfig (class in abacusai)": [[78, "abacusai.SentenceBoundaryDetectionTrainingConfig"]], "sentimentdetectiontrainingconfig (class in abacusai)": [[78, "abacusai.SentimentDetectionTrainingConfig"]], "sentimenttype (class in abacusai)": [[78, "abacusai.SentimentType"]], "streamingclient (class in abacusai)": [[78, "abacusai.StreamingClient"]], "test_split_percentage_based (abacusai.regressiontimesplitmethod attribute)": [[78, "abacusai.RegressionTimeSplitMethod.TEST_SPLIT_PERCENTAGE_BASED"]], "test_start_timestamp_based (abacusai.regressiontimesplitmethod attribute)": [[78, "abacusai.RegressionTimeSplitMethod.TEST_START_TIMESTAMP_BASED"]], "text (abacusai.nlpdocumentformat attribute)": [[78, "abacusai.NLPDocumentFormat.TEXT"]], "theme_analysis (abacusai.problemtype attribute)": [[78, "abacusai.ProblemType.THEME_ANALYSIS"]], "thorough (abacusai.experimentationmode attribute)": [[78, "abacusai.ExperimentationMode.THOROUGH"]], "thorough (abacusai.regressiontreehpomode attribute)": [[78, "abacusai.RegressionTreeHPOMode.THOROUGH"]], "timestamp (abacusai.forecastingdatasplittype attribute)": [[78, "abacusai.ForecastingDataSplitType.TIMESTAMP"]], "timestamp_based (abacusai.regressiontypeofsplit attribute)": [[78, "abacusai.RegressionTypeOfSplit.TIMESTAMP_BASED"]], "time_window (abacusai.mergemode attribute)": [[78, "abacusai.MergeMode.TIME_WINDOW"]], "tokens (abacusai.nlpdocumentformat attribute)": [[78, "abacusai.NLPDocumentFormat.TOKENS"]], "tweedie (abacusai.regressionlossfunction attribute)": [[78, "abacusai.RegressionLossFunction.TWEEDIE"]], "themeanalysistrainingconfig (class in abacusai)": [[78, "abacusai.ThemeAnalysisTrainingConfig"]], "timewindowmergeconfig (class in abacusai)": [[78, "abacusai.TimeWindowMergeConfig"]], "trainingconfig (class in abacusai)": [[78, "abacusai.TrainingConfig"]], "uk (abacusai.holidaycalendars attribute)": [[78, "abacusai.HolidayCalendars.UK"]], "us (abacusai.holidaycalendars attribute)": [[78, "abacusai.HolidayCalendars.US"]], "valence (abacusai.sentimenttype attribute)": [[78, "abacusai.SentimentType.VALENCE"]], "wape (abacusai.forecastingobjective attribute)": [[78, "abacusai.ForecastingObjective.WAPE"]], "wape (abacusai.regressionobjective attribute)": [[78, "abacusai.RegressionObjective.WAPE"]], "weekly_monday_start (abacusai.forecastingfrequency attribute)": [[78, "abacusai.ForecastingFrequency.WEEKLY_MONDAY_START"]], "weekly_saturday_start (abacusai.forecastingfrequency attribute)": [[78, "abacusai.ForecastingFrequency.WEEKLY_SATURDAY_START"]], "weekly_sunday_start (abacusai.forecastingfrequency attribute)": [[78, "abacusai.ForecastingFrequency.WEEKLY_SUNDAY_START"]], "weibull (abacusai.forecastinglossfunction attribute)": [[78, "abacusai.ForecastingLossFunction.WEIBULL"]], "yearly (abacusai.forecastingfrequency attribute)": [[78, "abacusai.ForecastingFrequency.YEARLY"]], "yeo_johnson (abacusai.regressiontargettransform attribute)": [[78, "abacusai.RegressionTargetTransform.YEO_JOHNSON"]], "zeros (abacusai.clusteringimputationmethod attribute)": [[78, "abacusai.ClusteringImputationMethod.ZEROS"]], "zscore (abacusai.forecastinglocalscaling attribute)": [[78, "abacusai.ForecastingLocalScaling.ZSCORE"]], "_apiclassfactory (class in abacusai)": [[78, "abacusai._ApiClassFactory"]], "_featuregroupexportconfigfactory (class in abacusai)": [[78, "abacusai._FeatureGroupExportConfigFactory"]], "_mergeconfigfactory (class in abacusai)": [[78, "abacusai._MergeConfigFactory"]], "_samplingconfigfactory (class in abacusai)": [[78, "abacusai._SamplingConfigFactory"]], "_trainingconfigfactory (class in abacusai)": [[78, "abacusai._TrainingConfigFactory"]], "__eq__() (abacusai.apienum method)": [[78, "abacusai.ApiEnum.__eq__"]], "__hash__() (abacusai.apienum method)": [[78, "abacusai.ApiEnum.__hash__"]], "__post_init__() (abacusai.apiclass method)": [[78, "abacusai.ApiClass.__post_init__"]], "__post_init__() (abacusai.mergeconfig method)": [[78, "abacusai.MergeConfig.__post_init__"]], "__post_init__() (abacusai.samplingconfig method)": [[78, "abacusai.SamplingConfig.__post_init__"]], "__str__() (abacusai.apiexception method)": [[78, "abacusai.ApiException.__str__"]], "__version__ (in module abacusai)": [[78, "abacusai.__version__"]], "_call_aiagent_asyncapp_sync_message() (abacusai.apiclient method)": [[78, "abacusai.ApiClient._call_aiagent_asyncapp_sync_message"]], "_get_agent_async_app_caller() (abacusai.apiclient method)": [[78, "abacusai.ApiClient._get_agent_async_app_caller"]], "_get_agent_async_app_request_id() (abacusai.apiclient method)": [[78, "abacusai.ApiClient._get_agent_async_app_request_id"]], "_request_context (in module abacusai)": [[78, "abacusai._request_context"]], "_stream_llm_call() (abacusai.apiclient method)": [[78, "abacusai.ApiClient._stream_llm_call"]], "_support_kwargs (abacusai.apiclass attribute)": [[78, "abacusai.ApiClass._support_kwargs"]], "_support_kwargs (abacusai.trainingconfig attribute)": [[78, "abacusai.TrainingConfig._support_kwargs"]], "_upper_snake_case_keys (abacusai.apiclass attribute)": [[78, "abacusai.ApiClass._upper_snake_case_keys"]], "_upper_snake_case_keys (abacusai.trainingconfig attribute)": [[78, "abacusai.TrainingConfig._upper_snake_case_keys"]], "abacus_internal_model (abacusai.naturallanguagesearchtrainingconfig attribute)": [[78, "abacusai.NaturalLanguageSearchTrainingConfig.abacus_internal_model"]], "abacusai": [[78, "module-abacusai"]], "active_labels_column (abacusai.namedentityextractiontrainingconfig attribute)": [[78, "abacusai.NamedEntityExtractionTrainingConfig.active_labels_column"]], "active_labels_column (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.active_labels_column"]], "add_annotatable_feature() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.add_annotatable_feature"]], "add_annotation() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.add_annotation"]], "add_feature_group_annotation_label() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.add_feature_group_annotation_label"]], "add_feature_group_tag() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.add_feature_group_tag"]], "add_feature_group_to_project() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.add_feature_group_to_project"]], "add_feature_tag() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.add_feature_tag"]], "add_graph_to_dashboard() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.add_graph_to_dashboard"]], "add_multiple_user_item_interactions() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.add_multiple_user_item_interactions"]], "add_organization_group_permission() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.add_organization_group_permission"]], "add_organization_group_to_feature_group_modifiers() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.add_organization_group_to_feature_group_modifiers"]], "add_project_tags() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.add_project_tags"]], "add_time_features (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.add_time_features"]], "add_user_item_interaction() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.add_user_item_interaction"]], "add_user_to_feature_group_modifiers() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.add_user_to_feature_group_modifiers"]], "add_user_to_organization() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.add_user_to_organization"]], "add_user_to_organization_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.add_user_to_organization_group"]], "additional_forecast_keys (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.additional_forecast_keys"]], "additional_id_columns (abacusai.databaseconnectorexportconfig attribute)": [[78, "abacusai.DatabaseConnectorExportConfig.additional_id_columns"]], "append_data() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.append_data"]], "append_data() (abacusai.streamingclient method)": [[78, "abacusai.StreamingClient.append_data"]], "append_multiple_data() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.append_multiple_data"]], "append_multiple_data() (abacusai.streamingclient method)": [[78, "abacusai.StreamingClient.append_multiple_data"]], "attach_dataset_to_project() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.attach_dataset_to_project"]], "augmentation_strategy (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.augmentation_strategy"]], "backtesting_window_step_size (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.backtesting_window_step_size"]], "batch_renormalization (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.batch_renormalization"]], "batch_size (abacusai.documentclassificationtrainingconfig attribute)": [[78, "abacusai.DocumentClassificationTrainingConfig.batch_size"]], "batch_size (abacusai.documentsummarizationtrainingconfig attribute)": [[78, "abacusai.DocumentSummarizationTrainingConfig.batch_size"]], "batch_size (abacusai.documentvisualizationtrainingconfig attribute)": [[78, "abacusai.DocumentVisualizationTrainingConfig.batch_size"]], "batch_size (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.batch_size"]], "batch_size (abacusai.namedentityextractiontrainingconfig attribute)": [[78, "abacusai.NamedEntityExtractionTrainingConfig.batch_size"]], "batch_size (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.batch_size"]], "batch_size (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.batch_size"]], "batch_size (abacusai.sentenceboundarydetectiontrainingconfig attribute)": [[78, "abacusai.SentenceBoundaryDetectionTrainingConfig.batch_size"]], "batch_size (abacusai.sentimentdetectiontrainingconfig attribute)": [[78, "abacusai.SentimentDetectionTrainingConfig.batch_size"]], "cancel_upload() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.cancel_upload"]], "check_constraints() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.check_constraints"]], "check_constraints() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.check_constraints"]], "chunk_overlap_fraction (abacusai.naturallanguagesearchtrainingconfig attribute)": [[78, "abacusai.NaturalLanguageSearchTrainingConfig.chunk_overlap_fraction"]], "classify_image() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.classify_image"]], "classify_image() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.classify_image"]], "classify_pdf() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.classify_pdf"]], "classify_pdf() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.classify_pdf"]], "clear_agent_context() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.clear_agent_context"]], "compute_metrics (abacusai.sentimentdetectiontrainingconfig attribute)": [[78, "abacusai.SentimentDetectionTrainingConfig.compute_metrics"]], "compute_rerank_metrics (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.compute_rerank_metrics"]], "compute_session_metrics (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.compute_session_metrics"]], "concatenate_feature_group_data() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.concatenate_feature_group_data"]], "config_abstract_class (abacusai._apiclassfactory attribute)": [[78, "abacusai._ApiClassFactory.config_abstract_class"]], "config_abstract_class (abacusai._featuregroupexportconfigfactory attribute)": [[78, "abacusai._FeatureGroupExportConfigFactory.config_abstract_class"]], "config_abstract_class (abacusai._trainingconfigfactory attribute)": [[78, "abacusai._TrainingConfigFactory.config_abstract_class"]], "config_class_key (abacusai._apiclassfactory attribute)": [[78, "abacusai._ApiClassFactory.config_class_key"]], "config_class_key (abacusai._featuregroupexportconfigfactory attribute)": [[78, "abacusai._FeatureGroupExportConfigFactory.config_class_key"]], "config_class_key (abacusai._mergeconfigfactory attribute)": [[78, "abacusai._MergeConfigFactory.config_class_key"]], "config_class_key (abacusai._samplingconfigfactory attribute)": [[78, "abacusai._SamplingConfigFactory.config_class_key"]], "config_class_key (abacusai._trainingconfigfactory attribute)": [[78, "abacusai._TrainingConfigFactory.config_class_key"]], "config_class_map (abacusai._apiclassfactory attribute)": [[78, "abacusai._ApiClassFactory.config_class_map"]], "config_class_map (abacusai._featuregroupexportconfigfactory attribute)": [[78, "abacusai._FeatureGroupExportConfigFactory.config_class_map"]], "config_class_map (abacusai._mergeconfigfactory attribute)": [[78, "abacusai._MergeConfigFactory.config_class_map"]], "config_class_map (abacusai._samplingconfigfactory attribute)": [[78, "abacusai._SamplingConfigFactory.config_class_map"]], "config_class_map (abacusai._trainingconfigfactory attribute)": [[78, "abacusai._TrainingConfigFactory.config_class_map"]], "connector_type (abacusai.databaseconnectorexportconfig attribute)": [[78, "abacusai.DatabaseConnectorExportConfig.connector_type"]], "connector_type (abacusai.featuregroupexportconfig attribute)": [[78, "abacusai.FeatureGroupExportConfig.connector_type"]], "connector_type (abacusai.fileconnectorexportconfig attribute)": [[78, "abacusai.FileConnectorExportConfig.connector_type"]], "convolution_filters (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.convolution_filters"]], "convolutional_layers (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.convolutional_layers"]], "create_agent() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_agent"]], "create_agent_from_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_agent_from_function"]], "create_algorithm() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_algorithm"]], "create_algorithm_from_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_algorithm_from_function"]], "create_batch_prediction() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_batch_prediction"]], "create_chat_session() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_chat_session"]], "create_custom_loss_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_custom_loss_function"]], "create_custom_loss_function_with_source_code() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_custom_loss_function_with_source_code"]], "create_custom_metric() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_custom_metric"]], "create_custom_metric_from_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_custom_metric_from_function"]], "create_dataset_from_application_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_dataset_from_application_connector"]], "create_dataset_from_database_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_dataset_from_database_connector"]], "create_dataset_from_file_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_dataset_from_file_connector"]], "create_dataset_from_pandas() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_dataset_from_pandas"]], "create_dataset_from_streaming_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_dataset_from_streaming_connector"]], "create_dataset_from_upload() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_dataset_from_upload"]], "create_dataset_version_from_application_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_dataset_version_from_application_connector"]], "create_dataset_version_from_database_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_dataset_version_from_database_connector"]], "create_dataset_version_from_file_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_dataset_version_from_file_connector"]], "create_dataset_version_from_pandas() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_dataset_version_from_pandas"]], "create_dataset_version_from_upload() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_dataset_version_from_upload"]], "create_deployment() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_deployment"]], "create_deployment_token() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_deployment_token"]], "create_deployment_webhook() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_deployment_webhook"]], "create_eda() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_eda"]], "create_feature() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_feature"]], "create_feature_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_feature_group"]], "create_feature_group_from_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_feature_group_from_function"]], "create_feature_group_from_pandas_df() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_feature_group_from_pandas_df"]], "create_feature_group_from_python_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_feature_group_from_python_function"]], "create_feature_group_from_spark_df() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_feature_group_from_spark_df"]], "create_feature_group_from_template() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_feature_group_from_template"]], "create_feature_group_template() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_feature_group_template"]], "create_feature_group_version() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_feature_group_version"]], "create_graph_dashboard() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_graph_dashboard"]], "create_merge_feature_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_merge_feature_group"]], "create_model_from_functions() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_model_from_functions"]], "create_model_from_python() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_model_from_python"]], "create_model_monitor() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_model_monitor"]], "create_module() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_module"]], "create_module_from_notebook() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_module_from_notebook"]], "create_monitor_alert() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_monitor_alert"]], "create_nested_feature() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_nested_feature"]], "create_nlp_drift_monitor() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_nlp_drift_monitor"]], "create_organization_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_organization_group"]], "create_pipeline() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_pipeline"]], "create_pipeline_step() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_pipeline_step"]], "create_pipeline_step_from_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_pipeline_step_from_function"]], "create_point_in_time_feature() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_point_in_time_feature"]], "create_point_in_time_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_point_in_time_group"]], "create_point_in_time_group_feature() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_point_in_time_group_feature"]], "create_project() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_project"]], "create_python_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_python_function"]], "create_refresh_policy() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_refresh_policy"]], "create_sampling_feature_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_sampling_feature_group"]], "create_snapshot_feature_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_snapshot_feature_group"]], "create_spark_df_from_feature_group_version() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_spark_df_from_feature_group_version"]], "create_streaming_dataset() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_streaming_dataset"]], "create_streaming_token() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_streaming_token"]], "create_train_test_data_split_feature_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_train_test_data_split_feature_group"]], "create_transform_feature_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_transform_feature_group"]], "create_vector_store() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_vector_store"]], "create_vector_store_version() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_vector_store_version"]], "create_vision_drift_monitor() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.create_vision_drift_monitor"]], "csv_delimiter (abacusai.parsingconfig attribute)": [[78, "abacusai.ParsingConfig.csv_delimiter"]], "cumulative_prediction_lengths (abacusai.cumulativeforecastingtrainingconfig attribute)": [[78, "abacusai.CumulativeForecastingTrainingConfig.cumulative_prediction_lengths"]], "custom_loss_functions (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.custom_loss_functions"]], "custom_loss_functions (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.custom_loss_functions"]], "custom_metrics (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.custom_metrics"]], "custom_metrics (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.custom_metrics"]], "data_columns (abacusai.databaseconnectorexportconfig attribute)": [[78, "abacusai.DatabaseConnectorExportConfig.data_columns"]], "data_split_feature_group_table_name (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.data_split_feature_group_table_name"]], "database_connector_id (abacusai.databaseconnectorexportconfig attribute)": [[78, "abacusai.DatabaseConnectorExportConfig.database_connector_id"]], "datetime_holiday_calendars (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.datetime_holiday_calendars"]], "delete_algorithm() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_algorithm"]], "delete_api_key() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_api_key"]], "delete_application_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_application_connector"]], "delete_batch_prediction() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_batch_prediction"]], "delete_custom_loss_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_custom_loss_function"]], "delete_custom_metric() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_custom_metric"]], "delete_database_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_database_connector"]], "delete_dataset() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_dataset"]], "delete_deployment() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_deployment"]], "delete_deployment_token() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_deployment_token"]], "delete_eda() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_eda"]], "delete_eda_version() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_eda_version"]], "delete_feature() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_feature"]], "delete_feature_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_feature_group"]], "delete_feature_group_template() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_feature_group_template"]], "delete_file_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_file_connector"]], "delete_graph_dashboard() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_graph_dashboard"]], "delete_graph_from_dashboard() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.delete_graph_from_dashboard"]], "delete_item_embeddings() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_item_embeddings"]], "delete_item_embeddings() (abacusai.streamingclient method)": [[78, "abacusai.StreamingClient.delete_item_embeddings"]], "delete_model() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_model"]], "delete_model_monitor() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_model_monitor"]], "delete_model_monitor_version() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_model_monitor_version"]], "delete_model_version() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_model_version"]], "delete_module() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_module"]], "delete_monitor_alert() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_monitor_alert"]], "delete_nested_feature() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_nested_feature"]], "delete_organization_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_organization_group"]], "delete_pipeline() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_pipeline"]], "delete_pipeline_step() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_pipeline_step"]], "delete_point_in_time_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_point_in_time_group"]], "delete_project() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_project"]], "delete_python_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_python_function"]], "delete_refresh_policy() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_refresh_policy"]], "delete_streaming_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_streaming_connector"]], "delete_streaming_token() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_streaming_token"]], "delete_vector_store() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_vector_store"]], "delete_webhook() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.delete_webhook"]], "describe_algorithm() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_algorithm"]], "describe_annotation() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.describe_annotation"]], "describe_async_feature_group_operation() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.describe_async_feature_group_operation"]], "describe_batch_prediction() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_batch_prediction"]], "describe_batch_prediction_version() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_batch_prediction_version"]], "describe_custom_loss_function() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_custom_loss_function"]], "describe_custom_metric() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_custom_metric"]], "describe_custom_metric_version() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_custom_metric_version"]], "describe_dataset() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_dataset"]], "describe_dataset_version() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_dataset_version"]], "describe_deployment() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_deployment"]], "describe_eda() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_eda"]], "describe_eda_version() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_eda_version"]], "describe_feature_group() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_feature_group"]], "describe_feature_group_by_table_name() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_feature_group_by_table_name"]], "describe_feature_group_export() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_feature_group_export"]], "describe_feature_group_template() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_feature_group_template"]], "describe_feature_group_version() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_feature_group_version"]], "describe_graph_dashboard() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_graph_dashboard"]], "describe_graph_for_dashboard() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_graph_for_dashboard"]], "describe_image() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.describe_image"]], "describe_image() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.describe_image"]], "describe_model() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_model"]], "describe_model_artifacts_export() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_model_artifacts_export"]], "describe_model_monitor() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_model_monitor"]], "describe_model_monitor_version() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_model_monitor_version"]], "describe_model_version() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_model_version"]], "describe_module() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_module"]], "describe_monitor_alert() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_monitor_alert"]], "describe_monitor_alert_version() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_monitor_alert_version"]], "describe_organization_group() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_organization_group"]], "describe_pipeline() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.describe_pipeline"]], "describe_pipeline_by_name() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.describe_pipeline_by_name"]], "describe_pipeline_step() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_pipeline_step"]], "describe_pipeline_step_by_name() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_pipeline_step_by_name"]], "describe_pipeline_version() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_pipeline_version"]], "describe_problem_type() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_problem_type"]], "describe_project() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_project"]], "describe_project_feature_group() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_project_feature_group"]], "describe_python_function() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_python_function"]], "describe_refresh_pipeline_run() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_refresh_pipeline_run"]], "describe_refresh_policy() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_refresh_policy"]], "describe_train_test_data_split_feature_group() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_train_test_data_split_feature_group"]], "describe_train_test_data_split_feature_group_version() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_train_test_data_split_feature_group_version"]], "describe_upload() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_upload"]], "describe_use_case_requirements() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_use_case_requirements"]], "describe_user() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_user"]], "describe_vector_store() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_vector_store"]], "describe_vector_store_by_name() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_vector_store_by_name"]], "describe_vector_store_version() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_vector_store_version"]], "describe_webhook() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.describe_webhook"]], "description (abacusai.aiagenttrainingconfig attribute)": [[78, "abacusai.AIAgentTrainingConfig.description"]], "detach_feature_group_from_template() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.detach_feature_group_from_template"]], "disable_gpu (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.disable_gpu"]], "disable_networks_without_analytic_quantiles (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.disable_networks_without_analytic_quantiles"]], "disable_test_val_fold (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.disable_test_val_fold"]], "disable_timestamp_scalar_features (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.disable_timestamp_scalar_features"]], "disable_transformer (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.disable_transformer"]], "docker_image_uri (abacusai.customtrainedmodeltrainingconfig attribute)": [[78, "abacusai.CustomTrainedModelTrainingConfig.docker_image_uri"]], "document_format (abacusai.namedentityextractiontrainingconfig attribute)": [[78, "abacusai.NamedEntityExtractionTrainingConfig.document_format"]], "download_batch_prediction_result_chunk() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.download_batch_prediction_result_chunk"]], "download_execute_feature_group_operation_result_part_chunk() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.download_execute_feature_group_operation_result_part_chunk"]], "downsample_item_popularity_percentile (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.downsample_item_popularity_percentile"]], "drop_original_categoricals (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.drop_original_categoricals"]], "dropout_rate (abacusai.documentclassificationtrainingconfig attribute)": [[78, "abacusai.DocumentClassificationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.documentsummarizationtrainingconfig attribute)": [[78, "abacusai.DocumentSummarizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.documentvisualizationtrainingconfig attribute)": [[78, "abacusai.DocumentVisualizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.namedentityextractiontrainingconfig attribute)": [[78, "abacusai.NamedEntityExtractionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.sentenceboundarydetectiontrainingconfig attribute)": [[78, "abacusai.SentenceBoundaryDetectionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.sentimentdetectiontrainingconfig attribute)": [[78, "abacusai.SentimentDetectionTrainingConfig.dropout_rate"]], "enable_clustering (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.enable_clustering"]], "enable_cold_start (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.enable_cold_start"]], "enable_feature_selection (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.enable_feature_selection"]], "enable_multiple_backtests (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.enable_multiple_backtests"]], "escape (abacusai.parsingconfig attribute)": [[78, "abacusai.ParsingConfig.escape"]], "evaluate_prompt() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.evaluate_prompt"]], "execute_agent() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.execute_agent"]], "execute_agent() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.execute_agent"]], "execute_async_feature_group_operation() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.execute_async_feature_group_operation"]], "execute_feature_group_sql() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.execute_feature_group_sql"]], "experimentation_mode (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.experimentation_mode"]], "explicit_time_split (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.explicit_time_split"]], "explore_lookback_hours (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.explore_lookback_hours"]], "export_custom_model_version() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.export_custom_model_version"]], "export_feature_group_version_to_console() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.export_feature_group_version_to_console"]], "export_feature_group_version_to_database_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.export_feature_group_version_to_database_connector"]], "export_feature_group_version_to_file_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.export_feature_group_version_to_file_connector"]], "export_file_format (abacusai.fileconnectorexportconfig attribute)": [[78, "abacusai.FileConnectorExportConfig.export_file_format"]], "export_model_artifact_as_feature_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.export_model_artifact_as_feature_group"]], "feature_name (abacusai.timewindowmergeconfig attribute)": [[78, "abacusai.TimeWindowMergeConfig.feature_name"]], "feature_selection_intensity (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.feature_selection_intensity"]], "file_path_with_schema (abacusai.parsingconfig attribute)": [[78, "abacusai.ParsingConfig.file_path_with_schema"]], "fill_missing_values (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.fill_missing_values"]], "filter_history (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.filter_history"]], "filter_items (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.filter_items"]], "force_prediction_length (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.force_prediction_length"]], "forecast_frequency (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.forecast_frequency"]], "from_dict() (abacusai.apiclass class method)": [[78, "abacusai.ApiClass.from_dict"]], "from_dict() (abacusai._apiclassfactory class method)": [[78, "abacusai._ApiClassFactory.from_dict"]], "full_data_retraining (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.full_data_retraining"]], "full_data_retraining (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.full_data_retraining"]], "generate_image() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.generate_image"]], "generate_image() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.generate_image"]], "generate_natural_language_explanation() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.generate_natural_language_explanation"]], "get_agent_context_chat_history() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_agent_context_chat_history"]], "get_alternative_assignments() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_alternative_assignments"]], "get_alternative_assignments() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_alternative_assignments"]], "get_annotations_status() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_annotations_status"]], "get_anomalies() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_anomalies"]], "get_anomalies() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_anomalies"]], "get_api_endpoint() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_api_endpoint"]], "get_assignments() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_assignments"]], "get_assignments() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_assignments"]], "get_batch_prediction_connector_errors() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_batch_prediction_connector_errors"]], "get_chat_response() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_chat_response"]], "get_chat_response() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_chat_response"]], "get_chat_session() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_chat_session"]], "get_classification() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_classification"]], "get_classification() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_classification"]], "get_cluster() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_cluster"]], "get_cluster() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_cluster"]], "get_collinearity_for_feature() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_collinearity_for_feature"]], "get_custom_train_function_info() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_custom_train_function_info"]], "get_database_connector_object_schema() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_database_connector_object_schema"]], "get_dataset_schema() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_dataset_schema"]], "get_docstore_document() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_docstore_document"]], "get_docstore_image() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_docstore_image"]], "get_document_to_annotate() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_document_to_annotate"]], "get_drift_for_feature() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_drift_for_feature"]], "get_eda_collinearity() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_eda_collinearity"]], "get_eda_data_consistency() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_eda_data_consistency"]], "get_eda_forecasting_analysis() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_eda_forecasting_analysis"]], "get_entailment() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_entailment"]], "get_entailment() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_entailment"]], "get_entities_from_pdf() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_entities_from_pdf"]], "get_entities_from_pdf() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_entities_from_pdf"]], "get_execute_feature_group_operation_result_part_count() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_execute_feature_group_operation_result_part_count"]], "get_feature_association() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_feature_association"]], "get_feature_group_export_connector_errors() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_feature_group_export_connector_errors"]], "get_feature_group_schema() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_feature_group_schema"]], "get_feature_group_version_export_download_url() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_feature_group_version_export_download_url"]], "get_feature_importance_by_model_version() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_feature_importance_by_model_version"]], "get_file_connector_instructions() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_file_connector_instructions"]], "get_forecast() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_forecast"]], "get_forecast() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_forecast"]], "get_k_nearest() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_k_nearest"]], "get_k_nearest() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_k_nearest"]], "get_labels() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_labels"]], "get_labels() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_labels"]], "get_llm_parameters() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_llm_parameters"]], "get_materialization_logs() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_materialization_logs"]], "get_model_metrics() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_model_metrics"]], "get_model_monitor_chart_from_organization() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_model_monitor_chart_from_organization"]], "get_model_monitor_summary() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_model_monitor_summary"]], "get_model_monitor_summary_from_organization() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_model_monitor_summary_from_organization"]], "get_model_monitoring_logs() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_model_monitoring_logs"]], "get_model_training_types_for_deployment() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_model_training_types_for_deployment"]], "get_multiple_k_nearest() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_multiple_k_nearest"]], "get_multiple_k_nearest() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_multiple_k_nearest"]], "get_natural_language_explanation() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_natural_language_explanation"]], "get_notebook_cell_completion() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_notebook_cell_completion"]], "get_objects_from_image() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_objects_from_image"]], "get_objects_from_image() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_objects_from_image"]], "get_outliers_for_batch_prediction_feature() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_outliers_for_batch_prediction_feature"]], "get_outliers_for_feature() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_outliers_for_feature"]], "get_personalized_ranking() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_personalized_ranking"]], "get_personalized_ranking() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_personalized_ranking"]], "get_prediction_drift() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_prediction_drift"]], "get_project_feature_group_config() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_project_feature_group_config"]], "get_ranked_items() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_ranked_items"]], "get_ranked_items() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_ranked_items"]], "get_recent_feature_group_streamed_data() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_recent_feature_group_streamed_data"]], "get_recommendations() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_recommendations"]], "get_recommendations() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_recommendations"]], "get_related_items() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_related_items"]], "get_related_items() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_related_items"]], "get_schema() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_schema"]], "get_search_results() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_search_results"]], "get_search_results() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_search_results"]], "get_sentiment() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_sentiment"]], "get_sentiment() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_sentiment"]], "get_summary() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_summary"]], "get_summary() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.get_summary"]], "get_train_function_input() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_train_function_input"]], "get_train_function_input_from_model_version() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_train_function_input_from_model_version"]], "get_training_config_options() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.get_training_config_options"]], "get_training_data_logs() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_training_data_logs"]], "get_training_logs() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.get_training_logs"]], "handle_zeros_as_missing_values (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.handle_zeros_as_missing_values"]], "historical_frequency (abacusai.cumulativeforecastingtrainingconfig attribute)": [[78, "abacusai.CumulativeForecastingTrainingConfig.historical_frequency"]], "history_length (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.history_length"]], "id_column (abacusai.databaseconnectorexportconfig attribute)": [[78, "abacusai.DatabaseConnectorExportConfig.id_column"]], "ignore_datetime_features (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.ignore_datetime_features"]], "import_annotation_labels() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.import_annotation_labels"]], "import_module() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.import_module"]], "imputation (abacusai.clusteringtimeseriestrainingconfig attribute)": [[78, "abacusai.ClusteringTimeseriesTrainingConfig.imputation"]], "include_longformer (abacusai.namedentityextractiontrainingconfig attribute)": [[78, "abacusai.NamedEntityExtractionTrainingConfig.include_longformer"]], "index_fraction (abacusai.naturallanguagesearchtrainingconfig attribute)": [[78, "abacusai.NaturalLanguageSearchTrainingConfig.index_fraction"]], "index_output_path (abacusai.customtrainedmodeltrainingconfig attribute)": [[78, "abacusai.CustomTrainedModelTrainingConfig.index_output_path"]], "initial_learning_rate (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.initial_learning_rate"]], "invalidate_streaming_feature_group_data() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.invalidate_streaming_feature_group_data"]], "is_anomaly() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.is_anomaly"]], "is_anomaly() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.is_anomaly"]], "is_multilingual (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.is_multilingual"]], "is_required (abacusai.pythonfunctionargument attribute)": [[78, "abacusai.PythonFunctionArgument.is_required"]], "item_attributes_weight_column (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.item_attributes_weight_column"]], "item_id_dropout (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.item_id_dropout"]], "k_fold_cross_validation (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.k_fold_cross_validation"]], "key_columns (abacusai.nsamplingconfig attribute)": [[78, "abacusai.NSamplingConfig.key_columns"]], "key_columns (abacusai.percentsamplingconfig attribute)": [[78, "abacusai.PercentSamplingConfig.key_columns"]], "kwargs (abacusai.trainingconfig attribute)": [[78, "abacusai.TrainingConfig.kwargs"]], "l2_regularization_factor (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.l2_regularization_factor"]], "larger_embeddings (abacusai.naturallanguagesearchtrainingconfig attribute)": [[78, "abacusai.NaturalLanguageSearchTrainingConfig.larger_embeddings"]], "list_algorithms() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_algorithms"]], "list_api_keys() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_api_keys"]], "list_application_connector_objects() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_application_connector_objects"]], "list_application_connectors() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_application_connectors"]], "list_batch_prediction_versions() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_batch_prediction_versions"]], "list_batch_predictions() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_batch_predictions"]], "list_builtin_algorithms() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.list_builtin_algorithms"]], "list_chat_sessions() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_chat_sessions"]], "list_custom_loss_functions() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_custom_loss_functions"]], "list_custom_metrics() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_custom_metrics"]], "list_database_connector_objects() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_database_connector_objects"]], "list_database_connectors() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_database_connectors"]], "list_dataset_versions() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_dataset_versions"]], "list_datasets() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_datasets"]], "list_deployment_tokens() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_deployment_tokens"]], "list_deployment_webhooks() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_deployment_webhooks"]], "list_deployments() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_deployments"]], "list_eda() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_eda"]], "list_eda_versions() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_eda_versions"]], "list_feature_group_exports() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_feature_group_exports"]], "list_feature_group_modifiers() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_feature_group_modifiers"]], "list_feature_group_templates() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_feature_group_templates"]], "list_feature_group_versions() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_feature_group_versions"]], "list_feature_groups() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_feature_groups"]], "list_file_connectors() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_file_connectors"]], "list_graph_dashboards() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_graph_dashboards"]], "list_model_artifacts_exports() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_model_artifacts_exports"]], "list_model_monitor_versions() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_model_monitor_versions"]], "list_model_monitors() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_model_monitors"]], "list_model_versions() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_model_versions"]], "list_models() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_models"]], "list_modules() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_modules"]], "list_monitor_alert_versions_for_monitor_version() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_monitor_alert_versions_for_monitor_version"]], "list_monitor_alerts_for_monitor() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_monitor_alerts_for_monitor"]], "list_organization_groups() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_organization_groups"]], "list_organization_model_monitors() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_organization_model_monitors"]], "list_organization_users() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_organization_users"]], "list_pipeline_versions() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.list_pipeline_versions"]], "list_pipelines() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_pipelines"]], "list_project_datasets() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_project_datasets"]], "list_project_feature_group_templates() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_project_feature_group_templates"]], "list_project_feature_groups() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_project_feature_groups"]], "list_projects() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_projects"]], "list_python_function_feature_groups() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_python_function_feature_groups"]], "list_python_functions() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_python_functions"]], "list_refresh_pipeline_runs() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_refresh_pipeline_runs"]], "list_refresh_policies() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_refresh_policies"]], "list_streaming_connectors() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_streaming_connectors"]], "list_streaming_tokens() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_streaming_tokens"]], "list_uploads() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_uploads"]], "list_use_cases() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_use_cases"]], "list_vector_store_versions() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_vector_store_versions"]], "list_vector_stores() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.list_vector_stores"]], "local_scaling_mode (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.local_scaling_mode"]], "location (abacusai.fileconnectorexportconfig attribute)": [[78, "abacusai.FileConnectorExportConfig.location"]], "lookup_features() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.lookup_features"]], "lookup_features() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.lookup_features"]], "lookup_vector_store() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.lookup_vector_store"]], "loss_function (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.loss_function"]], "loss_function (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.loss_function"]], "loss_parameters (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.loss_parameters"]], "mark_upload_complete() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.mark_upload_complete"]], "max_catalog_size (abacusai.customtrainedmodeltrainingconfig attribute)": [[78, "abacusai.CustomTrainedModelTrainingConfig.max_catalog_size"]], "max_dimension (abacusai.customtrainedmodeltrainingconfig attribute)": [[78, "abacusai.CustomTrainedModelTrainingConfig.max_dimension"]], "max_history_length (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.max_history_length"]], "max_scale_context (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.max_scale_context"]], "max_text_words (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.max_text_words"]], "max_user_history_len_percentile (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.max_user_history_len_percentile"]], "merge_mode (abacusai.lastnmergeconfig attribute)": [[78, "abacusai.LastNMergeConfig.merge_mode"]], "merge_mode (abacusai.timewindowmergeconfig attribute)": [[78, "abacusai.TimeWindowMergeConfig.merge_mode"]], "min_categorical_count (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.min_categorical_count"]], "mixture_of_gaussians (abacusai.anomalydetectiontrainingconfig attribute)": [[78, "abacusai.AnomalyDetectionTrainingConfig.mixture_of_gaussians"]], "mode (abacusai.databaseconnectorexportconfig attribute)": [[78, "abacusai.DatabaseConnectorExportConfig.mode"]], "model_monitor_version_metric_data() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.model_monitor_version_metric_data"]], "name (abacusai.outputvariablemapping attribute)": [[78, "abacusai.OutputVariableMapping.name"]], "name (abacusai.pythonfunctionargument attribute)": [[78, "abacusai.PythonFunctionArgument.name"]], "ner_model_type (abacusai.namedentityextractiontrainingconfig attribute)": [[78, "abacusai.NamedEntityExtractionTrainingConfig.ner_model_type"]], "num_backtesting_windows (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.num_backtesting_windows"]], "num_clusters_selection (abacusai.clusteringtimeseriestrainingconfig attribute)": [[78, "abacusai.ClusteringTimeseriesTrainingConfig.num_clusters_selection"]], "num_clusters_selection (abacusai.clusteringtrainingconfig attribute)": [[78, "abacusai.ClusteringTrainingConfig.num_clusters_selection"]], "num_completion_tokens (abacusai.naturallanguagesearchtrainingconfig attribute)": [[78, "abacusai.NaturalLanguageSearchTrainingConfig.num_completion_tokens"]], "num_cv_folds (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.num_cv_folds"]], "num_versions (abacusai.lastnmergeconfig attribute)": [[78, "abacusai.LastNMergeConfig.num_versions"]], "number_of_samples (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.number_of_samples"]], "numeric_clipping_percentile (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.numeric_clipping_percentile"]], "object_name (abacusai.databaseconnectorexportconfig attribute)": [[78, "abacusai.DatabaseConnectorExportConfig.object_name"]], "objective (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.objective"]], "objective (abacusai.namedentityextractiontrainingconfig attribute)": [[78, "abacusai.NamedEntityExtractionTrainingConfig.objective"]], "objective (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.objective"]], "objective (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.objective"]], "pause_pipeline_refresh_schedule() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.pause_pipeline_refresh_schedule"]], "pause_refresh_policy() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.pause_refresh_policy"]], "perform_feature_selection (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.perform_feature_selection"]], "pipeline_variable (abacusai.pythonfunctionargument attribute)": [[78, "abacusai.PythonFunctionArgument.pipeline_variable"]], "predict() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.predict"]], "predict() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.predict"]], "predict_churn() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.predict_churn"]], "predict_churn() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.predict_churn"]], "predict_class() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.predict_class"]], "predict_class() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.predict_class"]], "predict_fraud() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.predict_fraud"]], "predict_fraud() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.predict_fraud"]], "predict_from_datasets() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.predict_from_datasets"]], "predict_from_datasets() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.predict_from_datasets"]], "predict_function_name (abacusai.customalgorithmtrainingconfig attribute)": [[78, "abacusai.CustomAlgorithmTrainingConfig.predict_function_name"]], "predict_language() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.predict_language"]], "predict_language() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.predict_language"]], "predict_lead() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.predict_lead"]], "predict_lead() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.predict_lead"]], "predict_many_function_name (abacusai.customalgorithmtrainingconfig attribute)": [[78, "abacusai.CustomAlgorithmTrainingConfig.predict_many_function_name"]], "predict_module_name (abacusai.customalgorithmtrainingconfig attribute)": [[78, "abacusai.CustomAlgorithmTrainingConfig.predict_module_name"]], "predict_multiple() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.predict_multiple"]], "predict_multiple() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.predict_multiple"]], "predict_raw() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.predict_raw"]], "predict_residuals (abacusai.cumulativeforecastingtrainingconfig attribute)": [[78, "abacusai.CumulativeForecastingTrainingConfig.predict_residuals"]], "predict_takeover() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.predict_takeover"]], "predict_takeover() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.predict_takeover"]], "predict_target() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.predict_target"]], "predict_target() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.predict_target"]], "predict_with_binary_data() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.predict_with_binary_data"]], "predict_with_binary_data() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.predict_with_binary_data"]], "prediction_length (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.prediction_length"]], "prediction_step_size (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.prediction_step_size"]], "pretrained_model_name (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.pretrained_model_name"]], "preview_feature_group_template_resolution() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.preview_feature_group_template_resolution"]], "probability_quantiles (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.probability_quantiles"]], "problem_type (abacusai.aiagenttrainingconfig attribute)": [[78, "abacusai.AIAgentTrainingConfig.problem_type"]], "problem_type (abacusai.anomalydetectiontrainingconfig attribute)": [[78, "abacusai.AnomalyDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.clusteringtimeseriestrainingconfig attribute)": [[78, "abacusai.ClusteringTimeseriesTrainingConfig.problem_type"]], "problem_type (abacusai.clusteringtrainingconfig attribute)": [[78, "abacusai.ClusteringTrainingConfig.problem_type"]], "problem_type (abacusai.cumulativeforecastingtrainingconfig attribute)": [[78, "abacusai.CumulativeForecastingTrainingConfig.problem_type"]], "problem_type (abacusai.customalgorithmtrainingconfig attribute)": [[78, "abacusai.CustomAlgorithmTrainingConfig.problem_type"]], "problem_type (abacusai.customtrainedmodeltrainingconfig attribute)": [[78, "abacusai.CustomTrainedModelTrainingConfig.problem_type"]], "problem_type (abacusai.documentclassificationtrainingconfig attribute)": [[78, "abacusai.DocumentClassificationTrainingConfig.problem_type"]], "problem_type (abacusai.documentsummarizationtrainingconfig attribute)": [[78, "abacusai.DocumentSummarizationTrainingConfig.problem_type"]], "problem_type (abacusai.documentvisualizationtrainingconfig attribute)": [[78, "abacusai.DocumentVisualizationTrainingConfig.problem_type"]], "problem_type (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.problem_type"]], "problem_type (abacusai.namedentityextractiontrainingconfig attribute)": [[78, "abacusai.NamedEntityExtractionTrainingConfig.problem_type"]], "problem_type (abacusai.naturallanguagesearchtrainingconfig attribute)": [[78, "abacusai.NaturalLanguageSearchTrainingConfig.problem_type"]], "problem_type (abacusai.optimizationtrainingconfig attribute)": [[78, "abacusai.OptimizationTrainingConfig.problem_type"]], "problem_type (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.problem_type"]], "problem_type (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.problem_type"]], "problem_type (abacusai.sentenceboundarydetectiontrainingconfig attribute)": [[78, "abacusai.SentenceBoundaryDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.sentimentdetectiontrainingconfig attribute)": [[78, "abacusai.SentimentDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.themeanalysistrainingconfig attribute)": [[78, "abacusai.ThemeAnalysisTrainingConfig.problem_type"]], "problem_type (abacusai.trainingconfig attribute)": [[78, "abacusai.TrainingConfig.problem_type"]], "quantiles_extension_method (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.quantiles_extension_method"]], "query_feature_group_code_generator() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.query_feature_group_code_generator"]], "rare_class_augmentation_threshold (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.rare_class_augmentation_threshold"]], "rebalance_classes (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.rebalance_classes"]], "recent_days_for_training (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.recent_days_for_training"]], "recurrent_layers (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.recurrent_layers"]], "recurrent_units (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.recurrent_units"]], "remove_column_mapping() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.remove_column_mapping"]], "remove_concatenation_config() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.remove_concatenation_config"]], "remove_dataset_from_project() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.remove_dataset_from_project"]], "remove_deployment_feature_group_export_output() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.remove_deployment_feature_group_export_output"]], "remove_feature_group_annotation_label() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.remove_feature_group_annotation_label"]], "remove_feature_group_from_project() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.remove_feature_group_from_project"]], "remove_feature_group_tag() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.remove_feature_group_tag"]], "remove_feature_tag() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.remove_feature_tag"]], "remove_organization_group_from_feature_group_modifiers() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.remove_organization_group_from_feature_group_modifiers"]], "remove_organization_group_permission() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.remove_organization_group_permission"]], "remove_project_tags() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.remove_project_tags"]], "remove_user_from_feature_group_modifiers() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.remove_user_from_feature_group_modifiers"]], "remove_user_from_organization() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.remove_user_from_organization"]], "remove_user_from_organization_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.remove_user_from_organization_group"]], "rename_application_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.rename_application_connector"]], "rename_database_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.rename_database_connector"]], "rename_deployment() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.rename_deployment"]], "rename_eda() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.rename_eda"]], "rename_model() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.rename_model"]], "rename_model_monitor() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.rename_model_monitor"]], "rename_project() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.rename_project"]], "rename_streaming_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.rename_streaming_connector"]], "render_feature_group_data_for_llm() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.render_feature_group_data_for_llm"]], "render_feature_groups_for_llm() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.render_feature_groups_for_llm"]], "rerun_eda() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.rerun_eda"]], "rerun_model_monitor() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.rerun_model_monitor"]], "resume_pipeline_refresh_schedule() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.resume_pipeline_refresh_schedule"]], "resume_refresh_policy() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.resume_refresh_policy"]], "retrain_model() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.retrain_model"]], "run_monitor_alert() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.run_monitor_alert"]], "run_pipeline() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.run_pipeline"]], "run_refresh_policy() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.run_refresh_policy"]], "sample_count (abacusai.nsamplingconfig attribute)": [[78, "abacusai.NSamplingConfig.sample_count"]], "sample_percent (abacusai.percentsamplingconfig attribute)": [[78, "abacusai.PercentSamplingConfig.sample_percent"]], "sample_weight (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.sample_weight"]], "sampling_method (abacusai.nsamplingconfig attribute)": [[78, "abacusai.NSamplingConfig.sampling_method"]], "sampling_method (abacusai.percentsamplingconfig attribute)": [[78, "abacusai.PercentSamplingConfig.sampling_method"]], "sampling_unit_keys (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.sampling_unit_keys"]], "score_image() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.score_image"]], "score_image() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.score_image"]], "search_chunk_size (abacusai.naturallanguagesearchtrainingconfig attribute)": [[78, "abacusai.NaturalLanguageSearchTrainingConfig.search_chunk_size"]], "search_feature_groups() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.search_feature_groups"]], "sentiment_type (abacusai.sentimentdetectiontrainingconfig attribute)": [[78, "abacusai.SentimentDetectionTrainingConfig.sentiment_type"]], "sequential_training (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.sequential_training"]], "service_port (abacusai.customtrainedmodeltrainingconfig attribute)": [[78, "abacusai.CustomTrainedModelTrainingConfig.service_port"]], "session_event_types (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.session_event_types"]], "set_agent_context_chat_history() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_agent_context_chat_history"]], "set_annotation_status_feature() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_annotation_status_feature"]], "set_auto_deployment() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_auto_deployment"]], "set_azure_blob_connection_string() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_azure_blob_connection_string"]], "set_batch_prediction_database_connector_output() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_batch_prediction_database_connector_output"]], "set_batch_prediction_dataset() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_batch_prediction_dataset"]], "set_batch_prediction_dataset_remap() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_batch_prediction_dataset_remap"]], "set_batch_prediction_feature_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_batch_prediction_feature_group"]], "set_batch_prediction_feature_group_output() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_batch_prediction_feature_group_output"]], "set_batch_prediction_file_connector_output() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_batch_prediction_file_connector_output"]], "set_batch_prediction_output_to_console() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_batch_prediction_output_to_console"]], "set_column_data_type() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_column_data_type"]], "set_column_mapping() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_column_mapping"]], "set_dataset_column_data_type() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_dataset_column_data_type"]], "set_dataset_database_connector_config() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.set_dataset_database_connector_config"]], "set_default_model_algorithm() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.set_default_model_algorithm"]], "set_default_organization_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_default_organization_group"]], "set_deployment_feature_group_export_database_connector_output() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_deployment_feature_group_export_database_connector_output"]], "set_deployment_feature_group_export_file_connector_output() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_deployment_feature_group_export_file_connector_output"]], "set_deployment_feature_group_version() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_deployment_feature_group_version"]], "set_deployment_model_version() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_deployment_model_version"]], "set_feature_as_annotatable_feature() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_feature_as_annotatable_feature"]], "set_feature_group_indexing_config() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_feature_group_indexing_config"]], "set_feature_group_merge_config() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_feature_group_merge_config"]], "set_feature_group_modifier_lock() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_feature_group_modifier_lock"]], "set_feature_group_sampling_config() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_feature_group_sampling_config"]], "set_feature_group_schema() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_feature_group_schema"]], "set_feature_group_transform_config() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_feature_group_transform_config"]], "set_feature_group_type() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_feature_group_type"]], "set_feature_mapping() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_feature_mapping"]], "set_feature_type() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_feature_type"]], "set_model_objective() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.set_model_objective"]], "set_model_prediction_params() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_model_prediction_params"]], "set_model_training_config() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_model_training_config"]], "set_natural_language_explanation() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_natural_language_explanation"]], "set_project_feature_group_config() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_project_feature_group_config"]], "set_streaming_retention_policy() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.set_streaming_retention_policy"]], "skip_input_transform (abacusai.cumulativeforecastingtrainingconfig attribute)": [[78, "abacusai.CumulativeForecastingTrainingConfig.skip_input_transform"]], "skip_local_scale_target (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.skip_local_scale_target"]], "skip_missing (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.skip_missing"]], "skip_target_transform (abacusai.cumulativeforecastingtrainingconfig attribute)": [[78, "abacusai.CumulativeForecastingTrainingConfig.skip_target_transform"]], "skip_timeseries_weight_scaling (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.skip_timeseries_weight_scaling"]], "smooth_history (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.smooth_history"]], "snapshot_streaming_data() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.snapshot_streaming_data"]], "sort_objective (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.sort_objective"]], "sort_objective (abacusai.namedentityextractiontrainingconfig attribute)": [[78, "abacusai.NamedEntityExtractionTrainingConfig.sort_objective"]], "sort_objective (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.sort_objective"]], "sort_objective (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.sort_objective"]], "spike_down (abacusai.anomalydetectiontrainingconfig attribute)": [[78, "abacusai.AnomalyDetectionTrainingConfig.spike_down"]], "spike_up (abacusai.anomalydetectiontrainingconfig attribute)": [[78, "abacusai.AnomalyDetectionTrainingConfig.spike_up"]], "start_batch_prediction() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.start_batch_prediction"]], "start_deployment() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.start_deployment"]], "stop_deployment() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.stop_deployment"]], "stream_message() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.stream_message"]], "streaming_evaluate_prompt() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.streaming_evaluate_prompt"]], "suggest_feature_group_template_for_feature_group() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.suggest_feature_group_template_for_feature_group"]], "symmetrize_quantiles (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.symmetrize_quantiles"]], "target_action_types (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.target_action_types"]], "target_action_weights (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.target_action_weights"]], "target_encode_categoricals (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.target_encode_categoricals"]], "target_transform (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.target_transform"]], "test_by_item (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.test_by_item"]], "test_last_items_length (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.test_last_items_length"]], "test_on_user_split (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.test_on_user_split"]], "test_row_indicator (abacusai.namedentityextractiontrainingconfig attribute)": [[78, "abacusai.NamedEntityExtractionTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.test_row_indicator"]], "test_split (abacusai.anomalydetectiontrainingconfig attribute)": [[78, "abacusai.AnomalyDetectionTrainingConfig.test_split"]], "test_split (abacusai.cumulativeforecastingtrainingconfig attribute)": [[78, "abacusai.CumulativeForecastingTrainingConfig.test_split"]], "test_split (abacusai.customalgorithmtrainingconfig attribute)": [[78, "abacusai.CustomAlgorithmTrainingConfig.test_split"]], "test_split (abacusai.documentclassificationtrainingconfig attribute)": [[78, "abacusai.DocumentClassificationTrainingConfig.test_split"]], "test_split (abacusai.documentsummarizationtrainingconfig attribute)": [[78, "abacusai.DocumentSummarizationTrainingConfig.test_split"]], "test_split (abacusai.documentvisualizationtrainingconfig attribute)": [[78, "abacusai.DocumentVisualizationTrainingConfig.test_split"]], "test_split (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.test_split"]], "test_split (abacusai.namedentityextractiontrainingconfig attribute)": [[78, "abacusai.NamedEntityExtractionTrainingConfig.test_split"]], "test_split (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.test_split"]], "test_split (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.test_split"]], "test_split (abacusai.sentenceboundarydetectiontrainingconfig attribute)": [[78, "abacusai.SentenceBoundaryDetectionTrainingConfig.test_split"]], "test_split (abacusai.sentimentdetectiontrainingconfig attribute)": [[78, "abacusai.SentimentDetectionTrainingConfig.test_split"]], "test_split_on_last_k_items (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.test_split_on_last_k_items"]], "test_splitting_timestamp (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.test_splitting_timestamp"]], "test_start (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.test_start"]], "test_window_length_hours (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.test_window_length_hours"]], "time_window_size_ms (abacusai.timewindowmergeconfig attribute)": [[78, "abacusai.TimeWindowMergeConfig.time_window_size_ms"]], "timeseries_loss_weight_column (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.timeseries_loss_weight_column"]], "timeseries_weight_column (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.timeseries_weight_column"]], "timestamp_based_splitting_column (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.timestamp_based_splitting_column"]], "timestamp_based_splitting_method (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.timestamp_based_splitting_method"]], "to_dict() (abacusai.apiclass method)": [[78, "abacusai.ApiClass.to_dict"]], "to_dict() (abacusai.databaseconnectorexportconfig method)": [[78, "abacusai.DatabaseConnectorExportConfig.to_dict"]], "to_dict() (abacusai.fileconnectorexportconfig method)": [[78, "abacusai.FileConnectorExportConfig.to_dict"]], "train_function_name (abacusai.customalgorithmtrainingconfig attribute)": [[78, "abacusai.CustomAlgorithmTrainingConfig.train_function_name"]], "train_model() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.train_model"]], "train_module_name (abacusai.customalgorithmtrainingconfig attribute)": [[78, "abacusai.CustomAlgorithmTrainingConfig.train_module_name"]], "training_input_tables (abacusai.customalgorithmtrainingconfig attribute)": [[78, "abacusai.CustomAlgorithmTrainingConfig.training_input_tables"]], "training_mode (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.training_mode"]], "training_point_overlap (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.training_point_overlap"]], "training_rows_downsample_ratio (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.training_rows_downsample_ratio"]], "training_start_date (abacusai.personalizationtrainingconfig attribute)": [[78, "abacusai.PersonalizationTrainingConfig.training_start_date"]], "transcribe_audio() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.transcribe_audio"]], "transcribe_audio() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.transcribe_audio"]], "transfer_style() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.transfer_style"]], "transfer_style() (abacusai.predictionclient method)": [[78, "abacusai.PredictionClient.transfer_style"]], "tree_hpo_mode (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.tree_hpo_mode"]], "trend_change (abacusai.anomalydetectiontrainingconfig attribute)": [[78, "abacusai.AnomalyDetectionTrainingConfig.trend_change"]], "type_of_split (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.type_of_split"]], "type_of_split (abacusai.regressiontrainingconfig attribute)": [[78, "abacusai.RegressionTrainingConfig.type_of_split"]], "underprediction_weight (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.underprediction_weight"]], "unset_feature_as_annotatable_feature() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.unset_feature_as_annotatable_feature"]], "unset_pipeline_refresh_schedule() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.unset_pipeline_refresh_schedule"]], "update_agent() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_agent"]], "update_agent_with_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_agent_with_function"]], "update_algorithm() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_algorithm"]], "update_algorithm_from_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_algorithm_from_function"]], "update_annotation_status() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_annotation_status"]], "update_batch_prediction() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_batch_prediction"]], "update_custom_loss_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_custom_loss_function"]], "update_custom_loss_function_with_source_code() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_custom_loss_function_with_source_code"]], "update_custom_metric() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_custom_metric"]], "update_custom_metric_from_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_custom_metric_from_function"]], "update_dataset_feature_group_feature_expression() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_dataset_feature_group_feature_expression"]], "update_deployment() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_deployment"]], "update_feature() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_feature"]], "update_feature_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_feature_group"]], "update_feature_group_from_pandas_df() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_feature_group_from_pandas_df"]], "update_feature_group_from_spark_df() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_feature_group_from_spark_df"]], "update_feature_group_function_definition() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_feature_group_function_definition"]], "update_feature_group_git() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_feature_group_git"]], "update_feature_group_python_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_feature_group_python_function"]], "update_feature_group_python_function_bindings() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_feature_group_python_function_bindings"]], "update_feature_group_sql_definition() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_feature_group_sql_definition"]], "update_feature_group_template() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_feature_group_template"]], "update_feature_group_template_bindings() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_feature_group_template_bindings"]], "update_feature_group_zip() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_feature_group_zip"]], "update_graph_dashboard() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_graph_dashboard"]], "update_graph_to_dashboard() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_graph_to_dashboard"]], "update_module() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_module"]], "update_module_from_notebook() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_module_from_notebook"]], "update_monitor_alert() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_monitor_alert"]], "update_nested_feature() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_nested_feature"]], "update_pipeline() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_pipeline"]], "update_pipeline_step() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_pipeline_step"]], "update_pipeline_step_from_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_pipeline_step_from_function"]], "update_point_in_time_feature() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_point_in_time_feature"]], "update_point_in_time_group() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_point_in_time_group"]], "update_point_in_time_group_feature() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_point_in_time_group_feature"]], "update_python_function() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_python_function"]], "update_python_function_code() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_python_function_code"]], "update_python_model() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_python_model"]], "update_python_model_git() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_python_model_git"]], "update_python_model_zip() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_python_model_zip"]], "update_refresh_policy() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_refresh_policy"]], "update_vector_store() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_vector_store"]], "update_webhook() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.update_webhook"]], "upload_part() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.upload_part"]], "upsert_data() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.upsert_data"]], "upsert_data() (abacusai.streamingclient method)": [[78, "abacusai.StreamingClient.upsert_data"]], "upsert_item_attributes() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.upsert_item_attributes"]], "upsert_item_embeddings() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.upsert_item_embeddings"]], "upsert_item_embeddings() (abacusai.streamingclient method)": [[78, "abacusai.StreamingClient.upsert_item_embeddings"]], "upsert_multiple_data() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.upsert_multiple_data"]], "upsert_multiple_data() (abacusai.streamingclient method)": [[78, "abacusai.StreamingClient.upsert_multiple_data"]], "upsert_multiple_item_attributes() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.upsert_multiple_item_attributes"]], "upsert_multiple_item_embeddings() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.upsert_multiple_item_embeddings"]], "upsert_multiple_item_embeddings() (abacusai.streamingclient method)": [[78, "abacusai.StreamingClient.upsert_multiple_item_embeddings"]], "upsert_multiple_user_attributes() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.upsert_multiple_user_attributes"]], "upsert_user_attributes() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.upsert_user_attributes"]], "use_all_item_totals (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.use_all_item_totals"]], "use_feature_group_for_training() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.use_feature_group_for_training"]], "use_item_id (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.use_item_id"]], "use_item_weights_in_objective (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.use_item_weights_in_objective"]], "use_log_transforms (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.use_log_transforms"]], "use_timeseries_weights_in_objective (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.use_timeseries_weights_in_objective"]], "validate_project() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.validate_project"]], "value (abacusai.pythonfunctionargument attribute)": [[78, "abacusai.PythonFunctionArgument.value"]], "value_high (abacusai.anomalydetectiontrainingconfig attribute)": [[78, "abacusai.AnomalyDetectionTrainingConfig.value_high"]], "variable_type (abacusai.outputvariablemapping attribute)": [[78, "abacusai.OutputVariableMapping.variable_type"]], "variable_type (abacusai.pythonfunctionargument attribute)": [[78, "abacusai.PythonFunctionArgument.variable_type"]], "variational_autoencoder (abacusai.anomalydetectiontrainingconfig attribute)": [[78, "abacusai.AnomalyDetectionTrainingConfig.variational_autoencoder"]], "verify_and_describe_annotation() (abacusai.readonlyclient method)": [[78, "abacusai.ReadOnlyClient.verify_and_describe_annotation"]], "verify_application_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.verify_application_connector"]], "verify_database_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.verify_database_connector"]], "verify_file_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.verify_file_connector"]], "verify_streaming_connector() (abacusai.apiclient method)": [[78, "abacusai.ApiClient.verify_streaming_connector"]], "zero_predictor (abacusai.forecastingtrainingconfig attribute)": [[78, "abacusai.ForecastingTrainingConfig.zero_predictor"]], "zero_shot_hypotheses (abacusai.documentclassificationtrainingconfig attribute)": [[78, "abacusai.DocumentClassificationTrainingConfig.zero_shot_hypotheses"]], "indexingconfig (class in abacusai.indexing_config)": [[79, "abacusai.indexing_config.IndexingConfig"]], "__repr__() (abacusai.indexing_config.indexingconfig method)": [[79, "abacusai.indexing_config.IndexingConfig.__repr__"]], "abacusai.indexing_config": [[79, "module-abacusai.indexing_config"]], "to_dict() (abacusai.indexing_config.indexingconfig method)": [[79, "abacusai.indexing_config.IndexingConfig.to_dict"]], "itemstatistics (class in abacusai.item_statistics)": [[80, "abacusai.item_statistics.ItemStatistics"]], "__repr__() (abacusai.item_statistics.itemstatistics method)": [[80, "abacusai.item_statistics.ItemStatistics.__repr__"]], "abacusai.item_statistics": [[80, "module-abacusai.item_statistics"]], "to_dict() (abacusai.item_statistics.itemstatistics method)": [[80, "abacusai.item_statistics.ItemStatistics.to_dict"]], "llmcodeblock (class in abacusai.llm_code_block)": [[81, "abacusai.llm_code_block.LlmCodeBlock"]], "__repr__() (abacusai.llm_code_block.llmcodeblock method)": [[81, "abacusai.llm_code_block.LlmCodeBlock.__repr__"]], "abacusai.llm_code_block": [[81, "module-abacusai.llm_code_block"]], "to_dict() (abacusai.llm_code_block.llmcodeblock method)": [[81, "abacusai.llm_code_block.LlmCodeBlock.to_dict"]], "llminput (class in abacusai.llm_input)": [[82, "abacusai.llm_input.LlmInput"]], "__repr__() (abacusai.llm_input.llminput method)": [[82, "abacusai.llm_input.LlmInput.__repr__"]], "abacusai.llm_input": [[82, "module-abacusai.llm_input"]], "to_dict() (abacusai.llm_input.llminput method)": [[82, "abacusai.llm_input.LlmInput.to_dict"]], "llmparameters (class in abacusai.llm_parameters)": [[83, "abacusai.llm_parameters.LlmParameters"]], "__repr__() (abacusai.llm_parameters.llmparameters method)": [[83, "abacusai.llm_parameters.LlmParameters.__repr__"]], "abacusai.llm_parameters": [[83, "module-abacusai.llm_parameters"]], "to_dict() (abacusai.llm_parameters.llmparameters method)": [[83, "abacusai.llm_parameters.LlmParameters.to_dict"]], "llmresponse (class in abacusai.llm_response)": [[84, "abacusai.llm_response.LlmResponse"]], "__repr__() (abacusai.llm_response.llmresponse method)": [[84, "abacusai.llm_response.LlmResponse.__repr__"]], "abacusai.llm_response": [[84, "module-abacusai.llm_response"]], "to_dict() (abacusai.llm_response.llmresponse method)": [[84, "abacusai.llm_response.LlmResponse.to_dict"]], "model (class in abacusai.model)": [[85, "abacusai.model.Model"]], "__repr__() (abacusai.model.model method)": [[85, "abacusai.model.Model.__repr__"]], "abacusai.model": [[85, "module-abacusai.model"]], "create_refresh_policy() (abacusai.model.model method)": [[85, "abacusai.model.Model.create_refresh_policy"]], "delete() (abacusai.model.model method)": [[85, "abacusai.model.Model.delete"]], "describe() (abacusai.model.model method)": [[85, "abacusai.model.Model.describe"]], "describe_train_test_data_split_feature_group() (abacusai.model.model method)": [[85, "abacusai.model.Model.describe_train_test_data_split_feature_group"]], "get_metrics() (abacusai.model.model method)": [[85, "abacusai.model.Model.get_metrics"]], "get_status() (abacusai.model.model method)": [[85, "abacusai.model.Model.get_status"]], "get_train_test_feature_group_as_pandas() (abacusai.model.model method)": [[85, "abacusai.model.Model.get_train_test_feature_group_as_pandas"]], "get_training_types_for_deployment() (abacusai.model.model method)": [[85, "abacusai.model.Model.get_training_types_for_deployment"]], "list_artifacts_exports() (abacusai.model.model method)": [[85, "abacusai.model.Model.list_artifacts_exports"]], "list_refresh_policies() (abacusai.model.model method)": [[85, "abacusai.model.Model.list_refresh_policies"]], "list_versions() (abacusai.model.model method)": [[85, "abacusai.model.Model.list_versions"]], "refresh() (abacusai.model.model method)": [[85, "abacusai.model.Model.refresh"]], "rename() (abacusai.model.model method)": [[85, "abacusai.model.Model.rename"]], "retrain() (abacusai.model.model method)": [[85, "abacusai.model.Model.retrain"]], "set_default_algorithm() (abacusai.model.model method)": [[85, "abacusai.model.Model.set_default_algorithm"]], "set_prediction_params() (abacusai.model.model method)": [[85, "abacusai.model.Model.set_prediction_params"]], "set_training_config() (abacusai.model.model method)": [[85, "abacusai.model.Model.set_training_config"]], "to_dict() (abacusai.model.model method)": [[85, "abacusai.model.Model.to_dict"]], "update_agent() (abacusai.model.model method)": [[85, "abacusai.model.Model.update_agent"]], "update_python() (abacusai.model.model method)": [[85, "abacusai.model.Model.update_python"]], "update_python_git() (abacusai.model.model method)": [[85, "abacusai.model.Model.update_python_git"]], "update_python_zip() (abacusai.model.model method)": [[85, "abacusai.model.Model.update_python_zip"]], "wait_for_evaluation() (abacusai.model.model method)": [[85, "abacusai.model.Model.wait_for_evaluation"]], "wait_for_full_automl() (abacusai.model.model method)": [[85, "abacusai.model.Model.wait_for_full_automl"]], "wait_for_publish() (abacusai.model.model method)": [[85, "abacusai.model.Model.wait_for_publish"]], "wait_for_training() (abacusai.model.model method)": [[85, "abacusai.model.Model.wait_for_training"]], "modelartifactsexport (class in abacusai.model_artifacts_export)": [[86, "abacusai.model_artifacts_export.ModelArtifactsExport"]], "__repr__() (abacusai.model_artifacts_export.modelartifactsexport method)": [[86, "abacusai.model_artifacts_export.ModelArtifactsExport.__repr__"]], "abacusai.model_artifacts_export": [[86, "module-abacusai.model_artifacts_export"]], "describe() (abacusai.model_artifacts_export.modelartifactsexport method)": [[86, "abacusai.model_artifacts_export.ModelArtifactsExport.describe"]], "get_status() (abacusai.model_artifacts_export.modelartifactsexport method)": [[86, "abacusai.model_artifacts_export.ModelArtifactsExport.get_status"]], "refresh() (abacusai.model_artifacts_export.modelartifactsexport method)": [[86, "abacusai.model_artifacts_export.ModelArtifactsExport.refresh"]], "to_dict() (abacusai.model_artifacts_export.modelartifactsexport method)": [[86, "abacusai.model_artifacts_export.ModelArtifactsExport.to_dict"]], "wait_for_results() (abacusai.model_artifacts_export.modelartifactsexport method)": [[86, "abacusai.model_artifacts_export.ModelArtifactsExport.wait_for_results"]], "modelblueprintexport (class in abacusai.model_blueprint_export)": [[87, "abacusai.model_blueprint_export.ModelBlueprintExport"]], "__repr__() (abacusai.model_blueprint_export.modelblueprintexport method)": [[87, "abacusai.model_blueprint_export.ModelBlueprintExport.__repr__"]], "abacusai.model_blueprint_export": [[87, "module-abacusai.model_blueprint_export"]], "to_dict() (abacusai.model_blueprint_export.modelblueprintexport method)": [[87, "abacusai.model_blueprint_export.ModelBlueprintExport.to_dict"]], "modelblueprintstage (class in abacusai.model_blueprint_stage)": [[88, "abacusai.model_blueprint_stage.ModelBlueprintStage"]], "__repr__() (abacusai.model_blueprint_stage.modelblueprintstage method)": [[88, "abacusai.model_blueprint_stage.ModelBlueprintStage.__repr__"]], "abacusai.model_blueprint_stage": [[88, "module-abacusai.model_blueprint_stage"]], "to_dict() (abacusai.model_blueprint_stage.modelblueprintstage method)": [[88, "abacusai.model_blueprint_stage.ModelBlueprintStage.to_dict"]], "modellocation (class in abacusai.model_location)": [[89, "abacusai.model_location.ModelLocation"]], "__repr__() (abacusai.model_location.modellocation method)": [[89, "abacusai.model_location.ModelLocation.__repr__"]], "abacusai.model_location": [[89, "module-abacusai.model_location"]], "to_dict() (abacusai.model_location.modellocation method)": [[89, "abacusai.model_location.ModelLocation.to_dict"]], "modelmetrics (class in abacusai.model_metrics)": [[90, "abacusai.model_metrics.ModelMetrics"]], "__repr__() (abacusai.model_metrics.modelmetrics method)": [[90, "abacusai.model_metrics.ModelMetrics.__repr__"]], "abacusai.model_metrics": [[90, "module-abacusai.model_metrics"]], "to_dict() (abacusai.model_metrics.modelmetrics method)": [[90, "abacusai.model_metrics.ModelMetrics.to_dict"]], "modelmonitor (class in abacusai.model_monitor)": [[91, "abacusai.model_monitor.ModelMonitor"]], "__repr__() (abacusai.model_monitor.modelmonitor method)": [[91, "abacusai.model_monitor.ModelMonitor.__repr__"]], "abacusai.model_monitor": [[91, "module-abacusai.model_monitor"]], "delete() (abacusai.model_monitor.modelmonitor method)": [[91, "abacusai.model_monitor.ModelMonitor.delete"]], "describe() (abacusai.model_monitor.modelmonitor method)": [[91, "abacusai.model_monitor.ModelMonitor.describe"]], "get_summary() (abacusai.model_monitor.modelmonitor method)": [[91, "abacusai.model_monitor.ModelMonitor.get_summary"]], "list_monitor_alerts_for_monitor() (abacusai.model_monitor.modelmonitor method)": [[91, "abacusai.model_monitor.ModelMonitor.list_monitor_alerts_for_monitor"]], "list_versions() (abacusai.model_monitor.modelmonitor method)": [[91, "abacusai.model_monitor.ModelMonitor.list_versions"]], "refresh() (abacusai.model_monitor.modelmonitor method)": [[91, "abacusai.model_monitor.ModelMonitor.refresh"]], "rename() (abacusai.model_monitor.modelmonitor method)": [[91, "abacusai.model_monitor.ModelMonitor.rename"]], "rerun() (abacusai.model_monitor.modelmonitor method)": [[91, "abacusai.model_monitor.ModelMonitor.rerun"]], "to_dict() (abacusai.model_monitor.modelmonitor method)": [[91, "abacusai.model_monitor.ModelMonitor.to_dict"]], "modelmonitororgsummary (class in abacusai.model_monitor_org_summary)": [[92, "abacusai.model_monitor_org_summary.ModelMonitorOrgSummary"]], "__repr__() (abacusai.model_monitor_org_summary.modelmonitororgsummary method)": [[92, "abacusai.model_monitor_org_summary.ModelMonitorOrgSummary.__repr__"]], "abacusai.model_monitor_org_summary": [[92, "module-abacusai.model_monitor_org_summary"]], "to_dict() (abacusai.model_monitor_org_summary.modelmonitororgsummary method)": [[92, "abacusai.model_monitor_org_summary.ModelMonitorOrgSummary.to_dict"]], "modelmonitorsummary (class in abacusai.model_monitor_summary)": [[93, "abacusai.model_monitor_summary.ModelMonitorSummary"]], "__repr__() (abacusai.model_monitor_summary.modelmonitorsummary method)": [[93, "abacusai.model_monitor_summary.ModelMonitorSummary.__repr__"]], "abacusai.model_monitor_summary": [[93, "module-abacusai.model_monitor_summary"]], "to_dict() (abacusai.model_monitor_summary.modelmonitorsummary method)": [[93, "abacusai.model_monitor_summary.ModelMonitorSummary.to_dict"]], "modelmonitorsummaryfromorg (class in abacusai.model_monitor_summary_from_org)": [[94, "abacusai.model_monitor_summary_from_org.ModelMonitorSummaryFromOrg"]], "__repr__() (abacusai.model_monitor_summary_from_org.modelmonitorsummaryfromorg method)": [[94, "abacusai.model_monitor_summary_from_org.ModelMonitorSummaryFromOrg.__repr__"]], "abacusai.model_monitor_summary_from_org": [[94, "module-abacusai.model_monitor_summary_from_org"]], "to_dict() (abacusai.model_monitor_summary_from_org.modelmonitorsummaryfromorg method)": [[94, "abacusai.model_monitor_summary_from_org.ModelMonitorSummaryFromOrg.to_dict"]], "modelmonitorversion (class in abacusai.model_monitor_version)": [[95, "abacusai.model_monitor_version.ModelMonitorVersion"]], "__repr__() (abacusai.model_monitor_version.modelmonitorversion method)": [[95, "abacusai.model_monitor_version.ModelMonitorVersion.__repr__"]], "abacusai.model_monitor_version": [[95, "module-abacusai.model_monitor_version"]], "delete() (abacusai.model_monitor_version.modelmonitorversion method)": [[95, "abacusai.model_monitor_version.ModelMonitorVersion.delete"]], "describe() (abacusai.model_monitor_version.modelmonitorversion method)": [[95, "abacusai.model_monitor_version.ModelMonitorVersion.describe"]], "get_drift_for_feature() (abacusai.model_monitor_version.modelmonitorversion method)": [[95, "abacusai.model_monitor_version.ModelMonitorVersion.get_drift_for_feature"]], "get_model_monitoring_logs() (abacusai.model_monitor_version.modelmonitorversion method)": [[95, "abacusai.model_monitor_version.ModelMonitorVersion.get_model_monitoring_logs"]], "get_outliers_for_feature() (abacusai.model_monitor_version.modelmonitorversion method)": [[95, "abacusai.model_monitor_version.ModelMonitorVersion.get_outliers_for_feature"]], "get_prediction_drift() (abacusai.model_monitor_version.modelmonitorversion method)": [[95, "abacusai.model_monitor_version.ModelMonitorVersion.get_prediction_drift"]], "get_status() (abacusai.model_monitor_version.modelmonitorversion method)": [[95, "abacusai.model_monitor_version.ModelMonitorVersion.get_status"]], "list_monitor_alert_versions_for_monitor_version() (abacusai.model_monitor_version.modelmonitorversion method)": [[95, "abacusai.model_monitor_version.ModelMonitorVersion.list_monitor_alert_versions_for_monitor_version"]], "metric_data() (abacusai.model_monitor_version.modelmonitorversion method)": [[95, "abacusai.model_monitor_version.ModelMonitorVersion.metric_data"]], "refresh() (abacusai.model_monitor_version.modelmonitorversion method)": [[95, "abacusai.model_monitor_version.ModelMonitorVersion.refresh"]], "to_dict() (abacusai.model_monitor_version.modelmonitorversion method)": [[95, "abacusai.model_monitor_version.ModelMonitorVersion.to_dict"]], "wait_for_monitor() (abacusai.model_monitor_version.modelmonitorversion method)": [[95, "abacusai.model_monitor_version.ModelMonitorVersion.wait_for_monitor"]], "modelmonitorversionmetricdata (class in abacusai.model_monitor_version_metric_data)": [[96, "abacusai.model_monitor_version_metric_data.ModelMonitorVersionMetricData"]], "__repr__() (abacusai.model_monitor_version_metric_data.modelmonitorversionmetricdata method)": [[96, "abacusai.model_monitor_version_metric_data.ModelMonitorVersionMetricData.__repr__"]], "abacusai.model_monitor_version_metric_data": [[96, "module-abacusai.model_monitor_version_metric_data"]], "to_dict() (abacusai.model_monitor_version_metric_data.modelmonitorversionmetricdata method)": [[96, "abacusai.model_monitor_version_metric_data.ModelMonitorVersionMetricData.to_dict"]], "modeltrainingtypefordeployment (class in abacusai.model_training_type_for_deployment)": [[97, "abacusai.model_training_type_for_deployment.ModelTrainingTypeForDeployment"]], "__repr__() (abacusai.model_training_type_for_deployment.modeltrainingtypefordeployment method)": [[97, "abacusai.model_training_type_for_deployment.ModelTrainingTypeForDeployment.__repr__"]], "abacusai.model_training_type_for_deployment": [[97, "module-abacusai.model_training_type_for_deployment"]], "to_dict() (abacusai.model_training_type_for_deployment.modeltrainingtypefordeployment method)": [[97, "abacusai.model_training_type_for_deployment.ModelTrainingTypeForDeployment.to_dict"]], "modelupload (class in abacusai.model_upload)": [[98, "abacusai.model_upload.ModelUpload"]], "__repr__() (abacusai.model_upload.modelupload method)": [[98, "abacusai.model_upload.ModelUpload.__repr__"]], "abacusai.model_upload": [[98, "module-abacusai.model_upload"]], "to_dict() (abacusai.model_upload.modelupload method)": [[98, "abacusai.model_upload.ModelUpload.to_dict"]], "modelversion (class in abacusai.model_version)": [[99, "abacusai.model_version.ModelVersion"]], "__repr__() (abacusai.model_version.modelversion method)": [[99, "abacusai.model_version.ModelVersion.__repr__"]], "abacusai.model_version": [[99, "module-abacusai.model_version"]], "delete() (abacusai.model_version.modelversion method)": [[99, "abacusai.model_version.ModelVersion.delete"]], "describe() (abacusai.model_version.modelversion method)": [[99, "abacusai.model_version.ModelVersion.describe"]], "describe_train_test_data_split_feature_group_version() (abacusai.model_version.modelversion method)": [[99, "abacusai.model_version.ModelVersion.describe_train_test_data_split_feature_group_version"]], "export_custom() (abacusai.model_version.modelversion method)": [[99, "abacusai.model_version.ModelVersion.export_custom"]], "export_model_artifact_as_feature_group() (abacusai.model_version.modelversion method)": [[99, "abacusai.model_version.ModelVersion.export_model_artifact_as_feature_group"]], "get_feature_importance_by() (abacusai.model_version.modelversion method)": [[99, "abacusai.model_version.ModelVersion.get_feature_importance_by"]], "get_status() (abacusai.model_version.modelversion method)": [[99, "abacusai.model_version.ModelVersion.get_status"]], "get_train_test_feature_group_as_pandas() (abacusai.model_version.modelversion method)": [[99, "abacusai.model_version.ModelVersion.get_train_test_feature_group_as_pandas"]], "get_training_data_logs() (abacusai.model_version.modelversion method)": [[99, "abacusai.model_version.ModelVersion.get_training_data_logs"]], "get_training_logs() (abacusai.model_version.modelversion method)": [[99, "abacusai.model_version.ModelVersion.get_training_logs"]], "refresh() (abacusai.model_version.modelversion method)": [[99, "abacusai.model_version.ModelVersion.refresh"]], "set_model_objective() (abacusai.model_version.modelversion method)": [[99, "abacusai.model_version.ModelVersion.set_model_objective"]], "to_dict() (abacusai.model_version.modelversion method)": [[99, "abacusai.model_version.ModelVersion.to_dict"]], "wait_for_full_automl() (abacusai.model_version.modelversion method)": [[99, "abacusai.model_version.ModelVersion.wait_for_full_automl"]], "wait_for_training() (abacusai.model_version.modelversion method)": [[99, "abacusai.model_version.ModelVersion.wait_for_training"]], "modificationlockinfo (class in abacusai.modification_lock_info)": [[100, "abacusai.modification_lock_info.ModificationLockInfo"]], "__repr__() (abacusai.modification_lock_info.modificationlockinfo method)": [[100, "abacusai.modification_lock_info.ModificationLockInfo.__repr__"]], "abacusai.modification_lock_info": [[100, "module-abacusai.modification_lock_info"]], "to_dict() (abacusai.modification_lock_info.modificationlockinfo method)": [[100, "abacusai.modification_lock_info.ModificationLockInfo.to_dict"]], "module (class in abacusai.module)": [[101, "abacusai.module.Module"]], "__repr__() (abacusai.module.module method)": [[101, "abacusai.module.Module.__repr__"]], "abacusai.module": [[101, "module-abacusai.module"]], "to_dict() (abacusai.module.module method)": [[101, "abacusai.module.Module.to_dict"]], "monitoralert (class in abacusai.monitor_alert)": [[102, "abacusai.monitor_alert.MonitorAlert"]], "__repr__() (abacusai.monitor_alert.monitoralert method)": [[102, "abacusai.monitor_alert.MonitorAlert.__repr__"]], "abacusai.monitor_alert": [[102, "module-abacusai.monitor_alert"]], "delete() (abacusai.monitor_alert.monitoralert method)": [[102, "abacusai.monitor_alert.MonitorAlert.delete"]], "describe() (abacusai.monitor_alert.monitoralert method)": [[102, "abacusai.monitor_alert.MonitorAlert.describe"]], "refresh() (abacusai.monitor_alert.monitoralert method)": [[102, "abacusai.monitor_alert.MonitorAlert.refresh"]], "run() (abacusai.monitor_alert.monitoralert method)": [[102, "abacusai.monitor_alert.MonitorAlert.run"]], "to_dict() (abacusai.monitor_alert.monitoralert method)": [[102, "abacusai.monitor_alert.MonitorAlert.to_dict"]], "update() (abacusai.monitor_alert.monitoralert method)": [[102, "abacusai.monitor_alert.MonitorAlert.update"]], "monitoralertversion (class in abacusai.monitor_alert_version)": [[103, "abacusai.monitor_alert_version.MonitorAlertVersion"]], "__repr__() (abacusai.monitor_alert_version.monitoralertversion method)": [[103, "abacusai.monitor_alert_version.MonitorAlertVersion.__repr__"]], "abacusai.monitor_alert_version": [[103, "module-abacusai.monitor_alert_version"]], "describe() (abacusai.monitor_alert_version.monitoralertversion method)": [[103, "abacusai.monitor_alert_version.MonitorAlertVersion.describe"]], "get_status() (abacusai.monitor_alert_version.monitoralertversion method)": [[103, "abacusai.monitor_alert_version.MonitorAlertVersion.get_status"]], "refresh() (abacusai.monitor_alert_version.monitoralertversion method)": [[103, "abacusai.monitor_alert_version.MonitorAlertVersion.refresh"]], "to_dict() (abacusai.monitor_alert_version.monitoralertversion method)": [[103, "abacusai.monitor_alert_version.MonitorAlertVersion.to_dict"]], "wait_for_monitor_alert() (abacusai.monitor_alert_version.monitoralertversion method)": [[103, "abacusai.monitor_alert_version.MonitorAlertVersion.wait_for_monitor_alert"]], "naturallanguageexplanation (class in abacusai.natural_language_explanation)": [[104, "abacusai.natural_language_explanation.NaturalLanguageExplanation"]], "__repr__() (abacusai.natural_language_explanation.naturallanguageexplanation method)": [[104, "abacusai.natural_language_explanation.NaturalLanguageExplanation.__repr__"]], "abacusai.natural_language_explanation": [[104, "module-abacusai.natural_language_explanation"]], "to_dict() (abacusai.natural_language_explanation.naturallanguageexplanation method)": [[104, "abacusai.natural_language_explanation.NaturalLanguageExplanation.to_dict"]], "nestedfeature (class in abacusai.nested_feature)": [[105, "abacusai.nested_feature.NestedFeature"]], "__repr__() (abacusai.nested_feature.nestedfeature method)": [[105, "abacusai.nested_feature.NestedFeature.__repr__"]], "abacusai.nested_feature": [[105, "module-abacusai.nested_feature"]], "to_dict() (abacusai.nested_feature.nestedfeature method)": [[105, "abacusai.nested_feature.NestedFeature.to_dict"]], "nullviolation (class in abacusai.null_violation)": [[106, "abacusai.null_violation.NullViolation"]], "__repr__() (abacusai.null_violation.nullviolation method)": [[106, "abacusai.null_violation.NullViolation.__repr__"]], "abacusai.null_violation": [[106, "module-abacusai.null_violation"]], "to_dict() (abacusai.null_violation.nullviolation method)": [[106, "abacusai.null_violation.NullViolation.to_dict"]], "organizationgroup (class in abacusai.organization_group)": [[107, "abacusai.organization_group.OrganizationGroup"]], "__repr__() (abacusai.organization_group.organizationgroup method)": [[107, "abacusai.organization_group.OrganizationGroup.__repr__"]], "abacusai.organization_group": [[107, "module-abacusai.organization_group"]], "add_permission() (abacusai.organization_group.organizationgroup method)": [[107, "abacusai.organization_group.OrganizationGroup.add_permission"]], "add_user_to() (abacusai.organization_group.organizationgroup method)": [[107, "abacusai.organization_group.OrganizationGroup.add_user_to"]], "delete() (abacusai.organization_group.organizationgroup method)": [[107, "abacusai.organization_group.OrganizationGroup.delete"]], "describe() (abacusai.organization_group.organizationgroup method)": [[107, "abacusai.organization_group.OrganizationGroup.describe"]], "refresh() (abacusai.organization_group.organizationgroup method)": [[107, "abacusai.organization_group.OrganizationGroup.refresh"]], "remove_permission() (abacusai.organization_group.organizationgroup method)": [[107, "abacusai.organization_group.OrganizationGroup.remove_permission"]], "remove_user_from() (abacusai.organization_group.organizationgroup method)": [[107, "abacusai.organization_group.OrganizationGroup.remove_user_from"]], "set_default() (abacusai.organization_group.organizationgroup method)": [[107, "abacusai.organization_group.OrganizationGroup.set_default"]], "to_dict() (abacusai.organization_group.organizationgroup method)": [[107, "abacusai.organization_group.OrganizationGroup.to_dict"]], "organizationsearchresult (class in abacusai.organization_search_result)": [[108, "abacusai.organization_search_result.OrganizationSearchResult"]], "__repr__() (abacusai.organization_search_result.organizationsearchresult method)": [[108, "abacusai.organization_search_result.OrganizationSearchResult.__repr__"]], "abacusai.organization_search_result": [[108, "module-abacusai.organization_search_result"]], "to_dict() (abacusai.organization_search_result.organizationsearchresult method)": [[108, "abacusai.organization_search_result.OrganizationSearchResult.to_dict"]], "pipeline (class in abacusai.pipeline)": [[109, "abacusai.pipeline.Pipeline"]], "__repr__() (abacusai.pipeline.pipeline method)": [[109, "abacusai.pipeline.Pipeline.__repr__"]], "abacusai.pipeline": [[109, "module-abacusai.pipeline"]], "create_step() (abacusai.pipeline.pipeline method)": [[109, "abacusai.pipeline.Pipeline.create_step"]], "delete() (abacusai.pipeline.pipeline method)": [[109, "abacusai.pipeline.Pipeline.delete"]], "describe() (abacusai.pipeline.pipeline method)": [[109, "abacusai.pipeline.Pipeline.describe"]], "describe_step_by_name() (abacusai.pipeline.pipeline method)": [[109, "abacusai.pipeline.Pipeline.describe_step_by_name"]], "list_versions() (abacusai.pipeline.pipeline method)": [[109, "abacusai.pipeline.Pipeline.list_versions"]], "pause_refresh_schedule() (abacusai.pipeline.pipeline method)": [[109, "abacusai.pipeline.Pipeline.pause_refresh_schedule"]], "refresh() (abacusai.pipeline.pipeline method)": [[109, "abacusai.pipeline.Pipeline.refresh"]], "resume_refresh_schedule() (abacusai.pipeline.pipeline method)": [[109, "abacusai.pipeline.Pipeline.resume_refresh_schedule"]], "run() (abacusai.pipeline.pipeline method)": [[109, "abacusai.pipeline.Pipeline.run"]], "to_dict() (abacusai.pipeline.pipeline method)": [[109, "abacusai.pipeline.Pipeline.to_dict"]], "unset_refresh_schedule() (abacusai.pipeline.pipeline method)": [[109, "abacusai.pipeline.Pipeline.unset_refresh_schedule"]], "update() (abacusai.pipeline.pipeline method)": [[109, "abacusai.pipeline.Pipeline.update"]], "pipelinereference (class in abacusai.pipeline_reference)": [[110, "abacusai.pipeline_reference.PipelineReference"]], "__repr__() (abacusai.pipeline_reference.pipelinereference method)": [[110, "abacusai.pipeline_reference.PipelineReference.__repr__"]], "abacusai.pipeline_reference": [[110, "module-abacusai.pipeline_reference"]], "to_dict() (abacusai.pipeline_reference.pipelinereference method)": [[110, "abacusai.pipeline_reference.PipelineReference.to_dict"]], "pipelinestep (class in abacusai.pipeline_step)": [[111, "abacusai.pipeline_step.PipelineStep"]], "__repr__() (abacusai.pipeline_step.pipelinestep method)": [[111, "abacusai.pipeline_step.PipelineStep.__repr__"]], "abacusai.pipeline_step": [[111, "module-abacusai.pipeline_step"]], "delete() (abacusai.pipeline_step.pipelinestep method)": [[111, "abacusai.pipeline_step.PipelineStep.delete"]], "describe() (abacusai.pipeline_step.pipelinestep method)": [[111, "abacusai.pipeline_step.PipelineStep.describe"]], "refresh() (abacusai.pipeline_step.pipelinestep method)": [[111, "abacusai.pipeline_step.PipelineStep.refresh"]], "to_dict() (abacusai.pipeline_step.pipelinestep method)": [[111, "abacusai.pipeline_step.PipelineStep.to_dict"]], "update() (abacusai.pipeline_step.pipelinestep method)": [[111, "abacusai.pipeline_step.PipelineStep.update"]], "pipelinestepversion (class in abacusai.pipeline_step_version)": [[112, "abacusai.pipeline_step_version.PipelineStepVersion"]], "__repr__() (abacusai.pipeline_step_version.pipelinestepversion method)": [[112, "abacusai.pipeline_step_version.PipelineStepVersion.__repr__"]], "abacusai.pipeline_step_version": [[112, "module-abacusai.pipeline_step_version"]], "to_dict() (abacusai.pipeline_step_version.pipelinestepversion method)": [[112, "abacusai.pipeline_step_version.PipelineStepVersion.to_dict"]], "pipelinestepversionreference (class in abacusai.pipeline_step_version_reference)": [[113, "abacusai.pipeline_step_version_reference.PipelineStepVersionReference"]], "__repr__() (abacusai.pipeline_step_version_reference.pipelinestepversionreference method)": [[113, "abacusai.pipeline_step_version_reference.PipelineStepVersionReference.__repr__"]], "abacusai.pipeline_step_version_reference": [[113, "module-abacusai.pipeline_step_version_reference"]], "to_dict() (abacusai.pipeline_step_version_reference.pipelinestepversionreference method)": [[113, "abacusai.pipeline_step_version_reference.PipelineStepVersionReference.to_dict"]], "pipelineversion (class in abacusai.pipeline_version)": [[114, "abacusai.pipeline_version.PipelineVersion"]], "__repr__() (abacusai.pipeline_version.pipelineversion method)": [[114, "abacusai.pipeline_version.PipelineVersion.__repr__"]], "abacusai.pipeline_version": [[114, "module-abacusai.pipeline_version"]], "describe() (abacusai.pipeline_version.pipelineversion method)": [[114, "abacusai.pipeline_version.PipelineVersion.describe"]], "get_status() (abacusai.pipeline_version.pipelineversion method)": [[114, "abacusai.pipeline_version.PipelineVersion.get_status"]], "refresh() (abacusai.pipeline_version.pipelineversion method)": [[114, "abacusai.pipeline_version.PipelineVersion.refresh"]], "to_dict() (abacusai.pipeline_version.pipelineversion method)": [[114, "abacusai.pipeline_version.PipelineVersion.to_dict"]], "wait_for_pipeline() (abacusai.pipeline_version.pipelineversion method)": [[114, "abacusai.pipeline_version.PipelineVersion.wait_for_pipeline"]], "pointintimefeature (class in abacusai.point_in_time_feature)": [[115, "abacusai.point_in_time_feature.PointInTimeFeature"]], "__repr__() (abacusai.point_in_time_feature.pointintimefeature method)": [[115, "abacusai.point_in_time_feature.PointInTimeFeature.__repr__"]], "abacusai.point_in_time_feature": [[115, "module-abacusai.point_in_time_feature"]], "to_dict() (abacusai.point_in_time_feature.pointintimefeature method)": [[115, "abacusai.point_in_time_feature.PointInTimeFeature.to_dict"]], "pointintimegroup (class in abacusai.point_in_time_group)": [[116, "abacusai.point_in_time_group.PointInTimeGroup"]], "__repr__() (abacusai.point_in_time_group.pointintimegroup method)": [[116, "abacusai.point_in_time_group.PointInTimeGroup.__repr__"]], "abacusai.point_in_time_group": [[116, "module-abacusai.point_in_time_group"]], "to_dict() (abacusai.point_in_time_group.pointintimegroup method)": [[116, "abacusai.point_in_time_group.PointInTimeGroup.to_dict"]], "pointintimegroupfeature (class in abacusai.point_in_time_group_feature)": [[117, "abacusai.point_in_time_group_feature.PointInTimeGroupFeature"]], "__repr__() (abacusai.point_in_time_group_feature.pointintimegroupfeature method)": [[117, "abacusai.point_in_time_group_feature.PointInTimeGroupFeature.__repr__"]], "abacusai.point_in_time_group_feature": [[117, "module-abacusai.point_in_time_group_feature"]], "to_dict() (abacusai.point_in_time_group_feature.pointintimegroupfeature method)": [[117, "abacusai.point_in_time_group_feature.PointInTimeGroupFeature.to_dict"]], "predictionclient (class in abacusai.prediction_client)": [[118, "abacusai.prediction_client.PredictionClient"]], "abacusai.prediction_client": [[118, "module-abacusai.prediction_client"]], "check_constraints() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.check_constraints"]], "classify_image() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.classify_image"]], "classify_pdf() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.classify_pdf"]], "describe_image() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.describe_image"]], "execute_agent() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.execute_agent"]], "generate_image() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.generate_image"]], "get_alternative_assignments() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_alternative_assignments"]], "get_anomalies() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_anomalies"]], "get_assignments() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_assignments"]], "get_chat_response() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_chat_response"]], "get_classification() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_classification"]], "get_cluster() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_cluster"]], "get_entailment() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_entailment"]], "get_entities_from_pdf() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_entities_from_pdf"]], "get_forecast() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_forecast"]], "get_k_nearest() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_k_nearest"]], "get_labels() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_labels"]], "get_multiple_k_nearest() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_multiple_k_nearest"]], "get_objects_from_image() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_objects_from_image"]], "get_personalized_ranking() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_personalized_ranking"]], "get_ranked_items() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_ranked_items"]], "get_recommendations() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_recommendations"]], "get_related_items() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_related_items"]], "get_search_results() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_search_results"]], "get_sentiment() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_sentiment"]], "get_summary() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.get_summary"]], "is_anomaly() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.is_anomaly"]], "lookup_features() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.lookup_features"]], "predict() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.predict"]], "predict_churn() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.predict_churn"]], "predict_class() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.predict_class"]], "predict_fraud() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.predict_fraud"]], "predict_from_datasets() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.predict_from_datasets"]], "predict_language() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.predict_language"]], "predict_lead() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.predict_lead"]], "predict_multiple() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.predict_multiple"]], "predict_raw() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.predict_raw"]], "predict_takeover() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.predict_takeover"]], "predict_target() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.predict_target"]], "predict_with_binary_data() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.predict_with_binary_data"]], "score_image() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.score_image"]], "transcribe_audio() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.transcribe_audio"]], "transfer_style() (abacusai.prediction_client.predictionclient method)": [[118, "abacusai.prediction_client.PredictionClient.transfer_style"]], "predictiondataset (class in abacusai.prediction_dataset)": [[119, "abacusai.prediction_dataset.PredictionDataset"]], "__repr__() (abacusai.prediction_dataset.predictiondataset method)": [[119, "abacusai.prediction_dataset.PredictionDataset.__repr__"]], "abacusai.prediction_dataset": [[119, "module-abacusai.prediction_dataset"]], "to_dict() (abacusai.prediction_dataset.predictiondataset method)": [[119, "abacusai.prediction_dataset.PredictionDataset.to_dict"]], "predictionfeaturegroup (class in abacusai.prediction_feature_group)": [[120, "abacusai.prediction_feature_group.PredictionFeatureGroup"]], "__repr__() (abacusai.prediction_feature_group.predictionfeaturegroup method)": [[120, "abacusai.prediction_feature_group.PredictionFeatureGroup.__repr__"]], "abacusai.prediction_feature_group": [[120, "module-abacusai.prediction_feature_group"]], "to_dict() (abacusai.prediction_feature_group.predictionfeaturegroup method)": [[120, "abacusai.prediction_feature_group.PredictionFeatureGroup.to_dict"]], "predictioninput (class in abacusai.prediction_input)": [[121, "abacusai.prediction_input.PredictionInput"]], "__repr__() (abacusai.prediction_input.predictioninput method)": [[121, "abacusai.prediction_input.PredictionInput.__repr__"]], "abacusai.prediction_input": [[121, "module-abacusai.prediction_input"]], "to_dict() (abacusai.prediction_input.predictioninput method)": [[121, "abacusai.prediction_input.PredictionInput.to_dict"]], "predictionmetric (class in abacusai.prediction_metric)": [[122, "abacusai.prediction_metric.PredictionMetric"]], "__repr__() (abacusai.prediction_metric.predictionmetric method)": [[122, "abacusai.prediction_metric.PredictionMetric.__repr__"]], "abacusai.prediction_metric": [[122, "module-abacusai.prediction_metric"]], "to_dict() (abacusai.prediction_metric.predictionmetric method)": [[122, "abacusai.prediction_metric.PredictionMetric.to_dict"]], "predictionmetricversion (class in abacusai.prediction_metric_version)": [[123, "abacusai.prediction_metric_version.PredictionMetricVersion"]], "__repr__() (abacusai.prediction_metric_version.predictionmetricversion method)": [[123, "abacusai.prediction_metric_version.PredictionMetricVersion.__repr__"]], "abacusai.prediction_metric_version": [[123, "module-abacusai.prediction_metric_version"]], "get_status() (abacusai.prediction_metric_version.predictionmetricversion method)": [[123, "abacusai.prediction_metric_version.PredictionMetricVersion.get_status"]], "to_dict() (abacusai.prediction_metric_version.predictionmetricversion method)": [[123, "abacusai.prediction_metric_version.PredictionMetricVersion.to_dict"]], "wait_for_prediction_metric_version() (abacusai.prediction_metric_version.predictionmetricversion method)": [[123, "abacusai.prediction_metric_version.PredictionMetricVersion.wait_for_prediction_metric_version"]], "problemtype (class in abacusai.problem_type)": [[124, "abacusai.problem_type.ProblemType"]], "__repr__() (abacusai.problem_type.problemtype method)": [[124, "abacusai.problem_type.ProblemType.__repr__"]], "abacusai.problem_type": [[124, "module-abacusai.problem_type"]], "to_dict() (abacusai.problem_type.problemtype method)": [[124, "abacusai.problem_type.ProblemType.to_dict"]], "project (class in abacusai.project)": [[125, "abacusai.project.Project"]], "__repr__() (abacusai.project.project method)": [[125, "abacusai.project.Project.__repr__"]], "abacusai.project": [[125, "module-abacusai.project"]], "add_tags() (abacusai.project.project method)": [[125, "abacusai.project.Project.add_tags"]], "attach_dataset() (abacusai.project.project method)": [[125, "abacusai.project.Project.attach_dataset"]], "create_agent() (abacusai.project.project method)": [[125, "abacusai.project.Project.create_agent"]], "create_chat_session() (abacusai.project.project method)": [[125, "abacusai.project.Project.create_chat_session"]], "create_deployment_token() (abacusai.project.project method)": [[125, "abacusai.project.Project.create_deployment_token"]], "create_eda() (abacusai.project.project method)": [[125, "abacusai.project.Project.create_eda"]], "create_graph_dashboard() (abacusai.project.project method)": [[125, "abacusai.project.Project.create_graph_dashboard"]], "create_model_from_functions() (abacusai.project.project method)": [[125, "abacusai.project.Project.create_model_from_functions"]], "create_model_from_python() (abacusai.project.project method)": [[125, "abacusai.project.Project.create_model_from_python"]], "create_model_monitor() (abacusai.project.project method)": [[125, "abacusai.project.Project.create_model_monitor"]], "create_monitor_alert() (abacusai.project.project method)": [[125, "abacusai.project.Project.create_monitor_alert"]], "create_nlp_drift_monitor() (abacusai.project.project method)": [[125, "abacusai.project.Project.create_nlp_drift_monitor"]], "create_train_test_data_split_feature_group() (abacusai.project.project method)": [[125, "abacusai.project.Project.create_train_test_data_split_feature_group"]], "create_vector_store() (abacusai.project.project method)": [[125, "abacusai.project.Project.create_vector_store"]], "create_vision_drift_monitor() (abacusai.project.project method)": [[125, "abacusai.project.Project.create_vision_drift_monitor"]], "delete() (abacusai.project.project method)": [[125, "abacusai.project.Project.delete"]], "describe() (abacusai.project.project method)": [[125, "abacusai.project.Project.describe"]], "describe_feature_group() (abacusai.project.project method)": [[125, "abacusai.project.Project.describe_feature_group"]], "get_custom_train_function_info() (abacusai.project.project method)": [[125, "abacusai.project.Project.get_custom_train_function_info"]], "get_schema() (abacusai.project.project method)": [[125, "abacusai.project.Project.get_schema"]], "get_training_config_options() (abacusai.project.project method)": [[125, "abacusai.project.Project.get_training_config_options"]], "list_batch_predictions() (abacusai.project.project method)": [[125, "abacusai.project.Project.list_batch_predictions"]], "list_builtin_algorithms() (abacusai.project.project method)": [[125, "abacusai.project.Project.list_builtin_algorithms"]], "list_datasets() (abacusai.project.project method)": [[125, "abacusai.project.Project.list_datasets"]], "list_deployment_tokens() (abacusai.project.project method)": [[125, "abacusai.project.Project.list_deployment_tokens"]], "list_deployments() (abacusai.project.project method)": [[125, "abacusai.project.Project.list_deployments"]], "list_eda() (abacusai.project.project method)": [[125, "abacusai.project.Project.list_eda"]], "list_feature_group_templates() (abacusai.project.project method)": [[125, "abacusai.project.Project.list_feature_group_templates"]], "list_feature_groups() (abacusai.project.project method)": [[125, "abacusai.project.Project.list_feature_groups"]], "list_graph_dashboards() (abacusai.project.project method)": [[125, "abacusai.project.Project.list_graph_dashboards"]], "list_model_monitors() (abacusai.project.project method)": [[125, "abacusai.project.Project.list_model_monitors"]], "list_models() (abacusai.project.project method)": [[125, "abacusai.project.Project.list_models"]], "list_pipelines() (abacusai.project.project method)": [[125, "abacusai.project.Project.list_pipelines"]], "list_refresh_policies() (abacusai.project.project method)": [[125, "abacusai.project.Project.list_refresh_policies"]], "list_vector_stores() (abacusai.project.project method)": [[125, "abacusai.project.Project.list_vector_stores"]], "refresh() (abacusai.project.project method)": [[125, "abacusai.project.Project.refresh"]], "remove_column_mapping() (abacusai.project.project method)": [[125, "abacusai.project.Project.remove_column_mapping"]], "remove_dataset() (abacusai.project.project method)": [[125, "abacusai.project.Project.remove_dataset"]], "remove_tags() (abacusai.project.project method)": [[125, "abacusai.project.Project.remove_tags"]], "rename() (abacusai.project.project method)": [[125, "abacusai.project.Project.rename"]], "set_column_data_type() (abacusai.project.project method)": [[125, "abacusai.project.Project.set_column_data_type"]], "set_column_mapping() (abacusai.project.project method)": [[125, "abacusai.project.Project.set_column_mapping"]], "set_feature_mapping() (abacusai.project.project method)": [[125, "abacusai.project.Project.set_feature_mapping"]], "to_dict() (abacusai.project.project method)": [[125, "abacusai.project.Project.to_dict"]], "train_model() (abacusai.project.project method)": [[125, "abacusai.project.Project.train_model"]], "validate() (abacusai.project.project method)": [[125, "abacusai.project.Project.validate"]], "projectconfig (class in abacusai.project_config)": [[126, "abacusai.project_config.ProjectConfig"]], "__repr__() (abacusai.project_config.projectconfig method)": [[126, "abacusai.project_config.ProjectConfig.__repr__"]], "abacusai.project_config": [[126, "module-abacusai.project_config"]], "to_dict() (abacusai.project_config.projectconfig method)": [[126, "abacusai.project_config.ProjectConfig.to_dict"]], "projectdataset (class in abacusai.project_dataset)": [[127, "abacusai.project_dataset.ProjectDataset"]], "__repr__() (abacusai.project_dataset.projectdataset method)": [[127, "abacusai.project_dataset.ProjectDataset.__repr__"]], "abacusai.project_dataset": [[127, "module-abacusai.project_dataset"]], "to_dict() (abacusai.project_dataset.projectdataset method)": [[127, "abacusai.project_dataset.ProjectDataset.to_dict"]], "projectvalidation (class in abacusai.project_validation)": [[128, "abacusai.project_validation.ProjectValidation"]], "__repr__() (abacusai.project_validation.projectvalidation method)": [[128, "abacusai.project_validation.ProjectValidation.__repr__"]], "abacusai.project_validation": [[128, "module-abacusai.project_validation"]], "to_dict() (abacusai.project_validation.projectvalidation method)": [[128, "abacusai.project_validation.ProjectValidation.to_dict"]], "pythonfunction (class in abacusai.python_function)": [[129, "abacusai.python_function.PythonFunction"]], "__repr__() (abacusai.python_function.pythonfunction method)": [[129, "abacusai.python_function.PythonFunction.__repr__"]], "abacusai.python_function": [[129, "module-abacusai.python_function"]], "add_graph_to_dashboard() (abacusai.python_function.pythonfunction method)": [[129, "abacusai.python_function.PythonFunction.add_graph_to_dashboard"]], "to_dict() (abacusai.python_function.pythonfunction method)": [[129, "abacusai.python_function.PythonFunction.to_dict"]], "validate_locally() (abacusai.python_function.pythonfunction method)": [[129, "abacusai.python_function.PythonFunction.validate_locally"]], "_monkeypatch (class in abacusai.python_function_validator)": [[130, "abacusai.python_function_validator._MonkeyPatch"]], "abacusai.python_function_validator": [[130, "module-abacusai.python_function_validator"]], "context() (abacusai.python_function_validator._monkeypatch class method)": [[130, "abacusai.python_function_validator._MonkeyPatch.context"]], "syspath_prepend() (abacusai.python_function_validator._monkeypatch method)": [[130, "abacusai.python_function_validator._MonkeyPatch.syspath_prepend"]], "undo() (abacusai.python_function_validator._monkeypatch method)": [[130, "abacusai.python_function_validator._MonkeyPatch.undo"]], "validate_function_locally() (in module abacusai.python_function_validator)": [[130, "abacusai.python_function_validator.validate_function_locally"]], "pythonplotfunction (class in abacusai.python_plot_function)": [[131, "abacusai.python_plot_function.PythonPlotFunction"]], "__repr__() (abacusai.python_plot_function.pythonplotfunction method)": [[131, "abacusai.python_plot_function.PythonPlotFunction.__repr__"]], "abacusai.python_plot_function": [[131, "module-abacusai.python_plot_function"]], "to_dict() (abacusai.python_plot_function.pythonplotfunction method)": [[131, "abacusai.python_plot_function.PythonPlotFunction.to_dict"]], "rangeviolation (class in abacusai.range_violation)": [[132, "abacusai.range_violation.RangeViolation"]], "__repr__() (abacusai.range_violation.rangeviolation method)": [[132, "abacusai.range_violation.RangeViolation.__repr__"]], "abacusai.range_violation": [[132, "module-abacusai.range_violation"]], "to_dict() (abacusai.range_violation.rangeviolation method)": [[132, "abacusai.range_violation.RangeViolation.to_dict"]], "refreshpipelinerun (class in abacusai.refresh_pipeline_run)": [[133, "abacusai.refresh_pipeline_run.RefreshPipelineRun"]], "__repr__() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[133, "abacusai.refresh_pipeline_run.RefreshPipelineRun.__repr__"]], "abacusai.refresh_pipeline_run": [[133, "module-abacusai.refresh_pipeline_run"]], "describe() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[133, "abacusai.refresh_pipeline_run.RefreshPipelineRun.describe"]], "get_status() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[133, "abacusai.refresh_pipeline_run.RefreshPipelineRun.get_status"]], "refresh() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[133, "abacusai.refresh_pipeline_run.RefreshPipelineRun.refresh"]], "to_dict() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[133, "abacusai.refresh_pipeline_run.RefreshPipelineRun.to_dict"]], "wait_for_complete() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[133, "abacusai.refresh_pipeline_run.RefreshPipelineRun.wait_for_complete"]], "refreshpolicy (class in abacusai.refresh_policy)": [[134, "abacusai.refresh_policy.RefreshPolicy"]], "__repr__() (abacusai.refresh_policy.refreshpolicy method)": [[134, "abacusai.refresh_policy.RefreshPolicy.__repr__"]], "abacusai.refresh_policy": [[134, "module-abacusai.refresh_policy"]], "delete() (abacusai.refresh_policy.refreshpolicy method)": [[134, "abacusai.refresh_policy.RefreshPolicy.delete"]], "describe() (abacusai.refresh_policy.refreshpolicy method)": [[134, "abacusai.refresh_policy.RefreshPolicy.describe"]], "list_refresh_pipeline_runs() (abacusai.refresh_policy.refreshpolicy method)": [[134, "abacusai.refresh_policy.RefreshPolicy.list_refresh_pipeline_runs"]], "pause() (abacusai.refresh_policy.refreshpolicy method)": [[134, "abacusai.refresh_policy.RefreshPolicy.pause"]], "refresh() (abacusai.refresh_policy.refreshpolicy method)": [[134, "abacusai.refresh_policy.RefreshPolicy.refresh"]], "resume() (abacusai.refresh_policy.refreshpolicy method)": [[134, "abacusai.refresh_policy.RefreshPolicy.resume"]], "run() (abacusai.refresh_policy.refreshpolicy method)": [[134, "abacusai.refresh_policy.RefreshPolicy.run"]], "to_dict() (abacusai.refresh_policy.refreshpolicy method)": [[134, "abacusai.refresh_policy.RefreshPolicy.to_dict"]], "update() (abacusai.refresh_policy.refreshpolicy method)": [[134, "abacusai.refresh_policy.RefreshPolicy.update"]], "refreshschedule (class in abacusai.refresh_schedule)": [[135, "abacusai.refresh_schedule.RefreshSchedule"]], "__repr__() (abacusai.refresh_schedule.refreshschedule method)": [[135, "abacusai.refresh_schedule.RefreshSchedule.__repr__"]], "abacusai.refresh_schedule": [[135, "module-abacusai.refresh_schedule"]], "to_dict() (abacusai.refresh_schedule.refreshschedule method)": [[135, "abacusai.refresh_schedule.RefreshSchedule.to_dict"]], "resolvedfeaturegrouptemplate (class in abacusai.resolved_feature_group_template)": [[136, "abacusai.resolved_feature_group_template.ResolvedFeatureGroupTemplate"]], "__repr__() (abacusai.resolved_feature_group_template.resolvedfeaturegrouptemplate method)": [[136, "abacusai.resolved_feature_group_template.ResolvedFeatureGroupTemplate.__repr__"]], "abacusai.resolved_feature_group_template": [[136, "module-abacusai.resolved_feature_group_template"]], "to_dict() (abacusai.resolved_feature_group_template.resolvedfeaturegrouptemplate method)": [[136, "abacusai.resolved_feature_group_template.ResolvedFeatureGroupTemplate.to_dict"]], "abstractapiclass (class in abacusai.return_class)": [[137, "abacusai.return_class.AbstractApiClass"]], "__eq__() (abacusai.return_class.abstractapiclass method)": [[137, "abacusai.return_class.AbstractApiClass.__eq__"]], "_get_attribute_as_dict() (abacusai.return_class.abstractapiclass method)": [[137, "abacusai.return_class.AbstractApiClass._get_attribute_as_dict"]], "abacusai.return_class": [[137, "module-abacusai.return_class"]], "schema (class in abacusai.schema)": [[138, "abacusai.schema.Schema"]], "__repr__() (abacusai.schema.schema method)": [[138, "abacusai.schema.Schema.__repr__"]], "abacusai.schema": [[138, "module-abacusai.schema"]], "to_dict() (abacusai.schema.schema method)": [[138, "abacusai.schema.Schema.to_dict"]], "streamingauthtoken (class in abacusai.streaming_auth_token)": [[139, "abacusai.streaming_auth_token.StreamingAuthToken"]], "__repr__() (abacusai.streaming_auth_token.streamingauthtoken method)": [[139, "abacusai.streaming_auth_token.StreamingAuthToken.__repr__"]], "abacusai.streaming_auth_token": [[139, "module-abacusai.streaming_auth_token"]], "to_dict() (abacusai.streaming_auth_token.streamingauthtoken method)": [[139, "abacusai.streaming_auth_token.StreamingAuthToken.to_dict"]], "streamingclient (class in abacusai.streaming_client)": [[140, "abacusai.streaming_client.StreamingClient"]], "abacusai.streaming_client": [[140, "module-abacusai.streaming_client"]], "append_data() (abacusai.streaming_client.streamingclient method)": [[140, "abacusai.streaming_client.StreamingClient.append_data"]], "append_multiple_data() (abacusai.streaming_client.streamingclient method)": [[140, "abacusai.streaming_client.StreamingClient.append_multiple_data"]], "delete_item_embeddings() (abacusai.streaming_client.streamingclient method)": [[140, "abacusai.streaming_client.StreamingClient.delete_item_embeddings"]], "upsert_data() (abacusai.streaming_client.streamingclient method)": [[140, "abacusai.streaming_client.StreamingClient.upsert_data"]], "upsert_item_embeddings() (abacusai.streaming_client.streamingclient method)": [[140, "abacusai.streaming_client.StreamingClient.upsert_item_embeddings"]], "upsert_multiple_data() (abacusai.streaming_client.streamingclient method)": [[140, "abacusai.streaming_client.StreamingClient.upsert_multiple_data"]], "upsert_multiple_item_embeddings() (abacusai.streaming_client.streamingclient method)": [[140, "abacusai.streaming_client.StreamingClient.upsert_multiple_item_embeddings"]], "streamingconnector (class in abacusai.streaming_connector)": [[141, "abacusai.streaming_connector.StreamingConnector"]], "__repr__() (abacusai.streaming_connector.streamingconnector method)": [[141, "abacusai.streaming_connector.StreamingConnector.__repr__"]], "abacusai.streaming_connector": [[141, "module-abacusai.streaming_connector"]], "delete() (abacusai.streaming_connector.streamingconnector method)": [[141, "abacusai.streaming_connector.StreamingConnector.delete"]], "rename() (abacusai.streaming_connector.streamingconnector method)": [[141, "abacusai.streaming_connector.StreamingConnector.rename"]], "to_dict() (abacusai.streaming_connector.streamingconnector method)": [[141, "abacusai.streaming_connector.StreamingConnector.to_dict"]], "verify() (abacusai.streaming_connector.streamingconnector method)": [[141, "abacusai.streaming_connector.StreamingConnector.verify"]], "trainingconfigoptions (class in abacusai.training_config_options)": [[142, "abacusai.training_config_options.TrainingConfigOptions"]], "__repr__() (abacusai.training_config_options.trainingconfigoptions method)": [[142, "abacusai.training_config_options.TrainingConfigOptions.__repr__"]], "abacusai.training_config_options": [[142, "module-abacusai.training_config_options"]], "to_dict() (abacusai.training_config_options.trainingconfigoptions method)": [[142, "abacusai.training_config_options.TrainingConfigOptions.to_dict"]], "typeviolation (class in abacusai.type_violation)": [[143, "abacusai.type_violation.TypeViolation"]], "__repr__() (abacusai.type_violation.typeviolation method)": [[143, "abacusai.type_violation.TypeViolation.__repr__"]], "abacusai.type_violation": [[143, "module-abacusai.type_violation"]], "to_dict() (abacusai.type_violation.typeviolation method)": [[143, "abacusai.type_violation.TypeViolation.to_dict"]], "upload (class in abacusai.upload)": [[144, "abacusai.upload.Upload"]], "__repr__() (abacusai.upload.upload method)": [[144, "abacusai.upload.Upload.__repr__"]], "_yield_upload_part() (abacusai.upload.upload method)": [[144, "abacusai.upload.Upload._yield_upload_part"]], "abacusai.upload": [[144, "module-abacusai.upload"]], "cancel() (abacusai.upload.upload method)": [[144, "abacusai.upload.Upload.cancel"]], "describe() (abacusai.upload.upload method)": [[144, "abacusai.upload.Upload.describe"]], "get_status() (abacusai.upload.upload method)": [[144, "abacusai.upload.Upload.get_status"]], "mark_complete() (abacusai.upload.upload method)": [[144, "abacusai.upload.Upload.mark_complete"]], "part() (abacusai.upload.upload method)": [[144, "abacusai.upload.Upload.part"]], "refresh() (abacusai.upload.upload method)": [[144, "abacusai.upload.Upload.refresh"]], "to_dict() (abacusai.upload.upload method)": [[144, "abacusai.upload.Upload.to_dict"]], "upload_file() (abacusai.upload.upload method)": [[144, "abacusai.upload.Upload.upload_file"]], "upload_part() (abacusai.upload.upload method)": [[144, "abacusai.upload.Upload.upload_part"]], "wait_for_join() (abacusai.upload.upload method)": [[144, "abacusai.upload.Upload.wait_for_join"]], "uploadpart (class in abacusai.upload_part)": [[145, "abacusai.upload_part.UploadPart"]], "__repr__() (abacusai.upload_part.uploadpart method)": [[145, "abacusai.upload_part.UploadPart.__repr__"]], "abacusai.upload_part": [[145, "module-abacusai.upload_part"]], "to_dict() (abacusai.upload_part.uploadpart method)": [[145, "abacusai.upload_part.UploadPart.to_dict"]], "usecase (class in abacusai.use_case)": [[146, "abacusai.use_case.UseCase"]], "__repr__() (abacusai.use_case.usecase method)": [[146, "abacusai.use_case.UseCase.__repr__"]], "abacusai.use_case": [[146, "module-abacusai.use_case"]], "to_dict() (abacusai.use_case.usecase method)": [[146, "abacusai.use_case.UseCase.to_dict"]], "usecaserequirements (class in abacusai.use_case_requirements)": [[147, "abacusai.use_case_requirements.UseCaseRequirements"]], "__repr__() (abacusai.use_case_requirements.usecaserequirements method)": [[147, "abacusai.use_case_requirements.UseCaseRequirements.__repr__"]], "abacusai.use_case_requirements": [[147, "module-abacusai.use_case_requirements"]], "to_dict() (abacusai.use_case_requirements.usecaserequirements method)": [[147, "abacusai.use_case_requirements.UseCaseRequirements.to_dict"]], "user (class in abacusai.user)": [[148, "abacusai.user.User"]], "__repr__() (abacusai.user.user method)": [[148, "abacusai.user.User.__repr__"]], "abacusai.user": [[148, "module-abacusai.user"]], "to_dict() (abacusai.user.user method)": [[148, "abacusai.user.User.to_dict"]], "userexception (class in abacusai.user_exception)": [[149, "abacusai.user_exception.UserException"]], "__repr__() (abacusai.user_exception.userexception method)": [[149, "abacusai.user_exception.UserException.__repr__"]], "abacusai.user_exception": [[149, "module-abacusai.user_exception"]], "to_dict() (abacusai.user_exception.userexception method)": [[149, "abacusai.user_exception.UserException.to_dict"]], "vectorstore (class in abacusai.vector_store)": [[150, "abacusai.vector_store.VectorStore"]], "__repr__() (abacusai.vector_store.vectorstore method)": [[150, "abacusai.vector_store.VectorStore.__repr__"]], "abacusai.vector_store": [[150, "module-abacusai.vector_store"]], "create_version() (abacusai.vector_store.vectorstore method)": [[150, "abacusai.vector_store.VectorStore.create_version"]], "delete() (abacusai.vector_store.vectorstore method)": [[150, "abacusai.vector_store.VectorStore.delete"]], "describe() (abacusai.vector_store.vectorstore method)": [[150, "abacusai.vector_store.VectorStore.describe"]], "get_status() (abacusai.vector_store.vectorstore method)": [[150, "abacusai.vector_store.VectorStore.get_status"]], "list_versions() (abacusai.vector_store.vectorstore method)": [[150, "abacusai.vector_store.VectorStore.list_versions"]], "lookup() (abacusai.vector_store.vectorstore method)": [[150, "abacusai.vector_store.VectorStore.lookup"]], "refresh() (abacusai.vector_store.vectorstore method)": [[150, "abacusai.vector_store.VectorStore.refresh"]], "to_dict() (abacusai.vector_store.vectorstore method)": [[150, "abacusai.vector_store.VectorStore.to_dict"]], "update() (abacusai.vector_store.vectorstore method)": [[150, "abacusai.vector_store.VectorStore.update"]], "wait_until_ready() (abacusai.vector_store.vectorstore method)": [[150, "abacusai.vector_store.VectorStore.wait_until_ready"]], "vectorstorelookupresult (class in abacusai.vector_store_lookup_result)": [[151, "abacusai.vector_store_lookup_result.VectorStoreLookupResult"]], "__repr__() (abacusai.vector_store_lookup_result.vectorstorelookupresult method)": [[151, "abacusai.vector_store_lookup_result.VectorStoreLookupResult.__repr__"]], "abacusai.vector_store_lookup_result": [[151, "module-abacusai.vector_store_lookup_result"]], "to_dict() (abacusai.vector_store_lookup_result.vectorstorelookupresult method)": [[151, "abacusai.vector_store_lookup_result.VectorStoreLookupResult.to_dict"]], "vectorstoreversion (class in abacusai.vector_store_version)": [[152, "abacusai.vector_store_version.VectorStoreVersion"]], "__repr__() (abacusai.vector_store_version.vectorstoreversion method)": [[152, "abacusai.vector_store_version.VectorStoreVersion.__repr__"]], "abacusai.vector_store_version": [[152, "module-abacusai.vector_store_version"]], "describe() (abacusai.vector_store_version.vectorstoreversion method)": [[152, "abacusai.vector_store_version.VectorStoreVersion.describe"]], "get_status() (abacusai.vector_store_version.vectorstoreversion method)": [[152, "abacusai.vector_store_version.VectorStoreVersion.get_status"]], "refresh() (abacusai.vector_store_version.vectorstoreversion method)": [[152, "abacusai.vector_store_version.VectorStoreVersion.refresh"]], "to_dict() (abacusai.vector_store_version.vectorstoreversion method)": [[152, "abacusai.vector_store_version.VectorStoreVersion.to_dict"]], "wait_for_results() (abacusai.vector_store_version.vectorstoreversion method)": [[152, "abacusai.vector_store_version.VectorStoreVersion.wait_for_results"]], "wait_until_ready() (abacusai.vector_store_version.vectorstoreversion method)": [[152, "abacusai.vector_store_version.VectorStoreVersion.wait_until_ready"]], "webhook (class in abacusai.webhook)": [[153, "abacusai.webhook.Webhook"]], "__repr__() (abacusai.webhook.webhook method)": [[153, "abacusai.webhook.Webhook.__repr__"]], "abacusai.webhook": [[153, "module-abacusai.webhook"]], "delete() (abacusai.webhook.webhook method)": [[153, "abacusai.webhook.Webhook.delete"]], "describe() (abacusai.webhook.webhook method)": [[153, "abacusai.webhook.Webhook.describe"]], "refresh() (abacusai.webhook.webhook method)": [[153, "abacusai.webhook.Webhook.refresh"]], "to_dict() (abacusai.webhook.webhook method)": [[153, "abacusai.webhook.Webhook.to_dict"]], "update() (abacusai.webhook.webhook method)": [[153, "abacusai.webhook.Webhook.update"]]}})