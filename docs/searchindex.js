Search.setIndex({"docnames": ["autoapi/abacusai/algorithm/index", "autoapi/abacusai/annotation/index", "autoapi/abacusai/annotation_config/index", "autoapi/abacusai/annotation_entry/index", "autoapi/abacusai/annotations_status/index", "autoapi/abacusai/api_class/abstract/index", "autoapi/abacusai/api_class/dataset/index", "autoapi/abacusai/api_class/enums/index", "autoapi/abacusai/api_class/feature_group/index", "autoapi/abacusai/api_class/index", "autoapi/abacusai/api_class/model/index", "autoapi/abacusai/api_class/python_functions/index", "autoapi/abacusai/api_class/refresh/index", "autoapi/abacusai/api_client_utils/index", "autoapi/abacusai/api_endpoint/index", "autoapi/abacusai/api_key/index", "autoapi/abacusai/application_connector/index", "autoapi/abacusai/batch_prediction/index", "autoapi/abacusai/batch_prediction_version/index", "autoapi/abacusai/categorical_range_violation/index", "autoapi/abacusai/chat_message/index", "autoapi/abacusai/chat_session/index", "autoapi/abacusai/client/index", "autoapi/abacusai/code_source/index", "autoapi/abacusai/concatenation_config/index", "autoapi/abacusai/cryptography/index", "autoapi/abacusai/custom_loss_function/index", "autoapi/abacusai/custom_metric/index", "autoapi/abacusai/custom_metric_version/index", "autoapi/abacusai/custom_train_function_info/index", "autoapi/abacusai/data_consistency_duplication/index", "autoapi/abacusai/data_prep_logs/index", "autoapi/abacusai/data_quality_results/index", "autoapi/abacusai/database_connector/index", "autoapi/abacusai/dataset/index", "autoapi/abacusai/dataset_column/index", "autoapi/abacusai/dataset_version/index", "autoapi/abacusai/deployment/index", "autoapi/abacusai/deployment_auth_token/index", "autoapi/abacusai/document/index", "autoapi/abacusai/document_annotation/index", "autoapi/abacusai/document_store/index", "autoapi/abacusai/document_store_import/index", "autoapi/abacusai/drift_distribution/index", "autoapi/abacusai/drift_distributions/index", "autoapi/abacusai/eda/index", "autoapi/abacusai/eda_chart_description/index", "autoapi/abacusai/eda_collinearity/index", "autoapi/abacusai/eda_data_consistency/index", "autoapi/abacusai/eda_feature_association/index", "autoapi/abacusai/eda_feature_collinearity/index", "autoapi/abacusai/eda_forecasting_analysis/index", "autoapi/abacusai/eda_version/index", "autoapi/abacusai/embedding_feature_drift_distribution/index", "autoapi/abacusai/execute_feature_group_operation/index", "autoapi/abacusai/feature/index", "autoapi/abacusai/feature_distribution/index", "autoapi/abacusai/feature_drift_summary/index", "autoapi/abacusai/feature_group/index", "autoapi/abacusai/feature_group_export/index", "autoapi/abacusai/feature_group_export_config/index", "autoapi/abacusai/feature_group_export_download_url/index", "autoapi/abacusai/feature_group_lineage/index", "autoapi/abacusai/feature_group_metrics/index", "autoapi/abacusai/feature_group_refresh_export_config/index", "autoapi/abacusai/feature_group_template/index", "autoapi/abacusai/feature_group_template_variable_options/index", "autoapi/abacusai/feature_group_version/index", "autoapi/abacusai/feature_importance/index", "autoapi/abacusai/feature_record/index", "autoapi/abacusai/file_connector/index", "autoapi/abacusai/file_connector_instructions/index", "autoapi/abacusai/file_connector_verification/index", "autoapi/abacusai/forecasting_analysis_graph_data/index", "autoapi/abacusai/function_logs/index", "autoapi/abacusai/generated_pit_feature_config_option/index", "autoapi/abacusai/graph_dashboard/index", "autoapi/abacusai/index", "autoapi/abacusai/indexing_config/index", "autoapi/abacusai/item_statistics/index", "autoapi/abacusai/llm_code_block/index", "autoapi/abacusai/llm_input/index", "autoapi/abacusai/llm_parameters/index", "autoapi/abacusai/llm_response/index", "autoapi/abacusai/model/index", "autoapi/abacusai/model_artifacts_export/index", "autoapi/abacusai/model_blueprint_export/index", "autoapi/abacusai/model_blueprint_stage/index", "autoapi/abacusai/model_location/index", "autoapi/abacusai/model_metrics/index", "autoapi/abacusai/model_monitor/index", "autoapi/abacusai/model_monitor_org_summary/index", "autoapi/abacusai/model_monitor_summary/index", "autoapi/abacusai/model_monitor_summary_from_org/index", "autoapi/abacusai/model_monitor_version/index", "autoapi/abacusai/model_monitor_version_metric_data/index", "autoapi/abacusai/model_training_type_for_deployment/index", "autoapi/abacusai/model_upload/index", "autoapi/abacusai/model_version/index", "autoapi/abacusai/modification_lock_info/index", "autoapi/abacusai/module/index", "autoapi/abacusai/monitor_alert/index", "autoapi/abacusai/monitor_alert_version/index", "autoapi/abacusai/natural_language_explanation/index", "autoapi/abacusai/nested_feature/index", "autoapi/abacusai/null_violation/index", "autoapi/abacusai/organization_group/index", "autoapi/abacusai/organization_search_result/index", "autoapi/abacusai/pipeline/index", "autoapi/abacusai/pipeline_reference/index", "autoapi/abacusai/pipeline_step/index", "autoapi/abacusai/pipeline_step_version/index", "autoapi/abacusai/pipeline_step_version_reference/index", "autoapi/abacusai/pipeline_version/index", "autoapi/abacusai/point_in_time_feature/index", "autoapi/abacusai/point_in_time_group/index", "autoapi/abacusai/point_in_time_group_feature/index", "autoapi/abacusai/prediction_client/index", "autoapi/abacusai/prediction_dataset/index", "autoapi/abacusai/prediction_feature_group/index", "autoapi/abacusai/prediction_input/index", "autoapi/abacusai/prediction_metric/index", "autoapi/abacusai/prediction_metric_version/index", "autoapi/abacusai/problem_type/index", "autoapi/abacusai/project/index", "autoapi/abacusai/project_config/index", "autoapi/abacusai/project_dataset/index", "autoapi/abacusai/project_validation/index", "autoapi/abacusai/python_function/index", "autoapi/abacusai/python_function_validator/index", "autoapi/abacusai/python_plot_function/index", "autoapi/abacusai/range_violation/index", "autoapi/abacusai/refresh_pipeline_run/index", "autoapi/abacusai/refresh_policy/index", "autoapi/abacusai/refresh_schedule/index", "autoapi/abacusai/resolved_feature_group_template/index", "autoapi/abacusai/return_class/index", "autoapi/abacusai/schema/index", "autoapi/abacusai/streaming_auth_token/index", "autoapi/abacusai/streaming_client/index", "autoapi/abacusai/streaming_connector/index", "autoapi/abacusai/training_config_options/index", "autoapi/abacusai/type_violation/index", "autoapi/abacusai/upload/index", "autoapi/abacusai/upload_part/index", "autoapi/abacusai/use_case/index", "autoapi/abacusai/use_case_requirements/index", "autoapi/abacusai/user/index", "autoapi/abacusai/user_exception/index", "autoapi/abacusai/vector_store/index", "autoapi/abacusai/vector_store_lookup_result/index", "autoapi/abacusai/vector_store_version/index", "autoapi/abacusai/webhook/index", "index"], "filenames": ["autoapi/abacusai/algorithm/index.rst", "autoapi/abacusai/annotation/index.rst", "autoapi/abacusai/annotation_config/index.rst", "autoapi/abacusai/annotation_entry/index.rst", "autoapi/abacusai/annotations_status/index.rst", "autoapi/abacusai/api_class/abstract/index.rst", "autoapi/abacusai/api_class/dataset/index.rst", "autoapi/abacusai/api_class/enums/index.rst", "autoapi/abacusai/api_class/feature_group/index.rst", "autoapi/abacusai/api_class/index.rst", "autoapi/abacusai/api_class/model/index.rst", "autoapi/abacusai/api_class/python_functions/index.rst", "autoapi/abacusai/api_class/refresh/index.rst", "autoapi/abacusai/api_client_utils/index.rst", "autoapi/abacusai/api_endpoint/index.rst", "autoapi/abacusai/api_key/index.rst", "autoapi/abacusai/application_connector/index.rst", "autoapi/abacusai/batch_prediction/index.rst", "autoapi/abacusai/batch_prediction_version/index.rst", "autoapi/abacusai/categorical_range_violation/index.rst", "autoapi/abacusai/chat_message/index.rst", "autoapi/abacusai/chat_session/index.rst", "autoapi/abacusai/client/index.rst", "autoapi/abacusai/code_source/index.rst", "autoapi/abacusai/concatenation_config/index.rst", "autoapi/abacusai/cryptography/index.rst", "autoapi/abacusai/custom_loss_function/index.rst", "autoapi/abacusai/custom_metric/index.rst", "autoapi/abacusai/custom_metric_version/index.rst", "autoapi/abacusai/custom_train_function_info/index.rst", "autoapi/abacusai/data_consistency_duplication/index.rst", "autoapi/abacusai/data_prep_logs/index.rst", "autoapi/abacusai/data_quality_results/index.rst", "autoapi/abacusai/database_connector/index.rst", "autoapi/abacusai/dataset/index.rst", "autoapi/abacusai/dataset_column/index.rst", "autoapi/abacusai/dataset_version/index.rst", "autoapi/abacusai/deployment/index.rst", "autoapi/abacusai/deployment_auth_token/index.rst", "autoapi/abacusai/document/index.rst", "autoapi/abacusai/document_annotation/index.rst", "autoapi/abacusai/document_store/index.rst", "autoapi/abacusai/document_store_import/index.rst", "autoapi/abacusai/drift_distribution/index.rst", "autoapi/abacusai/drift_distributions/index.rst", "autoapi/abacusai/eda/index.rst", "autoapi/abacusai/eda_chart_description/index.rst", "autoapi/abacusai/eda_collinearity/index.rst", "autoapi/abacusai/eda_data_consistency/index.rst", "autoapi/abacusai/eda_feature_association/index.rst", "autoapi/abacusai/eda_feature_collinearity/index.rst", "autoapi/abacusai/eda_forecasting_analysis/index.rst", "autoapi/abacusai/eda_version/index.rst", "autoapi/abacusai/embedding_feature_drift_distribution/index.rst", "autoapi/abacusai/execute_feature_group_operation/index.rst", "autoapi/abacusai/feature/index.rst", "autoapi/abacusai/feature_distribution/index.rst", "autoapi/abacusai/feature_drift_summary/index.rst", "autoapi/abacusai/feature_group/index.rst", "autoapi/abacusai/feature_group_export/index.rst", "autoapi/abacusai/feature_group_export_config/index.rst", "autoapi/abacusai/feature_group_export_download_url/index.rst", "autoapi/abacusai/feature_group_lineage/index.rst", "autoapi/abacusai/feature_group_metrics/index.rst", "autoapi/abacusai/feature_group_refresh_export_config/index.rst", "autoapi/abacusai/feature_group_template/index.rst", "autoapi/abacusai/feature_group_template_variable_options/index.rst", "autoapi/abacusai/feature_group_version/index.rst", "autoapi/abacusai/feature_importance/index.rst", "autoapi/abacusai/feature_record/index.rst", "autoapi/abacusai/file_connector/index.rst", "autoapi/abacusai/file_connector_instructions/index.rst", "autoapi/abacusai/file_connector_verification/index.rst", "autoapi/abacusai/forecasting_analysis_graph_data/index.rst", "autoapi/abacusai/function_logs/index.rst", "autoapi/abacusai/generated_pit_feature_config_option/index.rst", "autoapi/abacusai/graph_dashboard/index.rst", "autoapi/abacusai/index.rst", "autoapi/abacusai/indexing_config/index.rst", "autoapi/abacusai/item_statistics/index.rst", "autoapi/abacusai/llm_code_block/index.rst", "autoapi/abacusai/llm_input/index.rst", "autoapi/abacusai/llm_parameters/index.rst", "autoapi/abacusai/llm_response/index.rst", "autoapi/abacusai/model/index.rst", "autoapi/abacusai/model_artifacts_export/index.rst", "autoapi/abacusai/model_blueprint_export/index.rst", "autoapi/abacusai/model_blueprint_stage/index.rst", "autoapi/abacusai/model_location/index.rst", "autoapi/abacusai/model_metrics/index.rst", "autoapi/abacusai/model_monitor/index.rst", "autoapi/abacusai/model_monitor_org_summary/index.rst", "autoapi/abacusai/model_monitor_summary/index.rst", "autoapi/abacusai/model_monitor_summary_from_org/index.rst", "autoapi/abacusai/model_monitor_version/index.rst", "autoapi/abacusai/model_monitor_version_metric_data/index.rst", "autoapi/abacusai/model_training_type_for_deployment/index.rst", "autoapi/abacusai/model_upload/index.rst", "autoapi/abacusai/model_version/index.rst", "autoapi/abacusai/modification_lock_info/index.rst", "autoapi/abacusai/module/index.rst", "autoapi/abacusai/monitor_alert/index.rst", "autoapi/abacusai/monitor_alert_version/index.rst", "autoapi/abacusai/natural_language_explanation/index.rst", "autoapi/abacusai/nested_feature/index.rst", "autoapi/abacusai/null_violation/index.rst", "autoapi/abacusai/organization_group/index.rst", "autoapi/abacusai/organization_search_result/index.rst", "autoapi/abacusai/pipeline/index.rst", "autoapi/abacusai/pipeline_reference/index.rst", "autoapi/abacusai/pipeline_step/index.rst", "autoapi/abacusai/pipeline_step_version/index.rst", "autoapi/abacusai/pipeline_step_version_reference/index.rst", "autoapi/abacusai/pipeline_version/index.rst", "autoapi/abacusai/point_in_time_feature/index.rst", "autoapi/abacusai/point_in_time_group/index.rst", "autoapi/abacusai/point_in_time_group_feature/index.rst", "autoapi/abacusai/prediction_client/index.rst", "autoapi/abacusai/prediction_dataset/index.rst", "autoapi/abacusai/prediction_feature_group/index.rst", "autoapi/abacusai/prediction_input/index.rst", "autoapi/abacusai/prediction_metric/index.rst", "autoapi/abacusai/prediction_metric_version/index.rst", "autoapi/abacusai/problem_type/index.rst", "autoapi/abacusai/project/index.rst", "autoapi/abacusai/project_config/index.rst", "autoapi/abacusai/project_dataset/index.rst", "autoapi/abacusai/project_validation/index.rst", "autoapi/abacusai/python_function/index.rst", "autoapi/abacusai/python_function_validator/index.rst", "autoapi/abacusai/python_plot_function/index.rst", "autoapi/abacusai/range_violation/index.rst", "autoapi/abacusai/refresh_pipeline_run/index.rst", "autoapi/abacusai/refresh_policy/index.rst", "autoapi/abacusai/refresh_schedule/index.rst", "autoapi/abacusai/resolved_feature_group_template/index.rst", "autoapi/abacusai/return_class/index.rst", "autoapi/abacusai/schema/index.rst", "autoapi/abacusai/streaming_auth_token/index.rst", "autoapi/abacusai/streaming_client/index.rst", "autoapi/abacusai/streaming_connector/index.rst", "autoapi/abacusai/training_config_options/index.rst", "autoapi/abacusai/type_violation/index.rst", "autoapi/abacusai/upload/index.rst", "autoapi/abacusai/upload_part/index.rst", "autoapi/abacusai/use_case/index.rst", "autoapi/abacusai/use_case_requirements/index.rst", "autoapi/abacusai/user/index.rst", "autoapi/abacusai/user_exception/index.rst", "autoapi/abacusai/vector_store/index.rst", "autoapi/abacusai/vector_store_lookup_result/index.rst", "autoapi/abacusai/vector_store_version/index.rst", "autoapi/abacusai/webhook/index.rst", "index.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.algorithm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.annotation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.annotation_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.annotation_entry</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.annotations_status</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.abstract</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.enums</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.feature_group</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.python_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_class.refresh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_client_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_endpoint</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.api_key</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.application_connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.batch_prediction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.batch_prediction_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.categorical_range_violation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.chat_message</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.chat_session</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.client</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.code_source</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.concatenation_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.cryptography</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.custom_loss_function</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.custom_metric</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.custom_metric_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.custom_train_function_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.data_consistency_duplication</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.data_prep_logs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.data_quality_results</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.database_connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.dataset_column</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.dataset_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.deployment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.deployment_auth_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.document</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.document_annotation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.document_store</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.document_store_import</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.drift_distribution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.drift_distributions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_chart_description</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_collinearity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_data_consistency</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_feature_association</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_feature_collinearity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_forecasting_analysis</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.eda_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.embedding_feature_drift_distribution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.execute_feature_group_operation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_distribution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_drift_summary</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_export</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_export_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_export_download_url</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_lineage</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_refresh_export_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_template</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_template_variable_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_group_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_importance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.feature_record</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.file_connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.file_connector_instructions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.file_connector_verification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.forecasting_analysis_graph_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.function_logs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.generated_pit_feature_config_option</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.graph_dashboard</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.indexing_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.item_statistics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.llm_code_block</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.llm_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.llm_parameters</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.llm_response</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_artifacts_export</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_blueprint_export</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_blueprint_stage</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_location</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor_org_summary</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor_summary</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor_summary_from_org</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_monitor_version_metric_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_training_type_for_deployment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_upload</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.model_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.modification_lock_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.module</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.monitor_alert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.monitor_alert_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.natural_language_explanation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.nested_feature</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.null_violation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.organization_group</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.organization_search_result</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_reference</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_step</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_step_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_step_version_reference</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.pipeline_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.point_in_time_feature</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.point_in_time_group</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.point_in_time_group_feature</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_client</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_feature_group</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_metric</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.prediction_metric_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.problem_type</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.project</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.project_config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.project_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.project_validation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.python_function</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.python_function_validator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.python_plot_function</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.range_violation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.refresh_pipeline_run</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.refresh_policy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.refresh_schedule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.resolved_feature_group_template</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.return_class</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.schema</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.streaming_auth_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.streaming_client</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.streaming_connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.training_config_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.type_violation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.upload</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.upload_part</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.use_case</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.use_case_requirements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.user</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.user_exception</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.vector_store</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.vector_store_lookup_result</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.vector_store_version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abacusai.webhook</span></code>", "Abacus.AI API Client PyDocs"], "terms": {"client": [0, 1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "name": [0, 1, 2, 3, 9, 10, 11, 16, 17, 18, 19, 22, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 58, 64, 65, 67, 68, 73, 74, 75, 76, 77, 84, 86, 87, 88, 90, 94, 95, 98, 100, 101, 102, 104, 105, 106, 108, 110, 111, 113, 114, 115, 116, 117, 123, 124, 126, 128, 129, 130, 131, 133, 135, 137, 139, 140, 141, 142, 145, 146, 147, 149], "none": [0, 1, 2, 3, 4, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "problemtyp": [0, 7, 9, 10, 22, 27, 77, 123, 124, 145], "createdat": [0, 15, 16, 17, 21, 26, 27, 28, 33, 34, 36, 37, 38, 39, 40, 41, 45, 58, 59, 65, 67, 76, 84, 85, 90, 97, 100, 101, 102, 106, 108, 110, 111, 113, 121, 122, 124, 128, 130, 132, 133, 138, 140, 143, 147, 149, 151, 152], "updatedat": [0, 3, 65, 110, 111, 113], "isdefaulten": 0, "traininginputmap": 0, "trainfunctionnam": [0, 22, 77, 84, 124], "predictfunctionnam": [0, 22, 77, 84, 124], "predictmanyfunctionnam": [0, 84], "initializefunctionnam": [0, 84], "configopt": 0, "algorithmid": 0, "usegpu": [0, 84, 98], "codesourc": [0, 23, 26, 28, 58, 67, 84, 98, 100, 128, 130], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "return_class": [0, 1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "abstractapiclass": [0, 1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "custom": [0, 7, 9, 10, 22, 23, 26, 27, 28, 29, 34, 58, 77, 84, 98, 100, 123, 124, 128], "creat": [0, 5, 6, 8, 9, 10, 12, 15, 16, 17, 18, 21, 22, 26, 27, 28, 33, 34, 36, 37, 38, 39, 41, 42, 45, 47, 49, 55, 58, 59, 65, 67, 76, 77, 84, 85, 88, 90, 94, 97, 98, 100, 101, 102, 104, 106, 108, 110, 111, 113, 117, 121, 122, 124, 128, 130, 132, 133, 134, 138, 140, 143, 149, 151, 152], "paramet": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "apicli": [0, 1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "an": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "authent": [0, 1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "api": [0, 1, 2, 3, 4, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "instanc": [0, 1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "str": [0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 70, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "The": [0, 1, 2, 3, 4, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "type": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "problem": [0, 9, 10, 22, 26, 27, 77, 123, 124, 145], "thi": [0, 1, 2, 3, 4, 5, 7, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "work": [0, 22, 77], "when": [0, 8, 9, 10, 15, 16, 17, 18, 22, 25, 26, 27, 28, 33, 34, 36, 37, 38, 41, 45, 58, 61, 65, 67, 70, 77, 84, 90, 97, 100, 106, 108, 110, 111, 117, 121, 122, 124, 128, 130, 132, 133, 134, 138, 140, 141, 143, 147, 149, 151], "wa": [0, 3, 4, 15, 16, 17, 20, 21, 22, 26, 27, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 45, 58, 59, 65, 67, 76, 77, 84, 85, 90, 97, 100, 101, 102, 106, 108, 110, 111, 113, 121, 122, 124, 128, 130, 132, 133, 138, 140, 143, 149, 150, 151, 152], "last": [0, 9, 10, 22, 34, 36, 77, 80, 84, 110, 111, 134, 141, 143], "updat": [0, 3, 4, 17, 22, 37, 58, 65, 76, 77, 84, 98, 101, 108, 110, 111, 113, 128, 133, 139, 149, 152], "bool": [0, 5, 9, 10, 11, 17, 18, 20, 22, 24, 34, 36, 37, 42, 49, 58, 59, 65, 67, 70, 71, 72, 75, 77, 80, 84, 90, 94, 98, 99, 103, 106, 117, 118, 119, 124, 126, 127, 133, 141, 146], "whether": [0, 9, 10, 11, 20, 22, 34, 58, 67, 77, 80, 84, 90, 98, 99, 103, 117, 124], "train": [0, 9, 10, 17, 18, 19, 22, 29, 31, 34, 37, 43, 44, 45, 53, 56, 57, 58, 77, 84, 86, 89, 90, 94, 96, 98, 105, 117, 123, 124, 127, 131, 132, 141, 142, 146], "default": [0, 9, 10, 17, 22, 37, 58, 75, 77, 84, 97, 98, 106, 117, 118, 119, 124, 141, 143, 149], "dict": [0, 1, 2, 3, 4, 5, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "map": [0, 7, 9, 22, 29, 37, 55, 59, 60, 64, 65, 68, 77, 95, 104, 111, 117, 124, 128, 129, 130, 135, 137, 146], "function": [0, 9, 10, 11, 23, 26, 28, 29, 58, 67, 74, 75, 76, 77, 84, 94, 98, 100, 108, 110, 111, 113, 117, 124, 128, 130], "e": [0, 1, 3, 9, 10, 17, 18, 22, 26, 27, 52, 58, 65, 77, 94, 117], "g": [0, 1, 3, 9, 10, 17, 18, 22, 26, 27, 52, 58, 65, 77, 94, 117], "data": [0, 1, 9, 10, 17, 18, 22, 24, 29, 30, 31, 32, 34, 35, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 67, 69, 73, 77, 79, 84, 91, 92, 93, 94, 95, 98, 104, 117, 124, 137, 138, 139, 142, 143], "config": [0, 2, 5, 8, 9, 10, 11, 22, 24, 29, 34, 37, 58, 59, 64, 65, 67, 77, 78, 84, 86, 90, 94, 98, 117, 124, 125, 135, 141], "found": [0, 9, 10, 18, 22, 58, 77, 84, 124, 139, 149], "sourc": [0, 22, 23, 24, 26, 28, 34, 36, 55, 58, 67, 77, 80, 84, 98, 100, 104, 108, 110, 115, 117, 124, 128, 130], "code": [0, 22, 23, 26, 28, 58, 67, 77, 80, 83, 84, 98, 100, 108, 110, 124, 128, 130], "execut": [0, 22, 54, 58, 74, 77, 84, 108, 117, 124, 128, 129, 133, 134], "model": [0, 9, 17, 18, 19, 22, 23, 31, 37, 45, 52, 57, 58, 68, 77, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 105, 109, 112, 117, 118, 119, 121, 124, 131, 132, 133, 139, 141, 142, 143], "It": [0, 9, 10, 22, 34, 58, 77, 84, 86, 117, 124, 143], "i": [0, 1, 3, 9, 10, 11, 17, 18, 22, 23, 25, 27, 34, 36, 37, 38, 42, 45, 49, 52, 54, 58, 59, 60, 61, 64, 65, 67, 74, 77, 80, 84, 85, 86, 89, 90, 94, 98, 99, 101, 102, 103, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 132, 133, 134, 138, 139, 141, 143, 146, 149, 151, 152], "run": [0, 17, 22, 23, 37, 52, 54, 77, 84, 90, 94, 101, 102, 108, 109, 113, 121, 122, 124, 128, 129, 132, 133, 134], "predict": [0, 7, 9, 10, 14, 17, 18, 19, 22, 37, 38, 43, 44, 56, 57, 77, 84, 89, 90, 91, 92, 94, 95, 98, 105, 109, 112, 117, 118, 119, 120, 121, 122, 124, 131, 132, 133, 142, 143], "through": [0, 9, 10, 22, 77, 84, 107, 124], "batch": [0, 9, 10, 17, 18, 22, 37, 77, 84, 90, 94, 109, 112, 118, 119, 120, 124, 132, 143], "initi": [0, 9, 10, 22, 77, 84, 124, 143], "befor": [0, 9, 10, 22, 34, 58, 77, 84, 87, 117, 124, 143], "us": [0, 5, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 22, 25, 26, 27, 34, 37, 38, 40, 42, 55, 58, 59, 60, 61, 64, 65, 67, 76, 77, 78, 84, 86, 88, 91, 95, 96, 97, 98, 100, 104, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 130, 137, 138, 141, 143, 145, 146, 149], "make": [0, 9, 10, 14, 17, 18, 22, 77, 84, 117, 124], "dataset": [0, 9, 10, 17, 22, 35, 36, 42, 58, 62, 67, 68, 77, 84, 98, 109, 112, 117, 118, 119, 120, 121, 124, 126, 127, 132, 133, 138, 143, 146], "uniqu": [0, 15, 16, 17, 18, 22, 26, 27, 28, 33, 34, 35, 36, 37, 38, 41, 42, 45, 52, 55, 58, 59, 60, 64, 65, 67, 76, 77, 84, 85, 90, 94, 97, 98, 99, 100, 101, 102, 104, 106, 108, 113, 117, 118, 119, 121, 122, 124, 126, 128, 130, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 149, 151, 152], "identifi": [0, 9, 10, 16, 17, 18, 22, 26, 27, 28, 33, 34, 36, 37, 41, 42, 45, 52, 58, 59, 60, 64, 65, 67, 76, 77, 84, 85, 90, 94, 97, 98, 99, 100, 101, 102, 106, 108, 113, 117, 118, 119, 121, 122, 124, 128, 130, 132, 133, 134, 135, 139, 140, 143, 144, 149, 151, 152], "gpu": [0, 9, 10, 22, 77, 84, 98, 124], "info": [0, 3, 22, 67, 77, 89, 93, 94, 98, 130], "about": [0, 1, 9, 10, 17, 18, 22, 26, 28, 29, 58, 76, 77, 91, 98, 99, 100, 101, 106, 110, 117, 124, 128, 130], "__repr__": [0, 1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "return": [0, 1, 2, 3, 4, 5, 7, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "repr": [0, 1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "self": [0, 1, 2, 3, 4, 7, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "to_dict": [0, 1, 2, 3, 4, 5, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "get": [0, 1, 2, 3, 4, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "represent": [0, 1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "valu": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "annotationtyp": 1, "annotationvalu": 1, "store": [1, 3, 17, 22, 37, 39, 40, 41, 42, 58, 77, 117, 124, 149, 150, 151], "A": [1, 9, 11, 13, 15, 16, 17, 18, 20, 21, 22, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 71, 76, 77, 78, 83, 84, 85, 87, 90, 91, 92, 93, 94, 97, 98, 101, 102, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 124, 127, 128, 129, 132, 133, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 151, 152], "determin": [1, 9, 10, 22, 34, 58, 68, 77, 98, 117, 121, 124], "how": [1, 9, 10, 22, 29, 34, 43, 44, 51, 56, 65, 77, 124, 126], "interpret": 1, "label": [1, 2, 3, 9, 10, 22, 26, 44, 58, 77, 91, 92, 94, 96, 117, 124], "bound": [1, 22, 34, 40, 58, 77], "box": [1, 7, 9, 22, 34, 40, 49, 77], "etc": [1, 5, 9, 10, 12, 17, 18, 22, 26, 34, 36, 37, 52, 54, 58, 59, 67, 77, 80, 84, 85, 94, 98, 102, 113, 117, 132, 143, 149, 151], "json": [1, 3, 7, 9, 17, 18, 22, 37, 58, 67, 77, 97, 117, 124, 137, 139, 152], "compat": [1, 3, 22, 58, 77, 143], "format": [1, 3, 4, 9, 10, 17, 18, 22, 27, 34, 35, 37, 38, 41, 58, 59, 60, 64, 67, 76, 77, 85, 97, 98, 100, 103, 117, 128, 130, 132, 139, 146], "annotationentri": [3, 22, 58, 77], "featuregroupid": [3, 37, 45, 58, 65, 67, 109, 119, 121, 133], "featurenam": 3, "docid": [3, 22, 77, 117], "featuregrouprowidentifi": 3, "annotationentrymark": 3, "statu": [2, 3, 4, 16, 17, 18, 22, 23, 33, 34, 36, 37, 42, 52, 54, 58, 59, 67, 77, 84, 85, 94, 97, 98, 102, 111, 112, 113, 122, 132, 140, 143, 147, 149, 151], "lockeduntil": 3, "verificationinfo": 3, "annot": [2, 3, 4, 22, 39, 40, 58, 67, 77], "entri": [3, 9, 10, 22, 34, 36, 58, 77, 105], "id": [3, 15, 16, 17, 18, 21, 22, 29, 34, 36, 37, 45, 52, 54, 58, 59, 60, 64, 67, 76, 77, 84, 90, 94, 95, 98, 101, 102, 108, 109, 110, 112, 117, 120, 124, 126, 132, 133, 136, 139, 140, 143, 149, 152], "featur": [1, 2, 3, 4, 8, 9, 10, 17, 18, 19, 22, 23, 24, 29, 34, 35, 37, 43, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 77, 78, 84, 85, 90, 94, 95, 98, 104, 105, 107, 108, 109, 110, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 135, 137, 139, 142, 149, 151], "group": [2, 3, 4, 8, 9, 10, 17, 18, 22, 23, 24, 29, 34, 37, 45, 47, 51, 52, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 78, 84, 85, 90, 94, 95, 98, 99, 104, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 132, 133, 135, 139, 147, 149, 151], "belong": [3, 22, 36, 37, 45, 52, 67, 76, 77, 84, 90, 94, 97, 98, 101, 108, 110, 111, 113, 114, 121, 124, 147], "primari": [3, 22, 30, 48, 51, 58, 77, 78, 124, 147], "document": [3, 4, 9, 10, 22, 34, 40, 41, 42, 58, 77, 84, 108, 110, 117, 124, 126, 137, 149, 150], "kei": [3, 5, 8, 9, 10, 12, 15, 16, 17, 22, 25, 30, 33, 37, 39, 42, 48, 49, 51, 58, 59, 60, 67, 77, 78, 89, 114, 115, 117, 124, 139, 140, 146], "row": [3, 7, 8, 9, 10, 18, 19, 22, 30, 34, 36, 37, 51, 58, 63, 77, 91, 114, 115, 116, 117, 131], "cast": [3, 22, 58, 77], "string": [3, 7, 9, 16, 17, 18, 22, 27, 28, 33, 34, 36, 37, 41, 45, 52, 54, 58, 59, 60, 61, 65, 67, 76, 77, 80, 84, 85, 90, 94, 98, 99, 100, 101, 102, 106, 108, 110, 113, 117, 121, 124, 128, 129, 130, 132, 133, 134, 137, 139, 140, 143, 144, 149, 151, 152], "usual": [3, 22, 58, 77], "most": [3, 9, 10, 19, 22, 77, 117], "recent": [3, 9, 10, 22, 58, 77], "time": [3, 4, 7, 9, 10, 17, 18, 22, 27, 34, 35, 36, 37, 38, 45, 51, 52, 54, 55, 58, 59, 67, 70, 74, 76, 77, 84, 85, 90, 91, 94, 98, 100, 101, 102, 108, 110, 111, 113, 114, 115, 116, 117, 121, 122, 124, 130, 132, 133, 134, 143, 147, 149, 151, 152], "modifi": [3, 22, 58, 77, 99, 106], "creation": [3, 9, 10, 58, 77, 128, 130, 132], "marker": 3, "until": [3, 17, 18, 22, 34, 36, 37, 52, 54, 58, 59, 67, 77, 84, 85, 94, 98, 102, 113, 122, 124, 132, 143, 149, 151], "which": [3, 9, 10, 14, 17, 20, 21, 22, 24, 34, 37, 39, 40, 42, 45, 52, 58, 59, 60, 61, 65, 67, 76, 77, 83, 84, 85, 90, 97, 98, 101, 102, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 123, 124, 133, 139, 143, 151], "lock": [3, 22, 58, 77, 99], "edit": [3, 22, 26, 27, 77, 84, 100], "iso": [3, 4, 17, 27, 28, 33, 37, 38, 41, 59, 61, 76, 85, 97, 98, 100, 128, 130, 132], "8601": [3, 4, 17, 27, 28, 33, 37, 38, 41, 59, 61, 76, 85, 97, 98, 100, 128, 130, 132], "verif": [3, 22, 58, 70, 71, 72, 77, 97], "structur": 3, "hold": [3, 124], "annotationsstatu": [4, 22, 58, 77], "total": [4, 9, 10, 18, 22, 30, 77, 91, 117], "done": [4, 22, 45, 58, 77, 129], "inprogress": 4, "todo": [4, 22, 58, 77], "int": [4, 8, 9, 10, 17, 18, 22, 24, 30, 34, 36, 37, 39, 40, 41, 42, 45, 52, 54, 58, 59, 63, 67, 77, 79, 83, 84, 85, 90, 91, 94, 98, 102, 108, 113, 114, 115, 117, 122, 124, 132, 141, 143, 149, 151], "number": [4, 8, 9, 10, 17, 18, 22, 30, 34, 36, 37, 40, 41, 42, 48, 51, 54, 58, 63, 67, 77, 80, 83, 91, 100, 108, 114, 115, 117, 124, 128, 130, 143, 149], "current": [4, 17, 18, 22, 28, 34, 36, 37, 42, 45, 52, 54, 58, 59, 65, 67, 69, 73, 76, 77, 84, 85, 86, 90, 94, 97, 98, 101, 102, 106, 108, 110, 113, 114, 115, 117, 122, 124, 132, 133, 143, 149, 151, 152], "being": [4, 9, 10, 17, 22, 36, 45, 58, 59, 60, 77, 84, 85, 90, 117, 124, 127, 143, 146], "need": [4, 22, 58, 77, 84, 94, 117, 124, 141], "camel_cas": 5, "apiclass": [5, 6, 8, 9, 10, 11, 12, 77], "abc": [5, 6, 8, 9, 10, 12, 22, 77], "helper": [5, 6, 8, 9, 10, 12, 77, 129], "provid": [5, 6, 8, 9, 10, 12, 16, 17, 20, 22, 29, 37, 52, 58, 65, 77, 84, 88, 94, 108, 115, 117, 124, 149, 152], "standard": [5, 6, 8, 9, 10, 12, 74, 77, 79], "wai": [5, 6, 8, 9, 10, 12, 77], "inherit": [5, 6, 8, 9, 10, 12, 77], "__post_init__": [5, 8, 9, 77], "convert": [5, 9, 12, 22, 58, 77, 114, 116, 128, 129], "dictionari": [1, 5, 9, 10, 12, 22, 58, 77, 93, 117, 128, 129, 139, 146, 152], "respons": [5, 9, 10, 12, 21, 22, 25, 77, 80, 81, 83, 117, 124], "ar": [5, 9, 10, 12, 17, 18, 22, 34, 37, 48, 58, 71, 77, 84, 91, 98, 100, 106, 114, 115, 117, 124, 130, 143], "camel": [5, 9, 12, 77], "case": [5, 9, 12, 17, 22, 34, 37, 49, 58, 77, 123, 124, 126, 137, 145, 146], "also": [5, 9, 10, 12, 22, 77, 84], "valid": [5, 9, 10, 12, 22, 23, 34, 35, 58, 65, 77, 80, 84, 108, 110, 117, 124, 127, 128, 129, 135, 141], "field": [5, 9, 10, 12, 17, 18, 22, 28, 34, 36, 37, 42, 45, 52, 54, 58, 59, 65, 67, 76, 77, 84, 85, 90, 94, 98, 101, 102, 106, 108, 110, 113, 117, 124, 132, 133, 141, 143, 149, 151, 152], "receiv": [5, 9, 12, 22, 58, 77], "classmethod": [5, 9, 77, 129], "from_dict": [5, 9, 77], "input_dict": [5, 9, 77], "_apiclassfactori": [5, 8, 9, 10, 12, 77], "config_abstract_class": [5, 9, 10, 12, 77], "config_class_kei": [5, 8, 9, 10, 12, 77], "config_class_map": [5, 8, 9, 10, 12, 77], "apienum": [7, 9, 77], "gener": [7, 9, 10, 22, 34, 52, 58, 75, 77, 83, 116, 117, 129, 143], "enumer": [7, 9, 30, 41, 77], "deriv": [7, 9, 77], "from": [7, 9, 10, 18, 21, 22, 23, 24, 29, 31, 32, 34, 36, 37, 47, 52, 54, 58, 65, 74, 77, 80, 83, 84, 94, 101, 106, 108, 110, 112, 114, 115, 117, 124, 127, 133, 135, 139, 143, 149], "defin": [7, 9, 22, 26, 28, 58, 77, 84, 98, 106, 124, 134], "new": [7, 9, 16, 17, 22, 33, 34, 37, 45, 58, 65, 77, 84, 86, 90, 106, 124, 132, 139, 140], "__eq__": [7, 9, 77, 136], "other": [7, 9, 22, 36, 77, 90, 95, 108, 124, 136], "__hash__": [7, 9, 77], "hash": [7, 9, 22, 77, 143, 144], "samplingmethodtyp": [7, 8, 9, 77], "n_sampl": [7, 8, 9, 77], "percent_sampl": [7, 8, 9, 77], "samplingconfig": [8, 9, 22, 58, 77], "abstract": [6, 8, 9, 10, 11, 12, 22, 77], "sampl": [7, 8, 9, 10, 22, 30, 58, 68, 77], "nsamplingconfig": [8, 9, 77], "distinct": [8, 9, 77], "column": [8, 9, 10, 13, 17, 18, 22, 34, 35, 36, 37, 44, 49, 51, 55, 57, 58, 59, 60, 63, 64, 67, 73, 77, 84, 89, 98, 104, 117, 124, 127, 146], "includ": [8, 9, 10, 17, 18, 22, 34, 36, 37, 52, 58, 65, 76, 77, 84, 86, 92, 97, 117, 124, 135], "specifi": [8, 9, 10, 15, 17, 18, 19, 22, 24, 33, 34, 36, 37, 44, 45, 52, 53, 56, 57, 58, 65, 67, 68, 77, 84, 90, 94, 98, 106, 108, 110, 113, 114, 115, 117, 124, 131, 139, 141, 143, 149], "sampling_method": [8, 9, 77], "sample_count": [8, 9, 77], "key_column": [8, 9, 77], "list": [2, 7, 8, 9, 10, 12, 16, 17, 18, 19, 20, 22, 23, 30, 31, 32, 33, 34, 35, 37, 45, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 62, 63, 64, 65, 66, 67, 71, 73, 76, 77, 78, 83, 84, 87, 89, 90, 92, 93, 94, 95, 98, 99, 106, 108, 110, 111, 113, 114, 115, 117, 120, 121, 123, 124, 127, 128, 129, 132, 133, 137, 139, 141, 143, 146, 147, 149], "": [8, 9, 17, 18, 22, 28, 34, 36, 37, 45, 52, 54, 55, 58, 59, 65, 67, 69, 70, 76, 77, 84, 85, 90, 91, 94, 98, 99, 101, 102, 104, 106, 108, 110, 111, 113, 115, 117, 124, 126, 132, 133, 137, 143, 147, 149, 151, 152], "enum": [8, 9, 10, 11, 12, 17, 22, 33, 34, 67, 77, 98, 106, 122, 124, 145, 146], "percentsamplingconfig": [8, 9, 77], "fraction": [8, 9, 10, 22, 77, 117], "sample_perc": [8, 9, 77], "float": [7, 8, 9, 10, 19, 22, 57, 58, 77, 79, 105, 107, 114, 115, 117, 131, 137, 141, 150], "percentag": [7, 8, 9, 10, 77, 79, 91], "_samplingconfigfactori": [8, 9, 77], "feature_group": [7, 9, 17, 18, 22, 77, 124, 128], "invalid_pandas_column_name_charact": 13, "za": 13, "z0": 13, "9_": 13, "clean_column_nam": [13, 22, 77], "get_clean_function_source_cod": 13, "func": 13, "callabl": [13, 22, 77, 124], "apikei": [15, 22, 77], "apikeyid": 15, "tag": [15, 22, 58, 77, 124], "request": [14, 15, 17, 22, 37, 38, 58, 77, 117, 124, 138, 139, 152], "abacu": [9, 10, 15, 16, 17, 20, 21, 22, 33, 34, 37, 58, 70, 71, 72, 77, 84, 117, 124, 126, 129, 137, 139, 140, 143, 147, 152], "ai": [9, 10, 15, 16, 17, 22, 33, 34, 37, 58, 70, 71, 72, 77, 84, 117, 124, 126, 129, 137, 139, 140, 143, 147, 152], "scope": [15, 22, 77, 124], "specif": [15, 22, 34, 36, 58, 67, 77, 106, 117, 121, 122, 124, 125, 146], "organ": [15, 22, 34, 58, 65, 77, 91, 93, 99, 106, 124, 147], "partial": 15, "obscur": 15, "user": [9, 10, 15, 16, 22, 33, 37, 45, 58, 65, 66, 76, 77, 84, 90, 96, 98, 99, 101, 102, 106, 108, 110, 117, 124, 133, 140, 145, 146], "friendli": [15, 16, 22, 33, 37, 45, 58, 65, 76, 77, 84, 90, 101, 102, 133, 140, 145, 146], "timestamp": [7, 9, 10, 15, 20, 21, 22, 24, 34, 35, 36, 39, 40, 41, 42, 51, 58, 59, 67, 77, 78, 85, 97, 114, 115, 117, 124, 137, 143], "delet": [15, 16, 17, 22, 33, 34, 37, 45, 48, 52, 58, 65, 76, 77, 84, 90, 94, 98, 101, 106, 108, 110, 124, 133, 139, 140, 149, 152], "api_key_id": [15, 22, 77], "applicationconnector": [16, 22, 77], "applicationconnectorid": [16, 23, 34], "servic": [9, 10, 16, 22, 33, 34, 70, 77, 117, 140], "auth": [16, 33, 70, 140], "connector": [16, 17, 18, 22, 23, 33, 34, 37, 58, 59, 60, 64, 67, 70, 72, 77, 84, 85, 140], "extern": [9, 10, 16, 22, 33, 34, 64, 70, 77, 95, 140], "connect": [16, 17, 18, 22, 33, 37, 59, 62, 64, 77, 112, 140], "applic": [7, 9, 16, 22, 23, 26, 27, 34, 58, 70, 77, 84, 117, 124, 133], "non": [16, 33, 140], "secret": [16, 33, 140], "inform": [16, 17, 18, 22, 26, 28, 29, 33, 34, 35, 37, 55, 58, 60, 66, 67, 76, 77, 84, 88, 91, 92, 93, 98, 99, 100, 101, 106, 110, 117, 124, 128, 137, 140, 148], "renam": [16, 17, 22, 33, 37, 45, 77, 84, 90, 124, 140], "application_connector_id": [16, 22, 58, 77, 84], "list_object": [16, 33], "querabl": [16, 22, 33, 77], "object": [9, 10, 16, 17, 18, 22, 28, 33, 34, 36, 37, 45, 52, 54, 58, 59, 60, 64, 65, 67, 71, 76, 77, 81, 84, 85, 90, 92, 93, 94, 98, 99, 101, 102, 103, 106, 107, 108, 109, 110, 112, 113, 117, 124, 128, 129, 132, 133, 134, 139, 143, 149, 151, 152], "verifi": [16, 22, 25, 33, 70, 71, 72, 77, 140], "check": [16, 22, 33, 37, 77, 117, 140], "can": [9, 10, 14, 16, 22, 33, 37, 58, 65, 66, 73, 77, 84, 86, 114, 116, 117, 123, 124, 132, 133, 135, 140, 146], "access": [16, 22, 33, 71, 77, 117, 140, 149], "batchpredict": [17, 22, 37, 77, 124, 132], "batchpredictionid": [17, 18, 90, 112, 143], "deploymentid": [17, 18, 37, 109, 133, 152], "fileconnectoroutputloc": [17, 18], "globalpredictionarg": [17, 18], "databaseconnectorid": [17, 18, 22, 33, 34, 37, 59, 60, 77], "databaseoutputconfigur": [17, 18], "explan": [17, 18, 22, 37, 58, 77, 84, 103, 117], "fileoutputformat": [17, 18], "connectortyp": [7, 9, 12, 17, 18, 34, 59, 64, 77], "legacyinputloc": [17, 18], "featuregrouptablenam": [17, 34, 126], "summaryfeaturegrouptablenam": 17, "csvinputprefix": [17, 18], "csvpredictionprefix": [17, 18], "csvexplanationsprefix": [17, 18], "outputincludesmetadata": [17, 18], "resultinputcolumn": [17, 18], "modelmonitorid": [17, 90, 94, 101, 109, 121, 133], "modelvers": [17, 18, 22, 37, 77, 84, 85, 86, 89, 94, 97, 98, 112, 124, 132, 143], "algorithm": [9, 10, 17, 18, 22, 37, 74, 77, 84, 98, 100, 123, 124, 128, 130], "batchinput": [17, 18], "latestbatchpredictionvers": 17, "refreshschedul": [17, 34, 37, 45, 58, 84, 90, 121, 134], "given": [9, 10, 17, 18, 22, 28, 34, 36, 37, 45, 50, 52, 54, 58, 59, 67, 76, 77, 82, 84, 85, 90, 93, 94, 98, 101, 102, 108, 110, 113, 117, 122, 124, 128, 129, 132, 133, 139, 143, 149, 151, 152], "deploy": [14, 17, 18, 22, 38, 58, 67, 77, 84, 94, 96, 98, 109, 112, 117, 124, 132, 133, 149, 151, 152], "contain": [2, 17, 18, 22, 30, 37, 48, 58, 59, 62, 73, 76, 77, 84, 98, 101, 106, 107, 108, 110, 114, 115, 117, 124, 139, 143], "where": [9, 10, 17, 18, 22, 37, 55, 58, 77, 94, 98, 117, 124], "written": [17, 18, 59, 60, 85], "argument": [9, 11, 17, 18, 22, 34, 37, 58, 77, 84, 108, 110, 117, 124, 128, 129], "pass": [9, 10, 17, 18, 22, 23, 37, 70, 71, 72, 77, 106, 117, 124, 128, 129], "everi": [17, 18, 22, 37, 58, 77, 117], "call": [14, 17, 18, 22, 28, 29, 34, 36, 37, 45, 52, 54, 58, 59, 65, 67, 76, 77, 84, 85, 90, 94, 96, 98, 101, 102, 106, 108, 110, 113, 122, 124, 132, 133, 143, 149, 151, 152], "databas": [7, 9, 17, 18, 22, 33, 34, 37, 59, 60, 64, 67, 77, 140], "write": [17, 18, 22, 37, 59, 60, 64, 67, 70, 71, 72, 77], "result": [9, 10, 17, 18, 22, 32, 37, 54, 58, 70, 77, 81, 84, 98, 102, 107, 117, 124, 127, 128, 129, 135, 149, 150], "If": [9, 10, 17, 18, 22, 23, 24, 34, 36, 37, 42, 58, 59, 65, 67, 77, 84, 98, 106, 114, 115, 117, 118, 119, 124, 128, 129, 134, 141, 143, 146, 149, 152], "true": [9, 10, 17, 18, 22, 24, 34, 37, 58, 59, 65, 67, 70, 71, 72, 77, 84, 94, 98, 106, 117, 118, 119, 124, 126, 127, 133, 141, 146], "each": [9, 10, 17, 18, 22, 29, 35, 37, 52, 53, 56, 58, 63, 73, 76, 77, 84, 86, 91, 92, 98, 108, 110, 117, 124, 137, 139, 143, 146], "output": [17, 18, 22, 37, 77, 94, 111, 112], "csv": [17, 18, 22, 34, 37, 58, 77, 97], "null": [17, 18, 51, 57, 68, 105, 134, 137], "intern": [17, 18, 23, 95], "consol": [17, 18, 22, 67, 77], "els": [17, 18, 22, 77, 117, 147], "file_connector": [17, 18, 77], "database_connector": [17, 18, 77], "locat": [9, 10, 12, 17, 18, 22, 34, 37, 59, 60, 61, 64, 67, 77, 84, 85, 88, 98, 117, 129], "input": [9, 10, 17, 18, 22, 37, 58, 77, 81, 82, 84, 97, 98, 116, 117, 118, 119, 120, 121, 122, 124, 128, 129, 141], "tabl": [9, 10, 17, 22, 34, 37, 43, 55, 58, 67, 77, 98, 104, 114, 115, 124, 126], "metric": [9, 10, 17, 22, 27, 28, 37, 43, 63, 77, 84, 89, 90, 94, 95, 98, 121, 122, 124, 132, 133], "summari": [17, 19, 22, 56, 57, 77, 90, 91, 92, 93, 105, 117, 131, 142], "prefix": [17, 18, 22, 37, 77], "prepend": [17, 18, 22, 37, 77, 129], "onli": [9, 10, 17, 18, 22, 34, 37, 58, 77, 84, 98, 100, 117, 124, 128, 130, 133, 139], "appli": [9, 10, 17, 18, 22, 37, 45, 58, 77, 84, 90, 117, 124, 133, 135], "start": [7, 9, 10, 17, 18, 22, 34, 37, 45, 52, 58, 74, 77, 80, 84, 90, 94, 98, 102, 114, 115, 117, 122, 132], "version": [9, 10, 17, 18, 22, 27, 28, 34, 36, 37, 42, 45, 47, 48, 50, 51, 52, 58, 59, 61, 67, 77, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 107, 108, 111, 112, 113, 118, 119, 121, 122, 124, 132, 134, 143, 146, 149, 151], "present": [17, 18, 19, 22, 34, 37, 58, 77, 117, 124], "limit": [9, 10, 17, 18, 22, 34, 37, 45, 58, 77, 84, 90, 108, 117, 124, 149], "file": [7, 9, 10, 17, 18, 22, 34, 36, 37, 39, 58, 59, 60, 64, 67, 70, 72, 77, 84, 85, 97, 98, 108, 110, 124, 143], "monitor": [17, 18, 19, 22, 45, 52, 57, 68, 77, 90, 91, 92, 93, 94, 95, 101, 102, 105, 109, 112, 121, 124, 131, 132, 133, 142], "deploi": [17, 18, 22, 37, 77, 84, 117, 124, 149], "predictioninput": [17, 18, 120], "batchpredictionvers": [17, 18, 22, 77, 94], "latest": [4, 9, 10, 17, 22, 27, 34, 37, 45, 47, 50, 51, 58, 77, 84, 90, 101, 108, 121, 149], "refresh": [9, 17, 18, 22, 28, 34, 36, 37, 45, 52, 54, 58, 59, 64, 65, 67, 76, 77, 84, 85, 90, 94, 98, 101, 102, 106, 108, 110, 113, 124, 132, 133, 134, 143, 149, 151, 152], "schedul": [17, 22, 34, 37, 45, 58, 77, 84, 90, 108, 121, 124, 133, 134], "dictat": 17, "next": [9, 10, 17, 22, 34, 45, 58, 77, 84, 90, 108, 121, 133, 134], "job": [17, 18, 22, 37, 59, 77, 85, 121, 122, 124], "descript": [9, 10, 17, 22, 34, 35, 36, 37, 45, 46, 52, 57, 58, 65, 71, 73, 75, 77, 84, 85, 86, 87, 90, 94, 95, 98, 101, 102, 105, 108, 109, 113, 114, 121, 122, 123, 124, 126, 128, 137, 141, 145, 146], "batch_prediction_id": [7, 9, 17, 22, 77, 124], "method": [9, 10, 17, 22, 34, 58, 68, 77, 84, 98, 117, 124, 139], "describ": [17, 18, 22, 23, 28, 34, 36, 37, 44, 45, 47, 48, 50, 52, 54, 56, 58, 59, 65, 67, 76, 77, 84, 85, 90, 94, 98, 101, 102, 106, 108, 110, 113, 117, 124, 128, 132, 133, 134, 143, 149, 151, 152], "associ": [17, 21, 22, 34, 36, 37, 38, 45, 49, 52, 58, 65, 67, 77, 84, 90, 94, 101, 102, 117, 124, 126, 132, 133, 143, 149, 151], "list_vers": [17, 34, 45, 58, 84, 90, 108, 149], "100": [9, 10, 17, 22, 34, 45, 58, 77, 84, 90, 124, 149], "start_after_vers": [17, 22, 34, 45, 58, 77, 84, 90, 149], "retriev": [17, 22, 25, 34, 36, 37, 45, 52, 58, 77, 84, 90, 94, 98, 107, 117, 124, 132, 133, 143, 149], "after": [9, 10, 17, 22, 34, 37, 45, 58, 77, 84, 90, 117, 124], "deployment_id": [7, 9, 17, 22, 37, 77, 84, 117, 124], "global_prediction_arg": [17, 22, 37, 77], "output_format": [17, 22, 37, 77], "csv_input_prefix": [17, 22, 37, 77], "csv_prediction_prefix": [17, 22, 37, 77], "csv_explanations_prefix": [17, 22, 37, 77], "output_includes_metadata": [17, 22, 37, 77], "result_input_column": [17, 22, 37, 77], "shap": [17, 22, 37, 68, 77, 117], "support": [9, 10, 17, 22, 34, 37, 58, 59, 60, 67, 77, 84, 95, 98, 117, 123, 124, 143], "set": [9, 10, 17, 22, 34, 37, 58, 67, 77, 84, 94, 98, 106, 117, 124, 127], "set_file_connector_output": 17, "output_loc": [17, 22, 37, 59, 60, 77, 98], "configur": [17, 22, 37, 45, 58, 60, 64, 77, 84, 86, 90, 94, 98, 101, 102, 116, 117, 124, 133, 139], "set_database_connector_output": 17, "database_connector_id": [9, 12, 17, 22, 33, 34, 37, 67, 77], "database_output_config": [17, 22, 37, 77], "pair": [17, 22, 32, 37, 59, 60, 67, 77, 89, 117, 124, 146], "set_feature_group_output": 17, "table_nam": [17, 22, 37, 58, 67, 77, 98], "ha": [9, 10, 17, 22, 34, 37, 44, 51, 56, 58, 70, 71, 72, 77, 84, 98, 99, 106, 117, 124, 128, 129, 132, 133, 147], "been": [9, 10, 17, 22, 34, 37, 51, 58, 77, 124, 133, 143], "set_output_to_consol": 17, "clear": [17, 22, 77], "both": [17, 22, 77, 117], "set_dataset": 17, "dataset_typ": [17, 22, 34, 77], "dataset_id": [7, 9, 17, 22, 34, 77, 124], "deprec": [17, 22, 34, 58, 77, 117, 124], "legaci": [17, 22, 77], "project": [17, 21, 22, 34, 37, 45, 58, 59, 62, 76, 77, 84, 90, 94, 101, 117, 121, 125, 126, 127, 133, 137, 141, 145, 146], "set_feature_group": 17, "feature_group_typ": [17, 22, 58, 77], "feature_group_id": [7, 9, 17, 22, 58, 77, 84, 124, 139, 149], "repres": [17, 22, 34, 49, 51, 73, 77, 117, 124, 128, 133], "under": [17, 22, 58, 77, 94, 98, 117, 124], "catalog": [9, 10, 17, 22, 77, 97, 117, 139], "attribut": [9, 10, 17, 34, 36, 58, 117, 124, 129, 136], "person": [7, 9, 10, 17, 22, 77, 117], "recommend": [9, 10, 17, 22, 77, 117, 124], "set_dataset_remap": 17, "dataset_id_remap": [17, 22, 77], "For": [17, 22, 37, 44, 49, 56, 58, 59, 60, 67, 77, 84, 98, 108, 110, 117, 124], "purpos": [17, 22, 77, 84, 124, 143], "swap": [17, 22, 77, 120], "out": [9, 10, 17, 18, 22, 34, 36, 37, 52, 54, 58, 59, 67, 68, 74, 77, 84, 85, 94, 98, 102, 113, 117, 122, 132, 143, 149, 151], "replac": [17, 22, 24, 58, 65, 77, 120, 135], "dure": [9, 10, 17, 22, 31, 77, 84, 98, 117, 124, 135], "wait_for_predict": [17, 18], "timeout": [17, 18, 22, 34, 36, 37, 52, 54, 58, 59, 67, 77, 84, 85, 94, 98, 102, 113, 122, 132, 143, 149, 151], "86400": [17, 18], "wait": [17, 18, 22, 34, 36, 37, 52, 54, 58, 59, 67, 77, 84, 85, 94, 98, 102, 113, 122, 132, 143, 149, 151], "readi": [17, 18, 52, 58, 94, 102, 122, 127, 149, 151], "option": [2, 9, 10, 17, 18, 22, 34, 35, 36, 37, 52, 54, 58, 59, 66, 67, 71, 75, 77, 84, 85, 94, 95, 98, 102, 113, 114, 115, 117, 122, 123, 124, 132, 139, 141, 143, 149, 151], "finish": [17, 18, 22, 34, 36, 37, 52, 54, 58, 59, 67, 77, 84, 85, 94, 98, 102, 113, 122, 132, 143, 149, 151], "doesn": [17, 18, 34, 36, 37, 52, 54, 58, 59, 67, 84, 85, 94, 98, 102, 113, 122, 132, 142, 143, 149, 151], "t": [17, 18, 22, 34, 36, 37, 52, 54, 58, 59, 67, 77, 84, 85, 94, 98, 102, 113, 117, 122, 132, 142, 143, 149, 151], "alloc": [17, 18, 22, 34, 36, 37, 52, 54, 58, 59, 67, 77, 84, 85, 94, 98, 102, 113, 122, 124, 132, 143, 149, 151], "said": [17, 18, 34, 36, 37, 52, 54, 58, 59, 67, 84, 85, 94, 98, 102, 113, 122, 132, 143, 149, 151], "wait_for_drift_monitor": [17, 18], "drift": [17, 18, 22, 43, 44, 53, 57, 77, 90, 91, 92, 93, 94, 124], "calcul": [17, 18, 22, 77, 98, 124], "get_statu": [17, 18, 34, 36, 37, 52, 54, 58, 59, 67, 84, 85, 94, 98, 102, 113, 122, 132, 143, 149, 151], "pend": [17, 18, 22, 37, 52, 54, 58, 59, 67, 77, 84, 85, 94, 98, 102, 113, 132, 143, 149, 151], "complet": [17, 18, 22, 34, 36, 37, 52, 54, 58, 59, 67, 77, 84, 85, 94, 98, 102, 113, 122, 132, 143, 149, 151], "create_refresh_polici": [17, 22, 34, 37, 77, 84], "cron": [17, 22, 34, 37, 77, 84, 108, 124, 133, 134], "To": [17, 34, 37, 72, 84], "polici": [17, 22, 34, 36, 37, 71, 77, 84, 108, 124, 132, 133, 134], "style": [17, 22, 34, 37, 77, 84, 108, 117, 124, 133, 134], "refreshpolici": [17, 22, 34, 37, 77, 84, 124, 132, 133], "list_refresh_polici": [17, 22, 34, 37, 77, 84, 124], "describe_output_feature_group": 17, "featuregroup": [17, 22, 34, 58, 67, 77, 84, 98, 107, 120, 124, 133], "driftmonitorstatu": 18, "modelid": [18, 37, 84, 89, 90, 97, 98, 109, 133, 143], "predictionsstartedat": 18, "predictionscompletedat": 18, "databaseoutputerror": [18, 59], "totalpredict": 18, "failedpredict": 18, "error": [7, 9, 18, 22, 23, 36, 37, 42, 52, 54, 58, 59, 67, 71, 74, 77, 94, 98, 102, 111, 112, 113, 122, 127, 128, 129, 134, 135, 148], "driftmonitorerror": 18, "monitorwarn": 18, "databaseoutputtotalwrit": 18, "databaseoutputfailedwrit": 18, "modelmonitorvers": [18, 22, 77, 90, 94, 95, 102, 112], "algonam": [18, 37, 95], "date": [9, 10, 18, 22, 27, 37, 38, 45, 52, 76, 77, 84, 90, 94, 98, 100, 101, 102, 108, 110, 111, 113, 117, 121, 122, 124, 130, 137, 147, 152], "were": [18, 59, 112, 122], "report": [18, 59], "while": [9, 10, 18, 22, 59, 77, 128, 129, 143], "perform": [18, 22, 24, 37, 58, 77, 91, 98, 114, 115, 117, 124], "fail": [18, 22, 23, 36, 37, 42, 52, 54, 59, 67, 77, 91, 94, 98, 102, 111, 113, 122, 143], "relev": [9, 10, 18, 22, 37, 52, 58, 67, 77, 94, 98, 102, 107, 113, 117, 122, 149], "messag": [18, 20, 22, 23, 54, 58, 71, 77, 111, 112, 117, 134, 135], "predcit": 18, "warn": [18, 23], "issu": 18, "integr": [18, 22, 57, 77, 90, 92, 93], "attempt": [18, 22, 34, 77], "mai": [18, 22, 34, 58, 77, 117], "less": [9, 10, 18, 22, 58, 77, 117], "than": [9, 10, 18, 22, 58, 77], "total_predict": 18, "mode": [9, 10, 12, 18, 22, 37, 64, 77], "upsert": [18, 22, 37, 59, 60, 64, 67, 77, 139], "multipl": [9, 10, 18, 22, 77, 108, 124, 132, 139, 146], "share": [18, 84], "same": [9, 10, 18, 22, 42, 58, 77, 84, 115, 117, 124, 143], "get_outliers_for_batch_prediction_featur": [18, 22, 77], "feature_nam": [18, 22, 52, 58, 77, 94, 124], "nested_feature_nam": [18, 22, 58, 77, 94], "outlier": [9, 10, 18, 22, 77, 94], "measur": [18, 22, 43, 57, 77, 94], "singl": [18, 20, 22, 56, 77, 78, 94, 124, 132, 133], "overal": [18, 22, 57, 77, 94, 132], "view": [18, 22, 77, 94, 106], "distribut": [9, 10, 18, 19, 22, 43, 51, 53, 56, 57, 77, 94, 117, 131], "nest": [18, 22, 55, 57, 58, 77, 94, 104, 117, 124], "download_batch_prediction_result_chunk": [18, 22, 77], "offset": [18, 22, 58, 77, 114, 115, 124, 149], "0": [18, 22, 34, 47, 58, 77, 84, 108, 110, 114, 115, 117, 124], "chunk_siz": [18, 22, 77], "10485760": [18, 22, 77], "stream": [7, 9, 18, 22, 34, 37, 58, 59, 77, 126, 138, 139, 140], "read": [18, 22, 77], "maximum": [9, 10, 18, 22, 34, 45, 58, 77, 84, 90, 108, 124, 131], "amount": [9, 10, 18, 22, 51, 77, 117], "get_batch_prediction_connector_error": [18, 22, 77], "ani": [9, 10, 11, 18, 22, 37, 58, 59, 77, 98, 117, 121, 128, 129], "download_result_to_fil": 18, "download": [18, 22, 59, 61, 77], "local": [9, 10, 18, 22, 34, 77, 128, 129], "open": 18, "binari": [18, 22, 77, 117], "tmp": 18, "wb": 18, "drift_monitor_statu": 18, "fals": [18, 22, 37, 42, 58, 67, 77, 84, 94, 98, 117, 124, 127], "categoricalrangeviol": [19, 57], "mostcommonvalu": 19, "freqoutsidetrainingrang": 19, "import": [19, 22, 34, 36, 42, 57, 58, 68, 77, 84, 98, 108, 110, 124, 129, 131, 142], "rang": [9, 10, 19, 22, 44, 53, 56, 57, 58, 77, 117, 131], "mismatch": [19, 57, 131, 142], "numer": [9, 10, 19, 22, 49, 56, 57, 77, 124, 131, 137], "discov": [19, 105, 131, 142], "common": [19, 123], "frequenc": [9, 10, 19, 22, 35, 51, 57, 77, 105, 108, 124, 131, 133], "outsid": 19, "default_serv": [22, 77], "http": [22, 34, 37, 58, 77, 126, 137, 152], "_requests_retry_sess": 22, "retri": [22, 143], "5": [7, 9, 10, 22, 77, 117], "backoff_factor": 22, "1": [9, 10, 22, 58, 77, 84, 108, 110, 117, 124, 143], "status_forcelist": 22, "502": 22, "504": 22, "session": [9, 10, 21, 22, 77, 124], "_discover_service_url": 22, "service_discovery_url": 22, "client_vers": 22, "deployment_token": [22, 77, 117, 149], "_get_service_discovery_url": [], "clientopt": [22, 77, 117, 139], "exception_on_404": [22, 77], "server": [22, 77], "rais": [22, 25, 77, 91, 128, 129, 143], "except": [22, 74, 77, 128, 129, 143, 148], "404": [22, 77], "endpoint": [14, 22, 37, 77, 152], "apiexcept": [22, 77], "http_statu": [22, 77], "__str__": [22, 77], "baseapicli": [22, 77, 117, 139], "api_kei": [22, 77, 106], "client_opt": [22, 77, 117, 139], "skip_version_check": [22, 77], "url": [22, 59, 61, 77, 124, 137], "send": [22, 37, 77, 152], "requet": [22, 77], "skip": [9, 10, 22, 42, 58, 77], "51": [], "_clean_api_object": 22, "obj": 22, "_call_api": 22, "action": [9, 10, 22, 77, 101, 102, 124, 152], "query_param": 22, "bodi": [22, 37, 77, 117, 152], "parse_typ": 22, "streamable_respons": 22, "server_overrid": 22, "_build_class": 22, "_request": 22, "header": [22, 58, 77], "_poll": 22, "wait_stat": [22, 37], "delai": [22, 54, 58, 77, 114, 115], "15": [22, 77, 117], "300": 22, "poll_arg": 22, "status_field": 22, "_validate_pandas_df": 22, "df": [22, 77], "_upload_from_panda": 22, "upload": [9, 10, 22, 34, 36, 42, 58, 77, 84, 97, 117], "_upload_from_spark": 22, "readonlycli": [22, 77], "list_api_kei": [22, 77], "all": [9, 10, 22, 34, 37, 41, 45, 47, 48, 49, 50, 52, 58, 62, 77, 84, 90, 98, 106, 113, 117, 124, 129, 149], "list_organization_us": [22, 77], "who": [22, 58, 77, 106], "have": [9, 10, 22, 37, 43, 58, 77, 98, 113, 117, 124, 143], "invit": [22, 77, 147], "arrai": [22, 34, 58, 77, 84, 124], "describe_us": [22, 77], "email": [22, 58, 77, 99, 106, 124, 137, 147], "address": [22, 58, 70, 77, 117, 147], "admin": [22, 77, 106], "list_organization_group": [22, 77], "within": [22, 30, 48, 49, 52, 58, 77, 117], "organizationgroup": [22, 58, 77, 99, 106, 147], "describe_organization_group": [22, 77], "organization_group_id": [22, 58, 77, 106], "describe_webhook": [22, 77], "webhook_id": [22, 77, 152], "webhook": [22, 37, 77], "target": [9, 10, 22, 37, 51, 57, 58, 77, 89, 124, 152], "list_deployment_webhook": [22, 77], "attach": [22, 34, 37, 58, 77, 108, 124, 152], "list_use_cas": [22, 77], "usecas": [22, 34, 77, 124, 126, 137, 145], "platform": [22, 77, 124], "detail": [9, 10, 22, 58, 77, 94, 126, 137, 143], "pleas": [22, 77], "refer": [22, 34, 35, 36, 45, 52, 58, 76, 77, 94, 97, 98, 108, 109, 110, 111, 112, 113, 117, 124, 137, 143], "describe_problem_typ": [22, 77], "problem_typ": [9, 10, 22, 77], "requir": [9, 11, 22, 23, 34, 58, 67, 77, 84, 97, 108, 110, 117, 118, 119, 123, 124, 141, 146], "describe_use_case_requir": [22, 77], "use_cas": [22, 77], "whose": [9, 10, 22, 58, 77, 139], "along": [9, 10, 22, 58, 77, 124], "usecaserequir": [22, 77, 146], "describe_project": [22, 77], "project_id": [22, 34, 58, 77, 108, 124], "list_project": [22, 77], "start_after_id": [22, 77, 124], "length": [7, 9, 10, 22, 34, 45, 51, 58, 77, 84, 90, 115], "log": [7, 9, 10, 22, 31, 67, 74, 77, 89, 94, 98], "list_project_dataset": [22, 77], "its": [22, 34, 36, 37, 45, 51, 58, 77, 84, 85, 90, 98, 99, 107, 117, 124, 139], "projectdataset": [22, 77, 124, 126], "get_schema": [22, 34, 58, 77, 124], "schema": [22, 33, 34, 35, 36, 58, 63, 77, 124], "consist": [22, 30, 45, 48, 52, 77, 124], "validate_project": [22, 77], "miss": [9, 10, 22, 51, 77, 79, 124, 128, 129], "projectvalid": [22, 77, 124, 127], "verify_and_describe_annot": [22, 58, 77], "doc_id": [22, 58, 77, 117], "feature_group_row_identifi": [22, 58, 77], "At": [22, 58, 77], "least": [22, 58, 77, 143], "one": [22, 23, 58, 77, 86, 90, 98, 117, 124, 133, 149], "must": [9, 10, 22, 58, 77, 115, 117, 143], "order": [22, 50, 55, 58, 73, 77, 115, 117, 143], "correct": [22, 58, 77], "get_annotations_statu": [22, 58, 77], "get_feature_group_schema": [22, 77], "describe_feature_group": [22, 34, 77, 124], "describe_feature_group_by_table_nam": [22, 77], "look": [22, 34, 58, 77, 114, 115, 150], "up": [22, 24, 34, 77, 117, 124, 128, 130, 143, 149, 150], "list_feature_group": [22, 77, 124], "feature_group_template_id": [22, 65, 77], "is_including_detached_from_templ": [22, 77], "exclud": [9, 10, 22, 58, 77, 117, 124, 149], "templat": [22, 37, 58, 65, 66, 77, 124, 135, 152], "detach": [22, 58, 77], "list_project_feature_group": [22, 77], "filter_feature_group_us": [22, 77, 124], "filter": [9, 10, 22, 34, 58, 77, 124], "allow": [9, 10, 22, 58, 77, 84, 99, 100, 108, 110, 117, 124, 128, 130], "thei": [9, 10, 22, 37, 58, 77, 84, 124], "possibl": [22, 75, 77, 117, 124, 126, 137], "data_wrangl": [22, 77, 124], "training_input": [22, 77, 124], "batch_prediction_input": [22, 77, 124], "batch_prediction_output": [22, 77, 124], "list_python_function_feature_group": [22, 77], "python": [9, 11, 22, 23, 58, 67, 76, 77, 80, 84, 98, 100, 108, 110, 111, 124, 128, 129, 130], "get_feature_group_version_export_download_url": [22, 59, 77], "feature_group_export_id": [22, 59, 77], "link": [22, 59, 77], "export": [9, 10, 22, 37, 58, 59, 60, 61, 64, 67, 77, 84, 85, 87, 98, 133], "sign": [22, 59, 77], "expir": [22, 59, 61, 70, 77], "featuregroupexportdownloadurl": [22, 59, 61, 77], "describe_feature_group_export": [22, 77], "featuregroupexport": [22, 58, 59, 67, 77], "list_feature_group_export": [22, 77], "get_feature_group_export_connector_error": [22, 77], "io": [22, 58, 77, 117, 143], "bytesio": [22, 77, 117, 143], "list_feature_group_modifi": [22, 77], "modif": [22, 58, 77, 99], "ad": [22, 58, 77, 106, 117, 128, 143], "modificationlockinfo": [22, 58, 77, 99], "get_materialization_log": [22, 67, 77], "feature_group_vers": [22, 37, 58, 77], "stdout": [22, 67, 74, 77, 94, 98], "stderr": [22, 67, 74, 77, 94, 98], "materi": [22, 24, 58, 67, 77, 84, 124], "functionlog": [22, 67, 74, 77, 94, 98], "list_feature_group_vers": [22, 77], "featuregroupvers": [22, 37, 58, 59, 67, 77, 95, 98, 107, 112, 119, 122, 132, 151], "describe_feature_group_vers": [22, 77], "describe_feature_group_templ": [22, 77], "featuregrouptempl": [22, 58, 65, 77, 124], "list_feature_group_templ": [22, 77, 124], "should_include_system_templ": [22, 77], "built": [22, 58, 77, 84, 124], "list_project_feature_group_templ": [22, 77], "should_include_all_system_templ": [22, 77, 124], "till": [22, 77, 124], "suggest_feature_group_template_for_feature_group": [22, 77], "suggest": [22, 58, 77], "gruop": [22, 58, 77], "get_dataset_schema": [22, 77], "definit": [22, 34, 58, 67, 77], "datasetcolumn": [22, 34, 35, 77], "get_file_connector_instruct": [22, 77], "bucket": [22, 34, 70, 71, 72, 77, 98, 143], "write_permiss": [22, 77], "cloud": [9, 10, 22, 37, 67, 71, 77], "storag": [22, 70, 71, 77], "fulli": [9, 10, 22, 77], "qualifi": [9, 10, 22, 77], "uri": [9, 10, 14, 22, 34, 37, 77, 152], "instruct": [22, 77, 84, 124], "step": [9, 10, 22, 77, 108, 110, 111, 112, 113], "full": [22, 34, 36, 37, 45, 52, 71, 77, 84, 90, 94, 98, 124, 143], "invalid": [22, 25, 36, 58, 71, 77, 128, 129, 135], "fileconnectorinstruct": [22, 71, 77], "list_database_connector": [22, 77], "databaseconnector": [22, 33, 77], "list_file_connector": [22, 77], "fileconnector": [22, 70, 77], "list_database_connector_object": [22, 77], "get_database_connector_object_schema": [22, 77], "object_nam": [9, 12, 22, 33, 34, 37, 67, 77], "system": [22, 33, 34, 58, 65, 77, 84, 108, 110, 117, 124, 143], "list_application_connector": [22, 77], "list_application_connector_object": [22, 77], "list_streaming_connector": [22, 77], "correspond": [1, 22, 57, 58, 67, 77, 84, 117, 124, 142], "streamingconnector": [22, 77, 140], "list_streaming_token": [22, 77], "token": [7, 9, 10, 22, 34, 38, 58, 77, 83, 117, 124, 138, 139, 149], "streamingauthtoken": [22, 77, 138], "get_recent_feature_group_streamed_data": [22, 77], "list_upload": [22, 77], "ongo": [22, 77], "describe_upload": [22, 77], "upload_id": [22, 77, 143], "inspect": [22, 34, 36, 77, 143], "part": [9, 10, 22, 34, 77, 108, 110, 113, 117, 124, 143, 144], "larg": [22, 77, 143], "list_dataset": [22, 77, 124], "exclude_stream": [22, 77], "describe_dataset": [22, 58, 77], "describe_dataset_vers": [22, 77], "dataset_vers": [22, 77], "datasetvers": [22, 34, 36, 54, 77, 98, 112, 118, 132, 143], "list_dataset_vers": [22, 77], "get_docstore_docu": [22, 77], "docstor": [22, 77], "get_docstore_imag": [22, 77], "max_width": [22, 77], "max_height": [22, 77], "imag": [9, 10, 22, 77, 117], "rescal": [22, 77], "so": [22, 58, 77, 117], "width": [22, 77], "equal": [9, 10, 22, 58, 77], "preserv": [22, 77, 117], "aspect": [22, 77], "ratio": [9, 10, 22, 77], "height": [22, 77], "describe_train_test_data_split_feature_group": [22, 77, 84], "model_id": [7, 9, 22, 58, 77, 84, 124, 139], "test": [7, 9, 10, 22, 45, 77, 84, 89, 98, 124], "split": [7, 9, 10, 22, 77, 84, 89, 98, 124], "By": [22, 77, 84, 117], "fold": [9, 10, 22, 77, 84, 98, 124], "describe_train_test_data_split_feature_group_vers": [22, 77, 98], "model_vers": [22, 37, 77, 84], "list_model": [22, 77, 124], "describe_model": [22, 77], "set_model_object": [22, 77, 98], "best": [9, 10, 22, 77, 98], "futur": [7, 9, 10, 22, 58, 77, 98, 114, 115, 117], "get_model_metr": [22, 77], "baseline_metr": [22, 77, 84], "baselin": [22, 77, 84, 89], "comparison": [22, 37, 48, 77, 84], "what": [22, 23, 34, 51, 58, 73, 77, 84, 117, 127], "mean": [7, 9, 22, 73, 77, 79, 84], "modelmetr": [22, 77, 84, 89], "list_model_vers": [22, 77], "describe_model_vers": [22, 77], "get_feature_importance_by_model_vers": [22, 77], "variou": [22, 58, 77, 97, 98], "featureimport": [22, 68, 77, 98], "get_training_data_log": [22, 77, 98], "prepar": [22, 31, 77, 98], "datapreplog": [22, 31, 77, 98], "set_default_model_algorithm": [22, 77], "data_cluster_typ": [22, 77, 84], "pin": [22, 77, 84], "cluster": [7, 9, 10, 22, 77, 84, 98, 117, 124], "lead": [22, 77, 84, 117], "get_training_log": [22, 77, 98], "export_custom_model_vers": [22, 77], "bundl": [22, 77, 98], "artifact": [22, 58, 77, 84, 85, 88, 97, 98, 103, 107], "zip": [9, 10, 22, 58, 77, 84, 98], "exampl": [9, 10, 22, 58, 77, 84, 98, 108, 110, 117, 124], "s3": [9, 10, 22, 34, 70, 77, 98], "modelartifactsexport": [22, 77, 84, 85, 98], "describe_model_artifacts_export": [22, 77], "model_artifacts_export_id": [22, 77, 85], "list_model_artifacts_export": [22, 77], "25": [22, 77, 84], "list_model_monitor": [22, 77, 124], "modelmonitor": [22, 77, 90, 95, 124], "describe_model_monitor": [22, 77], "model_monitor_id": [22, 77, 90, 124], "get_prediction_drift": [22, 77, 94], "model_monitor_vers": [22, 77], "driftdistribut": [22, 43, 44, 77, 94], "get_model_monitor_summari": [22, 77], "across": [9, 10, 22, 51, 77, 90, 91], "bia": [7, 9, 22, 77, 90, 92, 93, 117, 124], "violat": [22, 57, 77, 90, 91, 92, 105, 117], "accuraci": [7, 9, 22, 77, 90, 91, 92, 93], "modelmonitorsummari": [22, 77, 90, 92], "list_model_monitor_vers": [22, 77], "describe_model_monitor_vers": [22, 77], "model_monitor_version_metric_data": [22, 77], "metric_typ": [22, 77, 94], "actual_values_to_detail": [22, 77, 94], "decil": [22, 77, 90, 94], "actual": [22, 43, 44, 77, 94], "modelmonitorversionmetricdata": [22, 77, 94, 95], "list_organization_model_monitor": [22, 77], "only_star": [22, 77], "star": [22, 77, 90, 91], "get_model_monitor_chart_from_organ": [22, 77], "chart_typ": [22, 77], "chart": [22, 46, 57, 73, 77, 93, 95], "model_accuraci": [22, 77], "bias_viol": [22, 77], "data_integr": [22, 77], "model_drift": [22, 77], "modelmonitorsummaryfororgan": [22, 77], "modelmonitorsummaryfromorg": [22, 77, 93], "get_model_monitor_summary_from_organ": [22, 77], "consolid": [22, 77], "modelmonitororgsummari": [22, 77, 91], "list_eda": [22, 77, 124], "exploratori": [22, 45, 52, 77, 124], "analysi": [9, 10, 22, 45, 51, 52, 73, 77, 90, 95, 98, 124], "eda": [22, 46, 47, 48, 49, 50, 51, 52, 77, 90, 94, 124], "describe_eda": [22, 77], "eda_id": [22, 45, 77], "list_eda_vers": [22, 77], "edavers": [22, 45, 52, 77], "describe_eda_vers": [22, 77], "eda_vers": [22, 77], "get_eda_collinear": [22, 52, 77], "collinear": [22, 45, 47, 50, 52, 77, 124], "between": [9, 10, 22, 47, 48, 49, 50, 52, 53, 57, 62, 77, 117], "record": [9, 10, 22, 36, 52, 58, 69, 77, 117, 139], "correl": [22, 51, 52, 77], "edacollinear": [22, 47, 52, 77], "get_eda_data_consist": [22, 52, 77], "transformation_featur": [22, 52, 77], "transform": [9, 10, 22, 48, 52, 58, 77, 108, 110], "duplic": [22, 30, 48, 52, 58, 77], "edadataconsist": [22, 48, 52, 77], "get_collinearity_for_featur": [22, 52, 77], "shown": [22, 52, 77], "edafeaturecollinear": [22, 50, 52, 77], "get_feature_associ": [22, 52, 77], "reference_feature_nam": [22, 49, 52, 77], "test_feature_nam": [22, 49, 52, 77], "x": [9, 10, 22, 47, 49, 52, 73, 77], "axi": [22, 47, 49, 52, 73, 77], "plot": [22, 49, 52, 76, 77, 95, 124, 128, 130], "product": [7, 9, 10, 22, 51, 52, 77, 117], "y": [22, 47, 49, 52, 73, 77], "two": [22, 48, 49, 52, 77, 117], "edafeatureassoci": [22, 49, 52, 77], "get_eda_forecasting_analysi": [22, 52, 77], "forecast": [7, 9, 10, 22, 51, 52, 73, 77, 117, 124], "sales_across_tim": [22, 52, 77], "cummulative_contribut": [22, 52, 77], "missing_value_distribut": [22, 52, 77], "history_length": [9, 10, 22, 52, 77], "num_rows_histogram": [22, 52, 77], "product_matur": [22, 52, 77], "edaforecastinganalysi": [22, 51, 52, 77], "describe_monitor_alert": [22, 77], "monitor_alert_id": [22, 77, 101], "alert": [22, 77, 90, 91, 92, 94, 101, 102, 124], "monitoralert": [22, 77, 90, 101, 124], "describe_monitor_alert_vers": [22, 77], "monitor_alert_vers": [22, 77], "monitoralertvers": [22, 77, 94, 101, 102], "list_monitor_alerts_for_monitor": [22, 77, 90], "list_monitor_alert_versions_for_monitor_vers": [22, 77, 94], "get_model_monitoring_log": [22, 77, 94], "get_drift_for_featur": [22, 77, 94], "get_outliers_for_featur": [22, 77, 94], "batch_prediction_vers": [22, 77], "describe_deploy": [22, 77], "list_deploy": [22, 77, 124], "list_deployment_token": [22, 77, 124], "deploymentauthtoken": [22, 38, 77, 124], "get_model_training_types_for_deploy": [22, 77], "modeltrainingtypefordeploy": [22, 77, 84, 96], "describe_refresh_polici": [22, 77], "refresh_policy_id": [22, 77, 133], "describe_refresh_pipeline_run": [22, 77], "refresh_pipeline_run_id": [22, 77, 132], "pipelin": [9, 11, 22, 52, 77, 94, 109, 110, 111, 112, 113, 124, 132, 133, 134], "refreshpipelinerun": [22, 77, 132, 133], "prediction_metric_id": [22, 77, 124], "captur": [22, 77], "instant": [22, 77], "comma": [22, 77, 124, 133], "separ": [9, 10, 22, 77, 117, 124, 133], "list_refresh_pipeline_run": [22, 77, 133], "list_batch_predict": [22, 77, 124], "describe_batch_predict": [22, 77], "list_batch_prediction_vers": [22, 77], "describe_batch_prediction_vers": [22, 77], "describe_python_funct": [22, 77], "pythonfunct": [22, 77, 110, 128], "list_python_funct": [22, 77], "function_typ": [22, 77], "describe_graph_dashboard": [22, 77], "graph_dashboard_id": [22, 76, 77, 128], "graph": [22, 62, 73, 76, 77, 84, 124, 128], "dashboard": [22, 76, 77, 124, 128, 130], "graphdashboard": [22, 76, 77, 124, 128], "list_graph_dashboard": [22, 77, 124], "delete_graph_from_dashboard": [22, 77], "graph_reference_id": [22, 77], "describe_graph_for_dashboard": [22, 77], "pythonplotfunct": [22, 77, 130], "describe_algorithm": [22, 77], "list_algorithm": [22, 77], "queri": [22, 34, 54, 65, 77, 117, 135, 149, 150], "describe_custom_loss_funct": [22, 77], "previous": [22, 37, 58, 77], "regist": [9, 10, 22, 77, 129], "loss": [9, 10, 22, 26, 77, 100], "customlossfunct": [22, 26, 77], "list_custom_loss_funct": [22, 77], "name_prefix": [22, 77], "loss_function_typ": [22, 77], "categori": [22, 26, 49, 77, 117], "search": [22, 77, 107, 117, 149], "describe_custom_metr": [22, 77], "custommetr": [22, 27, 77], "describe_custom_metric_vers": [22, 77], "custom_metric_vers": [22, 77], "custommetricvers": [22, 27, 28, 77], "list_custom_metr": [22, 77], "describe_modul": [22, 77], "list_modul": [22, 77], "get_source_code_info": 22, "train_funct": [22, 77, 124], "predict_funct": [22, 77, 124], "predict_many_funct": [22, 77, 124], "initialize_funct": [22, 77, 124], "common_funct": [22, 77], "get_module_code_from_notebook": 22, "file_path": [22, 77], "include_modul": 22, "source_cod": [22, 77, 108, 110], "included_modul": [22, 77], "create_dataset_from_panda": [22, 77], "feature_group_table_nam": [22, 77], "panda": [22, 54, 58, 67, 77, 84, 98, 108, 110, 124, 128, 129], "datafram": [22, 29, 54, 58, 67, 77, 84, 98, 124, 128, 129], "assign": [9, 10, 22, 26, 27, 28, 58, 77, 84, 117], "automat": [7, 9, 10, 22, 37, 77, 84, 106, 124, 128, 129], "clean": [22, 77], "complaint": [22, 77], "otherwis": [9, 10, 22, 37, 58, 77, 127, 139], "valueerror": [22, 25, 77], "create_dataset_version_from_panda": [22, 77], "table_name_or_id": [22, 77], "exist": [22, 47, 58, 65, 67, 73, 77, 84, 149], "create_feature_group_from_pandas_df": [22, 77], "update_feature_group_from_pandas_df": [22, 77], "create_feature_group_from_spark_df": [22, 77], "spark": [22, 77], "pyspark": [22, 77], "sql": [22, 34, 54, 55, 58, 65, 67, 77, 80, 104, 114, 116, 135], "update_feature_group_from_spark_df": [22, 77], "should_wait_for_upload": [22, 77], "some": [22, 34, 44, 56, 77, 117, 124], "like": [9, 10, 22, 77, 108], "create_spark_df_from_feature_group_vers": [22, 77], "context": [9, 10, 13, 22, 58, 77, 129], "sparksess": [22, 77], "load": [22, 54, 58, 67, 77], "create_model_from_funct": [22, 77, 124], "training_input_t": [9, 10, 22, 77, 84, 124], "cpu_siz": [22, 58, 77, 84, 124], "memori": [22, 34, 58, 67, 77, 84, 98, 124], "training_config": [22, 77, 84, 124], "exclusive_run": [22, 77, 124], "package_requir": [22, 58, 77, 84, 108, 110, 124], "use_gpu": [22, 77, 84, 124], "fucntion": [22, 77], "serial": [22, 77, 124], "mani": [9, 10, 22, 34, 58, 77, 114, 115], "size": [9, 10, 22, 36, 39, 58, 67, 77, 84, 98, 117, 124, 143], "cpu": [22, 58, 67, 77, 84, 98, 124], "gb": [22, 58, 67, 77, 84, 98, 124], "packag": [22, 23, 58, 84, 108, 110, 124], "numpi": [22, 58, 77, 84, 108, 110, 124], "2": [7, 9, 22, 54, 58, 77, 84, 91, 108, 110, 117, 124], "3": [22, 58, 77, 84, 108, 110, 117, 124, 143], "4": [22, 58, 77, 84, 108, 110, 117, 124], "equival": [22, 77], "create_feature_group_from_python_funct": [22, 77], "input_t": [22, 77], "python_function_nam": [22, 58, 77, 129], "python_function_bind": [22, 58, 77], "give": [22, 71, 73, 77], "pythonfunctionargu": [9, 11, 22, 77], "update_python_function_cod": [22, 77], "function_variable_map": [22, 77, 128], "python_funct": [9, 22, 77], "create_algorithm_from_funct": [22, 77], "training_data_parameter_names_map": [22, 77], "training_config_parameter_nam": [22, 77], "config_opt": [22, 77], "is_default_en": [22, 77], "alreadi": [9, 10, 22, 34, 58, 77, 124], "uppercas": [22, 77, 100, 128, 130], "letter": [22, 77, 100, 128, 130], "underscor": [22, 77, 100, 128, 130], "process": [9, 10, 22, 37, 52, 67, 77, 87, 94, 98, 102, 143], "util": [22, 77, 117, 139], "boolean": [7, 9, 22, 49, 58, 77, 137], "update_algorithm_from_funct": [22, 77], "get_train_function_input": [22, 77], "training_table_nam": [22, 77], "training_data_parameter_name_overrid": [22, 77, 124], "training_config_parameter_name_overrid": [22, 77], "custom_algorithm_config": [22, 77, 84, 124], "get_train_function_input_from_model_vers": [22, 77], "particular": [9, 10, 22, 77, 117], "create_custom_loss_funct": [22, 77], "loss_funct": [9, 10, 22, 77], "should": [22, 34, 37, 58, 67, 77, 84, 108, 110, 117, 124], "per": [9, 10, 22, 34, 37, 48, 58, 77, 117], "50": [22, 77, 117], "char": [22, 77], "alphabet": [22, 77], "would": [9, 10, 22, 26, 58, 77], "ex": [22, 77], "regression_dl_tf": [22, 77], "classification_dl_tf": [22, 77], "functor": [22, 77], "take": [9, 10, 22, 34, 77, 117, 128, 129], "y_true": [22, 77], "y_pred": [22, 77], "invalidparametererror": [22, 77], "either": [22, 24, 37, 44, 58, 77, 93, 124, 128, 129], "incompat": [22, 77], "alreadyexistserror": [22, 77], "update_custom_loss_funct": [22, 77], "implement": [22, 77], "datanotfounderror": [22, 77], "create_custom_metric_from_funct": [22, 77], "custom_metric_funct": [22, 77], "evalu": [9, 10, 22, 77, 84], "regress": [7, 9, 22, 26, 27, 77, 117], "newli": [22, 37, 58, 67, 77, 124, 149], "update_custom_metric_from_funct": [22, 77], "create_module_from_notebook": [22, 77], "mark": [9, 10, 20, 22, 37, 77, 143], "notebook": [22, 26, 27, 42, 77, 100, 108, 109, 112, 124, 128, 130, 133], "module_start": [22, 77], "cell": [22, 77], "module_end": [22, 77], "end": [22, 34, 52, 74, 77, 80, 94, 98, 102], "rel": [9, 10, 22, 77, 117], "path": [22, 42, 58, 77, 84, 129], "root": [22, 58, 77, 84], "directori": [22, 58, 77, 84], "n1": [22, 77], "ipynb": [22, 77], "update_module_from_notebook": [22, 77], "import_modul": [22, 77], "reload": [22, 77], "add_user_to_organ": [22, 77], "your": [9, 10, 22, 70, 77, 117, 124, 143], "join": [22, 58, 77, 106, 114, 115, 143, 147], "create_organization_group": [22, 77], "group_nam": [22, 58, 77], "permiss": [22, 70, 71, 72, 77, 106], "default_group": [22, 77], "add_organization_group_permiss": [22, 77], "add": [22, 58, 77, 106, 124, 128], "remove_organization_group_permiss": [22, 77], "remov": [9, 10, 22, 34, 37, 58, 77, 106, 124], "delete_organization_group": [22, 77], "add_user_to_organization_group": [22, 77], "remove_user_from_organization_group": [22, 77], "set_default_organization_group": [22, 77], "delete_api_kei": [22, 77], "remove_user_from_organ": [22, 77], "you": [22, 77, 117, 124], "yourself": [22, 77], "administr": [22, 77], "create_deployment_webhook": [22, 77], "webhook_event_typ": [22, 37, 77, 152], "payload_templ": [22, 37, 77, 152], "post": [22, 37, 77, 152], "One": [22, 37, 58, 68, 77, 117], "deployment_start": [22, 37, 77], "deployment_success": [22, 37, 77], "deployment_fail": [22, 37, 77], "update_webhook": [22, 77], "chang": [9, 10, 22, 43, 44, 48, 56, 58, 77, 103, 117, 124, 129, 141, 152], "event": [9, 10, 22, 34, 77, 152], "payload": [22, 77, 152], "delete_webhook": [22, 77], "create_project": [22, 77], "want": [22, 77, 117, 124], "detect": [9, 10, 22, 34, 35, 55, 77, 117, 137], "fraud": [22, 77, 117], "first": [22, 40, 58, 77, 117, 124], "more": [9, 10, 22, 34, 35, 58, 77, 124, 126, 133, 137], "solv": [22, 77], "our": [22, 77, 117, 143], "guid": [22, 34, 35, 58, 77, 124, 137], "app": [22, 34, 58, 77, 126, 137], "help": [9, 10, 22, 34, 58, 77, 126, 137], "further": [22, 77], "follow": [22, 58, 77, 117, 146], "avail": [9, 10, 22, 37, 57, 58, 77, 106, 124, 135], "choos": [9, 10, 22, 77, 84], "language_detect": [7, 9, 22, 77], "nlp_sentiment": [7, 9, 22, 77], "nlp_qa": [22, 77], "nlp_search": [7, 9, 22, 77], "nlp_chat": [22, 77], "nlp_sentence_boundary_detect": [7, 9, 22, 77], "nlp_classif": [7, 9, 22, 77], "nlp_summar": [7, 9, 22, 77], "nlp_document_visu": [7, 9, 22, 77], "embeddings_onli": [22, 77], "model_with_embed": [22, 77], "torch_model": [22, 77], "torch_model_with_embed": [22, 77], "python_model": [22, 77], "notebook_python_model": [22, 77], "docker_model": [22, 77], "docker_model_with_embed": [22, 77], "customer_churn": [22, 77], "energi": [22, 77], "financial_metr": [22, 77], "cumulative_forecast": [7, 9, 10, 22, 77], "fraud_account": [22, 77], "fraud_threat": [22, 77], "fraud_transact": [22, 77], "operations_cloud": [22, 77], "cloud_spend": [22, 77], "timeseries_anomaly_detect": [22, 77], "operations_mainten": [22, 77], "operations_incid": [22, 77], "pers_promot": [22, 77], "feature_stor": [7, 9, 22, 77], "retail": [22, 77], "sales_forecast": [22, 77], "sales_scor": [22, 77], "feed_recommend": [22, 77], "user_rank": [22, 77], "named_entity_recognit": [22, 77], "user_item_affin": [], "user_recommend": [22, 77], "user_rel": [22, 77], "vision": [22, 77, 124], "vision_object_detect": [7, 9, 22, 77], "feature_drift": [22, 77], "generic_forecast": [22, 77], "pretrained_image_text_descript": [22, 77], "pretrained_speech_recognit": [22, 77], "pretrained_style_transf": [22, 77], "pretrained_text_to_image_gener": [22, 77], "theme_analysi": [7, 9, 10, 22, 77], "rename_project": [22, 77], "delete_project": [22, 77], "remain": [9, 10, 22, 77, 124], "activ": [9, 10, 22, 37, 77, 99, 117, 124, 147], "ensur": [22, 58, 77, 124], "stop": [22, 37, 77, 83, 124], "note": [22, 34, 37, 77, 117, 124, 143], "cannot": [22, 37, 77, 78, 84, 98, 106, 124], "recov": [22, 77, 124], "onc": [22, 77, 124], "add_feature_group_to_project": [22, 77], "custom_t": [22, 58, 77], "set_project_feature_group_config": [22, 77], "project_config": [22, 58, 77], "remove_feature_group_from_project": [22, 77], "set_feature_group_typ": [22, 77], "use_feature_group_for_train": [22, 77], "use_for_train": [22, 58, 77], "variabl": [9, 10, 11, 22, 58, 65, 66, 67, 77, 108, 111, 113, 117, 128, 135], "set_feature_map": [22, 77, 124], "feature_map": [22, 77, 124], "nested_column_nam": [22, 77, 124], "anoth": [22, 34, 58, 77, 124], "move": [22, 77, 124], "featuremap": [22, 55, 77, 104, 124, 137], "set_column_data_typ": [22, 34, 77, 124], "data_typ": [22, 34, 58, 77, 124, 141], "feature_types_url": [22, 77, 124], "columnmap": [22, 34, 77, 124], "restrict": [22, 34, 58, 77, 117, 124], "explicitli": [22, 34, 77, 124], "datatyp": [22, 34, 35, 55, 58, 77, 104, 124, 137, 141], "categor": [9, 10, 22, 49, 56, 57, 77, 124, 137], "categorical_list": [22, 77, 124, 137], "text": [7, 9, 10, 20, 22, 23, 65, 77, 117, 124, 137], "label_list": [22, 77, 124, 137], "object_refer": [22, 77, 124, 137], "multicategorical_list": [22, 77, 124, 137], "coordinate_list": [22, 77, 124, 137], "numerical_list": [22, 77, 124, 137], "timestamp_list": [22, 77, 124, 137], "set_column_map": [22, 77, 124], "column_map": [22, 77, 124], "see": [22, 58, 77, 117, 124, 126, 137, 140, 146], "here": [22, 77, 124, 146], "remove_column_map": [22, 77, 124], "made": [22, 77, 84, 117, 124, 129], "add_annot": [22, 77], "annotation_sourc": [22, 77], "ui": [22, 77, 96, 124], "indic": [7, 9, 10, 22, 28, 33, 34, 37, 45, 58, 67, 77, 84, 90, 103], "came": [22, 77], "bulk": [22, 77], "in_progress": [22, 58, 77], "describe_annot": [22, 58, 77], "get_document_to_annot": [22, 58, 77], "get_previ": [22, 58, 77], "fetch": [22, 23, 34, 58, 77, 141], "immedi": [22, 58, 77], "previou": [22, 34, 58, 77], "instead": [9, 10, 22, 58, 65, 77, 117, 124], "create_feature_group": [22, 77], "statement": [22, 58, 77], "form": [22, 77, 117, 124, 139, 143], "create_feature_group_from_templ": [22, 77], "template_bind": [22, 58, 65, 77], "should_attach_feature_group_to_templ": [22, 58, 77], "bind": [22, 58, 65, 77, 135], "overrid": [22, 34, 58, 65, 77, 117, 124], "leav": [9, 10, 22, 34, 68, 77], "create_feature_group_from_funct": [22, 77], "function_source_cod": [22, 58, 77, 84, 124], "function_nam": [22, 58, 77, 108, 110], "input_feature_group": [22, 58, 77], "use_original_csv_nam": [22, 58, 77], "languag": [22, 58, 77, 80, 81, 84, 103, 108, 110, 117, 124], "suppli": [22, 25, 58, 77, 84, 124, 128], "we": [9, 10, 22, 58, 66, 77, 114, 115, 117, 124], "those": [22, 58, 65, 77, 84, 114, 115, 117, 124], "expect": [9, 10, 22, 77, 84, 124, 141], "librari": [22, 58, 77, 84, 108, 110, 124], "section": [22, 58, 77, 84, 108, 110, 124], "origin": [9, 10, 22, 35, 55, 58, 67, 77, 80, 104, 117], "function_argu": [22, 58, 77, 128], "variable_typ": [9, 11, 22, 58, 77, 128], "name_of_feature_group": [22, 58, 77, 128], "create_sampling_feature_group": [22, 77], "sampling_config": [22, 58, 77], "effici": [22, 58, 77], "approxim": [22, 41, 58, 77], "unless": [22, 58, 77, 143], "vari": [22, 58, 77], "slightli": [22, 58, 77], "pre": [22, 58, 77], "human": [22, 58, 77], "readabl": [22, 58, 77], "create_merge_feature_group": [22, 77], "source_feature_group_id": [22, 58, 77], "merge_config": [22, 58, 77], "union": [22, 24, 58, 77], "arg": [22, 23, 77], "merg": [22, 24, 34, 36, 58, 77], "create_transform_feature_group": [22, 77], "transform_config": [22, 58, 77], "aka": [22, 77], "create_snapshot_feature_group": [22, 67, 77], "snapshot": [9, 10, 22, 34, 58, 67, 77], "set_feature_group_sampling_config": [22, 77], "empti": [22, 58, 77], "set_feature_group_merge_config": [22, 77], "mergefeaturegroup": [22, 58, 77], "increment": [22, 34, 36, 58, 77], "rule": [22, 58, 77], "set_feature_group_transform_config": [22, 77], "transformfeaturegroup": [22, 58, 77], "set_feature_group_schema": [22, 77], "point": [9, 10, 22, 24, 55, 58, 67, 77, 114, 115, 116, 117], "properti": [22, 37, 58, 77], "create_featur": [22, 58, 77], "select_express": [22, 58, 77], "select": [9, 10, 22, 34, 49, 50, 58, 66, 77, 84, 98, 117, 124], "express": [9, 10, 22, 58, 77, 114, 116], "add_feature_group_tag": [22, 77], "remove_feature_group_tag": [22, 77], "add_annotatable_featur": [22, 58, 77], "annotation_typ": [22, 58, 77], "annotat": [22, 58, 77], "set_feature_as_annotatable_featur": [22, 58, 77], "feature_group_row_identifier_featur": [22, 58, 77], "doc_id_featur": [22, 58, 77], "unset_feature_as_annotatable_featur": [22, 58, 77], "unset": [22, 58, 77], "add_feature_group_annotation_label": [22, 77], "label_nam": [22, 58, 77], "label_definit": [22, 58, 77], "remove_feature_group_annotation_label": [22, 77], "add_feature_tag": [22, 58, 77], "remove_feature_tag": [22, 58, 77], "create_nested_featur": [22, 58, 77], "using_claus": [22, 58, 77], "where_claus": [22, 58, 77], "order_claus": [22, 58, 77], "logic": [22, 55, 58, 77, 104], "parent": [22, 58, 77], "claus": [22, 55, 58, 77], "update_nested_featur": [22, 58, 77], "new_nested_feature_nam": [22, 58, 77], "delete_nested_featur": [22, 58, 77], "without": [9, 10, 22, 58, 77, 91, 124], "create_point_in_time_featur": [22, 58, 77], "history_table_nam": [22, 58, 77], "aggregation_kei": [22, 58, 77], "timestamp_kei": [22, 58, 77], "historical_timestamp_kei": [22, 58, 77], "lookback_window_second": [22, 58, 77], "lookback_window_lag_second": [22, 58, 77], "lookback_count": [22, 58, 77], "lookback_until_posit": [22, 58, 77], "histor": [22, 58, 77, 114, 115], "window": [9, 10, 22, 44, 53, 56, 57, 58, 77, 114, 115], "spec": [22, 58, 77], "aggreg": [22, 58, 75, 77, 114, 115, 116], "lookbackwindowsecond": [22, 58, 77, 114], "lookbackcount": [22, 58, 77, 114, 115], "second": [22, 34, 37, 51, 58, 77, 114, 115, 117, 143, 149], "histori": [9, 10, 21, 22, 51, 58, 77, 114, 115], "match": [22, 25, 42, 58, 77, 117, 142], "historicaltimefeatur": [22, 58, 77], "greater": [9, 10, 22, 58, 77], "lookbackstartcount": [22, 58, 77], "timefeatur": [22, 58, 77], "consid": [9, 10, 22, 58, 77], "lookbackwindowlagsecond": [22, 58, 77, 114], "ve": [22, 58, 77], "neg": [22, 58, 77, 114, 115], "care": [22, 58, 77], "taken": [22, 58, 77], "onlin": [22, 58, 77], "lookup": [22, 37, 58, 67, 77, 139, 149, 150], "count": [22, 30, 40, 41, 58, 73, 77, 79, 91, 92, 114, 115], "align": [22, 58, 77], "rank": [9, 10, 22, 58, 77, 117], "just": [22, 58, 77], "prior": [22, 58, 77], "lag": [22, 51, 58, 77, 114, 115], "term": [22, 58, 77, 114, 115], "posit": [22, 58, 77, 114, 115, 117, 124, 143], "lookbackuntilposit": [22, 58, 77, 114, 115], "sequenc": [22, 58, 77, 114, 116, 143], "scalar": [9, 10, 22, 58, 77, 114, 116, 117], "past": [22, 58, 77, 114, 115], "closest": [22, 58, 77, 114, 115], "update_point_in_time_featur": [22, 58, 77], "new_feature_nam": [22, 58, 77], "pit": [22, 58, 75, 77], "createpointintimefeatur": [22, 58, 77], "semant": [22, 58, 77], "do": [9, 10, 22, 58, 77], "create_point_in_time_group": [22, 58, 77], "window_kei": [22, 58, 77], "history_window_kei": [22, 58, 77], "history_aggregation_kei": [22, 58, 77], "lookback_window": [22, 58, 77], "lookback_window_lag": [22, 58, 77], "windowkei": [22, 58, 77, 115], "aggregationkei": [22, 58, 77, 114, 115], "lookback": [22, 58, 77], "update_point_in_time_group": [22, 58, 77], "delete_point_in_time_group": [22, 58, 77], "create_point_in_time_group_featur": [22, 58, 77], "update_point_in_time_group_featur": [22, 58, 77], "set_feature_typ": [22, 58, 77], "feature_typ": [22, 58, 77], "reflect": [22, 58, 77], "machin": [22, 58, 68, 77], "learn": [7, 9, 10, 22, 58, 77], "featuretyp": [22, 35, 55, 58, 77, 104, 137], "invalidate_streaming_feature_group_data": [22, 77], "invalid_before_timestamp": [22, 58, 77], "invalidbeforetimestamp": [22, 58, 77], "unix": [22, 24, 34, 58, 77], "concatenate_feature_group_data": [22, 77], "merge_typ": [22, 58, 77], "replace_until_timestamp": [22, 58, 77], "skip_materi": [22, 58, 77], "concaten": [22, 24, 58, 77], "special": [22, 58, 77], "updatetimestampkei": [22, 58, 77, 78], "primarykei": [22, 48, 51, 58, 77, 78], "operand": [22, 58, 77], "oper": [22, 54, 58, 64, 77, 116], "append": [22, 58, 77, 138, 139], "destin": [22, 24, 58, 77], "intersect": [22, 24, 58, 77], "remove_concatenation_config": [22, 58, 77], "set_feature_group_indexing_config": [22, 77], "primary_kei": [22, 58, 77, 124], "update_timestamp_kei": [22, 58, 77], "lookup_kei": [22, 58, 77], "dedupl": [22, 58, 77], "comput": [9, 10, 22, 53, 57, 58, 77, 117, 122, 124], "These": [22, 58, 77], "underli": [22, 35, 58, 77, 103, 123, 137, 145], "update_feature_group": [22, 77], "detach_feature_group_from_templ": [22, 77], "update_feature_group_template_bind": [22, 77], "update_feature_group_python_function_bind": [22, 77], "update_feature_group_python_funct": [22, 77], "update_feature_group_sql_definit": [22, 77], "update_dataset_feature_group_feature_express": [22, 77], "feature_express": [22, 58, 77], "update_feature_group_function_definit": [22, 77], "update_feature_group_zip": [22, 77], "module_nam": [22, 58, 77], "createfeaturegroupfromzip": [22, 58, 77], "update_feature_group_git": [22, 77], "branch_nam": [22, 58, 77, 84], "python_root": [22, 58, 77, 84], "createfeaturegroupfromgit": [22, 58, 77], "git": [22, 58, 77, 84], "branch": [22, 58, 77, 84], "repositori": [22, 58, 77, 84], "top": [9, 10, 22, 58, 77, 84], "level": [22, 58, 77, 84, 124], "update_featur": [22, 58, 77], "new_nam": [22, 58, 77], "export_feature_group_version_to_file_connector": [22, 77], "export_file_format": [9, 12, 22, 67, 77], "overwrit": [22, 67, 77], "export_feature_group_version_to_database_connector": [22, 77], "write_mod": [22, 37, 67, 77], "database_feature_map": [22, 37, 67, 77], "id_column": [9, 12, 22, 37, 67, 77], "additional_id_column": [9, 12, 22, 37, 67, 77], "insert": [22, 37, 58, 59, 60, 67, 77, 139], "addit": [9, 10, 22, 34, 37, 58, 59, 60, 64, 66, 67, 77, 117], "complex": [22, 37, 59, 60, 67, 77], "export_feature_group_version_to_consol": [22, 77], "set_feature_group_modifier_lock": [22, 77], "prevent": [22, 58, 77], "disabl": [9, 10, 22, 37, 58, 77], "enabl": [9, 10, 22, 34, 36, 37, 58, 77, 124], "add_user_to_feature_group_modifi": [22, 77], "add_organization_group_to_feature_group_modifi": [22, 77], "remove_user_from_feature_group_modifi": [22, 77], "remove_organization_group_from_feature_group_modifi": [22, 77], "delete_featur": [22, 58, 77], "delete_feature_group": [22, 77], "create_feature_group_vers": [22, 77], "variable_bind": [22, 58, 77], "create_feature_group_templ": [22, 77], "template_sql": [22, 58, 65, 77], "template_vari": [22, 58, 65, 77], "resolv": [22, 34, 58, 65, 67, 77, 117, 135], "delete_feature_group_templ": [22, 77], "update_feature_group_templ": [22, 77], "preview_feature_group_template_resolut": [22, 77], "should_valid": [22, 65, 77], "assum": [22, 77], "resolvedfeaturegrouptempl": [22, 65, 77, 135], "cancel_upload": [22, 77], "cancel": [22, 77, 143], "upload_part": [22, 77, 143], "part_numb": [22, 77, 143], "part_data": [22, 77, 143], "5gb": [22, 77, 143], "5tb": [22, 77, 143], "5mb": [22, 77, 143], "index": [9, 10, 22, 47, 58, 77, 78, 80, 117, 143, 151, 153], "denot": [22, 77, 80, 143], "textiobas": [22, 58, 77, 117, 143], "multipart": [22, 77, 117, 143], "uploadpart": [22, 77, 143, 144], "encapsul": [22, 77, 143], "etag": [22, 77, 143, 144], "got": [22, 77, 143], "mark_upload_complet": [22, 77], "create_dataset_from_file_connector": [22, 77], "file_format": [22, 34, 37, 77], "refresh_schedul": [22, 37, 77, 124], "csv_delimit": [6, 9, 22, 34, 77], "filename_column": [22, 77], "start_prefix": [22, 77], "until_prefix": [22, 77], "location_date_format": [22, 77], "date_format_lookback_dai": [22, 77], "is_documentset": [22, 34, 77], "merge_file_schema": [22, 34, 77], "amazon": [22, 77], "aw": [22, 77], "bucket1": [22, 77], "dir1": [22, 77], "dir2": [22, 77], "event_d": [22, 77], "yyyi": [22, 77], "mm": [22, 77], "dd": [22, 77], "2021": [22, 77], "08": [22, 77, 117], "02": [22, 77], "utc": [22, 37, 77, 108, 124, 133, 134], "delimit": [22, 34, 77], "inclus": [22, 77, 117], "exclus": [22, 77, 117, 124], "partit": [9, 10, 22, 77], "dir4": [22, 77], "filenam": [22, 77], "parquet": [22, 77], "dai": [9, 10, 22, 34, 51, 77], "back": [7, 9, 22, 29, 77], "06": [22, 77], "04": [22, 77], "signifi": [22, 34, 77], "create_dataset_version_from_file_connector": [22, 77], "try": [22, 34, 77], "create_dataset_from_database_connector": [22, 77], "query_argu": [22, 34, 77], "sql_queri": [22, 34, 77], "timestamp_column": [22, 77], "descend": [22, 50, 77], "create_dataset_from_application_connector": [22, 77], "object_id": [22, 34, 77], "start_timestamp": [22, 34, 77], "end_timestamp": [22, 34, 77], "period": [9, 10, 22, 34, 77, 91], "create_dataset_version_from_database_connector": [22, 77], "create_dataset_version_from_application_connector": [22, 77], "create_dataset_from_upload": [22, 77], "create_dataset_version_from_upload": [22, 77], "create_streaming_dataset": [22, 77], "over": [22, 77], "extend": [22, 77], "snapshot_streaming_data": [22, 34, 77], "set_dataset_column_data_typ": [22, 77], "create_dataset_from_streaming_connector": [22, 77], "streaming_connector_id": [22, 77, 140], "streaming_arg": [22, 77], "set_streaming_retention_polici": [22, 34, 77], "retention_hour": [22, 34, 77], "retention_row_count": [22, 34, 77], "ignore_records_before_timestamp": [22, 34, 77], "retent": [22, 34, 77], "hour": [9, 10, 22, 34, 51, 77], "retain": [22, 34, 77], "cutoff": [22, 34, 77], "ignor": [9, 10, 22, 34, 77, 117], "sent": [20, 22, 34, 77, 117, 152], "rename_database_connector": [22, 77], "rename_application_connector": [22, 77], "verify_database_connector": [22, 77], "verify_file_connector": [22, 77], "fileconnectorverif": [22, 72, 77], "delete_database_connector": [22, 77], "delete_application_connector": [22, 77], "delete_file_connector": [22, 77], "verify_application_connector": [22, 77], "set_azure_blob_connection_str": [22, 77], "connection_str": [22, 77], "azur": [22, 77], "blob": [22, 77, 117], "product_nam": [22, 77], "rolearn": [22, 77], "verify_streaming_connector": [22, 77], "rename_streaming_connector": [22, 77], "delete_streaming_connector": [22, 77], "create_streaming_token": [22, 77], "delete_streaming_token": [22, 77], "streaming_token": [22, 58, 77, 139], "attach_dataset_to_project": [22, 77], "let": [22, 34, 77, 117], "engin": [22, 34, 77], "know": [22, 34, 77, 117], "remove_dataset_from_project": [22, 77], "delete_dataset": [22, 77], "get_training_config_opt": [22, 77, 124], "for_retrain": [22, 77, 124], "current_training_config": [22, 77, 124], "use_cases_url": [22, 77, 124], "retrain": [22, 37, 77, 84, 124], "state": [22, 77, 97, 112, 117, 124], "shall": [22, 77, 124], "trainingconfigopt": [22, 77, 124, 141], "create_train_test_data_split_feature_group": [22, 77, 124], "influenc": [22, 77, 124], "train_model": [22, 77, 124], "custom_algorithm": [7, 9, 10, 22, 77, 84, 124], "custom_algorithms_onli": [22, 77, 124], "builtin_algorithm": [22, 77, 84, 124], "gettrainingconfigopt": [22, 77, 124], "builtin": [22, 77, 124], "create_model_from_python": [22, 77, 124], "train_function_nam": [9, 10, 22, 77, 84, 124], "predict_function_nam": [9, 10, 22, 77, 84, 124], "predict_many_function_nam": [9, 10, 22, 77, 84, 124], "initialize_function_nam": [22, 77, 84, 124], "functionsourcecod": [22, 58, 77, 84, 124], "well": [9, 10, 22, 77, 84, 124], "anyth": [22, 77, 84, 124], "decid": [22, 77, 124], "rename_model": [22, 77], "update_python_model": [22, 77], "update_python_model_zip": [22, 77], "train_module_nam": [9, 10, 22, 77, 84], "predict_module_nam": [9, 10, 22, 77, 84], "trainmodulenam": [22, 77, 84], "predictmodulenam": [22, 77, 84], "respect": [9, 10, 22, 77, 84, 117, 124, 150], "update_python_model_git": [22, 77], "set_model_training_config": [22, 77], "set_model_prediction_param": [22, 77], "prediction_config": [22, 77, 84], "retrain_model": [22, 77], "honor": [22, 77, 84, 117], "delete_model": [22, 77], "delete_model_vers": [22, 77], "export_model_artifact_as_feature_group": [22, 77, 98], "artifact_typ": [22, 77, 98], "evalartifact": [22, 77, 98], "get_custom_train_function_info": [22, 77, 124], "feature_group_names_for_train": [22, 77, 124], "customtrainfunctioninfo": [22, 29, 77, 124], "create_model_monitor": [22, 77, 124], "prediction_feature_group_id": [22, 77, 124], "training_feature_group_id": [22, 77, 124], "target_valu": [22, 77, 124], "target_value_bia": [22, 77, 124], "target_value_perform": [22, 77, 124], "training_feature_map": [22, 77, 124], "feature_group_base_monitor_config": [22, 77, 124], "feature_group_comparison_monitor_config": [22, 77, 124], "pr": [22, 77, 124], "auc": [7, 9, 22, 77, 124], "page": [9, 10, 22, 77, 84, 117, 124], "old": [22, 77, 124], "prod": [7, 9, 22, 77, 124], "curv": [22, 77, 124], "prediction_feature_group": [22, 77, 124], "training_fature_group": [22, 77, 124], "strategi": [9, 10, 22, 77, 124], "rerun_model_monitor": [22, 77], "re": [9, 10, 22, 77, 90, 117], "rename_model_monitor": [22, 77], "delete_model_monitor": [22, 77], "delete_model_monitor_vers": [22, 77], "create_vision_drift_monitor": [22, 77, 124], "training_feature_group": [22, 77, 124], "precis": [7, 9, 10, 22, 77, 124], "recal": [7, 9, 10, 22, 77, 124], "area": [22, 77, 124], "create_eda": [22, 77, 124], "include_collinear": [22, 77, 124], "include_data_consist": [22, 77, 124], "collinearity_kei": [22, 77, 124], "data_consistency_test_config": [22, 77, 124], "data_consistency_reference_config": [22, 77, 124], "forecast_frequ": [9, 10, 22, 77, 124], "item": [7, 9, 10, 22, 51, 73, 77, 97, 117, 124, 139], "In": [22, 58, 67, 73, 77, 124], "hourli": [7, 9, 22, 51, 77, 124], "daili": [7, 9, 22, 51, 77, 124], "weekli": [22, 51, 77, 124], "monthli": [22, 51, 77, 124], "quarterli": [22, 51, 77, 124], "yearli": [7, 9, 22, 51, 77, 124], "rerun_eda": [22, 77], "rerun": [22, 45, 77, 90, 101, 124], "rename_eda": [22, 77], "delete_eda": [22, 77], "delete_eda_vers": [22, 77], "create_monitor_alert": [22, 77, 124], "alert_nam": [22, 77, 101, 124], "condition_config": [22, 77, 101, 124], "action_config": [22, 77, 101, 124], "condit": [22, 77, 101, 102, 124], "update_monitor_alert": [22, 77], "run_monitor_alert": [22, 77], "delete_monitor_alert": [22, 77], "create_deploy": [22, 77], "calls_per_second": [22, 77], "auto_deploi": [22, 77], "enable_batch_streaming_upd": [22, 77], "model_deployment_config": [22, 37, 77], "handl": [9, 10, 22, 37, 77, 84], "flag": [22, 37, 77, 80, 103], "offlin": [22, 77], "background": [22, 37, 77], "cach": [22, 37, 77], "quicker": [22, 37, 77], "create_deployment_token": [22, 77, 124], "update_deploy": [22, 77], "rename_deploy": [22, 77], "set_auto_deploy": [22, 77], "auto": [7, 9, 22, 37, 77], "promot": [22, 37, 77, 117], "compar": [22, 37, 43, 77, 117], "better": [22, 37, 77], "poor": [22, 37, 77], "autodeploi": [22, 37, 77], "set_deployment_model_vers": [22, 77], "serv": [22, 37, 77], "infer": [22, 37, 77], "set_deployment_feature_group_vers": [22, 77], "start_deploy": [22, 77], "restart": [22, 37, 77], "suspend": [22, 37, 77], "stop_deploy": [22, 77], "delete_deploy": [22, 77], "affect": [22, 37, 77], "recover": [22, 37, 77], "delete_deployment_token": [22, 77], "set_deployment_feature_group_export_file_connector_output": [22, 77], "set_deployment_feature_group_export_database_connector_output": [22, 77], "remove_deployment_feature_group_export_output": [22, 77], "refresh_typ": [22, 77, 133], "pattern": [22, 77], "regular": [9, 10, 22, 77], "interv": [22, 77], "delete_refresh_polici": [22, 77], "pause_refresh_polici": [22, 77], "paus": [22, 77, 108, 133, 134], "resume_refresh_polici": [22, 77], "resum": [22, 77, 108, 133], "run_refresh_polici": [22, 77], "forc": [7, 9, 10, 22, 77, 117, 133], "update_refresh_polici": [22, 77], "lookup_featur": [22, 77, 117], "query_data": [22, 77, 117], "limit_result": [22, 77, 117, 149], "result_column": [22, 77, 117], "author": [22, 77, 117], "safe": [22, 77, 117], "embed": [9, 10, 22, 53, 77, 97, 117, 124, 139, 149], "insid": [22, 77, 117], "websit": [22, 77, 117], "user_id": [22, 77, 117], "entiti": [9, 10, 22, 77, 117], "against": [14, 22, 58, 77, 117], "emb": [22, 77, 117], "predict_multipl": [22, 77, 117], "predict_from_dataset": [22, 77, 117], "predict_lead": [22, 77, 117], "explain_predict": [22, 77, 117], "explainer_typ": [22, 77, 117], "probabl": [22, 77, 117], "interact": [9, 10, 22, 77, 117], "own": [22, 77, 117], "incom": [22, 77, 117], "asset": [22, 77, 117], "credit": [22, 77, 117], "score": [22, 77, 107, 117, 150], "wherev": [22, 77, 117], "lead_id": [22, 77, 117], "click": [22, 77, 117], "cart": [22, 77, 117], "Will": [22, 77, 117], "explain": [22, 68, 77, 117], "predict_churn": [22, 77, 117], "churn": [22, 77, 117], "churn_result": [22, 77, 117], "churned_yn": [22, 77, 117], "predict_takeov": [22, 77, 117], "ye": [9, 10, 22, 77, 117], "account_nam": [22, 77, 117], "account_id": [22, 77, 117], "account": [22, 77, 117], "characterist": [22, 77, 117], "login": [22, 77, 117], "durat": [9, 10, 22, 77, 117], "ip": [22, 77, 117], "predict_fraud": [22, 77, 117], "transact": [22, 77, 117], "fraudul": [22, 77, 117], "account_numb": [22, 77, 117], "card": [22, 77, 117], "predict_class": [22, 77, 117], "threshold": [9, 10, 22, 47, 77, 117], "threshold_class": [22, 77, 117], "fixed_featur": [22, 77, 117], "classif": [22, 26, 77, 117], "popular": [9, 10, 22, 77, 117], "upon": [22, 77, 117, 128, 130], "multi": [9, 10, 22, 26, 77, 78, 97, 117, 146], "f1": [22, 77, 117], "optim": [7, 9, 10, 22, 77, 117], "treat": [9, 10, 22, 77, 117], "constant": [22, 77, 117], "delta": [22, 77, 117], "predict_target": [22, 77, 117], "get_anomali": [22, 77, 117], "histogram": [22, 53, 77, 91, 117], "anomali": [7, 9, 10, 22, 77, 117], "8": [7, 9, 22, 77, 117], "99": [22, 77, 117], "is_anomali": [22, 77, 117], "get_forecast": [22, 77, 117], "future_data": [22, 77, 117], "num_predict": [22, 77, 117], "prediction_start": [22, 77, 117], "holiday_yn": [22, 77, 117], "store_id": [22, 77, 117], "item_id": [9, 10, 22, 77, 117, 139], "known": [22, 77, 117], "ahead": [22, 77, 117], "holidai": [9, 10, 22, 77, 117], "nation": [22, 77, 117], "element": [22, 77, 117], "enter": [22, 77, 117], "No": [22, 77, 117], "promo": [22, 77, 117], "2015": [22, 77, 117], "07": [22, 77, 117], "31": [22, 77, 117], "00": [22, 77, 117], "01t00": [22, 77, 117], "mid": [22, 77, 117], "night": [22, 77, 117], "01": [22, 77, 117], "get_k_nearest": [22, 77, 117], "vector": [22, 77, 117, 124, 139, 149, 150, 151], "k": [9, 10, 22, 77, 117], "distanc": [22, 53, 57, 77, 117], "include_scor": [22, 77, 117], "nearest": [7, 9, 22, 77, 117], "neighbor": [22, 77, 117], "find": [22, 77, 117], "alongsid": [22, 77, 117], "get_multiple_k_nearest": [22, 77, 117], "catalogid": [22, 77, 117], "cat0": [22, 77, 117], "20": [9, 10, 22, 77, 117], "euclidean": [22, 77, 117], "getknearest": [22, 77, 117], "get_label": [22, 77, 117], "extract": [22, 34, 77, 117], "get_entities_from_pdf": [22, 77, 117], "pdf": [22, 77, 117], "return_extracted_featur": [22, 77, 117], "recogn": [22, 77, 117], "get_recommend": [22, 77, 117], "num_item": [22, 77, 117], "exclude_item_id": [22, 77, 117], "score_field": [22, 77, 117], "scaling_factor": [22, 77, 117], "restrict_item": [22, 77, 117], "exclude_item": [22, 77, 117], "explore_fract": [22, 77, 117], "user_nam": [22, 77, 117], "exact": [22, 77, 117], "john": [22, 77, 117], "doe": [22, 25, 77, 117, 139], "displai": [22, 49, 54, 58, 67, 75, 77, 86, 87, 95, 117], "sai": [22, 77, 117], "10": [7, 9, 22, 54, 67, 77, 117, 143], "11th": [22, 77, 117], "20th": [22, 77, 117], "toward": [22, 77, 117], "certain": [9, 10, 22, 77, 99, 117], "col0": [22, 77, 117], "value0": [22, 77, 117], "value1": [22, 77, 117], "factor": [9, 10, 22, 77, 117], "bias": [22, 77, 117], "adjust": [22, 77, 117], "vehicletyp": [22, 77, 117], "suv": [22, 77, 117], "sedan": [22, 77, 117], "multipli": [22, 77, 117], "sort": [9, 10, 22, 50, 77, 117], "particularli": [22, 77, 117], "might": [22, 77, 117, 124], "alwai": [22, 77, 84, 117], "come": [22, 77, 117], "demot": [22, 77, 117], "value3": [22, 77, 117], "scenario": [22, 77, 117], "explor": [9, 10, 22, 77, 117], "get_personalized_rank": [22, 77, 117], "preserve_rank": [22, 77, 117], "preserve_unknown_item": [22, 77, 117], "item_cod": [22, 77, 117], "whom": [22, 77, 117], "movie_nam": [22, 77, 117], "desir": [22, 77, 117], "kept": [9, 10, 22, 77, 117, 143], "unchang": [22, 77, 117], "unknown": [9, 10, 22, 77, 117], "rerank": [9, 10, 22, 77, 117], "get_ranked_item": [22, 77, 117], "accord": [22, 77, 117], "prefer": [22, 77, 117], "get_related_item": [22, 77, 117], "relat": [22, 77, 117], "don": [22, 77, 117], "show": [22, 50, 51, 77, 96, 117], "get_chat_respons": [22, 77, 117], "search_result": [22, 77, 117], "chat": [9, 10, 20, 21, 22, 77, 117, 124], "continu": [22, 77, 117], "convers": [21, 22, 77, 117], "chronolog": [22, 77, 117], "altern": [22, 77, 117], "is_us": [22, 77, 117], "msg_id": [22, 77, 117], "nlpsearchpredict": [22, 77, 117], "get_search_result": [22, 77, 117], "secur": [22, 77, 117], "get_senti": [22, 77, 117], "sentiment": [9, 10, 22, 77, 117], "analyz": [22, 52, 77, 117], "get_entail": [22, 77, 117], "classifi": [9, 10, 22, 77, 117], "get_classif": [22, 77, 117], "get_summari": [22, 77, 90, 117], "raw": [22, 23, 77, 83, 117], "predict_languag": [22, 77, 117], "get_assign": [22, 77, 117], "forced_assign": [22, 77, 117], "check_constraint": [22, 77, 117], "constraint": [22, 77, 117], "solut": [22, 77, 117], "predict_with_binary_data": [22, 77, 117], "blob_key_nam": [], "audio": [22, 77, 117], "describe_imag": [22, 77, 117], "top_n": [22, 77, 117], "similar": [22, 77, 117], "candid": [22, 77, 117], "n": [22, 77, 117], "transcribe_audio": [22, 77, 117], "transcrib": [22, 77, 117], "classify_imag": [22, 77, 117], "classify_pdf": [22, 77, 117], "get_objects_from_imag": [22, 77, 117], "transfer_styl": [22, 77, 117], "source_imag": [22, 77, 117], "style_imag": [22, 77, 117], "adopt": [22, 77, 117], "visual": [22, 77, 117], "makeup": [22, 77, 117], "generate_imag": [22, 77, 117], "prompt": [22, 77, 117], "cat": [22, 77, 117], "create_batch_predict": [22, 37, 77], "outputloc": [22, 37, 59, 60, 77, 85], "tablenam": [22, 37, 58, 77], "outputtyp": [22, 37, 77], "enforc": [22, 37, 58, 77], "conjunct": [22, 37, 77], "start_batch_predict": [22, 77], "update_batch_predict": [22, 77], "set_batch_prediction_file_connector_output": [22, 77], "set_batch_prediction_database_connector_output": [22, 77], "set_batch_prediction_feature_group_output": [22, 77], "set_batch_prediction_output_to_consol": [22, 77], "set_batch_prediction_dataset": [22, 77], "set_batch_prediction_feature_group": [22, 77], "set_batch_prediction_dataset_remap": [22, 77], "delete_batch_predict": [22, 77], "add_user_item_interact": [22, 77], "event_typ": [22, 77], "additional_attribut": [22, 77], "upsert_user_attribut": [22, 77], "user_attribut": [22, 77], "upsert_item_attribut": [22, 77], "item_attribut": [22, 77], "add_multiple_user_item_interact": [22, 77], "userid": [22, 77], "itemid": [22, 77, 139], "eventtyp": [22, 77], "additionalattribut": [22, 77], "attribute1": [22, 77], "attribute2": [22, 77], "123": [22, 77], "upsert_multiple_user_attribut": [22, 77], "userattribut": [22, 77], "upsert_multiple_item_attribut": [22, 77], "itemattribut": [22, 77], "upsert_item_embed": [22, 77, 139], "catalog_id": [22, 77, 117, 139], "delete_item_embed": [22, 77, 139], "knn": [22, 77, 139], "upsert_multiple_item_embed": [22, 77, 139], "upsert_data": [22, 58, 77, 139], "append_data": [22, 58, 77, 139], "recordid": [22, 58, 77, 139], "upsert_multiple_data": [22, 58, 77, 139], "append_multiple_data": [22, 58, 77, 139], "create_python_funct": [22, 77], "reusabl": [22, 77], "update_python_funct": [22, 58, 77], "delete_python_funct": [22, 77], "create_graph_dashboard": [22, 77, 124], "python_function_id": [22, 76, 77, 124], "delete_graph_dashboard": [22, 77], "update_graph_dashboard": [22, 77], "add_graph_to_dashboard": [22, 77, 128], "update_graph_to_dashboard": [22, 77], "create_algorithm": [22, 77], "usabl": [22, 77], "predict_mani": [22, 77], "delete_algorithm": [22, 77], "update_algorithm": [22, 77], "list_builtin_algorithm": [22, 77, 124], "create_custom_loss_function_with_source_cod": [22, 77], "loss_function_nam": [22, 77], "loss_function_source_cod": [22, 77], "charact": [22, 77, 80], "fewer": [22, 77], "update_custom_loss_function_with_source_cod": [22, 77], "delete_custom_loss_funct": [22, 77], "create_custom_metr": [22, 77], "custom_metric_function_nam": [22, 77], "update_custom_metr": [22, 77], "delete_custom_metr": [22, 77], "create_modul": [22, 77], "bring": [22, 77], "lower": [22, 77], "delete_modul": [22, 77], "update_modul": [22, 77], "get_notebook_cell_complet": [22, 77], "previous_cel": [22, 77], "completion_typ": [22, 77], "autocomplet": [22, 77], "llm": [9, 10, 22, 58, 77, 80, 82, 83], "previouscel": [22, 77], "markdown": [22, 58, 77], "openai": [22, 77], "notebookcomplet": [22, 77], "sourcetyp": [23, 34], "sourcecod": [23, 84], "applicationconnectorinfo": 23, "packagerequir": 23, "publishingmsg": 23, "file_upload": 23, "application_connector": [23, 77], "pip": 23, "depend": [9, 10, 22, 23, 77, 108, 110, 111], "went": 23, "wrong": 23, "concatenationconfig": [24, 58], "concatenatedt": 24, "mergetyp": 24, "replaceuntiltimestamp": 24, "skipmateri": 24, "verify_respons": 25, "public_kei": 25, "signatur": 25, "public": [25, 77, 117, 139], "get_public_kei": 25, "notebookid": [26, 27, 100, 108, 109, 128, 130, 133], "lossfunctionnam": 26, "lossfunctiontyp": 26, "custommetricid": 27, "latestcustommetricvers": 27, "custommetricfunctionnam": 28, "trainingdataparameternamemap": 29, "schemamap": 29, "traindataparametertofeaturegroupid": 29, "trainingconfig": [9, 10, 22, 29, 77, 84, 124], "dataconsistencydupl": [30, 48], "totalcount": 30, "numdupl": 30, "featurerecord": [30, 69], "datafilt": [], "whereexpress": [], "dataqualityresult": 32, "qualiti": 32, "normal": [9, 10, 32, 77], "stage": [32, 86, 87, 98, 113], "differ": [9, 10, 32, 51, 66, 77, 95, 98, 123], "get_object_schema": 33, "datasetid": [34, 36, 58, 109, 118, 126, 133, 143], "datasourc": 34, "ignorebefor": 34, "ephemer": 34, "lookbackdai": 34, "databaseconnectorconfig": 34, "applicationconnectorconfig": 34, "isdocumentset": 34, "mergefileschema": [34, 36], "latestdatasetvers": 34, "external_servic": 34, "worth": 34, "documentset": 34, "create_version_from_file_connector": 34, "create_version_from_database_connector": 34, "create_version_from_application_connector": 34, "create_version_from_upload": 34, "attach_to_project": 34, "remove_from_project": [34, 58], "wait_for_import": [34, 36], "900": [34, 36], "wait_for_inspect": [34, 36], "detecteddatatyp": [35, 55, 137], "detectedfeaturetyp": [35, 55, 137], "originalnam": [35, 55, 104], "validdatatyp": 35, "timeformat": 35, "timestampfrequ": 35, "data_types_url": 35, "rowcount": 36, "incrementalqueriedat": 36, "uploadid": [36, 42, 143], "invalidrecord": 36, "byte": [36, 41, 143], "popul": [36, 42, 59, 132], "deployedat": 37, "projectid": [21, 37, 45, 76, 84, 90, 101, 121, 124, 133], "callspersecond": 37, "region": 37, "batchstreamingupd": 37, "pendingmodelvers": 37, "modeldeploymentconfig": 37, "featuregroupexportconfig": [9, 12, 22, 37, 60, 77, 133], "becam": 37, "elig": [9, 10, 37, 57, 77], "whenev": 37, "switch": 37, "create_webhook": 37, "list_webhook": 37, "set_auto": 37, "set_model_vers": 37, "set_feature_group_vers": 37, "set_feature_group_export_file_connector_output": 37, "set_feature_group_export_database_connector_output": 37, "remove_feature_group_export_output": 37, "wait_for_deploy": 37, "480": 37, "wait_for_pending_deployment_upd": 37, "600": [37, 58, 143], "deploymet": 37, "deploymenttoken": 38, "files": 39, "documnet": 39, "documentannot": [39, 40], "boundingbox": 40, "documentstor": 41, "documentstoreid": [41, 42], "documenttyp": 41, "documentcount": 41, "approximates": 41, "documentstoreimport": 42, "documentstoreimportid": 42, "importingstartedat": 42, "documentsimport": 42, "documentsskip": 42, "replaceexistingfil": 42, "traincolumn": 43, "predictedcolumn": 43, "versu": [43, 44, 56], "featuredistribut": [22, 43, 56, 77, 94], "labeldrift": [44, 91], "predictiondrift": [44, 57], "edaid": [45, 52], "referencefeaturegroupvers": [45, 52], "testfeaturegroupvers": [45, 52], "edaconfig": [45, 90, 94], "latestedavers": 45, "columnnam": [47, 48], "collinearitymatrix": 47, "groupfeaturedict": 47, "collinearitygroup": 47, "columnnamesx": 47, "matrix": 47, "collinearity_group": 47, "7": 47, "transformationcolumnnam": 48, "basedupl": 48, "comparedupl": 48, "dataconsistencydelet": 48, "dataconsistencytransform": 48, "occur": [48, 87, 128, 129], "isscatt": 49, "isboxwhisk": 49, "xaxi": [49, 73], "yaxi": [49, 73], "xaxiscolumnvalu": 49, "yaxiscolumnvalu": 49, "datacolumn": [49, 73], "scatter": 49, "v": [49, 57], "whisker": 49, "vice": 49, "versa": 49, "x_axi": 49, "y_axi": 49, "selectedfeatur": 50, "sortedcolumnnam": 50, "featurecollinear": 50, "forecastingtargetfeatur": 51, "timestampfeatur": 51, "forecastfrequ": 51, "salesacrosstim": 51, "cummulativecontribut": 51, "missingvaluedistribut": 51, "historylength": 51, "numrowshistogram": 51, "productmatur": 51, "could": 51, "forecastinganalysisgraphdata": [51, 73], "averag": [7, 9, 51, 53, 77], "p10": [51, 73, 79], "p90": [51, 73, 79], "median": [7, 9, 51, 73, 77, 79], "sale": 51, "percent": [9, 10, 51, 77], "contribut": [51, 68], "long": 51, "aliv": 51, "edastartedat": 52, "edacompletedat": 52, "wait_for_eda": 52, "1200": [52, 94, 102, 113, 122], "embeddingfeaturedriftdistribut": 53, "jsdistanc": [53, 57], "wsdistanc": [53, 57], "ksstatist": [53, 57], "kl": [53, 57, 91], "diverg": [53, 57, 91], "j": [53, 57], "wasserstein": [53, 57], "kolmogorov": [53, 57], "smirnov": [53, 57], "statist": [53, 56, 57, 74], "selectclaus": [55, 104], "sourcet": [55, 58, 67, 104], "usingclaus": 55, "orderclaus": 55, "whereclaus": 55, "pointintimeinfo": 55, "nestedfeatur": [55, 104], "pointintimefeatur": [55, 114], "featuredriftsummari": 57, "featureindex": 57, "targetcolumn": [57, 89], "dataintegritytimeseri": 57, "nestedsummari": 57, "nullviol": [57, 105], "typeviol": [57, 142], "rangeviol": [57, 131], "catviol": 57, "symmetr": [9, 10, 57, 77], "sum": 57, "discrep": 57, "modificationlock": [58, 99], "featuregroupsourcetyp": 58, "functionnam": [58, 128, 130], "featuregrouptyp": 58, "sqlerror": [58, 135], "latestversionoutd": 58, "referencedfeaturegroup": 58, "lookupkei": [58, 78], "streamingen": 58, "featuregroupus": 58, "mergeconfig": 58, "transformconfig": 58, "cpusiz": [58, 67, 84, 98], "streamingreadi": 58, "featuretag": 58, "modulenam": 58, "templatebind": 58, "featureexpress": 58, "useoriginalcsvnam": [58, 67], "pythonfunctionbind": [58, 67], "pythonfunctionnam": [58, 76], "annotationconfig": [2, 22, 58, 67, 77], "projectconfig": [22, 58, 59, 77, 125], "duplicatefeatur": 58, "pointintimegroup": [58, 67, 115], "indexingconfig": [58, 78], "latestfeaturegroupvers": 58, "outdat": [58, 103], "add_to_project": 58, "set_project_config": 58, "set_typ": 58, "create_sampl": 58, "set_sampling_config": 58, "set_merge_config": 58, "set_transform_config": 58, "set_schema": 58, "add_tag": [58, 124], "remove_tag": [58, 124], "add_annotation_label": 58, "remove_annotation_label": 58, "invalidate_streaming_data": 58, "concatenate_data": 58, "set_indexing_config": 58, "detach_from_templ": 58, "update_template_bind": 58, "update_python_function_bind": 58, "update_sql_definit": 58, "update_dataset_feature_express": 58, "update_function_definit": 58, "update_zip": 58, "update_git": 58, "list_export": 58, "set_modifier_lock": 58, "list_modifi": 58, "add_user_to_modifi": 58, "add_organization_group_to_modifi": 58, "remove_user_from_modifi": 58, "remove_organization_group_from_modifi": 58, "create_vers": [58, 149], "create_templ": 58, "suggest_template_for": 58, "get_recent_streamed_data": 58, "wait_for_dataset": 58, "7200": 58, "wait_for_upload": 58, "wait_for_materi": [58, 67], "wait_for_streaming_readi": 58, "streaming_statu": 58, "load_as_panda": [54, 58, 67], "text_snippet": 58, "ll": 58, "sinc": [9, 10, 58, 77], "lastest": [58, 90], "featuregroupexportid": 59, "fileformat": [59, 60], "objectnam": [59, 60, 64], "writemod": [59, 60, 64], "databasefeaturemap": [59, 60, 64], "idcolumn": [59, 60, 64], "exportcompletedat": [59, 85], "additionalidcolumn": [59, 60, 64], "get_connector_error": 59, "wait_for_result": [54, 59, 67, 85, 151], "3600": [22, 54, 59, 67, 77, 85, 149, 151], "get_result": 59, "downloadurl": 61, "expiresat": 61, "datetim": [9, 10, 61, 77, 137], "featuregrouplineag": 62, "node": 62, "direct": [7, 9, 62, 77], "acycl": 62, "lineag": 62, "featuregrouptemplateid": [65, 135], "issystemtempl": 65, "templatesql": [65, 135], "templatevari": 65, "metadata": [1, 2, 22, 58, 65, 77], "preview_resolut": 65, "featuregrouptemplatevariableopt": 66, "templatevariableopt": 66, "userfeedback": 66, "regard": 66, "export_to_file_connector": 67, "export_to_database_connector": 67, "export_to_consol": 67, "_download_avro_fil": [54, 67], "file_part": [54, 67], "tmp_dir": [54, 67], "max_work": [54, 67], "thread": [54, 67, 143], "shapfeatureimport": 68, "permutationfeatureimport": 68, "nullfeatureimport": 68, "lofofeatureimport": 68, "permut": 68, "writepermiss": [70, 71, 72], "authexpiresat": 70, "eg": [70, 80], "authopt": 71, "itemstatist": [73, 79], "rowwis": 73, "wise": [9, 10, 73, 77], "missing_perc": 73, "standard_devi": 73, "min": [7, 9, 73, 77, 79], "max": [7, 9, 73, 77, 79, 143], "stat": 74, "invoc": 74, "userexcept": [74, 148], "stacktrac": 74, "generatedpitfeatureconfigopt": 75, "displaynam": [75, 87], "short": [75, 143], "graphdashboardid": 76, "pythonfunctionid": [76, 110, 111, 128, 130], "plotreferenceid": 76, "projectnam": 76, "api_class": 77, "annotation_entri": 77, "annotations_statu": 77, "api_client_util": 77, "batch_predict": [77, 133], "categorical_range_viol": 77, "code_sourc": 77, "concatenation_config": 77, "cryptographi": 77, "custom_loss_funct": [9, 10, 77], "custom_metr": [9, 10, 77], "custom_train_function_info": 77, "data_consistency_dupl": 77, "data_filt": [], "data_prep_log": 77, "data_quality_result": 77, "dataset_column": 77, "deployment_auth_token": 77, "document_annot": 77, "document_stor": 77, "document_store_import": 77, "drift_distribut": 77, "eda_collinear": 77, "eda_data_consist": 77, "eda_feature_associ": 77, "eda_feature_collinear": 77, "eda_forecasting_analysi": 77, "embedding_feature_drift_distribut": 77, "feature_drift_summari": 77, "feature_group_export": 77, "feature_group_export_config": [22, 77, 133], "feature_group_export_download_url": 77, "feature_group_lineag": 77, "feature_group_templ": 77, "feature_group_template_variable_opt": 77, "feature_import": 77, "feature_record": 77, "file_connector_instruct": 77, "file_connector_verif": 77, "forecasting_analysis_graph_data": 77, "function_log": 77, "generated_pit_feature_config_opt": 77, "graph_dashboard": 77, "indexing_config": 77, "item_statist": 77, "model_artifacts_export": 77, "model_loc": 77, "model_metr": 77, "model_monitor": [7, 9, 77], "model_monitor_org_summari": 77, "model_monitor_summari": 77, "model_monitor_summary_from_org": 77, "model_training_type_for_deploy": 77, "model_upload": 77, "modification_lock_info": 77, "modul": [9, 77, 153], "monitor_alert": 77, "nested_featur": 77, "null_viol": 77, "organization_group": 77, "point_in_time_featur": 77, "point_in_time_group": 77, "point_in_time_group_featur": 77, "prediction_cli": 77, "prediction_dataset": 77, "prediction_input": 77, "prediction_metr": 77, "prediction_metric_vers": 77, "project_dataset": 77, "project_valid": 77, "python_plot_funct": 77, "range_viol": 77, "refresh_pipeline_run": 77, "refresh_polici": 77, "resolved_feature_group_templ": 77, "streaming_auth_token": 77, "streaming_connector": 77, "training_config_opt": 77, "type_viol": 77, "use_case_requir": 77, "user_except": 77, "predictioncli": [77, 117], "predict_raw": [77, 117], "kwarg": [9, 10, 77, 117, 128, 129], "interfac": [77, 117], "plug": [77, 88, 117], "plai": [77, 88, 117], "arbitrari": [77, 117], "__version__": 77, "conjuct": 78, "missingperc": 79, "stddev": 79, "deviat": 79, "modelconfig": [84, 98], "modelpredictionconfig": [84, 98], "sharedat": 84, "traininginputt": 84, "trainingfeaturegroupid": [84, 90, 98], "ispythonmodel": 84, "defaultalgorithm": [84, 98], "customalgorithmconfig": [84, 98], "restrictedalgorithm": 84, "latestmodelvers": 84, "showcas": 84, "trhough": 84, "regardless": 84, "modelloc": [84, 88], "update_python": 84, "update_python_zip": 84, "update_python_git": 84, "set_training_config": 84, "set_prediction_param": 84, "get_metr": 84, "set_default_algorithm": 84, "list_artifacts_export": 84, "get_training_types_for_deploy": 84, "wait_for_train": [84, 98], "wait_for_evalu": 84, "wait_for_full_automl": [84, 98], "automl": [84, 98], "cycl": [84, 98], "get_automl_statu": 84, "get_train_test_feature_group_as_panda": [84, 98], "modelartifactsexportid": 85, "artifactnam": 88, "baselinemetr": 89, "trainvaltestsplit": 89, "infolog": 89, "val": [9, 10, 77, 89], "predictionfeaturegroupid": 90, "predictionfeaturegroupvers": [90, 94], "trainingfeaturegroupvers": [90, 94], "alertconfig": 90, "biasmetricid": 90, "latestbiasmetricversionid": 90, "predictionmetricid": [90, 121, 122, 133], "latestpredictionmetricversionid": 90, "metricconfig": [90, 94], "featuregroupmonitorconfig": [90, 94], "metrictyp": [90, 94], "monitortyp": 90, "latestmonitormodelvers": 90, "feature_group_monitor": 90, "featuredrift": 91, "dataintegr": [91, 92], "monitordata": 91, "totalstarredmonitor": 91, "modelaccuraci": 92, "modeldrift": 92, "biasviol": 92, "monitoringstartedat": 94, "monitoringcompletedat": 94, "pendingdeploymentid": [94, 98], "faileddeploymentid": [94, 98], "metric_data": 94, "wait_for_monitor": 94, "metricinfo": 95, "metricnam": 95, "metricchart": 95, "othermetr": 95, "actualvaluessupportedfordrilldown": 95, "algo": 95, "drilldown": 95, "backend": 96, "modelupload": 97, "modeluploadid": 97, "embeddingsuploadid": 97, "artifactsuploadid": 97, "verificationsuploadid": 97, "defaultitemsuploadid": 97, "modelfileuploadid": 97, "modelstateuploadid": 97, "inputpreprocessoruploadid": 97, "requirementsuploadid": 97, "resourcesuploadid": 97, "tensorflow": 97, "save": [22, 34, 58, 77, 97], "preprocessor": 97, "resourc": [97, 132], "trainingstartedat": 98, "trainingcompletedat": 98, "automlcomplet": 98, "deployablealgorithm": 98, "bestalgorithm": 98, "featureanalysisstatu": 98, "dataclusterinfo": 98, "lifecycl": [98, 122], "get_feature_importance_bi": 98, "export_custom": 98, "frame": 98, "useremail": 99, "monitoralertid": [101, 102], "conditionconfig": [101, 102], "actionconfig": [101, 102], "conditiondescript": [101, 102], "actiondescript": [101, 102], "latestmonitoralertvers": 101, "alertingstartedat": 102, "alertingcompletedat": 102, "alertresult": 102, "actionstatu": 102, "actionerror": 102, "actionstartedat": 102, "actioncompletedat": 102, "actionfor": 102, "wait_for_monitor_alert": 102, "dataus": 104, "trainingnullfreq": 105, "predictionnullfreq": 105, "anomal": 105, "proport": 105, "organizationgroupid": 106, "groupnam": [106, 114, 115], "defaultgroup": 106, "member": 106, "bill": 106, "invite_us": 106, "add_permiss": 106, "remove_permiss": 106, "add_user_to": 106, "remove_user_from": 106, "set_default": 106, "historytablenam": [114, 115], "timestampkei": 114, "historicaltimestampkei": 114, "lookbackwindow": 115, "lookbackwindowlag": 115, "historywindowkei": 115, "historyaggregationkei": 115, "pointintimegroupfeatur": [115, 116], "pitoperationtyp": 116, "pitoperationconfig": 116, "predictiondataset": [118, 120], "datasettyp": [118, 119, 126, 146], "predictionfeaturegroup": [119, 120], "featuregroupdatasetid": 120, "datasetidremap": 120, "predictionmetr": 121, "predictionmetricconfig": [121, 122], "latestpredictionmetricversiondescript": 121, "predictionmetricvers": [121, 122, 132], "predictionmetriccompletedat": 122, "predictionmetricstartedat": 122, "wait_for_prediction_metric_vers": 122, "requiredfeaturegrouptyp": 123, "optionalfeaturegrouptyp": 123, "usecasessupportcustomalgorithm": 123, "featuregroupsen": 124, "attach_dataset": 124, "project_dataset_typ": 124, "remove_dataset": 124, "dataseterror": 127, "columnhint": 127, "keep": [127, 132], "hint": 127, "functionvariablemap": [111, 128, 130], "functiontyp": [128, 130], "spin": [128, 130], "plotnam": 130, "trainingmin": 131, "trainingmax": 131, "predictionmin": 131, "predictionmax": 131, "freqabovetrainingrang": 131, "freqbelowtrainingrang": 131, "minimum": [9, 10, 77, 131], "below": 131, "abov": [9, 10, 77, 131], "refreshpipelinerunid": 132, "refreshpolicyid": [132, 133, 134], "startedat": 132, "completedat": [113, 132], "refreshtyp": [132, 133, 134], "deploymentvers": [112, 132], "track": 132, "span": 132, "them": [9, 10, 77, 132], "trigger": [132, 152], "wait_for_complet": 132, "nextruntim": [108, 133, 134], "lifecyclemsg": 134, "resolvedvari": 135, "resolvedsql": 135, "final": [9, 10, 77, 135], "resolut": 135, "_get_attribute_as_dict": 136, "detectedfeaturemap": 137, "integ": [7, 9, 77, 80, 137], "struct": 137, "streamingtoken": 138, "streamingconnectorid": 140, "valuetyp": 141, "valueopt": 141, "lastmodelvalu": 141, "needsrefresh": 141, "dict_valu": 141, "again": 141, "trainingdatatyp": 142, "predictiondatatyp": 142, "datasetuploadid": 143, "smaller": 143, "backward": 143, "mark_complet": 143, "upload_arg": 143, "backoff": 143, "upload_fil": 143, "chunksiz": 143, "1024": [7, 9, 77, 143], "wait_timeout": 143, "chunk": [9, 10, 22, 77, 124, 143], "worker": 143, "iobas": 143, "stringio": 143, "mb": 143, "_yield_upload_part": 143, "wait_for_join": 143, "md5": 144, "prettynam": 145, "allowedfeaturemap": 146, "allowednestedfeaturemap": 146, "collect": [14, 146], "allowed_feature_typ": 146, "feature_type_enum": 146, "accept": 147, "traceback": 148, "usercod": 148, "webhookid": 152, "webhookeventtyp": 152, "payloadtempl": 152, "abacusai": 153, "pretrained_sequence_classif": [], "set_annotation_status_featur": [22, 58, 77], "simpl": [22, 77, 117], "exactli": [22, 77, 117], "lower_in": [22, 77, 117], "lower_ex": [22, 77, 117], "upper_in": [22, 77, 117], "upper_ex": [22, 77, 117], "limefeatureimport": 68, "ebmfeatureimport": 68, "lime": 68, "boost": [9, 10, 68, 77], "chartnam": 73, "pretrained_use_cas": [], "10th": 79, "percentil": [9, 10, 77, 79], "90th_percentil": 79, "pretrainedusecas": [], "predictionapi": [], "predictionuidisplaytyp": [], "imgsrc": [], "pretrain": [7, 9, 10, 77], "compon": [22, 77], "parsingconfig": [6, 9, 22, 34, 77], "escap": [6, 9, 77], "52": [], "vision_regress": [7, 9, 22, 77], "pretrained_text_classif": [22, 77], "parsing_config": [22, 34, 77], "pars": [22, 34, 77, 80, 83], "get_clust": [22, 77, 117], "score_imag": [22, 77, 117], "edachartdescript": [46, 73], "charttyp": [46, 73], "chartdescript": 73, "eda_chart_descript": 77, "first_cap_r": 5, "all_cap_r": 5, "upper_snake_cas": 5, "snake_cas": 5, "_upper_snake_case_kei": [5, 9, 10, 77], "_support_kwarg": [5, 9, 10, 77], "user_item_scor": [], "affin": [], "anomaly_detect": [7, 9, 10, 77], "anomaly_new": [7, 9, 77], "anomaly_outli": [7, 9, 77], "clustering_timeseri": [7, 9, 10, 22, 77], "named_entity_extract": [7, 9, 10, 77], "nlp_ner": [7, 9, 77], "natural_language_search": [7, 9, 10, 77], "sentence_boundary_detect": [7, 9, 10, 77], "sentiment_detect": [7, 9, 10, 77], "document_classif": [7, 9, 10, 77], "document_summar": [7, 9, 10, 77], "document_visu": [7, 9, 10, 77], "predictive_model": [7, 9, 10, 77], "custom_trained_model": [7, 9, 10, 77], "plug_and_plai": [7, 9, 77], "image_classif": [7, 9, 77], "vision_classif": [7, 9, 77], "object_detect": [7, 9, 77], "image_value_predict": [7, 9, 77], "pretrained_model": [7, 9, 77], "filllog": [7, 9, 77], "backfil": [7, 9, 77], "bfill": [7, 9, 77], "forwardfil": [7, 9, 77], "ffill": [7, 9, 77], "linear": [7, 9, 77], "batchsiz": [7, 9, 10, 77], "batch_8": [7, 9, 77], "batch_16": [7, 9, 77], "16": [7, 9, 77], "batch_32": [7, 9, 77], "32": [7, 9, 77], "batch_64": [7, 9, 77], "64": [7, 9, 77], "batch_128": [7, 9, 77], "128": [7, 9, 77], "batch_256": [7, 9, 77], "256": [7, 9, 77], "batch_384": [7, 9, 77], "384": [7, 9, 77], "batch_512": [7, 9, 77], "512": [7, 9, 77], "batch_740": [7, 9, 77], "740": [7, 9, 77], "batch_1024": [7, 9, 77], "holidaycalendar": [7, 9, 10, 77], "au": [7, 9, 77], "uk": [7, 9, 77], "u": [7, 9, 10, 77], "forecastingobject": [7, 9, 10, 77], "w_c_accuraci": [7, 9, 77], "wape": [7, 9, 77], "mape": [7, 9, 77], "cmape": [7, 9, 77], "rmse": [7, 9, 77], "cv": [7, 9, 77], "coefficient_of_vari": [7, 9, 77], "srmse": [7, 9, 77], "forecastingfrequ": [7, 9, 10, 77], "1h": [7, 9, 77], "1d": [7, 9, 77], "weekly_sunday_start": [7, 9, 77], "1w": [7, 9, 77], "weekly_monday_start": [7, 9, 77], "w": [7, 9, 77], "mon": [7, 9, 77], "weekly_saturday_start": [7, 9, 77], "sat": [7, 9, 77], "month_start": [7, 9, 77], "m": [7, 9, 77], "month_end": [7, 9, 77], "1m": [7, 9, 77], "quarter_start": [7, 9, 77], "q": [7, 9, 77], "quarter_end": [7, 9, 77], "1q": [7, 9, 77], "1y": [7, 9, 77], "forecastingdatasplittyp": [7, 9, 10, 77], "prediction_length": [7, 9, 10, 77], "forecastinglossfunct": [7, 9, 10, 77], "mean_absolute_error": [7, 9, 77], "mae": [7, 9, 77], "normalized_mean_absolute_error": [7, 9, 77], "nmae": [7, 9, 77], "peaks_mean_absolute_error": [7, 9, 77], "peaks_ma": [7, 9, 77], "mean_absolute_percentage_error": [7, 9, 77], "stable_map": [7, 9, 77], "pointwise_accuraci": [7, 9, 77], "root_mean_square_error": [7, 9, 77], "normalized_root_mean_square_error": [7, 9, 77], "nrmse": [7, 9, 77], "asymmetric_mean_absolute_percentage_error": [7, 9, 77], "asymmetric_map": [7, 9, 77], "stable_standardized_mean_absolute_percentage_error": [7, 9, 77], "stable_standardized_mape_with_cmap": [7, 9, 77], "gaussian": [7, 9, 10, 77], "mle_gaussian_loc": [7, 9, 77], "gaussian_full_covari": [7, 9, 77], "mle_gaussfullcov": [7, 9, 77], "guassian_exponenti": [7, 9, 77], "mle_gaussexp": [7, 9, 77], "mix_gaussian": [7, 9, 77], "mle_gaussmix": [7, 9, 77], "weibul": [7, 9, 77], "mle_weibul": [7, 9, 77], "negative_binomi": [7, 9, 77], "mle_negbinom": [7, 9, 77], "log_root_mean_square_error": [7, 9, 77], "log_rms": [7, 9, 77], "forecastinglocalsc": [7, 9, 10, 77], "zscore": [7, 9, 77], "sliding_zscor": [7, 9, 77], "last_point": [7, 9, 77], "lastpoint": [7, 9, 77], "min_max": [7, 9, 77], "minmax": [7, 9, 77], "min_std": [7, 9, 77], "minstd": [7, 9, 77], "robust": [7, 9, 77], "forecastingfillmethod": [7, 9, 77], "middl": [7, 9, 77], "forecastingquanitlesextensionmethod": [7, 9, 10, 77], "quadrat": [7, 9, 77], "ancestral_simul": [7, 9, 77], "simul": [7, 9, 10, 77], "forecastingtrainingconfig": [9, 10, 77], "param": [9, 10, 77, 87], "timestep": [9, 10, 77], "scheme": [9, 10, 77], "sort_object": [9, 10, 77], "probability_quantil": [9, 10, 77], "quantil": [7, 9, 10, 77], "no_validation_set": [], "force_prediction_length": [9, 10, 77], "filter_item": [9, 10, 77], "small": [9, 10, 77], "volum": [9, 10, 77], "enable_cold_start": [9, 10, 77], "cold": [9, 10, 77], "zero": [7, 9, 10, 77], "enable_multiple_backtest": [9, 10, 77], "backtest": [9, 10, 77], "total_backtesting_window": [], "backtest_window_step_s": [], "shift": [9, 10, 77], "full_data_retrain": [9, 10, 77], "type_of_split": [9, 10, 77], "test_by_item": [9, 10, 77], "rather": [9, 10, 77], "test_start": [9, 10, 77], "test_split": [9, 10, 77], "neural": [9, 10, 77], "network": [9, 10, 77], "underprediction_weight": [9, 10, 77], "weight": [9, 10, 77], "underpredict": [9, 10, 77], "disable_networks_without_analytic_quantil": [9, 10, 77], "analyt": [9, 10, 77], "mixtur": [9, 10, 77], "initial_learning_r": [9, 10, 77], "rate": [9, 10, 77], "l2_regularization_factor": [9, 10, 77], "l2": [9, 10, 77], "dropout_r": [9, 10, 77], "dropout": [9, 10, 77], "recurrent_lay": [9, 10, 77], "recurr": [9, 10, 77], "layer": [9, 10, 77], "stack": [9, 10, 77], "recurrent_unit": [9, 10, 77], "unit": [9, 10, 77], "convolutional_lay": [9, 10, 77], "convolut": [9, 10, 77], "convolution_filt": [9, 10, 77], "local_scaling_mod": [9, 10, 77], "nn": [9, 10, 77], "stationari": [9, 10, 77], "high": [9, 10, 77], "dynam": [9, 10, 77], "zero_predictor": [9, 10, 77], "subnetwork": [9, 10, 77], "skip_miss": [9, 10, 77], "rnn": [9, 10, 77], "batch_siz": [9, 10, 77], "forecastingbatchs": [9, 10, 77], "batch_renorm": [9, 10, 77], "renorm": [9, 10, 77], "much": [9, 10, 77], "prediction_step_s": [9, 10, 77], "training_point_overlap": [9, 10, 77], "overlap": [9, 10, 77], "max_scale_context": [9, 10, 77], "scale": [9, 10, 77], "quantiles_extension_method": [9, 10, 77], "extens": [9, 10, 77], "number_of_sampl": [9, 10, 77], "ancestr": [9, 10, 77], "symmetrize_quantil": [9, 10, 77], "use_log_transform": [9, 10, 77], "logarithm": [7, 9, 10, 77], "smooth_histori": [9, 10, 77], "smooth": [9, 10, 77], "low": [9, 10, 77], "timeseri": [9, 10, 22, 77, 117], "prediction_offset": [], "skip_local_scale_target": [9, 10, 77], "timeseries_weight_column": [9, 10, 77], "item_attributes_weight_column": [9, 10, 77], "use_timeseries_weights_in_object": [9, 10, 77], "use_item_weights_in_object": [9, 10, 77], "skip_timeseries_weight_sc": [9, 10, 77], "avoid": [9, 10, 77], "timeseries_loss_weight_column": [9, 10, 77], "use_item_id": [9, 10, 77], "use_all_item_tot": [9, 10, 77], "handle_zeros_as_miss": [], "demand": [9, 10, 77], "datetime_holiday_calendar": [9, 10, 77], "calendar": [9, 10, 77], "augment": [9, 10, 77], "fill_missing_valu": [9, 10, 77], "fill": [9, 10, 77], "enable_clust": [9, 10, 77], "data_split_feature_group_table_nam": [9, 10, 77], "_trainingconfigfactori": [9, 10, 77], "apiendpoint": [14, 22, 77], "predictendpoint": 14, "chatbotrespons": [], "answer": [9, 10, 21, 77], "chathistori": 21, "bot": [], "_cached_endpoint": 22, "61": [], "_get_prediction_endpoint": 22, "_get_streaming_endpoint": 22, "get_api_endpoint": [22, 77], "get_natural_language_explan": [22, 58, 77], "natur": [22, 58, 77, 103], "naturallanguageexplan": [22, 58, 77, 103], "generate_natural_language_explan": [22, 58, 77], "pretrained_instruct_pix2pix": [22, 77], "pretrained_sequence_classification_2": [], "extract_bounding_box": [22, 77], "create_nlp_drift_monitor": [22, 77, 124], "nlp": [9, 10, 22, 77, 124], "set_natural_language_explan": [22, 77], "short_explan": [22, 77], "long_explan": [22, 77], "succinct": [9, 10, 22, 77, 103], "verbos": [22, 77, 103, 117], "query_feature_group_explor": [], "chat_histori": [22, 77], "segment": 20, "block": [80, 83], "extractboundingbox": 34, "seasonalityyear": 51, "seasonalitymonth": 51, "seasonalityweekofyear": 51, "seasonalitydayofyear": 51, "seasonalitydayofmonth": 51, "seasonalitydayofweek": 51, "seasonalityquart": 51, "seasonalityhour": 51, "seasonalityminut": 51, "seasonalitysecond": 51, "autocorrel": 51, "partialautocorrel": 51, "year": 51, "month": 51, "week": 51, "season": 51, "quarter": 51, "minut": 51, "control": 51, "effect": 51, "interven": 51, "averagedrift": 53, "drifttypesvalu": 53, "api_endpoint": 77, "chat_bot_respons": [], "natural_language_explan": 77, "python_function_valid": 77, "streaming_cli": 77, "streamingcli": [77, 139], "shortexplan": 103, "longexplan": 103, "isoutd": 103, "longer": [9, 10, 77, 103], "due": [83, 103], "validate_loc": 128, "environ": [128, 129], "typeerror": [128, 129], "validate_function_loc": 129, "featureannotationconfig": 2, "statusfeatur": 2, "file_path_with_schema": [6, 9, 77], "list_pipelin": [22, 77, 124], "describe_pipeline_vers": [22, 77], "pipeline_vers": [22, 77], "pipelinevers": [22, 77, 108, 111, 113], "describe_pipeline_step": [22, 77], "pipeline_nam": [22, 77], "step_nam": [22, 77, 108], "pipelinestep": [22, 77, 108, 110], "tabular": [22, 77], "create_pipelin": [22, 77], "describe_pipelin": [22, 77], "delete_pipelin": [22, 77], "list_pipeline_vers": [22, 77], "run_pipelin": [22, 77], "pipeline_variable_map": [22, 77, 108], "create_pipeline_step": [22, 77], "step_input_map": [22, 77, 108, 110], "output_variable_map": [22, 77, 108, 110], "step_depend": [22, 77, 108, 110], "ouput": [22, 77, 108, 110], "delete_pipeline_step": [22, 77], "update_pipeline_step": [22, 77], "featuregroupmetr": 63, "annotation_config": 77, "feature_group_metr": 77, "pipeline_step": [22, 77], "pipeline_step_vers": 77, "multicatalogembeddingsuploadid": 97, "pipelinenam": [108, 110, 113], "pipelineid": [108, 109, 110, 111, 113], "pipelinevariablemap": [108, 113], "pipelinestepid": [110, 111], "stepnam": [110, 111], "stepdepend": [110, 111], "function_id": 110, "pipelinestepvers": [111, 112, 113], "outputvariablemap": [9, 11, 77, 111, 128], "stepvers": 113, "wait_for_pipelin": 113, "_monkeypatch": 129, "sy": 129, "undo": 129, "monkeypatch": 129, "syspath_prepend": 129, "comment": [1, 2, 22, 77], "commentsfeatur": 2, "metadatafeatur": 2, "avro_to_pandas_dtyp": 13, "avro_typ": 13, "get_non_nullable_typ": 13, "chatmessag": [20, 21, 22, 77], "role": 20, "sender": 20, "chatsess": [21, 22, 77, 124], "availableindic": [], "chatsessionid": 21, "chatbot": 21, "chat_session_id": [21, 22, 77], "send_chat_messag": [], "63": [], "execute_async_feature_group_oper": [22, 77], "fg": [22, 77], "executefgoper": [], "download_execute_feature_group_operation_result_part_chunk": [22, 77], "execute_fg_operation_run_id": [], "notebook_id": [22, 77, 124], "get_chat_sess": [22, 77], "evaluate_prompt": [22, 77], "system_messag": [22, 77], "num_output_token": [], "reserv": [], "deem": [], "fit": [], "llmrespons": [22, 77, 83], "search_feature_group": [22, 77], "num_result": [22, 77], "feagur": [22, 77], "llmsearchresult": [], "render_feature_group_data_for_llm": [22, 77], "token_budget": [22, 58, 77], "render_format": [22, 58, 77], "encod": [9, 10, 22, 58, 77, 81], "budget": [22, 58, 77], "compris": [22, 58, 77], "llminput": [22, 58, 77, 81], "query_feature_group_code_gener": [22, 77], "tool": [22, 77], "create_pipeline_step_from_funct": [22, 77], "update_pipeline_step_from_funct": [22, 77], "create_agent_from_funct": [22, 77], "agent_funct": [22, 77], "agent": [9, 10, 22, 77, 84, 117, 124], "host": [22, 77], "update_agent_with_funct": [22, 77], "execute_feature_group_sql": [22, 77], "ai_ag": [7, 9, 10, 22, 77], "zipcod": [22, 77, 124, 137], "save_metadata": [22, 58, 77], "update_annotation_statu": [22, 58, 77], "describe_async_feature_group_oper": [22, 77], "get_execute_feature_group_operation_result_part_count": [22, 77], "monitr": [22, 77], "update_pipelin": [22, 77], "create_chat_sess": [22, 77, 124], "create_ag": [22, 77, 124], "agent_function_nam": [22, 77, 84, 124], "agentfunctionnam": [22, 77, 84, 124], "update_ag": [22, 77, 84], "publish": [22, 77, 84], "render_feature_groups_for_llm": [22, 77], "include_definit": [22, 77], "executefgoperationrunid": [], "wait_for_execut": 54, "render_data_for_llm": 58, "numrow": 63, "numcol": 63, "chat_messag": 77, "chat_sess": 77, "execute_fg_oper": [], "llm_code_block": 77, "llm_input": 77, "llm_respons": 77, "llm_search_result": [], "pipeline_refer": 77, "pipeline_step_version_refer": 77, "llmcodeblock": [80, 83], "soruc": 80, "syntact": 80, "stopreason": 83, "reason": 83, "pipelinerefer": [108, 109], "pipelinereferenceid": 109, "objecttyp": [109, 112], "batchpredictiondescriptionid": 109, "pipelinestepversionrefer": [111, 112], "pipelinestepversionreferenceid": 112, "notebookvers": 112, "execute_ag": [22, 77, 117], "keyword": [22, 77, 117], "paramt": [22, 77, 117], "executefeaturegroupoper": [22, 54, 77], "feature_group_operation_run_id": [22, 77], "keyword_argu": [22, 77, 117], "featuregroupoperationrunid": 54, "execute_feature_group_oper": 77, "wait_for_publish": 84, "return_graph": [22, 77, 84], "set_dataset_database_connector_config": [22, 77], "llm_name": [22, 77], "max_token": [22, 77], "gpt": [22, 77], "turbo": [22, 77], "reach": [22, 77], "moduledepend": 23, "set_database_connector_config": 34, "model_blueprint_export": 77, "model_blueprint_stag": 77, "codeblock": 83, "modelblueprintexport": 86, "currenttrainingconfig": 86, "modelblueprintstag": [86, 87], "blueprint": [86, 87], "predecessor": [86, 87], "stagenam": 87, "directli": 87, "latestpipelinevers": 108, "outputerror": 111, "get_object_from_context": 13, "variable_nam": 13, "return_typ": 13, "_request_context": [22, 77], "get_agent_context_chat_histori": [22, 77], "aiagent": [22, 77], "set_agent_context_chat_histori": [22, 77], "clear_agent_context_chat_histori": [], "clear_agent_context": [22, 77], "add_project_tag": [22, 77], "remove_project_tag": [22, 77], "reference_only_documentset": [22, 77], "get_alternative_assign": [22, 77, 117], "referenceonlydocumentset": 34, "connector_typ": [9, 12, 77], "fileconnectorexportconfig": [9, 12, 77], "databaseconnectorexportconfig": [9, 12, 77], "data_column": [9, 12, 77], "_featuregroupexportconfigfactori": [9, 12, 77], "wish": [22, 77, 124], "unset_pipeline_refresh_schedul": [22, 77], "pipeline_id": [22, 77, 108], "pause_pipeline_refresh_schedul": [22, 77], "resume_pipeline_refresh_schedul": [22, 77], "featuregrouprefreshexportconfig": [64, 133], "exportfileformat": 64, "externalconnectionid": 64, "feature_group_refresh_export_config": 77, "unset_refresh_schedul": 108, "pause_refresh_schedul": 108, "resume_refresh_schedul": 108, "latestupdatedat": 4, "pythonfunctionargumenttyp": [7, 9, 11, 77], "monitor_id": [7, 9, 77], "65": [], "pipeline_step_id": [22, 77, 110], "describe_pipeline_step_by_nam": [22, 77], "update_pipeline_step_by_name_from_funct": [], "chat_config": [22, 77, 117], "specifii": [22, 77, 117], "describe_pipeline_by_nam": [22, 77], "delete_pipeline_step_by_nam": [], "update_pipeline_step_by_nam": [], "trainingdistribut": 56, "predictiondistribut": 56, "numericaltrainingdistribut": 56, "numericalpredictiondistribut": 56, "trainingstatist": 56, "predictionstatist": 56, "typic": 56, "outlin": 64, "feature_distribut": 77, "vector_stor": 77, "vector_store_vers": [22, 77], "create_step": 108, "delete_step_by_nam": [], "update_step_by_nam": [], "describe_step_by_nam": 108, "vectorstor": [22, 77, 124, 149], "vectorstoreid": [149, 151], "trunk": 149, "vectorstorevers": [22, 77, 149, 151], "num": [22, 77, 117], "wait_for_export": 59, "nerobject": [7, 9, 10, 77], "log_loss": [7, 9, 77], "annotations_precis": [7, 9, 77], "annotations_recal": [7, 9, 77], "nermodeltyp": [7, 9, 10, 77], "pretrained_bert": [7, 9, 77], "pretrained_roberta_27": [7, 9, 77], "pretrained_roberta_43": [7, 9, 77], "pretrained_multilingu": [7, 9, 77], "nlpdocumentformat": [7, 9, 10, 77], "doc": [7, 9, 77], "sentimenttyp": [7, 9, 10, 77], "valenc": [7, 9, 77], "emot": [7, 9, 77], "clusteringimputationmethod": [7, 9, 10, 77], "interpol": [7, 9, 77], "python_function_argu": [], "namedentityextractiontrainingconfig": [9, 10, 77], "ner_model_typ": [9, 10, 77], "ner": [9, 10, 77], "test_indicator_column": [], "active_labels_column": [9, 10, 77], "document_format": [9, 10, 77], "include_longform": [9, 10, 77], "longform": [9, 10, 77], "naturallanguagesearchtrainingconfig": [9, 10, 77], "custom_finetuned_model": [], "fine": [], "tune": [], "faster_chat": [], "faster": [9, 10, 77], "num_completion_token": [9, 10, 77], "reduc": [9, 10, 77], "larger_embed": [9, 10, 77], "higher": [9, 10, 77], "dimens": [9, 10, 77], "search_chunk_s": [9, 10, 77], "chunk_overlap_fract": [9, 10, 77], "sentenceboundarydetectiontrainingconfig": [9, 10, 77], "sentimentdetectiontrainingconfig": [9, 10, 77], "sentiment_typ": [9, 10, 77], "compute_metr": [9, 10, 77], "documentclassificationtrainingconfig": [9, 10, 77], "zero_shot_hypothes": [9, 10, 77], "shot": [9, 10, 77], "hypothes": [9, 10, 77], "price": [9, 10, 77], "documentsummarizationtrainingconfig": [9, 10, 77], "documentvisualizationtrainingconfig": [9, 10, 77], "clusteringtrainingconfig": [9, 10, 77], "num_clusters_select": [9, 10, 77], "clusteringtimeseriestrainingconfig": [9, 10, 77], "imput": [9, 10, 77], "is_requir": [9, 11, 77], "pipeline_vari": [9, 11, 77], "66": [], "organizationsearchresult": [22, 77, 107], "organization_search_result": 77, "latestvectorstorevers": 149, "wait_until_readi": [149, 151], "trainable_plug_and_plai": [7, 9, 77], "experimentationmod": [7, 9, 10, 77], "rapid": [7, 9, 10, 77], "thorough": [7, 9, 10, 77], "personalizationtrainingmod": [7, 9, 10, 77], "experiment": [7, 9, 10, 77], "exp": [7, 9, 77], "personalizationobject": [7, 9, 10, 77], "ndcg": [7, 9, 77], "ndcg_5": [7, 9, 77], "ndcg_10": [7, 9, 77], "map_5": [7, 9, 77], "map_10": [7, 9, 77], "mrr": [7, 9, 77], "coverag": [7, 9, 77], "personalizationtrainingconfig": [9, 10, 77], "training_mod": [9, 10, 77], "target_action_typ": [9, 10, 77], "target_action_weight": [9, 10, 77], "session_event_typ": [9, 10, 77], "occurr": [9, 10, 77], "6": [9, 10, 77], "recent_days_for_train": [9, 10, 77], "training_start_d": [9, 10, 77], "timezon": [9, 10, 77], "test_on_user_split": [9, 10, 77], "test_split_on_last_k_item": [9, 10, 77], "global": [9, 10, 77], "test_last_items_length": [9, 10, 77], "test_window_length_hour": [9, 10, 77], "explicit_time_split": [9, 10, 77], "explicit": [9, 10, 77], "boundari": [9, 10, 77], "test_row_ind": [9, 10, 77], "sequential_train": [9, 10, 77], "sequenti": [9, 10, 77], "disable_transform": [9, 10, 77], "disable_gpu": [9, 10, 77], "boo": [9, 10, 77], "filter_histori": [9, 10, 77], "explore_lookback_hour": [9, 10, 77], "max_history_length": [9, 10, 77], "compute_rerank_metr": [9, 10, 77], "item_id_dropout": [9, 10, 77], "randomli": [9, 10, 77], "add_time_featur": [9, 10, 77], "disable_timestamp_scalar_featur": [9, 10, 77], "compute_session_metr": [9, 10, 77], "abl": [9, 10, 77], "max_user_history_len_percentil": [9, 10, 77], "downsample_item_popularity_percentil": [9, 10, 77], "downsampl": [9, 10, 77], "enable_feature_select": [9, 10, 77], "num_backtesting_window": [9, 10, 77], "backtesting_window_step_s": [9, 10, 77], "additional_forecast_kei": [9, 10, 77], "act": [9, 10, 77], "experimentation_mod": [9, 10, 77], "handle_zeros_as_missing_valu": [9, 10, 77], "abacus_internal_model": [9, 10, 77], "question": [9, 10, 77], "index_fract": [9, 10, 77], "cumulativeforecastingtrainingconfig": [9, 10, 77], "historical_frequ": [9, 10, 77], "cumulative_prediction_length": [9, 10, 77], "cumul": [9, 10, 77], "365": [9, 10, 77], "skip_input_transform": [9, 10, 77], "skip_target_transform": [9, 10, 77], "predict_residu": [9, 10, 77], "residu": [9, 10, 77], "anomalydetectiontrainingconfig": [9, 10, 77], "value_high": [9, 10, 77], "unusu": [9, 10, 77], "mixture_of_gaussian": [9, 10, 77], "combin": [9, 10, 22, 77, 124], "variational_autoencod": [9, 10, 77], "variat": [9, 10, 77], "autoencod": [9, 10, 77], "spike_up": [9, 10, 77], "spike_down": [9, 10, 77], "trend_chang": [9, 10, 77], "trend": [9, 10, 77], "themeanalysistrainingconfig": [9, 10, 77], "theme": [9, 10, 77], "aiagenttrainingconfig": [9, 10, 77], "customtrainedmodeltrainingconfig": [9, 10, 77], "max_catalog_s": [9, 10, 77], "max_dimens": [9, 10, 77], "index_output_path": [9, 10, 77], "gc": [9, 10, 77], "docker_image_uri": [9, 10, 77], "docker": [9, 10, 77], "service_port": [9, 10, 77], "port": [9, 10, 77], "request_id": [22, 77], "67": [], "list_chat_sess": [22, 77], "most_recent_per_project": [22, 77], "list_vector_stor": [22, 77, 124], "describe_vector_stor": [22, 77], "vector_store_id": [22, 77, 149], "describe_vector_store_by_nam": [22, 77], "list_vector_store_vers": [22, 77], "describe_vector_store_vers": [22, 77], "create_vector_stor": [22, 77, 124], "cluster_nam": [22, 77, 124], "broken": [22, 77, 124], "togeth": [22, 77, 124], "update_vector_stor": [22, 77], "create_vector_store_vers": [22, 77], "delete_vector_stor": [22, 77], "lookup_vector_stor": [22, 77], "vectorstorelookupresult": [22, 77, 149, 150], "vector_store_lookup_result": 77, "trainedmodeltyp": 98, "regressionobject": [7, 9, 10, 77], "acc": [7, 9, 77], "f1_score": [7, 9, 77], "fscore": [7, 9, 77], "r_squared_coefficient_of_determin": [7, 9, 77], "r": [7, 9, 77], "regressiontreehpomod": [7, 9, 10, 77], "regressionaugmentationstrategi": [7, 9, 10, 77], "smote": [7, 9, 77], "resampl": [7, 9, 77], "regressiontargettransform": [7, 9, 10, 77], "yeo_johnson": [7, 9, 77], "yeo": [7, 9, 77], "johnson": [7, 9, 77], "box_cox": [7, 9, 77], "cox": [7, 9, 77], "regressiontypeofsplit": [7, 9, 10, 77], "random": [7, 9, 77], "timestamp_bas": [7, 9, 77], "row_indicator_bas": [7, 9, 77], "regressiontimesplitmethod": [7, 9, 10, 77], "test_split_percentage_bas": [7, 9, 77], "test_start_timestamp_bas": [7, 9, 77], "regressionlossfunct": [7, 9, 10, 77], "huber": [7, 9, 77], "mse": [7, 9, 77], "squar": [7, 9, 77], "absolut": [7, 9, 77], "msle": [7, 9, 77], "tweedi": [7, 9, 77], "cross_entropi": [7, 9, 77], "cross": [7, 9, 10, 77], "entropi": [7, 9, 77], "focal_cross_entropi": [7, 9, 77], "focal": [7, 9, 77], "regressiontrainingconfig": [9, 10, 77], "tree_hpo_mod": [9, 10, 77], "turn": [9, 10, 77], "off": [9, 10, 77], "disable_test_val_fold": [9, 10, 77], "test_val": [9, 10, 77], "k_fold_cross_valid": [9, 10, 77], "bag": [9, 10, 77], "num_cv_fold": [9, 10, 77], "timestamp_based_splitting_column": [9, 10, 77], "timestamp_based_splitting_method": [9, 10, 77], "test_splitting_timestamp": [9, 10, 77], "sampling_unit_kei": [9, 10, 77], "constrain": [9, 10, 77], "rebalance_class": [9, 10, 77], "invers": [9, 10, 77], "unbalanc": [9, 10, 77], "balanc": [9, 10, 77], "cost": [9, 10, 77], "rare": [9, 10, 77], "rare_class_augmentation_threshold": [9, 10, 77], "frequent": [9, 10, 77], "augmentation_strategi": [9, 10, 77], "deal": [9, 10, 77], "imbal": [9, 10, 77], "training_rows_downsample_ratio": [9, 10, 77], "min_categorical_count": [9, 10, 77], "placehold": [9, 10, 77], "sample_weight": [9, 10, 77], "eval": [9, 10, 77], "numeric_clipping_percentil": [9, 10, 77], "clip": [9, 10, 77], "bottom": [9, 10, 77], "target_transform": [9, 10, 77], "ignore_datetime_featur": [9, 10, 77], "max_text_word": [9, 10, 77], "word": [9, 10, 77], "perform_feature_select": [9, 10, 77], "subset": [9, 10, 77], "feature_selection_intens": [9, 10, 77], "strict": [9, 10, 77], "veri": [9, 10, 77], "lenient": [9, 10, 77], "pretrained_model_nam": [9, 10, 77], "multilingu": [9, 10, 77], "is_multilingu": [9, 10, 77], "loss_paramet": [9, 10, 77], "target_encode_categor": [9, 10, 77], "drop_original_categor": [9, 10, 77], "feed": [9, 10, 77], "mdoel": [9, 10, 77], "customalgorithmtrainingconfig": [9, 10, 77], "github": [9, 10, 77], "repositoti": [9, 10, 77], "optimizationtrainingconfig": [9, 10, 77], "isus": 20, "feedback": 20, "68": [22, 77], "get_project_feature_group_config": [22, 77], "describe_project_feature_group": [22, 77], "streaming_evaluate_prompt": [22, 77], "awar": [22, 77], "_get_agent_async_app_request_id": [22, 77], "async": [22, 77], "_get_agent_async_app_cal": [22, 77], "caller": [22, 77], "stream_messag": [22, 77], "print": [], "script": [22, 77], "_stream_llm_call_ui": [], "llm_arg": [22, 77], "_call_aiagent_asyncapp_sync_messag": [22, 77], "asyncapp": [22, 77], "sync": [22, 77], "import_annotation_label": [22, 58, 77], "200": [22, 77, 108], "get_llm_paramet": [22, 77], "parameter": [22, 77], "llmparamet": [22, 77, 82], "get_project_config": 58, "llm_paramet": 77, "_stream_llm_cal": [22, 77], "htmlexplan": 103, "html": 103}, "objects": {"": [[77, 0, 0, "-", "abacusai"]], "abacusai": [[77, 1, 1, "", "AIAgentTrainingConfig"], [77, 1, 1, "", "AnomalyDetectionTrainingConfig"], [77, 1, 1, "", "ApiClass"], [77, 1, 1, "", "ApiClient"], [77, 1, 1, "", "ApiEnum"], [77, 4, 1, "", "ApiException"], [77, 1, 1, "", "BatchSize"], [77, 1, 1, "", "ClientOptions"], [77, 1, 1, "", "ClusteringImputationMethod"], [77, 1, 1, "", "ClusteringTimeseriesTrainingConfig"], [77, 1, 1, "", "ClusteringTrainingConfig"], [77, 1, 1, "", "ConnectorType"], [77, 1, 1, "", "CumulativeForecastingTrainingConfig"], [77, 1, 1, "", "CustomAlgorithmTrainingConfig"], [77, 1, 1, "", "CustomTrainedModelTrainingConfig"], [77, 1, 1, "", "DatabaseConnectorExportConfig"], [77, 1, 1, "", "DocumentClassificationTrainingConfig"], [77, 1, 1, "", "DocumentSummarizationTrainingConfig"], [77, 1, 1, "", "DocumentVisualizationTrainingConfig"], [77, 1, 1, "", "ExperimentationMode"], [77, 1, 1, "", "FeatureGroupExportConfig"], [77, 1, 1, "", "FileConnectorExportConfig"], [77, 1, 1, "", "FillLogic"], [77, 1, 1, "", "ForecastingDataSplitType"], [77, 1, 1, "", "ForecastingFillMethod"], [77, 1, 1, "", "ForecastingFrequency"], [77, 1, 1, "", "ForecastingLocalScaling"], [77, 1, 1, "", "ForecastingLossFunction"], [77, 1, 1, "", "ForecastingObjective"], [77, 1, 1, "", "ForecastingQuanitlesExtensionMethod"], [77, 1, 1, "", "ForecastingTrainingConfig"], [77, 1, 1, "", "HolidayCalendars"], [77, 1, 1, "", "NERModelType"], [77, 1, 1, "", "NERObjective"], [77, 1, 1, "", "NLPDocumentFormat"], [77, 1, 1, "", "NSamplingConfig"], [77, 1, 1, "", "NamedEntityExtractionTrainingConfig"], [77, 1, 1, "", "NaturalLanguageSearchTrainingConfig"], [77, 1, 1, "", "OptimizationTrainingConfig"], [77, 1, 1, "", "OutputVariableMapping"], [77, 1, 1, "", "ParsingConfig"], [77, 1, 1, "", "PercentSamplingConfig"], [77, 1, 1, "", "PersonalizationObjective"], [77, 1, 1, "", "PersonalizationTrainingConfig"], [77, 1, 1, "", "PersonalizationTrainingMode"], [77, 1, 1, "", "PredictionClient"], [77, 1, 1, "", "ProblemType"], [77, 1, 1, "", "PythonFunctionArgument"], [77, 1, 1, "", "PythonFunctionArgumentType"], [77, 1, 1, "", "ReadOnlyClient"], [77, 1, 1, "", "RegressionAugmentationStrategy"], [77, 1, 1, "", "RegressionLossFunction"], [77, 1, 1, "", "RegressionObjective"], [77, 1, 1, "", "RegressionTargetTransform"], [77, 1, 1, "", "RegressionTimeSplitMethod"], [77, 1, 1, "", "RegressionTrainingConfig"], [77, 1, 1, "", "RegressionTreeHPOMode"], [77, 1, 1, "", "RegressionTypeOfSplit"], [77, 1, 1, "", "SamplingConfig"], [77, 1, 1, "", "SamplingMethodType"], [77, 1, 1, "", "SentenceBoundaryDetectionTrainingConfig"], [77, 1, 1, "", "SentimentDetectionTrainingConfig"], [77, 1, 1, "", "SentimentType"], [77, 1, 1, "", "StreamingClient"], [77, 1, 1, "", "ThemeAnalysisTrainingConfig"], [77, 1, 1, "", "TrainingConfig"], [77, 1, 1, "", "_ApiClassFactory"], [77, 1, 1, "", "_FeatureGroupExportConfigFactory"], [77, 1, 1, "", "_SamplingConfigFactory"], [77, 1, 1, "", "_TrainingConfigFactory"], [77, 5, 1, "", "__version__"], [77, 5, 1, "", "_request_context"], [0, 0, 0, "-", "algorithm"], [1, 0, 0, "-", "annotation"], [2, 0, 0, "-", "annotation_config"], [3, 0, 0, "-", "annotation_entry"], [4, 0, 0, "-", "annotations_status"], [9, 0, 0, "-", "api_class"], [13, 0, 0, "-", "api_client_utils"], [14, 0, 0, "-", "api_endpoint"], [15, 0, 0, "-", "api_key"], [16, 0, 0, "-", "application_connector"], [17, 0, 0, "-", "batch_prediction"], [18, 0, 0, "-", "batch_prediction_version"], [19, 0, 0, "-", "categorical_range_violation"], [20, 0, 0, "-", "chat_message"], [21, 0, 0, "-", "chat_session"], [22, 0, 0, "-", "client"], [23, 0, 0, "-", "code_source"], [24, 0, 0, "-", "concatenation_config"], [25, 0, 0, "-", "cryptography"], [26, 0, 0, "-", "custom_loss_function"], [27, 0, 0, "-", "custom_metric"], [28, 0, 0, "-", "custom_metric_version"], [29, 0, 0, "-", "custom_train_function_info"], [30, 0, 0, "-", "data_consistency_duplication"], [31, 0, 0, "-", "data_prep_logs"], [32, 0, 0, "-", "data_quality_results"], [33, 0, 0, "-", "database_connector"], [34, 0, 0, "-", "dataset"], [35, 0, 0, "-", "dataset_column"], [36, 0, 0, "-", "dataset_version"], [37, 0, 0, "-", "deployment"], [38, 0, 0, "-", "deployment_auth_token"], [39, 0, 0, "-", "document"], [40, 0, 0, "-", "document_annotation"], [41, 0, 0, "-", "document_store"], [42, 0, 0, "-", "document_store_import"], [43, 0, 0, "-", "drift_distribution"], [44, 0, 0, "-", "drift_distributions"], [45, 0, 0, "-", "eda"], [46, 0, 0, "-", "eda_chart_description"], [47, 0, 0, "-", "eda_collinearity"], [48, 0, 0, "-", "eda_data_consistency"], [49, 0, 0, "-", "eda_feature_association"], [50, 0, 0, "-", "eda_feature_collinearity"], [51, 0, 0, "-", "eda_forecasting_analysis"], [52, 0, 0, "-", "eda_version"], [53, 0, 0, "-", "embedding_feature_drift_distribution"], [54, 0, 0, "-", "execute_feature_group_operation"], [55, 0, 0, "-", "feature"], [56, 0, 0, "-", "feature_distribution"], [57, 0, 0, "-", "feature_drift_summary"], [58, 0, 0, "-", "feature_group"], [59, 0, 0, "-", "feature_group_export"], [60, 0, 0, "-", "feature_group_export_config"], [61, 0, 0, "-", "feature_group_export_download_url"], [62, 0, 0, "-", "feature_group_lineage"], [63, 0, 0, "-", "feature_group_metrics"], [64, 0, 0, "-", "feature_group_refresh_export_config"], [65, 0, 0, "-", "feature_group_template"], [66, 0, 0, "-", "feature_group_template_variable_options"], [67, 0, 0, "-", "feature_group_version"], [68, 0, 0, "-", "feature_importance"], [69, 0, 0, "-", "feature_record"], [70, 0, 0, "-", "file_connector"], [71, 0, 0, "-", "file_connector_instructions"], [72, 0, 0, "-", "file_connector_verification"], [73, 0, 0, "-", "forecasting_analysis_graph_data"], [74, 0, 0, "-", "function_logs"], [75, 0, 0, "-", "generated_pit_feature_config_option"], [76, 0, 0, "-", "graph_dashboard"], [78, 0, 0, "-", "indexing_config"], [79, 0, 0, "-", "item_statistics"], [80, 0, 0, "-", "llm_code_block"], [81, 0, 0, "-", "llm_input"], [82, 0, 0, "-", "llm_parameters"], [83, 0, 0, "-", "llm_response"], [84, 0, 0, "-", "model"], [85, 0, 0, "-", "model_artifacts_export"], [86, 0, 0, "-", "model_blueprint_export"], [87, 0, 0, "-", "model_blueprint_stage"], [88, 0, 0, "-", "model_location"], [89, 0, 0, "-", "model_metrics"], [90, 0, 0, "-", "model_monitor"], [91, 0, 0, "-", "model_monitor_org_summary"], [92, 0, 0, "-", "model_monitor_summary"], [93, 0, 0, "-", "model_monitor_summary_from_org"], [94, 0, 0, "-", "model_monitor_version"], [95, 0, 0, "-", "model_monitor_version_metric_data"], [96, 0, 0, "-", "model_training_type_for_deployment"], [97, 0, 0, "-", "model_upload"], [98, 0, 0, "-", "model_version"], [99, 0, 0, "-", "modification_lock_info"], [100, 0, 0, "-", "module"], [101, 0, 0, "-", "monitor_alert"], [102, 0, 0, "-", "monitor_alert_version"], [103, 0, 0, "-", "natural_language_explanation"], [104, 0, 0, "-", "nested_feature"], [105, 0, 0, "-", "null_violation"], [106, 0, 0, "-", "organization_group"], [107, 0, 0, "-", "organization_search_result"], [108, 0, 0, "-", "pipeline"], [109, 0, 0, "-", "pipeline_reference"], [110, 0, 0, "-", "pipeline_step"], [111, 0, 0, "-", "pipeline_step_version"], [112, 0, 0, "-", "pipeline_step_version_reference"], [113, 0, 0, "-", "pipeline_version"], [114, 0, 0, "-", "point_in_time_feature"], [115, 0, 0, "-", "point_in_time_group"], [116, 0, 0, "-", "point_in_time_group_feature"], [117, 0, 0, "-", "prediction_client"], [118, 0, 0, "-", "prediction_dataset"], [119, 0, 0, "-", "prediction_feature_group"], [120, 0, 0, "-", "prediction_input"], [121, 0, 0, "-", "prediction_metric"], [122, 0, 0, "-", "prediction_metric_version"], [123, 0, 0, "-", "problem_type"], [124, 0, 0, "-", "project"], [125, 0, 0, "-", "project_config"], [126, 0, 0, "-", "project_dataset"], [127, 0, 0, "-", "project_validation"], [128, 0, 0, "-", "python_function"], [129, 0, 0, "-", "python_function_validator"], [130, 0, 0, "-", "python_plot_function"], [131, 0, 0, "-", "range_violation"], [132, 0, 0, "-", "refresh_pipeline_run"], [133, 0, 0, "-", "refresh_policy"], [134, 0, 0, "-", "refresh_schedule"], [135, 0, 0, "-", "resolved_feature_group_template"], [136, 0, 0, "-", "return_class"], [137, 0, 0, "-", "schema"], [138, 0, 0, "-", "streaming_auth_token"], [139, 0, 0, "-", "streaming_client"], [140, 0, 0, "-", "streaming_connector"], [141, 0, 0, "-", "training_config_options"], [142, 0, 0, "-", "type_violation"], [143, 0, 0, "-", "upload"], [144, 0, 0, "-", "upload_part"], [145, 0, 0, "-", "use_case"], [146, 0, 0, "-", "use_case_requirements"], [147, 0, 0, "-", "user"], [148, 0, 0, "-", "user_exception"], [149, 0, 0, "-", "vector_store"], [150, 0, 0, "-", "vector_store_lookup_result"], [151, 0, 0, "-", "vector_store_version"], [152, 0, 0, "-", "webhook"]], "abacusai.AIAgentTrainingConfig": [[77, 2, 1, "", "description"], [77, 2, 1, "", "problem_type"]], "abacusai.AnomalyDetectionTrainingConfig": [[77, 2, 1, "", "mixture_of_gaussians"], [77, 2, 1, "", "problem_type"], [77, 2, 1, "", "spike_down"], [77, 2, 1, "", "spike_up"], [77, 2, 1, "", "test_split"], [77, 2, 1, "", "trend_change"], [77, 2, 1, "", "value_high"], [77, 2, 1, "", "variational_autoencoder"]], "abacusai.ApiClass": [[77, 3, 1, "", "__post_init__"], [77, 2, 1, "", "_support_kwargs"], [77, 2, 1, "", "_upper_snake_case_keys"], [77, 3, 1, "", "from_dict"], [77, 3, 1, "", "to_dict"]], "abacusai.ApiClient": [[77, 3, 1, "", "_call_aiagent_asyncapp_sync_message"], [77, 3, 1, "", "_get_agent_async_app_caller"], [77, 3, 1, "", "_get_agent_async_app_request_id"], [77, 3, 1, "", "_stream_llm_call"], [77, 3, 1, "", "add_annotatable_feature"], [77, 3, 1, "", "add_annotation"], [77, 3, 1, "", "add_feature_group_annotation_label"], [77, 3, 1, "", "add_feature_group_tag"], [77, 3, 1, "", "add_feature_group_to_project"], [77, 3, 1, "", "add_feature_tag"], [77, 3, 1, "", "add_graph_to_dashboard"], [77, 3, 1, "", "add_multiple_user_item_interactions"], [77, 3, 1, "", "add_organization_group_permission"], [77, 3, 1, "", "add_organization_group_to_feature_group_modifiers"], [77, 3, 1, "", "add_project_tags"], [77, 3, 1, "", "add_user_item_interaction"], [77, 3, 1, "", "add_user_to_feature_group_modifiers"], [77, 3, 1, "", "add_user_to_organization"], [77, 3, 1, "", "add_user_to_organization_group"], [77, 3, 1, "", "append_data"], [77, 3, 1, "", "append_multiple_data"], [77, 3, 1, "", "attach_dataset_to_project"], [77, 3, 1, "", "cancel_upload"], [77, 3, 1, "", "check_constraints"], [77, 3, 1, "", "classify_image"], [77, 3, 1, "", "classify_pdf"], [77, 3, 1, "", "clear_agent_context"], [77, 3, 1, "", "concatenate_feature_group_data"], [77, 3, 1, "", "create_agent"], [77, 3, 1, "", "create_agent_from_function"], [77, 3, 1, "", "create_algorithm"], [77, 3, 1, "", "create_algorithm_from_function"], [77, 3, 1, "", "create_batch_prediction"], [77, 3, 1, "", "create_chat_session"], [77, 3, 1, "", "create_custom_loss_function"], [77, 3, 1, "", "create_custom_loss_function_with_source_code"], [77, 3, 1, "", "create_custom_metric"], [77, 3, 1, "", "create_custom_metric_from_function"], [77, 3, 1, "", "create_dataset_from_application_connector"], [77, 3, 1, "", "create_dataset_from_database_connector"], [77, 3, 1, "", "create_dataset_from_file_connector"], [77, 3, 1, "", "create_dataset_from_pandas"], [77, 3, 1, "", "create_dataset_from_streaming_connector"], [77, 3, 1, "", "create_dataset_from_upload"], [77, 3, 1, "", "create_dataset_version_from_application_connector"], [77, 3, 1, "", "create_dataset_version_from_database_connector"], [77, 3, 1, "", "create_dataset_version_from_file_connector"], [77, 3, 1, "", "create_dataset_version_from_pandas"], [77, 3, 1, "", "create_dataset_version_from_upload"], [77, 3, 1, "", "create_deployment"], [77, 3, 1, "", "create_deployment_token"], [77, 3, 1, "", "create_deployment_webhook"], [77, 3, 1, "", "create_eda"], [77, 3, 1, "", "create_feature"], [77, 3, 1, "", "create_feature_group"], [77, 3, 1, "", "create_feature_group_from_function"], [77, 3, 1, "", "create_feature_group_from_pandas_df"], [77, 3, 1, "", "create_feature_group_from_python_function"], [77, 3, 1, "", "create_feature_group_from_spark_df"], [77, 3, 1, "", "create_feature_group_from_template"], [77, 3, 1, "", "create_feature_group_template"], [77, 3, 1, "", "create_feature_group_version"], [77, 3, 1, "", "create_graph_dashboard"], [77, 3, 1, "", "create_merge_feature_group"], [77, 3, 1, "", "create_model_from_functions"], [77, 3, 1, "", "create_model_from_python"], [77, 3, 1, "", "create_model_monitor"], [77, 3, 1, "", "create_module"], [77, 3, 1, "", "create_module_from_notebook"], [77, 3, 1, "", "create_monitor_alert"], [77, 3, 1, "", "create_nested_feature"], [77, 3, 1, "", "create_nlp_drift_monitor"], [77, 3, 1, "", "create_organization_group"], [77, 3, 1, "", "create_pipeline"], [77, 3, 1, "", "create_pipeline_step"], [77, 3, 1, "", "create_pipeline_step_from_function"], [77, 3, 1, "", "create_point_in_time_feature"], [77, 3, 1, "", "create_point_in_time_group"], [77, 3, 1, "", "create_point_in_time_group_feature"], [77, 3, 1, "", "create_project"], [77, 3, 1, "", "create_python_function"], [77, 3, 1, "", "create_refresh_policy"], [77, 3, 1, "", "create_sampling_feature_group"], [77, 3, 1, "", "create_snapshot_feature_group"], [77, 3, 1, "", "create_spark_df_from_feature_group_version"], [77, 3, 1, "", "create_streaming_dataset"], [77, 3, 1, "", "create_streaming_token"], [77, 3, 1, "", "create_train_test_data_split_feature_group"], [77, 3, 1, "", "create_transform_feature_group"], [77, 3, 1, "", "create_vector_store"], [77, 3, 1, "", "create_vector_store_version"], [77, 3, 1, "", "create_vision_drift_monitor"], [77, 3, 1, "", "delete_algorithm"], [77, 3, 1, "", "delete_api_key"], [77, 3, 1, "", "delete_application_connector"], [77, 3, 1, "", "delete_batch_prediction"], [77, 3, 1, "", "delete_custom_loss_function"], [77, 3, 1, "", "delete_custom_metric"], [77, 3, 1, "", "delete_database_connector"], [77, 3, 1, "", "delete_dataset"], [77, 3, 1, "", "delete_deployment"], [77, 3, 1, "", "delete_deployment_token"], [77, 3, 1, "", "delete_eda"], [77, 3, 1, "", "delete_eda_version"], [77, 3, 1, "", "delete_feature"], [77, 3, 1, "", "delete_feature_group"], [77, 3, 1, "", "delete_feature_group_template"], [77, 3, 1, "", "delete_file_connector"], [77, 3, 1, "", "delete_graph_dashboard"], [77, 3, 1, "", "delete_item_embeddings"], [77, 3, 1, "", "delete_model"], [77, 3, 1, "", "delete_model_monitor"], [77, 3, 1, "", "delete_model_monitor_version"], [77, 3, 1, "", "delete_model_version"], [77, 3, 1, "", "delete_module"], [77, 3, 1, "", "delete_monitor_alert"], [77, 3, 1, "", "delete_nested_feature"], [77, 3, 1, "", "delete_organization_group"], [77, 3, 1, "", "delete_pipeline"], [77, 3, 1, "", "delete_pipeline_step"], [77, 3, 1, "", "delete_point_in_time_group"], [77, 3, 1, "", "delete_project"], [77, 3, 1, "", "delete_python_function"], [77, 3, 1, "", "delete_refresh_policy"], [77, 3, 1, "", "delete_streaming_connector"], [77, 3, 1, "", "delete_streaming_token"], [77, 3, 1, "", "delete_vector_store"], [77, 3, 1, "", "delete_webhook"], [77, 3, 1, "", "describe_annotation"], [77, 3, 1, "", "describe_async_feature_group_operation"], [77, 3, 1, "", "describe_image"], [77, 3, 1, "", "describe_pipeline"], [77, 3, 1, "", "describe_pipeline_by_name"], [77, 3, 1, "", "detach_feature_group_from_template"], [77, 3, 1, "", "evaluate_prompt"], [77, 3, 1, "", "execute_agent"], [77, 3, 1, "", "execute_feature_group_sql"], [77, 3, 1, "", "export_feature_group_version_to_console"], [77, 3, 1, "", "export_feature_group_version_to_database_connector"], [77, 3, 1, "", "export_feature_group_version_to_file_connector"], [77, 3, 1, "", "export_model_artifact_as_feature_group"], [77, 3, 1, "", "generate_image"], [77, 3, 1, "", "get_agent_context_chat_history"], [77, 3, 1, "", "get_alternative_assignments"], [77, 3, 1, "", "get_anomalies"], [77, 3, 1, "", "get_assignments"], [77, 3, 1, "", "get_chat_response"], [77, 3, 1, "", "get_classification"], [77, 3, 1, "", "get_cluster"], [77, 3, 1, "", "get_custom_train_function_info"], [77, 3, 1, "", "get_document_to_annotate"], [77, 3, 1, "", "get_entailment"], [77, 3, 1, "", "get_entities_from_pdf"], [77, 3, 1, "", "get_forecast"], [77, 3, 1, "", "get_k_nearest"], [77, 3, 1, "", "get_labels"], [77, 3, 1, "", "get_llm_parameters"], [77, 3, 1, "", "get_multiple_k_nearest"], [77, 3, 1, "", "get_notebook_cell_completion"], [77, 3, 1, "", "get_objects_from_image"], [77, 3, 1, "", "get_personalized_ranking"], [77, 3, 1, "", "get_ranked_items"], [77, 3, 1, "", "get_recommendations"], [77, 3, 1, "", "get_related_items"], [77, 3, 1, "", "get_search_results"], [77, 3, 1, "", "get_sentiment"], [77, 3, 1, "", "get_summary"], [77, 3, 1, "", "get_train_function_input"], [77, 3, 1, "", "get_train_function_input_from_model_version"], [77, 3, 1, "", "get_training_config_options"], [77, 3, 1, "", "import_annotation_labels"], [77, 3, 1, "", "import_module"], [77, 3, 1, "", "invalidate_streaming_feature_group_data"], [77, 3, 1, "", "is_anomaly"], [77, 3, 1, "", "list_builtin_algorithms"], [77, 3, 1, "", "list_pipeline_versions"], [77, 3, 1, "", "lookup_features"], [77, 3, 1, "", "lookup_vector_store"], [77, 3, 1, "", "mark_upload_complete"], [77, 3, 1, "", "pause_refresh_policy"], [77, 3, 1, "", "predict"], [77, 3, 1, "", "predict_churn"], [77, 3, 1, "", "predict_class"], [77, 3, 1, "", "predict_fraud"], [77, 3, 1, "", "predict_from_datasets"], [77, 3, 1, "", "predict_language"], [77, 3, 1, "", "predict_lead"], [77, 3, 1, "", "predict_multiple"], [77, 3, 1, "", "predict_takeover"], [77, 3, 1, "", "predict_target"], [77, 3, 1, "", "predict_with_binary_data"], [77, 3, 1, "", "preview_feature_group_template_resolution"], [77, 3, 1, "", "remove_column_mapping"], [77, 3, 1, "", "remove_concatenation_config"], [77, 3, 1, "", "remove_dataset_from_project"], [77, 3, 1, "", "remove_deployment_feature_group_export_output"], [77, 3, 1, "", "remove_feature_group_annotation_label"], [77, 3, 1, "", "remove_feature_group_from_project"], [77, 3, 1, "", "remove_feature_group_tag"], [77, 3, 1, "", "remove_feature_tag"], [77, 3, 1, "", "remove_organization_group_from_feature_group_modifiers"], [77, 3, 1, "", "remove_organization_group_permission"], [77, 3, 1, "", "remove_project_tags"], [77, 3, 1, "", "remove_user_from_feature_group_modifiers"], [77, 3, 1, "", "remove_user_from_organization"], [77, 3, 1, "", "remove_user_from_organization_group"], [77, 3, 1, "", "rename_application_connector"], [77, 3, 1, "", "rename_database_connector"], [77, 3, 1, "", "rename_deployment"], [77, 3, 1, "", "rename_eda"], [77, 3, 1, "", "rename_model"], [77, 3, 1, "", "rename_model_monitor"], [77, 3, 1, "", "rename_project"], [77, 3, 1, "", "rename_streaming_connector"], [77, 3, 1, "", "render_feature_groups_for_llm"], [77, 3, 1, "", "rerun_eda"], [77, 3, 1, "", "rerun_model_monitor"], [77, 3, 1, "", "resume_refresh_policy"], [77, 3, 1, "", "retrain_model"], [77, 3, 1, "", "run_monitor_alert"], [77, 3, 1, "", "run_pipeline"], [77, 3, 1, "", "run_refresh_policy"], [77, 3, 1, "", "score_image"], [77, 3, 1, "", "set_agent_context_chat_history"], [77, 3, 1, "", "set_annotation_status_feature"], [77, 3, 1, "", "set_auto_deployment"], [77, 3, 1, "", "set_azure_blob_connection_string"], [77, 3, 1, "", "set_batch_prediction_database_connector_output"], [77, 3, 1, "", "set_batch_prediction_dataset"], [77, 3, 1, "", "set_batch_prediction_dataset_remap"], [77, 3, 1, "", "set_batch_prediction_feature_group"], [77, 3, 1, "", "set_batch_prediction_feature_group_output"], [77, 3, 1, "", "set_batch_prediction_file_connector_output"], [77, 3, 1, "", "set_batch_prediction_output_to_console"], [77, 3, 1, "", "set_column_data_type"], [77, 3, 1, "", "set_column_mapping"], [77, 3, 1, "", "set_dataset_column_data_type"], [77, 3, 1, "", "set_default_organization_group"], [77, 3, 1, "", "set_deployment_feature_group_export_database_connector_output"], [77, 3, 1, "", "set_deployment_feature_group_export_file_connector_output"], [77, 3, 1, "", "set_deployment_feature_group_version"], [77, 3, 1, "", "set_deployment_model_version"], [77, 3, 1, "", "set_feature_as_annotatable_feature"], [77, 3, 1, "", "set_feature_group_indexing_config"], [77, 3, 1, "", "set_feature_group_merge_config"], [77, 3, 1, "", "set_feature_group_modifier_lock"], [77, 3, 1, "", "set_feature_group_sampling_config"], [77, 3, 1, "", "set_feature_group_schema"], [77, 3, 1, "", "set_feature_group_transform_config"], [77, 3, 1, "", "set_feature_group_type"], [77, 3, 1, "", "set_feature_mapping"], [77, 3, 1, "", "set_feature_type"], [77, 3, 1, "", "set_model_prediction_params"], [77, 3, 1, "", "set_model_training_config"], [77, 3, 1, "", "set_natural_language_explanation"], [77, 3, 1, "", "set_project_feature_group_config"], [77, 3, 1, "", "set_streaming_retention_policy"], [77, 3, 1, "", "snapshot_streaming_data"], [77, 3, 1, "", "start_batch_prediction"], [77, 3, 1, "", "start_deployment"], [77, 3, 1, "", "stop_deployment"], [77, 3, 1, "", "stream_message"], [77, 3, 1, "", "streaming_evaluate_prompt"], [77, 3, 1, "", "train_model"], [77, 3, 1, "", "transcribe_audio"], [77, 3, 1, "", "transfer_style"], [77, 3, 1, "", "unset_feature_as_annotatable_feature"], [77, 3, 1, "", "update_agent"], [77, 3, 1, "", "update_agent_with_function"], [77, 3, 1, "", "update_algorithm"], [77, 3, 1, "", "update_algorithm_from_function"], [77, 3, 1, "", "update_annotation_status"], [77, 3, 1, "", "update_batch_prediction"], [77, 3, 1, "", "update_custom_loss_function"], [77, 3, 1, "", "update_custom_loss_function_with_source_code"], [77, 3, 1, "", "update_custom_metric"], [77, 3, 1, "", "update_custom_metric_from_function"], [77, 3, 1, "", "update_dataset_feature_group_feature_expression"], [77, 3, 1, "", "update_deployment"], [77, 3, 1, "", "update_feature"], [77, 3, 1, "", "update_feature_group"], [77, 3, 1, "", "update_feature_group_from_pandas_df"], [77, 3, 1, "", "update_feature_group_from_spark_df"], [77, 3, 1, "", "update_feature_group_function_definition"], [77, 3, 1, "", "update_feature_group_git"], [77, 3, 1, "", "update_feature_group_python_function"], [77, 3, 1, "", "update_feature_group_python_function_bindings"], [77, 3, 1, "", "update_feature_group_sql_definition"], [77, 3, 1, "", "update_feature_group_template"], [77, 3, 1, "", "update_feature_group_template_bindings"], [77, 3, 1, "", "update_feature_group_zip"], [77, 3, 1, "", "update_graph_dashboard"], [77, 3, 1, "", "update_graph_to_dashboard"], [77, 3, 1, "", "update_module"], [77, 3, 1, "", "update_module_from_notebook"], [77, 3, 1, "", "update_monitor_alert"], [77, 3, 1, "", "update_nested_feature"], [77, 3, 1, "", "update_pipeline"], [77, 3, 1, "", "update_pipeline_step"], [77, 3, 1, "", "update_pipeline_step_from_function"], [77, 3, 1, "", "update_point_in_time_feature"], [77, 3, 1, "", "update_point_in_time_group"], [77, 3, 1, "", "update_point_in_time_group_feature"], [77, 3, 1, "", "update_python_function"], [77, 3, 1, "", "update_python_function_code"], [77, 3, 1, "", "update_python_model"], [77, 3, 1, "", "update_python_model_git"], [77, 3, 1, "", "update_python_model_zip"], [77, 3, 1, "", "update_refresh_policy"], [77, 3, 1, "", "update_vector_store"], [77, 3, 1, "", "update_webhook"], [77, 3, 1, "", "upload_part"], [77, 3, 1, "", "upsert_data"], [77, 3, 1, "", "upsert_item_attributes"], [77, 3, 1, "", "upsert_item_embeddings"], [77, 3, 1, "", "upsert_multiple_data"], [77, 3, 1, "", "upsert_multiple_item_attributes"], [77, 3, 1, "", "upsert_multiple_item_embeddings"], [77, 3, 1, "", "upsert_multiple_user_attributes"], [77, 3, 1, "", "upsert_user_attributes"], [77, 3, 1, "", "use_feature_group_for_training"], [77, 3, 1, "", "verify_application_connector"], [77, 3, 1, "", "verify_database_connector"], [77, 3, 1, "", "verify_file_connector"], [77, 3, 1, "", "verify_streaming_connector"]], "abacusai.ApiEnum": [[77, 3, 1, "", "__eq__"], [77, 3, 1, "", "__hash__"]], "abacusai.ApiException": [[77, 3, 1, "", "__str__"]], "abacusai.BatchSize": [[77, 2, 1, "", "BATCH_1024"], [77, 2, 1, "", "BATCH_128"], [77, 2, 1, "", "BATCH_16"], [77, 2, 1, "", "BATCH_256"], [77, 2, 1, "", "BATCH_32"], [77, 2, 1, "", "BATCH_384"], [77, 2, 1, "", "BATCH_512"], [77, 2, 1, "", "BATCH_64"], [77, 2, 1, "", "BATCH_740"], [77, 2, 1, "", "BATCH_8"]], "abacusai.ClusteringImputationMethod": [[77, 2, 1, "", "AUTOMATIC"], [77, 2, 1, "", "INTERPOLATE"], [77, 2, 1, "", "ZEROS"]], "abacusai.ClusteringTimeseriesTrainingConfig": [[77, 2, 1, "", "imputation"], [77, 2, 1, "", "num_clusters_selection"], [77, 2, 1, "", "problem_type"]], "abacusai.ClusteringTrainingConfig": [[77, 2, 1, "", "num_clusters_selection"], [77, 2, 1, "", "problem_type"]], "abacusai.ConnectorType": [[77, 2, 1, "", "APPLICATION"], [77, 2, 1, "", "DATABASE"], [77, 2, 1, "", "FILE"], [77, 2, 1, "", "STREAMING"]], "abacusai.CumulativeForecastingTrainingConfig": [[77, 2, 1, "", "cumulative_prediction_lengths"], [77, 2, 1, "", "historical_frequency"], [77, 2, 1, "", "predict_residuals"], [77, 2, 1, "", "problem_type"], [77, 2, 1, "", "skip_input_transform"], [77, 2, 1, "", "skip_target_transform"], [77, 2, 1, "", "test_split"]], "abacusai.CustomAlgorithmTrainingConfig": [[77, 2, 1, "", "predict_function_name"], [77, 2, 1, "", "predict_many_function_name"], [77, 2, 1, "", "predict_module_name"], [77, 2, 1, "", "problem_type"], [77, 2, 1, "", "test_split"], [77, 2, 1, "", "train_function_name"], [77, 2, 1, "", "train_module_name"], [77, 2, 1, "", "training_input_tables"]], "abacusai.CustomTrainedModelTrainingConfig": [[77, 2, 1, "", "docker_image_uri"], [77, 2, 1, "", "index_output_path"], [77, 2, 1, "", "max_catalog_size"], [77, 2, 1, "", "max_dimension"], [77, 2, 1, "", "problem_type"], [77, 2, 1, "", "service_port"]], "abacusai.DatabaseConnectorExportConfig": [[77, 2, 1, "", "additional_id_columns"], [77, 2, 1, "", "connector_type"], [77, 2, 1, "", "data_columns"], [77, 2, 1, "", "database_connector_id"], [77, 2, 1, "", "id_column"], [77, 2, 1, "", "mode"], [77, 2, 1, "", "object_name"], [77, 3, 1, "", "to_dict"]], "abacusai.DocumentClassificationTrainingConfig": [[77, 2, 1, "", "batch_size"], [77, 2, 1, "", "dropout_rate"], [77, 2, 1, "", "problem_type"], [77, 2, 1, "", "test_split"], [77, 2, 1, "", "zero_shot_hypotheses"]], "abacusai.DocumentSummarizationTrainingConfig": [[77, 2, 1, "", "batch_size"], [77, 2, 1, "", "dropout_rate"], [77, 2, 1, "", "problem_type"], [77, 2, 1, "", "test_split"]], "abacusai.DocumentVisualizationTrainingConfig": [[77, 2, 1, "", "batch_size"], [77, 2, 1, "", "dropout_rate"], [77, 2, 1, "", "problem_type"], [77, 2, 1, "", "test_split"]], "abacusai.ExperimentationMode": [[77, 2, 1, "", "RAPID"], [77, 2, 1, "", "THOROUGH"]], "abacusai.FeatureGroupExportConfig": [[77, 2, 1, "", "connector_type"]], "abacusai.FileConnectorExportConfig": [[77, 2, 1, "", "connector_type"], [77, 2, 1, "", "export_file_format"], [77, 2, 1, "", "location"], [77, 3, 1, "", "to_dict"]], "abacusai.FillLogic": [[77, 2, 1, "", "AVERAGE"], [77, 2, 1, "", "BACKFILL"], [77, 2, 1, "", "CUSTOM"], [77, 2, 1, "", "FORWARDFILL"], [77, 2, 1, "", "LINEAR"], [77, 2, 1, "", "MAX"], [77, 2, 1, "", "MEDIAN"], [77, 2, 1, "", "MIN"], [77, 2, 1, "", "NEAREST"]], "abacusai.ForecastingDataSplitType": [[77, 2, 1, "", "AUTO"], [77, 2, 1, "", "ITEM"], [77, 2, 1, "", "PREDICTION_LENGTH"], [77, 2, 1, "", "TIMESTAMP"]], "abacusai.ForecastingFillMethod": [[77, 2, 1, "", "BACK"], [77, 2, 1, "", "FUTURE"], [77, 2, 1, "", "MIDDLE"]], "abacusai.ForecastingFrequency": [[77, 2, 1, "", "DAILY"], [77, 2, 1, "", "HOURLY"], [77, 2, 1, "", "MONTH_END"], [77, 2, 1, "", "MONTH_START"], [77, 2, 1, "", "QUARTER_END"], [77, 2, 1, "", "QUARTER_START"], [77, 2, 1, "", "WEEKLY_MONDAY_START"], [77, 2, 1, "", "WEEKLY_SATURDAY_START"], [77, 2, 1, "", "WEEKLY_SUNDAY_START"], [77, 2, 1, "", "YEARLY"]], "abacusai.ForecastingLocalScaling": [[77, 2, 1, "", "ITEM"], [77, 2, 1, "", "LAST_POINT"], [77, 2, 1, "", "MIN_MAX"], [77, 2, 1, "", "MIN_STD"], [77, 2, 1, "", "ROBUST"], [77, 2, 1, "", "SLIDING_ZSCORE"], [77, 2, 1, "", "ZSCORE"]], "abacusai.ForecastingLossFunction": [[77, 2, 1, "", "ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [77, 2, 1, "", "CUSTOM"], [77, 2, 1, "", "GAUSSIAN"], [77, 2, 1, "", "GAUSSIAN_FULL_COVARIANCE"], [77, 2, 1, "", "GUASSIAN_EXPONENTIAL"], [77, 2, 1, "", "LOG_ROOT_MEAN_SQUARE_ERROR"], [77, 2, 1, "", "MEAN_ABSOLUTE_ERROR"], [77, 2, 1, "", "MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [77, 2, 1, "", "MIX_GAUSSIANS"], [77, 2, 1, "", "NEGATIVE_BINOMIAL"], [77, 2, 1, "", "NORMALIZED_MEAN_ABSOLUTE_ERROR"], [77, 2, 1, "", "NORMALIZED_ROOT_MEAN_SQUARE_ERROR"], [77, 2, 1, "", "PEAKS_MEAN_ABSOLUTE_ERROR"], [77, 2, 1, "", "POINTWISE_ACCURACY"], [77, 2, 1, "", "ROOT_MEAN_SQUARE_ERROR"], [77, 2, 1, "", "STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [77, 2, 1, "", "WEIBULL"]], "abacusai.ForecastingObjective": [[77, 2, 1, "", "ACCURACY"], [77, 2, 1, "", "BIAS"], [77, 2, 1, "", "CMAPE"], [77, 2, 1, "", "CV"], [77, 2, 1, "", "MAPE"], [77, 2, 1, "", "RMSE"], [77, 2, 1, "", "SRMSE"], [77, 2, 1, "", "WAPE"]], "abacusai.ForecastingQuanitlesExtensionMethod": [[77, 2, 1, "", "ANCESTRAL_SIMULATION"], [77, 2, 1, "", "DIRECT"], [77, 2, 1, "", "QUADRATIC"]], "abacusai.ForecastingTrainingConfig": [[77, 2, 1, "", "additional_forecast_keys"], [77, 2, 1, "", "backtesting_window_step_size"], [77, 2, 1, "", "batch_renormalization"], [77, 2, 1, "", "batch_size"], [77, 2, 1, "", "convolution_filters"], [77, 2, 1, "", "convolutional_layers"], [77, 2, 1, "", "custom_loss_functions"], [77, 2, 1, "", "custom_metrics"], [77, 2, 1, "", "data_split_feature_group_table_name"], [77, 2, 1, "", "datetime_holiday_calendars"], [77, 2, 1, "", "disable_networks_without_analytic_quantiles"], [77, 2, 1, "", "dropout_rate"], [77, 2, 1, "", "enable_clustering"], [77, 2, 1, "", "enable_cold_start"], [77, 2, 1, "", "enable_feature_selection"], [77, 2, 1, "", "enable_multiple_backtests"], [77, 2, 1, "", "experimentation_mode"], [77, 2, 1, "", "fill_missing_values"], [77, 2, 1, "", "filter_items"], [77, 2, 1, "", "force_prediction_length"], [77, 2, 1, "", "forecast_frequency"], [77, 2, 1, "", "full_data_retraining"], [77, 2, 1, "", "handle_zeros_as_missing_values"], [77, 2, 1, "", "history_length"], [77, 2, 1, "", "initial_learning_rate"], [77, 2, 1, "", "item_attributes_weight_column"], [77, 2, 1, "", "l2_regularization_factor"], [77, 2, 1, "", "local_scaling_mode"], [77, 2, 1, "", "loss_function"], [77, 2, 1, "", "max_scale_context"], [77, 2, 1, "", "num_backtesting_windows"], [77, 2, 1, "", "number_of_samples"], [77, 2, 1, "", "objective"], [77, 2, 1, "", "prediction_length"], [77, 2, 1, "", "prediction_step_size"], [77, 2, 1, "", "probability_quantiles"], [77, 2, 1, "", "problem_type"], [77, 2, 1, "", "quantiles_extension_method"], [77, 2, 1, "", "recurrent_layers"], [77, 2, 1, "", "recurrent_units"], [77, 2, 1, "", "skip_local_scale_target"], [77, 2, 1, "", "skip_missing"], [77, 2, 1, "", "skip_timeseries_weight_scaling"], [77, 2, 1, "", "smooth_history"], [77, 2, 1, "", "sort_objective"], [77, 2, 1, "", "symmetrize_quantiles"], [77, 2, 1, "", "test_by_item"], [77, 2, 1, "", "test_split"], [77, 2, 1, "", "test_start"], [77, 2, 1, "", "timeseries_loss_weight_column"], [77, 2, 1, "", "timeseries_weight_column"], [77, 2, 1, "", "training_point_overlap"], [77, 2, 1, "", "type_of_split"], [77, 2, 1, "", "underprediction_weight"], [77, 2, 1, "", "use_all_item_totals"], [77, 2, 1, "", "use_item_id"], [77, 2, 1, "", "use_item_weights_in_objective"], [77, 2, 1, "", "use_log_transforms"], [77, 2, 1, "", "use_timeseries_weights_in_objective"], [77, 2, 1, "", "zero_predictor"]], "abacusai.HolidayCalendars": [[77, 2, 1, "", "AU"], [77, 2, 1, "", "UK"], [77, 2, 1, "", "US"]], "abacusai.NERModelType": [[77, 2, 1, "", "LEARNED"], [77, 2, 1, "", "PRETRAINED_BERT"], [77, 2, 1, "", "PRETRAINED_MULTILINGUAL"], [77, 2, 1, "", "PRETRAINED_ROBERTA_27"], [77, 2, 1, "", "PRETRAINED_ROBERTA_43"]], "abacusai.NERObjective": [[77, 2, 1, "", "ANNOTATIONS_PRECISION"], [77, 2, 1, "", "ANNOTATIONS_RECALL"], [77, 2, 1, "", "AUC"], [77, 2, 1, "", "LOG_LOSS"], [77, 2, 1, "", "PRECISION"], [77, 2, 1, "", "RECALL"]], "abacusai.NLPDocumentFormat": [[77, 2, 1, "", "AUTO"], [77, 2, 1, "", "DOC"], [77, 2, 1, "", "TEXT"], [77, 2, 1, "", "TOKENS"]], "abacusai.NSamplingConfig": [[77, 2, 1, "", "key_columns"], [77, 2, 1, "", "sample_count"], [77, 2, 1, "", "sampling_method"]], "abacusai.NamedEntityExtractionTrainingConfig": [[77, 2, 1, "", "active_labels_column"], [77, 2, 1, "", "batch_size"], [77, 2, 1, "", "document_format"], [77, 2, 1, "", "dropout_rate"], [77, 2, 1, "", "include_longformer"], [77, 2, 1, "", "ner_model_type"], [77, 2, 1, "", "objective"], [77, 2, 1, "", "problem_type"], [77, 2, 1, "", "sort_objective"], [77, 2, 1, "", "test_row_indicator"], [77, 2, 1, "", "test_split"]], "abacusai.NaturalLanguageSearchTrainingConfig": [[77, 2, 1, "", "abacus_internal_model"], [77, 2, 1, "", "chunk_overlap_fraction"], [77, 2, 1, "", "index_fraction"], [77, 2, 1, "", "larger_embeddings"], [77, 2, 1, "", "num_completion_tokens"], [77, 2, 1, "", "problem_type"], [77, 2, 1, "", "search_chunk_size"]], "abacusai.OptimizationTrainingConfig": [[77, 2, 1, "", "problem_type"]], "abacusai.OutputVariableMapping": [[77, 2, 1, "", "name"], [77, 2, 1, "", "variable_type"]], "abacusai.ParsingConfig": [[77, 2, 1, "", "csv_delimiter"], [77, 2, 1, "", "escape"], [77, 2, 1, "", "file_path_with_schema"]], "abacusai.PercentSamplingConfig": [[77, 2, 1, "", "key_columns"], [77, 2, 1, "", "sample_percent"], [77, 2, 1, "", "sampling_method"]], "abacusai.PersonalizationObjective": [[77, 2, 1, "", "COVERAGE"], [77, 2, 1, "", "MAP"], [77, 2, 1, "", "MAP_10"], [77, 2, 1, "", "MAP_5"], [77, 2, 1, "", "MRR"], [77, 2, 1, "", "NDCG"], [77, 2, 1, "", "NDCG_10"], [77, 2, 1, "", "NDCG_5"], [77, 2, 1, "", "PERSONALIZATION"]], "abacusai.PersonalizationTrainingConfig": [[77, 2, 1, "", "add_time_features"], [77, 2, 1, "", "batch_size"], [77, 2, 1, "", "compute_rerank_metrics"], [77, 2, 1, "", "compute_session_metrics"], [77, 2, 1, "", "data_split_feature_group_table_name"], [77, 2, 1, "", "disable_gpu"], [77, 2, 1, "", "disable_timestamp_scalar_features"], [77, 2, 1, "", "disable_transformer"], [77, 2, 1, "", "downsample_item_popularity_percentile"], [77, 2, 1, "", "dropout_rate"], [77, 2, 1, "", "explicit_time_split"], [77, 2, 1, "", "explore_lookback_hours"], [77, 2, 1, "", "filter_history"], [77, 2, 1, "", "full_data_retraining"], [77, 2, 1, "", "item_id_dropout"], [77, 2, 1, "", "max_history_length"], [77, 2, 1, "", "max_user_history_len_percentile"], [77, 2, 1, "", "objective"], [77, 2, 1, "", "problem_type"], [77, 2, 1, "", "recent_days_for_training"], [77, 2, 1, "", "sequential_training"], [77, 2, 1, "", "session_event_types"], [77, 2, 1, "", "sort_objective"], [77, 2, 1, "", "target_action_types"], [77, 2, 1, "", "target_action_weights"], [77, 2, 1, "", "test_last_items_length"], [77, 2, 1, "", "test_on_user_split"], [77, 2, 1, "", "test_row_indicator"], [77, 2, 1, "", "test_split"], [77, 2, 1, "", "test_split_on_last_k_items"], [77, 2, 1, "", "test_window_length_hours"], [77, 2, 1, "", "training_mode"], [77, 2, 1, "", "training_start_date"]], "abacusai.PersonalizationTrainingMode": [[77, 2, 1, "", "EXPERIMENTAL"], [77, 2, 1, "", "PRODUCTION"]], "abacusai.PredictionClient": [[77, 3, 1, "", "check_constraints"], [77, 3, 1, "", "classify_image"], [77, 3, 1, "", "classify_pdf"], [77, 3, 1, "", "describe_image"], [77, 3, 1, "", "execute_agent"], [77, 3, 1, "", "generate_image"], [77, 3, 1, "", "get_alternative_assignments"], [77, 3, 1, "", "get_anomalies"], [77, 3, 1, "", "get_assignments"], [77, 3, 1, "", "get_chat_response"], [77, 3, 1, "", "get_classification"], [77, 3, 1, "", "get_cluster"], [77, 3, 1, "", "get_entailment"], [77, 3, 1, "", "get_entities_from_pdf"], [77, 3, 1, "", "get_forecast"], [77, 3, 1, "", "get_k_nearest"], [77, 3, 1, "", "get_labels"], [77, 3, 1, "", "get_multiple_k_nearest"], [77, 3, 1, "", "get_objects_from_image"], [77, 3, 1, "", "get_personalized_ranking"], [77, 3, 1, "", "get_ranked_items"], [77, 3, 1, "", "get_recommendations"], [77, 3, 1, "", "get_related_items"], [77, 3, 1, "", "get_search_results"], [77, 3, 1, "", "get_sentiment"], [77, 3, 1, "", "get_summary"], [77, 3, 1, "", "is_anomaly"], [77, 3, 1, "", "lookup_features"], [77, 3, 1, "", "predict"], [77, 3, 1, "", "predict_churn"], [77, 3, 1, "", "predict_class"], [77, 3, 1, "", "predict_fraud"], [77, 3, 1, "", "predict_from_datasets"], [77, 3, 1, "", "predict_language"], [77, 3, 1, "", "predict_lead"], [77, 3, 1, "", "predict_multiple"], [77, 3, 1, "", "predict_raw"], [77, 3, 1, "", "predict_takeover"], [77, 3, 1, "", "predict_target"], [77, 3, 1, "", "predict_with_binary_data"], [77, 3, 1, "", "score_image"], [77, 3, 1, "", "transcribe_audio"], [77, 3, 1, "", "transfer_style"]], "abacusai.ProblemType": [[77, 2, 1, "", "AI_AGENT"], [77, 2, 1, "", "ANOMALY_DETECTION"], [77, 2, 1, "", "ANOMALY_OUTLIERS"], [77, 2, 1, "", "CLUSTERING"], [77, 2, 1, "", "CLUSTERING_TIMESERIES"], [77, 2, 1, "", "CUMULATIVE_FORECASTING"], [77, 2, 1, "", "CUSTOM_ALGORITHM"], [77, 2, 1, "", "CUSTOM_TRAINED_MODEL"], [77, 2, 1, "", "DOCUMENT_CLASSIFICATION"], [77, 2, 1, "", "DOCUMENT_SUMMARIZATION"], [77, 2, 1, "", "DOCUMENT_VISUALIZATION"], [77, 2, 1, "", "FEATURE_STORE"], [77, 2, 1, "", "FORECASTING"], [77, 2, 1, "", "IMAGE_CLASSIFICATION"], [77, 2, 1, "", "IMAGE_VALUE_PREDICTION"], [77, 2, 1, "", "LANGUAGE_DETECTION"], [77, 2, 1, "", "MODEL_MONITORING"], [77, 2, 1, "", "NAMED_ENTITY_EXTRACTION"], [77, 2, 1, "", "NATURAL_LANGUAGE_SEARCH"], [77, 2, 1, "", "OBJECT_DETECTION"], [77, 2, 1, "", "OPTIMIZATION"], [77, 2, 1, "", "PERSONALIZATION"], [77, 2, 1, "", "PREDICTIVE_MODELING"], [77, 2, 1, "", "PRETRAINED_MODELS"], [77, 2, 1, "", "SENTENCE_BOUNDARY_DETECTION"], [77, 2, 1, "", "SENTIMENT_DETECTION"], [77, 2, 1, "", "THEME_ANALYSIS"]], "abacusai.PythonFunctionArgument": [[77, 2, 1, "", "is_required"], [77, 2, 1, "", "name"], [77, 2, 1, "", "pipeline_variable"], [77, 2, 1, "", "value"], [77, 2, 1, "", "variable_type"]], "abacusai.PythonFunctionArgumentType": [[77, 2, 1, "", "BATCH_PREDICTION_ID"], [77, 2, 1, "", "BOOLEAN"], [77, 2, 1, "", "DATASET_ID"], [77, 2, 1, "", "DEPLOYMENT_ID"], [77, 2, 1, "", "FEATURE_GROUP"], [77, 2, 1, "", "FEATURE_GROUP_ID"], [77, 2, 1, "", "FLOAT"], [77, 2, 1, "", "INTEGER"], [77, 2, 1, "", "JSON"], [77, 2, 1, "", "LIST"], [77, 2, 1, "", "MODEL_ID"], [77, 2, 1, "", "MONITOR_ID"], [77, 2, 1, "", "STRING"]], "abacusai.ReadOnlyClient": [[77, 3, 1, "", "delete_graph_from_dashboard"], [77, 3, 1, "", "describe_algorithm"], [77, 3, 1, "", "describe_batch_prediction"], [77, 3, 1, "", "describe_batch_prediction_version"], [77, 3, 1, "", "describe_custom_loss_function"], [77, 3, 1, "", "describe_custom_metric"], [77, 3, 1, "", "describe_custom_metric_version"], [77, 3, 1, "", "describe_dataset"], [77, 3, 1, "", "describe_dataset_version"], [77, 3, 1, "", "describe_deployment"], [77, 3, 1, "", "describe_eda"], [77, 3, 1, "", "describe_eda_version"], [77, 3, 1, "", "describe_feature_group"], [77, 3, 1, "", "describe_feature_group_by_table_name"], [77, 3, 1, "", "describe_feature_group_export"], [77, 3, 1, "", "describe_feature_group_template"], [77, 3, 1, "", "describe_feature_group_version"], [77, 3, 1, "", "describe_graph_dashboard"], [77, 3, 1, "", "describe_graph_for_dashboard"], [77, 3, 1, "", "describe_model"], [77, 3, 1, "", "describe_model_artifacts_export"], [77, 3, 1, "", "describe_model_monitor"], [77, 3, 1, "", "describe_model_monitor_version"], [77, 3, 1, "", "describe_model_version"], [77, 3, 1, "", "describe_module"], [77, 3, 1, "", "describe_monitor_alert"], [77, 3, 1, "", "describe_monitor_alert_version"], [77, 3, 1, "", "describe_organization_group"], [77, 3, 1, "", "describe_pipeline_step"], [77, 3, 1, "", "describe_pipeline_step_by_name"], [77, 3, 1, "", "describe_pipeline_version"], [77, 3, 1, "", "describe_problem_type"], [77, 3, 1, "", "describe_project"], [77, 3, 1, "", "describe_project_feature_group"], [77, 3, 1, "", "describe_python_function"], [77, 3, 1, "", "describe_refresh_pipeline_run"], [77, 3, 1, "", "describe_refresh_policy"], [77, 3, 1, "", "describe_train_test_data_split_feature_group"], [77, 3, 1, "", "describe_train_test_data_split_feature_group_version"], [77, 3, 1, "", "describe_upload"], [77, 3, 1, "", "describe_use_case_requirements"], [77, 3, 1, "", "describe_user"], [77, 3, 1, "", "describe_vector_store"], [77, 3, 1, "", "describe_vector_store_by_name"], [77, 3, 1, "", "describe_vector_store_version"], [77, 3, 1, "", "describe_webhook"], [77, 3, 1, "", "download_batch_prediction_result_chunk"], [77, 3, 1, "", "download_execute_feature_group_operation_result_part_chunk"], [77, 3, 1, "", "execute_async_feature_group_operation"], [77, 3, 1, "", "export_custom_model_version"], [77, 3, 1, "", "generate_natural_language_explanation"], [77, 3, 1, "", "get_annotations_status"], [77, 3, 1, "", "get_api_endpoint"], [77, 3, 1, "", "get_batch_prediction_connector_errors"], [77, 3, 1, "", "get_chat_session"], [77, 3, 1, "", "get_collinearity_for_feature"], [77, 3, 1, "", "get_database_connector_object_schema"], [77, 3, 1, "", "get_dataset_schema"], [77, 3, 1, "", "get_docstore_document"], [77, 3, 1, "", "get_docstore_image"], [77, 3, 1, "", "get_drift_for_feature"], [77, 3, 1, "", "get_eda_collinearity"], [77, 3, 1, "", "get_eda_data_consistency"], [77, 3, 1, "", "get_eda_forecasting_analysis"], [77, 3, 1, "", "get_execute_feature_group_operation_result_part_count"], [77, 3, 1, "", "get_feature_association"], [77, 3, 1, "", "get_feature_group_export_connector_errors"], [77, 3, 1, "", "get_feature_group_schema"], [77, 3, 1, "", "get_feature_group_version_export_download_url"], [77, 3, 1, "", "get_feature_importance_by_model_version"], [77, 3, 1, "", "get_file_connector_instructions"], [77, 3, 1, "", "get_materialization_logs"], [77, 3, 1, "", "get_model_metrics"], [77, 3, 1, "", "get_model_monitor_chart_from_organization"], [77, 3, 1, "", "get_model_monitor_summary"], [77, 3, 1, "", "get_model_monitor_summary_from_organization"], [77, 3, 1, "", "get_model_monitoring_logs"], [77, 3, 1, "", "get_model_training_types_for_deployment"], [77, 3, 1, "", "get_natural_language_explanation"], [77, 3, 1, "", "get_outliers_for_batch_prediction_feature"], [77, 3, 1, "", "get_outliers_for_feature"], [77, 3, 1, "", "get_prediction_drift"], [77, 3, 1, "", "get_project_feature_group_config"], [77, 3, 1, "", "get_recent_feature_group_streamed_data"], [77, 3, 1, "", "get_schema"], [77, 3, 1, "", "get_training_data_logs"], [77, 3, 1, "", "get_training_logs"], [77, 3, 1, "", "list_algorithms"], [77, 3, 1, "", "list_api_keys"], [77, 3, 1, "", "list_application_connector_objects"], [77, 3, 1, "", "list_application_connectors"], [77, 3, 1, "", "list_batch_prediction_versions"], [77, 3, 1, "", "list_batch_predictions"], [77, 3, 1, "", "list_chat_sessions"], [77, 3, 1, "", "list_custom_loss_functions"], [77, 3, 1, "", "list_custom_metrics"], [77, 3, 1, "", "list_database_connector_objects"], [77, 3, 1, "", "list_database_connectors"], [77, 3, 1, "", "list_dataset_versions"], [77, 3, 1, "", "list_datasets"], [77, 3, 1, "", "list_deployment_tokens"], [77, 3, 1, "", "list_deployment_webhooks"], [77, 3, 1, "", "list_deployments"], [77, 3, 1, "", "list_eda"], [77, 3, 1, "", "list_eda_versions"], [77, 3, 1, "", "list_feature_group_exports"], [77, 3, 1, "", "list_feature_group_modifiers"], [77, 3, 1, "", "list_feature_group_templates"], [77, 3, 1, "", "list_feature_group_versions"], [77, 3, 1, "", "list_feature_groups"], [77, 3, 1, "", "list_file_connectors"], [77, 3, 1, "", "list_graph_dashboards"], [77, 3, 1, "", "list_model_artifacts_exports"], [77, 3, 1, "", "list_model_monitor_versions"], [77, 3, 1, "", "list_model_monitors"], [77, 3, 1, "", "list_model_versions"], [77, 3, 1, "", "list_models"], [77, 3, 1, "", "list_modules"], [77, 3, 1, "", "list_monitor_alert_versions_for_monitor_version"], [77, 3, 1, "", "list_monitor_alerts_for_monitor"], [77, 3, 1, "", "list_organization_groups"], [77, 3, 1, "", "list_organization_model_monitors"], [77, 3, 1, "", "list_organization_users"], [77, 3, 1, "", "list_pipelines"], [77, 3, 1, "", "list_project_datasets"], [77, 3, 1, "", "list_project_feature_group_templates"], [77, 3, 1, "", "list_project_feature_groups"], [77, 3, 1, "", "list_projects"], [77, 3, 1, "", "list_python_function_feature_groups"], [77, 3, 1, "", "list_python_functions"], [77, 3, 1, "", "list_refresh_pipeline_runs"], [77, 3, 1, "", "list_refresh_policies"], [77, 3, 1, "", "list_streaming_connectors"], [77, 3, 1, "", "list_streaming_tokens"], [77, 3, 1, "", "list_uploads"], [77, 3, 1, "", "list_use_cases"], [77, 3, 1, "", "list_vector_store_versions"], [77, 3, 1, "", "list_vector_stores"], [77, 3, 1, "", "model_monitor_version_metric_data"], [77, 3, 1, "", "pause_pipeline_refresh_schedule"], [77, 3, 1, "", "query_feature_group_code_generator"], [77, 3, 1, "", "render_feature_group_data_for_llm"], [77, 3, 1, "", "resume_pipeline_refresh_schedule"], [77, 3, 1, "", "search_feature_groups"], [77, 3, 1, "", "set_dataset_database_connector_config"], [77, 3, 1, "", "set_default_model_algorithm"], [77, 3, 1, "", "set_model_objective"], [77, 3, 1, "", "suggest_feature_group_template_for_feature_group"], [77, 3, 1, "", "unset_pipeline_refresh_schedule"], [77, 3, 1, "", "validate_project"], [77, 3, 1, "", "verify_and_describe_annotation"]], "abacusai.RegressionAugmentationStrategy": [[77, 2, 1, "", "RESAMPLE"], [77, 2, 1, "", "SMOTE"]], "abacusai.RegressionLossFunction": [[77, 2, 1, "", "AUTOMATIC"], [77, 2, 1, "", "CROSS_ENTROPY"], [77, 2, 1, "", "CUSTOM"], [77, 2, 1, "", "FOCAL_CROSS_ENTROPY"], [77, 2, 1, "", "HUBER"], [77, 2, 1, "", "MAE"], [77, 2, 1, "", "MAPE"], [77, 2, 1, "", "MSE"], [77, 2, 1, "", "MSLE"], [77, 2, 1, "", "TWEEDIE"]], "abacusai.RegressionObjective": [[77, 2, 1, "", "ACCURACY"], [77, 2, 1, "", "AUC"], [77, 2, 1, "", "F1_SCORE"], [77, 2, 1, "", "LOG_LOSS"], [77, 2, 1, "", "MAE"], [77, 2, 1, "", "MAPE"], [77, 2, 1, "", "PRECISION"], [77, 2, 1, "", "RECALL"], [77, 2, 1, "", "RMSE"], [77, 2, 1, "", "R_SQUARED_COEFFICIENT_OF_DETERMINATION"], [77, 2, 1, "", "WAPE"]], "abacusai.RegressionTargetTransform": [[77, 2, 1, "", "BOX_COX"], [77, 2, 1, "", "LOG"], [77, 2, 1, "", "QUANTILE"], [77, 2, 1, "", "YEO_JOHNSON"]], "abacusai.RegressionTimeSplitMethod": [[77, 2, 1, "", "TEST_SPLIT_PERCENTAGE_BASED"], [77, 2, 1, "", "TEST_START_TIMESTAMP_BASED"]], "abacusai.RegressionTrainingConfig": [[77, 2, 1, "", "active_labels_column"], [77, 2, 1, "", "augmentation_strategy"], [77, 2, 1, "", "batch_size"], [77, 2, 1, "", "custom_loss_functions"], [77, 2, 1, "", "custom_metrics"], [77, 2, 1, "", "data_split_feature_group_table_name"], [77, 2, 1, "", "disable_test_val_fold"], [77, 2, 1, "", "drop_original_categoricals"], [77, 2, 1, "", "dropout_rate"], [77, 2, 1, "", "feature_selection_intensity"], [77, 2, 1, "", "ignore_datetime_features"], [77, 2, 1, "", "is_multilingual"], [77, 2, 1, "", "k_fold_cross_validation"], [77, 2, 1, "", "loss_function"], [77, 2, 1, "", "loss_parameters"], [77, 2, 1, "", "max_text_words"], [77, 2, 1, "", "min_categorical_count"], [77, 2, 1, "", "num_cv_folds"], [77, 2, 1, "", "numeric_clipping_percentile"], [77, 2, 1, "", "objective"], [77, 2, 1, "", "perform_feature_selection"], [77, 2, 1, "", "pretrained_model_name"], [77, 2, 1, "", "problem_type"], [77, 2, 1, "", "rare_class_augmentation_threshold"], [77, 2, 1, "", "rebalance_classes"], [77, 2, 1, "", "sample_weight"], [77, 2, 1, "", "sampling_unit_keys"], [77, 2, 1, "", "sort_objective"], [77, 2, 1, "", "target_encode_categoricals"], [77, 2, 1, "", "target_transform"], [77, 2, 1, "", "test_row_indicator"], [77, 2, 1, "", "test_split"], [77, 2, 1, "", "test_splitting_timestamp"], [77, 2, 1, "", "timestamp_based_splitting_column"], [77, 2, 1, "", "timestamp_based_splitting_method"], [77, 2, 1, "", "training_rows_downsample_ratio"], [77, 2, 1, "", "tree_hpo_mode"], [77, 2, 1, "", "type_of_split"]], "abacusai.RegressionTreeHPOMode": [[77, 2, 1, "", "RAPID"], [77, 2, 1, "", "THOROUGH"]], "abacusai.RegressionTypeOfSplit": [[77, 2, 1, "", "RANDOM"], [77, 2, 1, "", "ROW_INDICATOR_BASED"], [77, 2, 1, "", "TIMESTAMP_BASED"]], "abacusai.SamplingConfig": [[77, 3, 1, "", "__post_init__"]], "abacusai.SamplingMethodType": [[77, 2, 1, "", "N_SAMPLING"], [77, 2, 1, "", "PERCENT_SAMPLING"]], "abacusai.SentenceBoundaryDetectionTrainingConfig": [[77, 2, 1, "", "batch_size"], [77, 2, 1, "", "dropout_rate"], [77, 2, 1, "", "problem_type"], [77, 2, 1, "", "test_split"]], "abacusai.SentimentDetectionTrainingConfig": [[77, 2, 1, "", "batch_size"], [77, 2, 1, "", "compute_metrics"], [77, 2, 1, "", "dropout_rate"], [77, 2, 1, "", "problem_type"], [77, 2, 1, "", "sentiment_type"], [77, 2, 1, "", "test_split"]], "abacusai.SentimentType": [[77, 2, 1, "", "EMOTION"], [77, 2, 1, "", "VALENCE"]], "abacusai.StreamingClient": [[77, 3, 1, "", "append_data"], [77, 3, 1, "", "append_multiple_data"], [77, 3, 1, "", "delete_item_embeddings"], [77, 3, 1, "", "upsert_data"], [77, 3, 1, "", "upsert_item_embeddings"], [77, 3, 1, "", "upsert_multiple_data"], [77, 3, 1, "", "upsert_multiple_item_embeddings"]], "abacusai.ThemeAnalysisTrainingConfig": [[77, 2, 1, "", "problem_type"]], "abacusai.TrainingConfig": [[77, 2, 1, "", "_support_kwargs"], [77, 2, 1, "", "_upper_snake_case_keys"], [77, 2, 1, "", "kwargs"], [77, 2, 1, "", "problem_type"]], "abacusai._ApiClassFactory": [[77, 2, 1, "", "config_abstract_class"], [77, 2, 1, "", "config_class_key"], [77, 2, 1, "", "config_class_map"], [77, 3, 1, "", "from_dict"]], "abacusai._FeatureGroupExportConfigFactory": [[77, 2, 1, "", "config_abstract_class"], [77, 2, 1, "", "config_class_key"], [77, 2, 1, "", "config_class_map"]], "abacusai._SamplingConfigFactory": [[77, 2, 1, "", "config_class_key"], [77, 2, 1, "", "config_class_map"]], "abacusai._TrainingConfigFactory": [[77, 2, 1, "", "config_abstract_class"], [77, 2, 1, "", "config_class_key"], [77, 2, 1, "", "config_class_map"]], "abacusai.algorithm": [[0, 1, 1, "", "Algorithm"]], "abacusai.algorithm.Algorithm": [[0, 3, 1, "", "__repr__"], [0, 3, 1, "", "to_dict"]], "abacusai.annotation": [[1, 1, 1, "", "Annotation"]], "abacusai.annotation.Annotation": [[1, 3, 1, "", "__repr__"], [1, 3, 1, "", "to_dict"]], "abacusai.annotation_config": [[2, 1, 1, "", "AnnotationConfig"]], "abacusai.annotation_config.AnnotationConfig": [[2, 3, 1, "", "__repr__"], [2, 3, 1, "", "to_dict"]], "abacusai.annotation_entry": [[3, 1, 1, "", "AnnotationEntry"]], "abacusai.annotation_entry.AnnotationEntry": [[3, 3, 1, "", "__repr__"], [3, 3, 1, "", "to_dict"]], "abacusai.annotations_status": [[4, 1, 1, "", "AnnotationsStatus"]], "abacusai.annotations_status.AnnotationsStatus": [[4, 3, 1, "", "__repr__"], [4, 3, 1, "", "to_dict"]], "abacusai.api_class": [[9, 1, 1, "", "AIAgentTrainingConfig"], [9, 1, 1, "", "AnomalyDetectionTrainingConfig"], [9, 1, 1, "id23", "ApiClass"], [9, 1, 1, "", "ApiEnum"], [9, 1, 1, "", "BatchSize"], [9, 1, 1, "", "ClusteringImputationMethod"], [9, 1, 1, "", "ClusteringTimeseriesTrainingConfig"], [9, 1, 1, "", "ClusteringTrainingConfig"], [9, 1, 1, "", "ConnectorType"], [9, 1, 1, "", "CumulativeForecastingTrainingConfig"], [9, 1, 1, "", "CustomAlgorithmTrainingConfig"], [9, 1, 1, "", "CustomTrainedModelTrainingConfig"], [9, 1, 1, "", "DatabaseConnectorExportConfig"], [9, 1, 1, "", "DocumentClassificationTrainingConfig"], [9, 1, 1, "", "DocumentSummarizationTrainingConfig"], [9, 1, 1, "", "DocumentVisualizationTrainingConfig"], [9, 1, 1, "", "ExperimentationMode"], [9, 1, 1, "", "FeatureGroupExportConfig"], [9, 1, 1, "", "FileConnectorExportConfig"], [9, 1, 1, "", "FillLogic"], [9, 1, 1, "", "ForecastingDataSplitType"], [9, 1, 1, "", "ForecastingFillMethod"], [9, 1, 1, "", "ForecastingFrequency"], [9, 1, 1, "", "ForecastingLocalScaling"], [9, 1, 1, "", "ForecastingLossFunction"], [9, 1, 1, "", "ForecastingObjective"], [9, 1, 1, "", "ForecastingQuanitlesExtensionMethod"], [9, 1, 1, "", "ForecastingTrainingConfig"], [9, 1, 1, "", "HolidayCalendars"], [9, 1, 1, "", "NERModelType"], [9, 1, 1, "", "NERObjective"], [9, 1, 1, "", "NLPDocumentFormat"], [9, 1, 1, "", "NSamplingConfig"], [9, 1, 1, "", "NamedEntityExtractionTrainingConfig"], [9, 1, 1, "", "NaturalLanguageSearchTrainingConfig"], [9, 1, 1, "", "OptimizationTrainingConfig"], [9, 1, 1, "", "OutputVariableMapping"], [9, 1, 1, "", "ParsingConfig"], [9, 1, 1, "", "PercentSamplingConfig"], [9, 1, 1, "", "PersonalizationObjective"], [9, 1, 1, "", "PersonalizationTrainingConfig"], [9, 1, 1, "", "PersonalizationTrainingMode"], [9, 1, 1, "", "ProblemType"], [9, 1, 1, "", "PythonFunctionArgument"], [9, 1, 1, "", "PythonFunctionArgumentType"], [9, 1, 1, "", "RegressionAugmentationStrategy"], [9, 1, 1, "", "RegressionLossFunction"], [9, 1, 1, "", "RegressionObjective"], [9, 1, 1, "", "RegressionTargetTransform"], [9, 1, 1, "", "RegressionTimeSplitMethod"], [9, 1, 1, "", "RegressionTrainingConfig"], [9, 1, 1, "", "RegressionTreeHPOMode"], [9, 1, 1, "", "RegressionTypeOfSplit"], [9, 1, 1, "", "SamplingConfig"], [9, 1, 1, "", "SamplingMethodType"], [9, 1, 1, "", "SentenceBoundaryDetectionTrainingConfig"], [9, 1, 1, "", "SentimentDetectionTrainingConfig"], [9, 1, 1, "", "SentimentType"], [9, 1, 1, "", "ThemeAnalysisTrainingConfig"], [9, 1, 1, "", "TrainingConfig"], [9, 1, 1, "id29", "_ApiClassFactory"], [9, 1, 1, "", "_FeatureGroupExportConfigFactory"], [9, 1, 1, "", "_SamplingConfigFactory"], [9, 1, 1, "", "_TrainingConfigFactory"], [5, 0, 0, "-", "abstract"], [6, 0, 0, "-", "dataset"], [7, 0, 0, "-", "enums"], [8, 0, 0, "-", "feature_group"], [10, 0, 0, "-", "model"], [11, 0, 0, "-", "python_functions"], [12, 0, 0, "-", "refresh"]], "abacusai.api_class.AIAgentTrainingConfig": [[9, 2, 1, "", "description"], [9, 2, 1, "", "problem_type"]], "abacusai.api_class.AnomalyDetectionTrainingConfig": [[9, 2, 1, "", "mixture_of_gaussians"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "spike_down"], [9, 2, 1, "", "spike_up"], [9, 2, 1, "", "test_split"], [9, 2, 1, "", "trend_change"], [9, 2, 1, "", "value_high"], [9, 2, 1, "", "variational_autoencoder"]], "abacusai.api_class.ApiClass": [[9, 3, 1, "id26", "__post_init__"], [9, 2, 1, "id25", "_support_kwargs"], [9, 2, 1, "id24", "_upper_snake_case_keys"], [9, 3, 1, "id28", "from_dict"], [9, 3, 1, "id27", "to_dict"]], "abacusai.api_class.ApiEnum": [[9, 3, 1, "", "__eq__"], [9, 3, 1, "", "__hash__"]], "abacusai.api_class.BatchSize": [[9, 2, 1, "", "BATCH_1024"], [9, 2, 1, "", "BATCH_128"], [9, 2, 1, "", "BATCH_16"], [9, 2, 1, "", "BATCH_256"], [9, 2, 1, "", "BATCH_32"], [9, 2, 1, "", "BATCH_384"], [9, 2, 1, "", "BATCH_512"], [9, 2, 1, "", "BATCH_64"], [9, 2, 1, "", "BATCH_740"], [9, 2, 1, "", "BATCH_8"]], "abacusai.api_class.ClusteringImputationMethod": [[9, 2, 1, "", "AUTOMATIC"], [9, 2, 1, "", "INTERPOLATE"], [9, 2, 1, "", "ZEROS"]], "abacusai.api_class.ClusteringTimeseriesTrainingConfig": [[9, 2, 1, "", "imputation"], [9, 2, 1, "", "num_clusters_selection"], [9, 2, 1, "", "problem_type"]], "abacusai.api_class.ClusteringTrainingConfig": [[9, 2, 1, "", "num_clusters_selection"], [9, 2, 1, "", "problem_type"]], "abacusai.api_class.ConnectorType": [[9, 2, 1, "", "APPLICATION"], [9, 2, 1, "", "DATABASE"], [9, 2, 1, "", "FILE"], [9, 2, 1, "", "STREAMING"]], "abacusai.api_class.CumulativeForecastingTrainingConfig": [[9, 2, 1, "", "cumulative_prediction_lengths"], [9, 2, 1, "", "historical_frequency"], [9, 2, 1, "", "predict_residuals"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "skip_input_transform"], [9, 2, 1, "", "skip_target_transform"], [9, 2, 1, "", "test_split"]], "abacusai.api_class.CustomAlgorithmTrainingConfig": [[9, 2, 1, "", "predict_function_name"], [9, 2, 1, "", "predict_many_function_name"], [9, 2, 1, "", "predict_module_name"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "test_split"], [9, 2, 1, "", "train_function_name"], [9, 2, 1, "", "train_module_name"], [9, 2, 1, "", "training_input_tables"]], "abacusai.api_class.CustomTrainedModelTrainingConfig": [[9, 2, 1, "", "docker_image_uri"], [9, 2, 1, "", "index_output_path"], [9, 2, 1, "", "max_catalog_size"], [9, 2, 1, "", "max_dimension"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "service_port"]], "abacusai.api_class.DatabaseConnectorExportConfig": [[9, 2, 1, "", "additional_id_columns"], [9, 2, 1, "", "connector_type"], [9, 2, 1, "", "data_columns"], [9, 2, 1, "", "database_connector_id"], [9, 2, 1, "", "id_column"], [9, 2, 1, "", "mode"], [9, 2, 1, "", "object_name"], [9, 3, 1, "", "to_dict"]], "abacusai.api_class.DocumentClassificationTrainingConfig": [[9, 2, 1, "", "batch_size"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "test_split"], [9, 2, 1, "", "zero_shot_hypotheses"]], "abacusai.api_class.DocumentSummarizationTrainingConfig": [[9, 2, 1, "", "batch_size"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "test_split"]], "abacusai.api_class.DocumentVisualizationTrainingConfig": [[9, 2, 1, "", "batch_size"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "test_split"]], "abacusai.api_class.ExperimentationMode": [[9, 2, 1, "", "RAPID"], [9, 2, 1, "", "THOROUGH"]], "abacusai.api_class.FeatureGroupExportConfig": [[9, 2, 1, "", "connector_type"]], "abacusai.api_class.FileConnectorExportConfig": [[9, 2, 1, "", "connector_type"], [9, 2, 1, "", "export_file_format"], [9, 2, 1, "", "location"], [9, 3, 1, "", "to_dict"]], "abacusai.api_class.FillLogic": [[9, 2, 1, "", "AVERAGE"], [9, 2, 1, "", "BACKFILL"], [9, 2, 1, "", "CUSTOM"], [9, 2, 1, "", "FORWARDFILL"], [9, 2, 1, "", "LINEAR"], [9, 2, 1, "", "MAX"], [9, 2, 1, "", "MEDIAN"], [9, 2, 1, "", "MIN"], [9, 2, 1, "", "NEAREST"]], "abacusai.api_class.ForecastingDataSplitType": [[9, 2, 1, "", "AUTO"], [9, 2, 1, "", "ITEM"], [9, 2, 1, "", "PREDICTION_LENGTH"], [9, 2, 1, "", "TIMESTAMP"]], "abacusai.api_class.ForecastingFillMethod": [[9, 2, 1, "", "BACK"], [9, 2, 1, "", "FUTURE"], [9, 2, 1, "", "MIDDLE"]], "abacusai.api_class.ForecastingFrequency": [[9, 2, 1, "", "DAILY"], [9, 2, 1, "", "HOURLY"], [9, 2, 1, "", "MONTH_END"], [9, 2, 1, "", "MONTH_START"], [9, 2, 1, "", "QUARTER_END"], [9, 2, 1, "", "QUARTER_START"], [9, 2, 1, "", "WEEKLY_MONDAY_START"], [9, 2, 1, "", "WEEKLY_SATURDAY_START"], [9, 2, 1, "", "WEEKLY_SUNDAY_START"], [9, 2, 1, "", "YEARLY"]], "abacusai.api_class.ForecastingLocalScaling": [[9, 2, 1, "", "ITEM"], [9, 2, 1, "", "LAST_POINT"], [9, 2, 1, "", "MIN_MAX"], [9, 2, 1, "", "MIN_STD"], [9, 2, 1, "", "ROBUST"], [9, 2, 1, "", "SLIDING_ZSCORE"], [9, 2, 1, "", "ZSCORE"]], "abacusai.api_class.ForecastingLossFunction": [[9, 2, 1, "", "ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [9, 2, 1, "", "CUSTOM"], [9, 2, 1, "", "GAUSSIAN"], [9, 2, 1, "", "GAUSSIAN_FULL_COVARIANCE"], [9, 2, 1, "", "GUASSIAN_EXPONENTIAL"], [9, 2, 1, "", "LOG_ROOT_MEAN_SQUARE_ERROR"], [9, 2, 1, "", "MEAN_ABSOLUTE_ERROR"], [9, 2, 1, "", "MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [9, 2, 1, "", "MIX_GAUSSIANS"], [9, 2, 1, "", "NEGATIVE_BINOMIAL"], [9, 2, 1, "", "NORMALIZED_MEAN_ABSOLUTE_ERROR"], [9, 2, 1, "", "NORMALIZED_ROOT_MEAN_SQUARE_ERROR"], [9, 2, 1, "", "PEAKS_MEAN_ABSOLUTE_ERROR"], [9, 2, 1, "", "POINTWISE_ACCURACY"], [9, 2, 1, "", "ROOT_MEAN_SQUARE_ERROR"], [9, 2, 1, "", "STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [9, 2, 1, "", "WEIBULL"]], "abacusai.api_class.ForecastingObjective": [[9, 2, 1, "", "ACCURACY"], [9, 2, 1, "", "BIAS"], [9, 2, 1, "", "CMAPE"], [9, 2, 1, "", "CV"], [9, 2, 1, "", "MAPE"], [9, 2, 1, "", "RMSE"], [9, 2, 1, "", "SRMSE"], [9, 2, 1, "", "WAPE"]], "abacusai.api_class.ForecastingQuanitlesExtensionMethod": [[9, 2, 1, "", "ANCESTRAL_SIMULATION"], [9, 2, 1, "", "DIRECT"], [9, 2, 1, "", "QUADRATIC"]], "abacusai.api_class.ForecastingTrainingConfig": [[9, 2, 1, "", "additional_forecast_keys"], [9, 2, 1, "", "backtesting_window_step_size"], [9, 2, 1, "", "batch_renormalization"], [9, 2, 1, "", "batch_size"], [9, 2, 1, "", "convolution_filters"], [9, 2, 1, "", "convolutional_layers"], [9, 2, 1, "", "custom_loss_functions"], [9, 2, 1, "", "custom_metrics"], [9, 2, 1, "", "data_split_feature_group_table_name"], [9, 2, 1, "", "datetime_holiday_calendars"], [9, 2, 1, "", "disable_networks_without_analytic_quantiles"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "enable_clustering"], [9, 2, 1, "", "enable_cold_start"], [9, 2, 1, "", "enable_feature_selection"], [9, 2, 1, "", "enable_multiple_backtests"], [9, 2, 1, "", "experimentation_mode"], [9, 2, 1, "", "fill_missing_values"], [9, 2, 1, "", "filter_items"], [9, 2, 1, "", "force_prediction_length"], [9, 2, 1, "", "forecast_frequency"], [9, 2, 1, "", "full_data_retraining"], [9, 2, 1, "", "handle_zeros_as_missing_values"], [9, 2, 1, "", "history_length"], [9, 2, 1, "", "initial_learning_rate"], [9, 2, 1, "", "item_attributes_weight_column"], [9, 2, 1, "", "l2_regularization_factor"], [9, 2, 1, "", "local_scaling_mode"], [9, 2, 1, "", "loss_function"], [9, 2, 1, "", "max_scale_context"], [9, 2, 1, "", "num_backtesting_windows"], [9, 2, 1, "", "number_of_samples"], [9, 2, 1, "", "objective"], [9, 2, 1, "", "prediction_length"], [9, 2, 1, "", "prediction_step_size"], [9, 2, 1, "", "probability_quantiles"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "quantiles_extension_method"], [9, 2, 1, "", "recurrent_layers"], [9, 2, 1, "", "recurrent_units"], [9, 2, 1, "", "skip_local_scale_target"], [9, 2, 1, "", "skip_missing"], [9, 2, 1, "", "skip_timeseries_weight_scaling"], [9, 2, 1, "", "smooth_history"], [9, 2, 1, "", "sort_objective"], [9, 2, 1, "", "symmetrize_quantiles"], [9, 2, 1, "", "test_by_item"], [9, 2, 1, "", "test_split"], [9, 2, 1, "", "test_start"], [9, 2, 1, "", "timeseries_loss_weight_column"], [9, 2, 1, "", "timeseries_weight_column"], [9, 2, 1, "", "training_point_overlap"], [9, 2, 1, "", "type_of_split"], [9, 2, 1, "", "underprediction_weight"], [9, 2, 1, "", "use_all_item_totals"], [9, 2, 1, "", "use_item_id"], [9, 2, 1, "", "use_item_weights_in_objective"], [9, 2, 1, "", "use_log_transforms"], [9, 2, 1, "", "use_timeseries_weights_in_objective"], [9, 2, 1, "", "zero_predictor"]], "abacusai.api_class.HolidayCalendars": [[9, 2, 1, "", "AU"], [9, 2, 1, "", "UK"], [9, 2, 1, "", "US"]], "abacusai.api_class.NERModelType": [[9, 2, 1, "", "LEARNED"], [9, 2, 1, "", "PRETRAINED_BERT"], [9, 2, 1, "", "PRETRAINED_MULTILINGUAL"], [9, 2, 1, "", "PRETRAINED_ROBERTA_27"], [9, 2, 1, "", "PRETRAINED_ROBERTA_43"]], "abacusai.api_class.NERObjective": [[9, 2, 1, "", "ANNOTATIONS_PRECISION"], [9, 2, 1, "", "ANNOTATIONS_RECALL"], [9, 2, 1, "", "AUC"], [9, 2, 1, "", "LOG_LOSS"], [9, 2, 1, "", "PRECISION"], [9, 2, 1, "", "RECALL"]], "abacusai.api_class.NLPDocumentFormat": [[9, 2, 1, "", "AUTO"], [9, 2, 1, "", "DOC"], [9, 2, 1, "", "TEXT"], [9, 2, 1, "", "TOKENS"]], "abacusai.api_class.NSamplingConfig": [[9, 2, 1, "", "key_columns"], [9, 2, 1, "", "sample_count"], [9, 2, 1, "", "sampling_method"]], "abacusai.api_class.NamedEntityExtractionTrainingConfig": [[9, 2, 1, "", "active_labels_column"], [9, 2, 1, "", "batch_size"], [9, 2, 1, "", "document_format"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "include_longformer"], [9, 2, 1, "", "ner_model_type"], [9, 2, 1, "", "objective"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "sort_objective"], [9, 2, 1, "", "test_row_indicator"], [9, 2, 1, "", "test_split"]], "abacusai.api_class.NaturalLanguageSearchTrainingConfig": [[9, 2, 1, "", "abacus_internal_model"], [9, 2, 1, "", "chunk_overlap_fraction"], [9, 2, 1, "", "index_fraction"], [9, 2, 1, "", "larger_embeddings"], [9, 2, 1, "", "num_completion_tokens"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "search_chunk_size"]], "abacusai.api_class.OptimizationTrainingConfig": [[9, 2, 1, "", "problem_type"]], "abacusai.api_class.OutputVariableMapping": [[9, 2, 1, "", "name"], [9, 2, 1, "", "variable_type"]], "abacusai.api_class.ParsingConfig": [[9, 2, 1, "", "csv_delimiter"], [9, 2, 1, "", "escape"], [9, 2, 1, "", "file_path_with_schema"]], "abacusai.api_class.PercentSamplingConfig": [[9, 2, 1, "", "key_columns"], [9, 2, 1, "", "sample_percent"], [9, 2, 1, "", "sampling_method"]], "abacusai.api_class.PersonalizationObjective": [[9, 2, 1, "", "COVERAGE"], [9, 2, 1, "", "MAP"], [9, 2, 1, "", "MAP_10"], [9, 2, 1, "", "MAP_5"], [9, 2, 1, "", "MRR"], [9, 2, 1, "", "NDCG"], [9, 2, 1, "", "NDCG_10"], [9, 2, 1, "", "NDCG_5"], [9, 2, 1, "", "PERSONALIZATION"]], "abacusai.api_class.PersonalizationTrainingConfig": [[9, 2, 1, "", "add_time_features"], [9, 2, 1, "", "batch_size"], [9, 2, 1, "", "compute_rerank_metrics"], [9, 2, 1, "", "compute_session_metrics"], [9, 2, 1, "", "data_split_feature_group_table_name"], [9, 2, 1, "", "disable_gpu"], [9, 2, 1, "", "disable_timestamp_scalar_features"], [9, 2, 1, "", "disable_transformer"], [9, 2, 1, "", "downsample_item_popularity_percentile"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "explicit_time_split"], [9, 2, 1, "", "explore_lookback_hours"], [9, 2, 1, "", "filter_history"], [9, 2, 1, "", "full_data_retraining"], [9, 2, 1, "", "item_id_dropout"], [9, 2, 1, "", "max_history_length"], [9, 2, 1, "", "max_user_history_len_percentile"], [9, 2, 1, "", "objective"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "recent_days_for_training"], [9, 2, 1, "", "sequential_training"], [9, 2, 1, "", "session_event_types"], [9, 2, 1, "", "sort_objective"], [9, 2, 1, "", "target_action_types"], [9, 2, 1, "", "target_action_weights"], [9, 2, 1, "", "test_last_items_length"], [9, 2, 1, "", "test_on_user_split"], [9, 2, 1, "", "test_row_indicator"], [9, 2, 1, "", "test_split"], [9, 2, 1, "", "test_split_on_last_k_items"], [9, 2, 1, "", "test_window_length_hours"], [9, 2, 1, "", "training_mode"], [9, 2, 1, "", "training_start_date"]], "abacusai.api_class.PersonalizationTrainingMode": [[9, 2, 1, "", "EXPERIMENTAL"], [9, 2, 1, "", "PRODUCTION"]], "abacusai.api_class.ProblemType": [[9, 2, 1, "", "AI_AGENT"], [9, 2, 1, "", "ANOMALY_DETECTION"], [9, 2, 1, "", "ANOMALY_OUTLIERS"], [9, 2, 1, "", "CLUSTERING"], [9, 2, 1, "", "CLUSTERING_TIMESERIES"], [9, 2, 1, "", "CUMULATIVE_FORECASTING"], [9, 2, 1, "", "CUSTOM_ALGORITHM"], [9, 2, 1, "", "CUSTOM_TRAINED_MODEL"], [9, 2, 1, "", "DOCUMENT_CLASSIFICATION"], [9, 2, 1, "", "DOCUMENT_SUMMARIZATION"], [9, 2, 1, "", "DOCUMENT_VISUALIZATION"], [9, 2, 1, "", "FEATURE_STORE"], [9, 2, 1, "", "FORECASTING"], [9, 2, 1, "", "IMAGE_CLASSIFICATION"], [9, 2, 1, "", "IMAGE_VALUE_PREDICTION"], [9, 2, 1, "", "LANGUAGE_DETECTION"], [9, 2, 1, "", "MODEL_MONITORING"], [9, 2, 1, "", "NAMED_ENTITY_EXTRACTION"], [9, 2, 1, "", "NATURAL_LANGUAGE_SEARCH"], [9, 2, 1, "", "OBJECT_DETECTION"], [9, 2, 1, "", "OPTIMIZATION"], [9, 2, 1, "", "PERSONALIZATION"], [9, 2, 1, "", "PREDICTIVE_MODELING"], [9, 2, 1, "", "PRETRAINED_MODELS"], [9, 2, 1, "", "SENTENCE_BOUNDARY_DETECTION"], [9, 2, 1, "", "SENTIMENT_DETECTION"], [9, 2, 1, "", "THEME_ANALYSIS"]], "abacusai.api_class.PythonFunctionArgument": [[9, 2, 1, "", "is_required"], [9, 2, 1, "", "name"], [9, 2, 1, "", "pipeline_variable"], [9, 2, 1, "", "value"], [9, 2, 1, "", "variable_type"]], "abacusai.api_class.PythonFunctionArgumentType": [[9, 2, 1, "", "BATCH_PREDICTION_ID"], [9, 2, 1, "", "BOOLEAN"], [9, 2, 1, "", "DATASET_ID"], [9, 2, 1, "", "DEPLOYMENT_ID"], [9, 2, 1, "", "FEATURE_GROUP"], [9, 2, 1, "", "FEATURE_GROUP_ID"], [9, 2, 1, "", "FLOAT"], [9, 2, 1, "", "INTEGER"], [9, 2, 1, "", "JSON"], [9, 2, 1, "", "LIST"], [9, 2, 1, "", "MODEL_ID"], [9, 2, 1, "", "MONITOR_ID"], [9, 2, 1, "", "STRING"]], "abacusai.api_class.RegressionAugmentationStrategy": [[9, 2, 1, "", "RESAMPLE"], [9, 2, 1, "", "SMOTE"]], "abacusai.api_class.RegressionLossFunction": [[9, 2, 1, "", "AUTOMATIC"], [9, 2, 1, "", "CROSS_ENTROPY"], [9, 2, 1, "", "CUSTOM"], [9, 2, 1, "", "FOCAL_CROSS_ENTROPY"], [9, 2, 1, "", "HUBER"], [9, 2, 1, "", "MAE"], [9, 2, 1, "", "MAPE"], [9, 2, 1, "", "MSE"], [9, 2, 1, "", "MSLE"], [9, 2, 1, "", "TWEEDIE"]], "abacusai.api_class.RegressionObjective": [[9, 2, 1, "", "ACCURACY"], [9, 2, 1, "", "AUC"], [9, 2, 1, "", "F1_SCORE"], [9, 2, 1, "", "LOG_LOSS"], [9, 2, 1, "", "MAE"], [9, 2, 1, "", "MAPE"], [9, 2, 1, "", "PRECISION"], [9, 2, 1, "", "RECALL"], [9, 2, 1, "", "RMSE"], [9, 2, 1, "", "R_SQUARED_COEFFICIENT_OF_DETERMINATION"], [9, 2, 1, "", "WAPE"]], "abacusai.api_class.RegressionTargetTransform": [[9, 2, 1, "", "BOX_COX"], [9, 2, 1, "", "LOG"], [9, 2, 1, "", "QUANTILE"], [9, 2, 1, "", "YEO_JOHNSON"]], "abacusai.api_class.RegressionTimeSplitMethod": [[9, 2, 1, "", "TEST_SPLIT_PERCENTAGE_BASED"], [9, 2, 1, "", "TEST_START_TIMESTAMP_BASED"]], "abacusai.api_class.RegressionTrainingConfig": [[9, 2, 1, "", "active_labels_column"], [9, 2, 1, "", "augmentation_strategy"], [9, 2, 1, "", "batch_size"], [9, 2, 1, "", "custom_loss_functions"], [9, 2, 1, "", "custom_metrics"], [9, 2, 1, "", "data_split_feature_group_table_name"], [9, 2, 1, "", "disable_test_val_fold"], [9, 2, 1, "", "drop_original_categoricals"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "feature_selection_intensity"], [9, 2, 1, "", "ignore_datetime_features"], [9, 2, 1, "", "is_multilingual"], [9, 2, 1, "", "k_fold_cross_validation"], [9, 2, 1, "", "loss_function"], [9, 2, 1, "", "loss_parameters"], [9, 2, 1, "", "max_text_words"], [9, 2, 1, "", "min_categorical_count"], [9, 2, 1, "", "num_cv_folds"], [9, 2, 1, "", "numeric_clipping_percentile"], [9, 2, 1, "", "objective"], [9, 2, 1, "", "perform_feature_selection"], [9, 2, 1, "", "pretrained_model_name"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "rare_class_augmentation_threshold"], [9, 2, 1, "", "rebalance_classes"], [9, 2, 1, "", "sample_weight"], [9, 2, 1, "", "sampling_unit_keys"], [9, 2, 1, "", "sort_objective"], [9, 2, 1, "", "target_encode_categoricals"], [9, 2, 1, "", "target_transform"], [9, 2, 1, "", "test_row_indicator"], [9, 2, 1, "", "test_split"], [9, 2, 1, "", "test_splitting_timestamp"], [9, 2, 1, "", "timestamp_based_splitting_column"], [9, 2, 1, "", "timestamp_based_splitting_method"], [9, 2, 1, "", "training_rows_downsample_ratio"], [9, 2, 1, "", "tree_hpo_mode"], [9, 2, 1, "", "type_of_split"]], "abacusai.api_class.RegressionTreeHPOMode": [[9, 2, 1, "", "RAPID"], [9, 2, 1, "", "THOROUGH"]], "abacusai.api_class.RegressionTypeOfSplit": [[9, 2, 1, "", "RANDOM"], [9, 2, 1, "", "ROW_INDICATOR_BASED"], [9, 2, 1, "", "TIMESTAMP_BASED"]], "abacusai.api_class.SamplingConfig": [[9, 3, 1, "", "__post_init__"]], "abacusai.api_class.SamplingMethodType": [[9, 2, 1, "", "N_SAMPLING"], [9, 2, 1, "", "PERCENT_SAMPLING"]], "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig": [[9, 2, 1, "", "batch_size"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "test_split"]], "abacusai.api_class.SentimentDetectionTrainingConfig": [[9, 2, 1, "", "batch_size"], [9, 2, 1, "", "compute_metrics"], [9, 2, 1, "", "dropout_rate"], [9, 2, 1, "", "problem_type"], [9, 2, 1, "", "sentiment_type"], [9, 2, 1, "", "test_split"]], "abacusai.api_class.SentimentType": [[9, 2, 1, "", "EMOTION"], [9, 2, 1, "", "VALENCE"]], "abacusai.api_class.ThemeAnalysisTrainingConfig": [[9, 2, 1, "", "problem_type"]], "abacusai.api_class.TrainingConfig": [[9, 2, 1, "", "_support_kwargs"], [9, 2, 1, "", "_upper_snake_case_keys"], [9, 2, 1, "", "kwargs"], [9, 2, 1, "", "problem_type"]], "abacusai.api_class._ApiClassFactory": [[9, 2, 1, "id30", "config_abstract_class"], [9, 2, 1, "id31", "config_class_key"], [9, 2, 1, "id32", "config_class_map"], [9, 3, 1, "id33", "from_dict"]], "abacusai.api_class._FeatureGroupExportConfigFactory": [[9, 2, 1, "", "config_abstract_class"], [9, 2, 1, "", "config_class_key"], [9, 2, 1, "", "config_class_map"]], "abacusai.api_class._SamplingConfigFactory": [[9, 2, 1, "", "config_class_key"], [9, 2, 1, "", "config_class_map"]], "abacusai.api_class._TrainingConfigFactory": [[9, 2, 1, "", "config_abstract_class"], [9, 2, 1, "", "config_class_key"], [9, 2, 1, "", "config_class_map"]], "abacusai.api_class.abstract": [[5, 5, 1, "", "ALL_CAP_RE"], [5, 1, 1, "", "ApiClass"], [5, 5, 1, "", "FIRST_CAP_RE"], [5, 1, 1, "", "_ApiClassFactory"], [5, 6, 1, "", "camel_case"], [5, 6, 1, "", "snake_case"], [5, 6, 1, "", "upper_snake_case"]], "abacusai.api_class.abstract.ApiClass": [[5, 3, 1, "", "__post_init__"], [5, 2, 1, "", "_support_kwargs"], [5, 2, 1, "", "_upper_snake_case_keys"], [5, 3, 1, "", "from_dict"], [5, 3, 1, "", "to_dict"]], "abacusai.api_class.abstract._ApiClassFactory": [[5, 2, 1, "", "config_abstract_class"], [5, 2, 1, "", "config_class_key"], [5, 2, 1, "", "config_class_map"], [5, 3, 1, "", "from_dict"]], "abacusai.api_class.dataset": [[6, 1, 1, "", "ParsingConfig"]], "abacusai.api_class.dataset.ParsingConfig": [[6, 2, 1, "", "csv_delimiter"], [6, 2, 1, "", "escape"], [6, 2, 1, "", "file_path_with_schema"]], "abacusai.api_class.enums": [[7, 1, 1, "", "ApiEnum"], [7, 1, 1, "", "BatchSize"], [7, 1, 1, "", "ClusteringImputationMethod"], [7, 1, 1, "", "ConnectorType"], [7, 1, 1, "", "ExperimentationMode"], [7, 1, 1, "", "FillLogic"], [7, 1, 1, "", "ForecastingDataSplitType"], [7, 1, 1, "", "ForecastingFillMethod"], [7, 1, 1, "", "ForecastingFrequency"], [7, 1, 1, "", "ForecastingLocalScaling"], [7, 1, 1, "", "ForecastingLossFunction"], [7, 1, 1, "", "ForecastingObjective"], [7, 1, 1, "", "ForecastingQuanitlesExtensionMethod"], [7, 1, 1, "", "HolidayCalendars"], [7, 1, 1, "", "NERModelType"], [7, 1, 1, "", "NERObjective"], [7, 1, 1, "", "NLPDocumentFormat"], [7, 1, 1, "", "PersonalizationObjective"], [7, 1, 1, "", "PersonalizationTrainingMode"], [7, 1, 1, "", "ProblemType"], [7, 1, 1, "", "PythonFunctionArgumentType"], [7, 1, 1, "", "RegressionAugmentationStrategy"], [7, 1, 1, "", "RegressionLossFunction"], [7, 1, 1, "", "RegressionObjective"], [7, 1, 1, "", "RegressionTargetTransform"], [7, 1, 1, "", "RegressionTimeSplitMethod"], [7, 1, 1, "", "RegressionTreeHPOMode"], [7, 1, 1, "", "RegressionTypeOfSplit"], [7, 1, 1, "", "SamplingMethodType"], [7, 1, 1, "", "SentimentType"]], "abacusai.api_class.enums.ApiEnum": [[7, 3, 1, "", "__eq__"], [7, 3, 1, "", "__hash__"]], "abacusai.api_class.enums.BatchSize": [[7, 2, 1, "", "BATCH_1024"], [7, 2, 1, "", "BATCH_128"], [7, 2, 1, "", "BATCH_16"], [7, 2, 1, "", "BATCH_256"], [7, 2, 1, "", "BATCH_32"], [7, 2, 1, "", "BATCH_384"], [7, 2, 1, "", "BATCH_512"], [7, 2, 1, "", "BATCH_64"], [7, 2, 1, "", "BATCH_740"], [7, 2, 1, "", "BATCH_8"]], "abacusai.api_class.enums.ClusteringImputationMethod": [[7, 2, 1, "", "AUTOMATIC"], [7, 2, 1, "", "INTERPOLATE"], [7, 2, 1, "", "ZEROS"]], "abacusai.api_class.enums.ConnectorType": [[7, 2, 1, "", "APPLICATION"], [7, 2, 1, "", "DATABASE"], [7, 2, 1, "", "FILE"], [7, 2, 1, "", "STREAMING"]], "abacusai.api_class.enums.ExperimentationMode": [[7, 2, 1, "", "RAPID"], [7, 2, 1, "", "THOROUGH"]], "abacusai.api_class.enums.FillLogic": [[7, 2, 1, "", "AVERAGE"], [7, 2, 1, "", "BACKFILL"], [7, 2, 1, "", "CUSTOM"], [7, 2, 1, "", "FORWARDFILL"], [7, 2, 1, "", "LINEAR"], [7, 2, 1, "", "MAX"], [7, 2, 1, "", "MEDIAN"], [7, 2, 1, "", "MIN"], [7, 2, 1, "", "NEAREST"]], "abacusai.api_class.enums.ForecastingDataSplitType": [[7, 2, 1, "", "AUTO"], [7, 2, 1, "", "ITEM"], [7, 2, 1, "", "PREDICTION_LENGTH"], [7, 2, 1, "", "TIMESTAMP"]], "abacusai.api_class.enums.ForecastingFillMethod": [[7, 2, 1, "", "BACK"], [7, 2, 1, "", "FUTURE"], [7, 2, 1, "", "MIDDLE"]], "abacusai.api_class.enums.ForecastingFrequency": [[7, 2, 1, "", "DAILY"], [7, 2, 1, "", "HOURLY"], [7, 2, 1, "", "MONTH_END"], [7, 2, 1, "", "MONTH_START"], [7, 2, 1, "", "QUARTER_END"], [7, 2, 1, "", "QUARTER_START"], [7, 2, 1, "", "WEEKLY_MONDAY_START"], [7, 2, 1, "", "WEEKLY_SATURDAY_START"], [7, 2, 1, "", "WEEKLY_SUNDAY_START"], [7, 2, 1, "", "YEARLY"]], "abacusai.api_class.enums.ForecastingLocalScaling": [[7, 2, 1, "", "ITEM"], [7, 2, 1, "", "LAST_POINT"], [7, 2, 1, "", "MIN_MAX"], [7, 2, 1, "", "MIN_STD"], [7, 2, 1, "", "ROBUST"], [7, 2, 1, "", "SLIDING_ZSCORE"], [7, 2, 1, "", "ZSCORE"]], "abacusai.api_class.enums.ForecastingLossFunction": [[7, 2, 1, "", "ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [7, 2, 1, "", "CUSTOM"], [7, 2, 1, "", "GAUSSIAN"], [7, 2, 1, "", "GAUSSIAN_FULL_COVARIANCE"], [7, 2, 1, "", "GUASSIAN_EXPONENTIAL"], [7, 2, 1, "", "LOG_ROOT_MEAN_SQUARE_ERROR"], [7, 2, 1, "", "MEAN_ABSOLUTE_ERROR"], [7, 2, 1, "", "MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [7, 2, 1, "", "MIX_GAUSSIANS"], [7, 2, 1, "", "NEGATIVE_BINOMIAL"], [7, 2, 1, "", "NORMALIZED_MEAN_ABSOLUTE_ERROR"], [7, 2, 1, "", "NORMALIZED_ROOT_MEAN_SQUARE_ERROR"], [7, 2, 1, "", "PEAKS_MEAN_ABSOLUTE_ERROR"], [7, 2, 1, "", "POINTWISE_ACCURACY"], [7, 2, 1, "", "ROOT_MEAN_SQUARE_ERROR"], [7, 2, 1, "", "STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"], [7, 2, 1, "", "WEIBULL"]], "abacusai.api_class.enums.ForecastingObjective": [[7, 2, 1, "", "ACCURACY"], [7, 2, 1, "", "BIAS"], [7, 2, 1, "", "CMAPE"], [7, 2, 1, "", "CV"], [7, 2, 1, "", "MAPE"], [7, 2, 1, "", "RMSE"], [7, 2, 1, "", "SRMSE"], [7, 2, 1, "", "WAPE"]], "abacusai.api_class.enums.ForecastingQuanitlesExtensionMethod": [[7, 2, 1, "", "ANCESTRAL_SIMULATION"], [7, 2, 1, "", "DIRECT"], [7, 2, 1, "", "QUADRATIC"]], "abacusai.api_class.enums.HolidayCalendars": [[7, 2, 1, "", "AU"], [7, 2, 1, "", "UK"], [7, 2, 1, "", "US"]], "abacusai.api_class.enums.NERModelType": [[7, 2, 1, "", "LEARNED"], [7, 2, 1, "", "PRETRAINED_BERT"], [7, 2, 1, "", "PRETRAINED_MULTILINGUAL"], [7, 2, 1, "", "PRETRAINED_ROBERTA_27"], [7, 2, 1, "", "PRETRAINED_ROBERTA_43"]], "abacusai.api_class.enums.NERObjective": [[7, 2, 1, "", "ANNOTATIONS_PRECISION"], [7, 2, 1, "", "ANNOTATIONS_RECALL"], [7, 2, 1, "", "AUC"], [7, 2, 1, "", "LOG_LOSS"], [7, 2, 1, "", "PRECISION"], [7, 2, 1, "", "RECALL"]], "abacusai.api_class.enums.NLPDocumentFormat": [[7, 2, 1, "", "AUTO"], [7, 2, 1, "", "DOC"], [7, 2, 1, "", "TEXT"], [7, 2, 1, "", "TOKENS"]], "abacusai.api_class.enums.PersonalizationObjective": [[7, 2, 1, "", "COVERAGE"], [7, 2, 1, "", "MAP"], [7, 2, 1, "", "MAP_10"], [7, 2, 1, "", "MAP_5"], [7, 2, 1, "", "MRR"], [7, 2, 1, "", "NDCG"], [7, 2, 1, "", "NDCG_10"], [7, 2, 1, "", "NDCG_5"], [7, 2, 1, "", "PERSONALIZATION"]], "abacusai.api_class.enums.PersonalizationTrainingMode": [[7, 2, 1, "", "EXPERIMENTAL"], [7, 2, 1, "", "PRODUCTION"]], "abacusai.api_class.enums.ProblemType": [[7, 2, 1, "", "AI_AGENT"], [7, 2, 1, "", "ANOMALY_DETECTION"], [7, 2, 1, "", "ANOMALY_OUTLIERS"], [7, 2, 1, "", "CLUSTERING"], [7, 2, 1, "", "CLUSTERING_TIMESERIES"], [7, 2, 1, "", "CUMULATIVE_FORECASTING"], [7, 2, 1, "", "CUSTOM_ALGORITHM"], [7, 2, 1, "", "CUSTOM_TRAINED_MODEL"], [7, 2, 1, "", "DOCUMENT_CLASSIFICATION"], [7, 2, 1, "", "DOCUMENT_SUMMARIZATION"], [7, 2, 1, "", "DOCUMENT_VISUALIZATION"], [7, 2, 1, "", "FEATURE_STORE"], [7, 2, 1, "", "FORECASTING"], [7, 2, 1, "", "IMAGE_CLASSIFICATION"], [7, 2, 1, "", "IMAGE_VALUE_PREDICTION"], [7, 2, 1, "", "LANGUAGE_DETECTION"], [7, 2, 1, "", "MODEL_MONITORING"], [7, 2, 1, "", "NAMED_ENTITY_EXTRACTION"], [7, 2, 1, "", "NATURAL_LANGUAGE_SEARCH"], [7, 2, 1, "", "OBJECT_DETECTION"], [7, 2, 1, "", "OPTIMIZATION"], [7, 2, 1, "", "PERSONALIZATION"], [7, 2, 1, "", "PREDICTIVE_MODELING"], [7, 2, 1, "", "PRETRAINED_MODELS"], [7, 2, 1, "", "SENTENCE_BOUNDARY_DETECTION"], [7, 2, 1, "", "SENTIMENT_DETECTION"], [7, 2, 1, "", "THEME_ANALYSIS"]], "abacusai.api_class.enums.PythonFunctionArgumentType": [[7, 2, 1, "", "BATCH_PREDICTION_ID"], [7, 2, 1, "", "BOOLEAN"], [7, 2, 1, "", "DATASET_ID"], [7, 2, 1, "", "DEPLOYMENT_ID"], [7, 2, 1, "", "FEATURE_GROUP"], [7, 2, 1, "", "FEATURE_GROUP_ID"], [7, 2, 1, "", "FLOAT"], [7, 2, 1, "", "INTEGER"], [7, 2, 1, "", "JSON"], [7, 2, 1, "", "LIST"], [7, 2, 1, "", "MODEL_ID"], [7, 2, 1, "", "MONITOR_ID"], [7, 2, 1, "", "STRING"]], "abacusai.api_class.enums.RegressionAugmentationStrategy": [[7, 2, 1, "", "RESAMPLE"], [7, 2, 1, "", "SMOTE"]], "abacusai.api_class.enums.RegressionLossFunction": [[7, 2, 1, "", "AUTOMATIC"], [7, 2, 1, "", "CROSS_ENTROPY"], [7, 2, 1, "", "CUSTOM"], [7, 2, 1, "", "FOCAL_CROSS_ENTROPY"], [7, 2, 1, "", "HUBER"], [7, 2, 1, "", "MAE"], [7, 2, 1, "", "MAPE"], [7, 2, 1, "", "MSE"], [7, 2, 1, "", "MSLE"], [7, 2, 1, "", "TWEEDIE"]], "abacusai.api_class.enums.RegressionObjective": [[7, 2, 1, "", "ACCURACY"], [7, 2, 1, "", "AUC"], [7, 2, 1, "", "F1_SCORE"], [7, 2, 1, "", "LOG_LOSS"], [7, 2, 1, "", "MAE"], [7, 2, 1, "", "MAPE"], [7, 2, 1, "", "PRECISION"], [7, 2, 1, "", "RECALL"], [7, 2, 1, "", "RMSE"], [7, 2, 1, "", "R_SQUARED_COEFFICIENT_OF_DETERMINATION"], [7, 2, 1, "", "WAPE"]], "abacusai.api_class.enums.RegressionTargetTransform": [[7, 2, 1, "", "BOX_COX"], [7, 2, 1, "", "LOG"], [7, 2, 1, "", "QUANTILE"], [7, 2, 1, "", "YEO_JOHNSON"]], "abacusai.api_class.enums.RegressionTimeSplitMethod": [[7, 2, 1, "", "TEST_SPLIT_PERCENTAGE_BASED"], [7, 2, 1, "", "TEST_START_TIMESTAMP_BASED"]], "abacusai.api_class.enums.RegressionTreeHPOMode": [[7, 2, 1, "", "RAPID"], [7, 2, 1, "", "THOROUGH"]], "abacusai.api_class.enums.RegressionTypeOfSplit": [[7, 2, 1, "", "RANDOM"], [7, 2, 1, "", "ROW_INDICATOR_BASED"], [7, 2, 1, "", "TIMESTAMP_BASED"]], "abacusai.api_class.enums.SamplingMethodType": [[7, 2, 1, "", "N_SAMPLING"], [7, 2, 1, "", "PERCENT_SAMPLING"]], "abacusai.api_class.enums.SentimentType": [[7, 2, 1, "", "EMOTION"], [7, 2, 1, "", "VALENCE"]], "abacusai.api_class.feature_group": [[8, 1, 1, "", "NSamplingConfig"], [8, 1, 1, "", "PercentSamplingConfig"], [8, 1, 1, "", "SamplingConfig"], [8, 1, 1, "", "_SamplingConfigFactory"]], "abacusai.api_class.feature_group.NSamplingConfig": [[8, 2, 1, "", "key_columns"], [8, 2, 1, "", "sample_count"], [8, 2, 1, "", "sampling_method"]], "abacusai.api_class.feature_group.PercentSamplingConfig": [[8, 2, 1, "", "key_columns"], [8, 2, 1, "", "sample_percent"], [8, 2, 1, "", "sampling_method"]], "abacusai.api_class.feature_group.SamplingConfig": [[8, 3, 1, "", "__post_init__"]], "abacusai.api_class.feature_group._SamplingConfigFactory": [[8, 2, 1, "", "config_class_key"], [8, 2, 1, "", "config_class_map"]], "abacusai.api_class.model": [[10, 1, 1, "", "AIAgentTrainingConfig"], [10, 1, 1, "", "AnomalyDetectionTrainingConfig"], [10, 1, 1, "", "ClusteringTimeseriesTrainingConfig"], [10, 1, 1, "", "ClusteringTrainingConfig"], [10, 1, 1, "", "CumulativeForecastingTrainingConfig"], [10, 1, 1, "", "CustomAlgorithmTrainingConfig"], [10, 1, 1, "", "CustomTrainedModelTrainingConfig"], [10, 1, 1, "", "DocumentClassificationTrainingConfig"], [10, 1, 1, "", "DocumentSummarizationTrainingConfig"], [10, 1, 1, "", "DocumentVisualizationTrainingConfig"], [10, 1, 1, "", "ForecastingTrainingConfig"], [10, 1, 1, "", "NamedEntityExtractionTrainingConfig"], [10, 1, 1, "", "NaturalLanguageSearchTrainingConfig"], [10, 1, 1, "", "OptimizationTrainingConfig"], [10, 1, 1, "", "PersonalizationTrainingConfig"], [10, 1, 1, "", "RegressionTrainingConfig"], [10, 1, 1, "", "SentenceBoundaryDetectionTrainingConfig"], [10, 1, 1, "", "SentimentDetectionTrainingConfig"], [10, 1, 1, "", "ThemeAnalysisTrainingConfig"], [10, 1, 1, "", "TrainingConfig"], [10, 1, 1, "", "_TrainingConfigFactory"]], "abacusai.api_class.model.AIAgentTrainingConfig": [[10, 2, 1, "", "description"], [10, 2, 1, "", "problem_type"]], "abacusai.api_class.model.AnomalyDetectionTrainingConfig": [[10, 2, 1, "", "mixture_of_gaussians"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "spike_down"], [10, 2, 1, "", "spike_up"], [10, 2, 1, "", "test_split"], [10, 2, 1, "", "trend_change"], [10, 2, 1, "", "value_high"], [10, 2, 1, "", "variational_autoencoder"]], "abacusai.api_class.model.ClusteringTimeseriesTrainingConfig": [[10, 2, 1, "", "imputation"], [10, 2, 1, "", "num_clusters_selection"], [10, 2, 1, "", "problem_type"]], "abacusai.api_class.model.ClusteringTrainingConfig": [[10, 2, 1, "", "num_clusters_selection"], [10, 2, 1, "", "problem_type"]], "abacusai.api_class.model.CumulativeForecastingTrainingConfig": [[10, 2, 1, "", "cumulative_prediction_lengths"], [10, 2, 1, "", "historical_frequency"], [10, 2, 1, "", "predict_residuals"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "skip_input_transform"], [10, 2, 1, "", "skip_target_transform"], [10, 2, 1, "", "test_split"]], "abacusai.api_class.model.CustomAlgorithmTrainingConfig": [[10, 2, 1, "", "predict_function_name"], [10, 2, 1, "", "predict_many_function_name"], [10, 2, 1, "", "predict_module_name"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "test_split"], [10, 2, 1, "", "train_function_name"], [10, 2, 1, "", "train_module_name"], [10, 2, 1, "", "training_input_tables"]], "abacusai.api_class.model.CustomTrainedModelTrainingConfig": [[10, 2, 1, "", "docker_image_uri"], [10, 2, 1, "", "index_output_path"], [10, 2, 1, "", "max_catalog_size"], [10, 2, 1, "", "max_dimension"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "service_port"]], "abacusai.api_class.model.DocumentClassificationTrainingConfig": [[10, 2, 1, "", "batch_size"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "test_split"], [10, 2, 1, "", "zero_shot_hypotheses"]], "abacusai.api_class.model.DocumentSummarizationTrainingConfig": [[10, 2, 1, "", "batch_size"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "test_split"]], "abacusai.api_class.model.DocumentVisualizationTrainingConfig": [[10, 2, 1, "", "batch_size"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "test_split"]], "abacusai.api_class.model.ForecastingTrainingConfig": [[10, 2, 1, "", "additional_forecast_keys"], [10, 2, 1, "", "backtesting_window_step_size"], [10, 2, 1, "", "batch_renormalization"], [10, 2, 1, "", "batch_size"], [10, 2, 1, "", "convolution_filters"], [10, 2, 1, "", "convolutional_layers"], [10, 2, 1, "", "custom_loss_functions"], [10, 2, 1, "", "custom_metrics"], [10, 2, 1, "", "data_split_feature_group_table_name"], [10, 2, 1, "", "datetime_holiday_calendars"], [10, 2, 1, "", "disable_networks_without_analytic_quantiles"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "enable_clustering"], [10, 2, 1, "", "enable_cold_start"], [10, 2, 1, "", "enable_feature_selection"], [10, 2, 1, "", "enable_multiple_backtests"], [10, 2, 1, "", "experimentation_mode"], [10, 2, 1, "", "fill_missing_values"], [10, 2, 1, "", "filter_items"], [10, 2, 1, "", "force_prediction_length"], [10, 2, 1, "", "forecast_frequency"], [10, 2, 1, "", "full_data_retraining"], [10, 2, 1, "", "handle_zeros_as_missing_values"], [10, 2, 1, "", "history_length"], [10, 2, 1, "", "initial_learning_rate"], [10, 2, 1, "", "item_attributes_weight_column"], [10, 2, 1, "", "l2_regularization_factor"], [10, 2, 1, "", "local_scaling_mode"], [10, 2, 1, "", "loss_function"], [10, 2, 1, "", "max_scale_context"], [10, 2, 1, "", "num_backtesting_windows"], [10, 2, 1, "", "number_of_samples"], [10, 2, 1, "", "objective"], [10, 2, 1, "", "prediction_length"], [10, 2, 1, "", "prediction_step_size"], [10, 2, 1, "", "probability_quantiles"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "quantiles_extension_method"], [10, 2, 1, "", "recurrent_layers"], [10, 2, 1, "", "recurrent_units"], [10, 2, 1, "", "skip_local_scale_target"], [10, 2, 1, "", "skip_missing"], [10, 2, 1, "", "skip_timeseries_weight_scaling"], [10, 2, 1, "", "smooth_history"], [10, 2, 1, "", "sort_objective"], [10, 2, 1, "", "symmetrize_quantiles"], [10, 2, 1, "", "test_by_item"], [10, 2, 1, "", "test_split"], [10, 2, 1, "", "test_start"], [10, 2, 1, "", "timeseries_loss_weight_column"], [10, 2, 1, "", "timeseries_weight_column"], [10, 2, 1, "", "training_point_overlap"], [10, 2, 1, "", "type_of_split"], [10, 2, 1, "", "underprediction_weight"], [10, 2, 1, "", "use_all_item_totals"], [10, 2, 1, "", "use_item_id"], [10, 2, 1, "", "use_item_weights_in_objective"], [10, 2, 1, "", "use_log_transforms"], [10, 2, 1, "", "use_timeseries_weights_in_objective"], [10, 2, 1, "", "zero_predictor"]], "abacusai.api_class.model.NamedEntityExtractionTrainingConfig": [[10, 2, 1, "", "active_labels_column"], [10, 2, 1, "", "batch_size"], [10, 2, 1, "", "document_format"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "include_longformer"], [10, 2, 1, "", "ner_model_type"], [10, 2, 1, "", "objective"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "sort_objective"], [10, 2, 1, "", "test_row_indicator"], [10, 2, 1, "", "test_split"]], "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig": [[10, 2, 1, "", "abacus_internal_model"], [10, 2, 1, "", "chunk_overlap_fraction"], [10, 2, 1, "", "index_fraction"], [10, 2, 1, "", "larger_embeddings"], [10, 2, 1, "", "num_completion_tokens"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "search_chunk_size"]], "abacusai.api_class.model.OptimizationTrainingConfig": [[10, 2, 1, "", "problem_type"]], "abacusai.api_class.model.PersonalizationTrainingConfig": [[10, 2, 1, "", "add_time_features"], [10, 2, 1, "", "batch_size"], [10, 2, 1, "", "compute_rerank_metrics"], [10, 2, 1, "", "compute_session_metrics"], [10, 2, 1, "", "data_split_feature_group_table_name"], [10, 2, 1, "", "disable_gpu"], [10, 2, 1, "", "disable_timestamp_scalar_features"], [10, 2, 1, "", "disable_transformer"], [10, 2, 1, "", "downsample_item_popularity_percentile"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "explicit_time_split"], [10, 2, 1, "", "explore_lookback_hours"], [10, 2, 1, "", "filter_history"], [10, 2, 1, "", "full_data_retraining"], [10, 2, 1, "", "item_id_dropout"], [10, 2, 1, "", "max_history_length"], [10, 2, 1, "", "max_user_history_len_percentile"], [10, 2, 1, "", "objective"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "recent_days_for_training"], [10, 2, 1, "", "sequential_training"], [10, 2, 1, "", "session_event_types"], [10, 2, 1, "", "sort_objective"], [10, 2, 1, "", "target_action_types"], [10, 2, 1, "", "target_action_weights"], [10, 2, 1, "", "test_last_items_length"], [10, 2, 1, "", "test_on_user_split"], [10, 2, 1, "", "test_row_indicator"], [10, 2, 1, "", "test_split"], [10, 2, 1, "", "test_split_on_last_k_items"], [10, 2, 1, "", "test_window_length_hours"], [10, 2, 1, "", "training_mode"], [10, 2, 1, "", "training_start_date"]], "abacusai.api_class.model.RegressionTrainingConfig": [[10, 2, 1, "", "active_labels_column"], [10, 2, 1, "", "augmentation_strategy"], [10, 2, 1, "", "batch_size"], [10, 2, 1, "", "custom_loss_functions"], [10, 2, 1, "", "custom_metrics"], [10, 2, 1, "", "data_split_feature_group_table_name"], [10, 2, 1, "", "disable_test_val_fold"], [10, 2, 1, "", "drop_original_categoricals"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "feature_selection_intensity"], [10, 2, 1, "", "ignore_datetime_features"], [10, 2, 1, "", "is_multilingual"], [10, 2, 1, "", "k_fold_cross_validation"], [10, 2, 1, "", "loss_function"], [10, 2, 1, "", "loss_parameters"], [10, 2, 1, "", "max_text_words"], [10, 2, 1, "", "min_categorical_count"], [10, 2, 1, "", "num_cv_folds"], [10, 2, 1, "", "numeric_clipping_percentile"], [10, 2, 1, "", "objective"], [10, 2, 1, "", "perform_feature_selection"], [10, 2, 1, "", "pretrained_model_name"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "rare_class_augmentation_threshold"], [10, 2, 1, "", "rebalance_classes"], [10, 2, 1, "", "sample_weight"], [10, 2, 1, "", "sampling_unit_keys"], [10, 2, 1, "", "sort_objective"], [10, 2, 1, "", "target_encode_categoricals"], [10, 2, 1, "", "target_transform"], [10, 2, 1, "", "test_row_indicator"], [10, 2, 1, "", "test_split"], [10, 2, 1, "", "test_splitting_timestamp"], [10, 2, 1, "", "timestamp_based_splitting_column"], [10, 2, 1, "", "timestamp_based_splitting_method"], [10, 2, 1, "", "training_rows_downsample_ratio"], [10, 2, 1, "", "tree_hpo_mode"], [10, 2, 1, "", "type_of_split"]], "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig": [[10, 2, 1, "", "batch_size"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "test_split"]], "abacusai.api_class.model.SentimentDetectionTrainingConfig": [[10, 2, 1, "", "batch_size"], [10, 2, 1, "", "compute_metrics"], [10, 2, 1, "", "dropout_rate"], [10, 2, 1, "", "problem_type"], [10, 2, 1, "", "sentiment_type"], [10, 2, 1, "", "test_split"]], "abacusai.api_class.model.ThemeAnalysisTrainingConfig": [[10, 2, 1, "", "problem_type"]], "abacusai.api_class.model.TrainingConfig": [[10, 2, 1, "", "_support_kwargs"], [10, 2, 1, "", "_upper_snake_case_keys"], [10, 2, 1, "", "kwargs"], [10, 2, 1, "", "problem_type"]], "abacusai.api_class.model._TrainingConfigFactory": [[10, 2, 1, "", "config_abstract_class"], [10, 2, 1, "", "config_class_key"], [10, 2, 1, "", "config_class_map"]], "abacusai.api_class.python_functions": [[11, 1, 1, "", "OutputVariableMapping"], [11, 1, 1, "", "PythonFunctionArgument"]], "abacusai.api_class.python_functions.OutputVariableMapping": [[11, 2, 1, "", "name"], [11, 2, 1, "", "variable_type"]], "abacusai.api_class.python_functions.PythonFunctionArgument": [[11, 2, 1, "", "is_required"], [11, 2, 1, "", "name"], [11, 2, 1, "", "pipeline_variable"], [11, 2, 1, "", "value"], [11, 2, 1, "", "variable_type"]], "abacusai.api_class.refresh": [[12, 1, 1, "", "DatabaseConnectorExportConfig"], [12, 1, 1, "", "FeatureGroupExportConfig"], [12, 1, 1, "", "FileConnectorExportConfig"], [12, 1, 1, "", "_FeatureGroupExportConfigFactory"]], "abacusai.api_class.refresh.DatabaseConnectorExportConfig": [[12, 2, 1, "", "additional_id_columns"], [12, 2, 1, "", "connector_type"], [12, 2, 1, "", "data_columns"], [12, 2, 1, "", "database_connector_id"], [12, 2, 1, "", "id_column"], [12, 2, 1, "", "mode"], [12, 2, 1, "", "object_name"], [12, 3, 1, "", "to_dict"]], "abacusai.api_class.refresh.FeatureGroupExportConfig": [[12, 2, 1, "", "connector_type"]], "abacusai.api_class.refresh.FileConnectorExportConfig": [[12, 2, 1, "", "connector_type"], [12, 2, 1, "", "export_file_format"], [12, 2, 1, "", "location"], [12, 3, 1, "", "to_dict"]], "abacusai.api_class.refresh._FeatureGroupExportConfigFactory": [[12, 2, 1, "", "config_abstract_class"], [12, 2, 1, "", "config_class_key"], [12, 2, 1, "", "config_class_map"]], "abacusai.api_client_utils": [[13, 5, 1, "", "INVALID_PANDAS_COLUMN_NAME_CHARACTERS"], [13, 6, 1, "", "avro_to_pandas_dtype"], [13, 6, 1, "", "clean_column_name"], [13, 6, 1, "", "get_clean_function_source_code"], [13, 6, 1, "", "get_non_nullable_type"], [13, 6, 1, "", "get_object_from_context"]], "abacusai.api_endpoint": [[14, 1, 1, "", "ApiEndpoint"]], "abacusai.api_endpoint.ApiEndpoint": [[14, 3, 1, "", "__repr__"], [14, 3, 1, "", "to_dict"]], "abacusai.api_key": [[15, 1, 1, "", "ApiKey"]], "abacusai.api_key.ApiKey": [[15, 3, 1, "", "__repr__"], [15, 3, 1, "", "delete"], [15, 3, 1, "", "to_dict"]], "abacusai.application_connector": [[16, 1, 1, "", "ApplicationConnector"]], "abacusai.application_connector.ApplicationConnector": [[16, 3, 1, "", "__repr__"], [16, 3, 1, "", "delete"], [16, 3, 1, "", "list_objects"], [16, 3, 1, "", "rename"], [16, 3, 1, "", "to_dict"], [16, 3, 1, "", "verify"]], "abacusai.batch_prediction": [[17, 1, 1, "", "BatchPrediction"]], "abacusai.batch_prediction.BatchPrediction": [[17, 3, 1, "", "__repr__"], [17, 3, 1, "", "create_refresh_policy"], [17, 3, 1, "", "delete"], [17, 3, 1, "", "describe"], [17, 3, 1, "", "describe_output_feature_group"], [17, 3, 1, "", "get_status"], [17, 3, 1, "", "list_refresh_policies"], [17, 3, 1, "", "list_versions"], [17, 3, 1, "", "refresh"], [17, 3, 1, "", "set_database_connector_output"], [17, 3, 1, "", "set_dataset"], [17, 3, 1, "", "set_dataset_remap"], [17, 3, 1, "", "set_feature_group"], [17, 3, 1, "", "set_feature_group_output"], [17, 3, 1, "", "set_file_connector_output"], [17, 3, 1, "", "set_output_to_console"], [17, 3, 1, "", "start"], [17, 3, 1, "", "to_dict"], [17, 3, 1, "", "update"], [17, 3, 1, "", "wait_for_drift_monitor"], [17, 3, 1, "", "wait_for_predictions"]], "abacusai.batch_prediction_version": [[18, 1, 1, "", "BatchPredictionVersion"]], "abacusai.batch_prediction_version.BatchPredictionVersion": [[18, 3, 1, "", "__repr__"], [18, 3, 1, "", "describe"], [18, 3, 1, "", "download_batch_prediction_result_chunk"], [18, 3, 1, "", "download_result_to_file"], [18, 3, 1, "", "get_batch_prediction_connector_errors"], [18, 3, 1, "", "get_outliers_for_batch_prediction_feature"], [18, 3, 1, "", "get_status"], [18, 3, 1, "", "refresh"], [18, 3, 1, "", "to_dict"], [18, 3, 1, "", "wait_for_drift_monitor"], [18, 3, 1, "", "wait_for_predictions"]], "abacusai.categorical_range_violation": [[19, 1, 1, "", "CategoricalRangeViolation"]], "abacusai.categorical_range_violation.CategoricalRangeViolation": [[19, 3, 1, "", "__repr__"], [19, 3, 1, "", "to_dict"]], "abacusai.chat_message": [[20, 1, 1, "", "ChatMessage"]], "abacusai.chat_message.ChatMessage": [[20, 3, 1, "", "__repr__"], [20, 3, 1, "", "to_dict"]], "abacusai.chat_session": [[21, 1, 1, "", "ChatSession"]], "abacusai.chat_session.ChatSession": [[21, 3, 1, "", "__repr__"], [21, 3, 1, "", "get"], [21, 3, 1, "", "to_dict"]], "abacusai.client": [[22, 1, 1, "", "ApiClient"], [22, 4, 1, "", "ApiException"], [22, 1, 1, "", "BaseApiClient"], [22, 1, 1, "", "ClientOptions"], [22, 5, 1, "", "DEFAULT_SERVER"], [22, 1, 1, "", "ReadOnlyClient"], [22, 5, 1, "", "_cached_endpoints"], [22, 6, 1, "", "_discover_service_url"], [22, 5, 1, "", "_request_context"], [22, 6, 1, "", "_requests_retry_session"], [22, 6, 1, "", "get_module_code_from_notebook"], [22, 6, 1, "", "get_source_code_info"], [22, 6, 1, "", "include_modules"]], "abacusai.client.ApiClient": [[22, 3, 1, "", "_call_aiagent_asyncapp_sync_message"], [22, 3, 1, "", "_get_agent_async_app_caller"], [22, 3, 1, "", "_get_agent_async_app_request_id"], [22, 3, 1, "", "_stream_llm_call"], [22, 3, 1, "", "add_annotatable_feature"], [22, 3, 1, "", "add_annotation"], [22, 3, 1, "", "add_feature_group_annotation_label"], [22, 3, 1, "", "add_feature_group_tag"], [22, 3, 1, "", "add_feature_group_to_project"], [22, 3, 1, "", "add_feature_tag"], [22, 3, 1, "", "add_graph_to_dashboard"], [22, 3, 1, "", "add_multiple_user_item_interactions"], [22, 3, 1, "", "add_organization_group_permission"], [22, 3, 1, "", "add_organization_group_to_feature_group_modifiers"], [22, 3, 1, "", "add_project_tags"], [22, 3, 1, "", "add_user_item_interaction"], [22, 3, 1, "", "add_user_to_feature_group_modifiers"], [22, 3, 1, "", "add_user_to_organization"], [22, 3, 1, "", "add_user_to_organization_group"], [22, 3, 1, "", "append_data"], [22, 3, 1, "", "append_multiple_data"], [22, 3, 1, "", "attach_dataset_to_project"], [22, 3, 1, "", "cancel_upload"], [22, 3, 1, "", "check_constraints"], [22, 3, 1, "", "classify_image"], [22, 3, 1, "", "classify_pdf"], [22, 3, 1, "", "clear_agent_context"], [22, 3, 1, "", "concatenate_feature_group_data"], [22, 3, 1, "", "create_agent"], [22, 3, 1, "", "create_agent_from_function"], [22, 3, 1, "", "create_algorithm"], [22, 3, 1, "", "create_algorithm_from_function"], [22, 3, 1, "", "create_batch_prediction"], [22, 3, 1, "", "create_chat_session"], [22, 3, 1, "", "create_custom_loss_function"], [22, 3, 1, "", "create_custom_loss_function_with_source_code"], [22, 3, 1, "", "create_custom_metric"], [22, 3, 1, "", "create_custom_metric_from_function"], [22, 3, 1, "", "create_dataset_from_application_connector"], [22, 3, 1, "", "create_dataset_from_database_connector"], [22, 3, 1, "", "create_dataset_from_file_connector"], [22, 3, 1, "", "create_dataset_from_pandas"], [22, 3, 1, "", "create_dataset_from_streaming_connector"], [22, 3, 1, "", "create_dataset_from_upload"], [22, 3, 1, "", "create_dataset_version_from_application_connector"], [22, 3, 1, "", "create_dataset_version_from_database_connector"], [22, 3, 1, "", "create_dataset_version_from_file_connector"], [22, 3, 1, "", "create_dataset_version_from_pandas"], [22, 3, 1, "", "create_dataset_version_from_upload"], [22, 3, 1, "", "create_deployment"], [22, 3, 1, "", "create_deployment_token"], [22, 3, 1, "", "create_deployment_webhook"], [22, 3, 1, "", "create_eda"], [22, 3, 1, "", "create_feature"], [22, 3, 1, "", "create_feature_group"], [22, 3, 1, "", "create_feature_group_from_function"], [22, 3, 1, "", "create_feature_group_from_pandas_df"], [22, 3, 1, "", "create_feature_group_from_python_function"], [22, 3, 1, "", "create_feature_group_from_spark_df"], [22, 3, 1, "", "create_feature_group_from_template"], [22, 3, 1, "", "create_feature_group_template"], [22, 3, 1, "", "create_feature_group_version"], [22, 3, 1, "", "create_graph_dashboard"], [22, 3, 1, "", "create_merge_feature_group"], [22, 3, 1, "", "create_model_from_functions"], [22, 3, 1, "", "create_model_from_python"], [22, 3, 1, "", "create_model_monitor"], [22, 3, 1, "", "create_module"], [22, 3, 1, "", "create_module_from_notebook"], [22, 3, 1, "", "create_monitor_alert"], [22, 3, 1, "", "create_nested_feature"], [22, 3, 1, "", "create_nlp_drift_monitor"], [22, 3, 1, "", "create_organization_group"], [22, 3, 1, "", "create_pipeline"], [22, 3, 1, "", "create_pipeline_step"], [22, 3, 1, "", "create_pipeline_step_from_function"], [22, 3, 1, "", "create_point_in_time_feature"], [22, 3, 1, "", "create_point_in_time_group"], [22, 3, 1, "", "create_point_in_time_group_feature"], [22, 3, 1, "", "create_project"], [22, 3, 1, "", "create_python_function"], [22, 3, 1, "", "create_refresh_policy"], [22, 3, 1, "", "create_sampling_feature_group"], [22, 3, 1, "", "create_snapshot_feature_group"], [22, 3, 1, "", "create_spark_df_from_feature_group_version"], [22, 3, 1, "", "create_streaming_dataset"], [22, 3, 1, "", "create_streaming_token"], [22, 3, 1, "", "create_train_test_data_split_feature_group"], [22, 3, 1, "", "create_transform_feature_group"], [22, 3, 1, "", "create_vector_store"], [22, 3, 1, "", "create_vector_store_version"], [22, 3, 1, "", "create_vision_drift_monitor"], [22, 3, 1, "", "delete_algorithm"], [22, 3, 1, "", "delete_api_key"], [22, 3, 1, "", "delete_application_connector"], [22, 3, 1, "", "delete_batch_prediction"], [22, 3, 1, "", "delete_custom_loss_function"], [22, 3, 1, "", "delete_custom_metric"], [22, 3, 1, "", "delete_database_connector"], [22, 3, 1, "", "delete_dataset"], [22, 3, 1, "", "delete_deployment"], [22, 3, 1, "", "delete_deployment_token"], [22, 3, 1, "", "delete_eda"], [22, 3, 1, "", "delete_eda_version"], [22, 3, 1, "", "delete_feature"], [22, 3, 1, "", "delete_feature_group"], [22, 3, 1, "", "delete_feature_group_template"], [22, 3, 1, "", "delete_file_connector"], [22, 3, 1, "", "delete_graph_dashboard"], [22, 3, 1, "", "delete_item_embeddings"], [22, 3, 1, "", "delete_model"], [22, 3, 1, "", "delete_model_monitor"], [22, 3, 1, "", "delete_model_monitor_version"], [22, 3, 1, "", "delete_model_version"], [22, 3, 1, "", "delete_module"], [22, 3, 1, "", "delete_monitor_alert"], [22, 3, 1, "", "delete_nested_feature"], [22, 3, 1, "", "delete_organization_group"], [22, 3, 1, "", "delete_pipeline"], [22, 3, 1, "", "delete_pipeline_step"], [22, 3, 1, "", "delete_point_in_time_group"], [22, 3, 1, "", "delete_project"], [22, 3, 1, "", "delete_python_function"], [22, 3, 1, "", "delete_refresh_policy"], [22, 3, 1, "", "delete_streaming_connector"], [22, 3, 1, "", "delete_streaming_token"], [22, 3, 1, "", "delete_vector_store"], [22, 3, 1, "", "delete_webhook"], [22, 3, 1, "", "describe_annotation"], [22, 3, 1, "", "describe_async_feature_group_operation"], [22, 3, 1, "", "describe_image"], [22, 3, 1, "", "describe_pipeline"], [22, 3, 1, "", "describe_pipeline_by_name"], [22, 3, 1, "", "detach_feature_group_from_template"], [22, 3, 1, "", "evaluate_prompt"], [22, 3, 1, "", "execute_agent"], [22, 3, 1, "", "execute_feature_group_sql"], [22, 3, 1, "", "export_feature_group_version_to_console"], [22, 3, 1, "", "export_feature_group_version_to_database_connector"], [22, 3, 1, "", "export_feature_group_version_to_file_connector"], [22, 3, 1, "", "export_model_artifact_as_feature_group"], [22, 3, 1, "", "generate_image"], [22, 3, 1, "", "get_agent_context_chat_history"], [22, 3, 1, "", "get_alternative_assignments"], [22, 3, 1, "", "get_anomalies"], [22, 3, 1, "", "get_assignments"], [22, 3, 1, "", "get_chat_response"], [22, 3, 1, "", "get_classification"], [22, 3, 1, "", "get_cluster"], [22, 3, 1, "", "get_custom_train_function_info"], [22, 3, 1, "", "get_document_to_annotate"], [22, 3, 1, "", "get_entailment"], [22, 3, 1, "", "get_entities_from_pdf"], [22, 3, 1, "", "get_forecast"], [22, 3, 1, "", "get_k_nearest"], [22, 3, 1, "", "get_labels"], [22, 3, 1, "", "get_llm_parameters"], [22, 3, 1, "", "get_multiple_k_nearest"], [22, 3, 1, "", "get_notebook_cell_completion"], [22, 3, 1, "", "get_objects_from_image"], [22, 3, 1, "", "get_personalized_ranking"], [22, 3, 1, "", "get_ranked_items"], [22, 3, 1, "", "get_recommendations"], [22, 3, 1, "", "get_related_items"], [22, 3, 1, "", "get_search_results"], [22, 3, 1, "", "get_sentiment"], [22, 3, 1, "", "get_summary"], [22, 3, 1, "", "get_train_function_input"], [22, 3, 1, "", "get_train_function_input_from_model_version"], [22, 3, 1, "", "get_training_config_options"], [22, 3, 1, "", "import_annotation_labels"], [22, 3, 1, "", "import_module"], [22, 3, 1, "", "invalidate_streaming_feature_group_data"], [22, 3, 1, "", "is_anomaly"], [22, 3, 1, "", "list_builtin_algorithms"], [22, 3, 1, "", "list_pipeline_versions"], [22, 3, 1, "", "lookup_features"], [22, 3, 1, "", "lookup_vector_store"], [22, 3, 1, "", "mark_upload_complete"], [22, 3, 1, "", "pause_refresh_policy"], [22, 3, 1, "", "predict"], [22, 3, 1, "", "predict_churn"], [22, 3, 1, "", "predict_class"], [22, 3, 1, "", "predict_fraud"], [22, 3, 1, "", "predict_from_datasets"], [22, 3, 1, "", "predict_language"], [22, 3, 1, "", "predict_lead"], [22, 3, 1, "", "predict_multiple"], [22, 3, 1, "", "predict_takeover"], [22, 3, 1, "", "predict_target"], [22, 3, 1, "", "predict_with_binary_data"], [22, 3, 1, "", "preview_feature_group_template_resolution"], [22, 3, 1, "", "remove_column_mapping"], [22, 3, 1, "", "remove_concatenation_config"], [22, 3, 1, "", "remove_dataset_from_project"], [22, 3, 1, "", "remove_deployment_feature_group_export_output"], [22, 3, 1, "", "remove_feature_group_annotation_label"], [22, 3, 1, "", "remove_feature_group_from_project"], [22, 3, 1, "", "remove_feature_group_tag"], [22, 3, 1, "", "remove_feature_tag"], [22, 3, 1, "", "remove_organization_group_from_feature_group_modifiers"], [22, 3, 1, "", "remove_organization_group_permission"], [22, 3, 1, "", "remove_project_tags"], [22, 3, 1, "", "remove_user_from_feature_group_modifiers"], [22, 3, 1, "", "remove_user_from_organization"], [22, 3, 1, "", "remove_user_from_organization_group"], [22, 3, 1, "", "rename_application_connector"], [22, 3, 1, "", "rename_database_connector"], [22, 3, 1, "", "rename_deployment"], [22, 3, 1, "", "rename_eda"], [22, 3, 1, "", "rename_model"], [22, 3, 1, "", "rename_model_monitor"], [22, 3, 1, "", "rename_project"], [22, 3, 1, "", "rename_streaming_connector"], [22, 3, 1, "", "render_feature_groups_for_llm"], [22, 3, 1, "", "rerun_eda"], [22, 3, 1, "", "rerun_model_monitor"], [22, 3, 1, "", "resume_refresh_policy"], [22, 3, 1, "", "retrain_model"], [22, 3, 1, "", "run_monitor_alert"], [22, 3, 1, "", "run_pipeline"], [22, 3, 1, "", "run_refresh_policy"], [22, 3, 1, "", "score_image"], [22, 3, 1, "", "set_agent_context_chat_history"], [22, 3, 1, "", "set_annotation_status_feature"], [22, 3, 1, "", "set_auto_deployment"], [22, 3, 1, "", "set_azure_blob_connection_string"], [22, 3, 1, "", "set_batch_prediction_database_connector_output"], [22, 3, 1, "", "set_batch_prediction_dataset"], [22, 3, 1, "", "set_batch_prediction_dataset_remap"], [22, 3, 1, "", "set_batch_prediction_feature_group"], [22, 3, 1, "", "set_batch_prediction_feature_group_output"], [22, 3, 1, "", "set_batch_prediction_file_connector_output"], [22, 3, 1, "", "set_batch_prediction_output_to_console"], [22, 3, 1, "", "set_column_data_type"], [22, 3, 1, "", "set_column_mapping"], [22, 3, 1, "", "set_dataset_column_data_type"], [22, 3, 1, "", "set_default_organization_group"], [22, 3, 1, "", "set_deployment_feature_group_export_database_connector_output"], [22, 3, 1, "", "set_deployment_feature_group_export_file_connector_output"], [22, 3, 1, "", "set_deployment_feature_group_version"], [22, 3, 1, "", "set_deployment_model_version"], [22, 3, 1, "", "set_feature_as_annotatable_feature"], [22, 3, 1, "", "set_feature_group_indexing_config"], [22, 3, 1, "", "set_feature_group_merge_config"], [22, 3, 1, "", "set_feature_group_modifier_lock"], [22, 3, 1, "", "set_feature_group_sampling_config"], [22, 3, 1, "", "set_feature_group_schema"], [22, 3, 1, "", "set_feature_group_transform_config"], [22, 3, 1, "", "set_feature_group_type"], [22, 3, 1, "", "set_feature_mapping"], [22, 3, 1, "", "set_feature_type"], [22, 3, 1, "", "set_model_prediction_params"], [22, 3, 1, "", "set_model_training_config"], [22, 3, 1, "", "set_natural_language_explanation"], [22, 3, 1, "", "set_project_feature_group_config"], [22, 3, 1, "", "set_streaming_retention_policy"], [22, 3, 1, "", "snapshot_streaming_data"], [22, 3, 1, "", "start_batch_prediction"], [22, 3, 1, "", "start_deployment"], [22, 3, 1, "", "stop_deployment"], [22, 3, 1, "", "stream_message"], [22, 3, 1, "", "streaming_evaluate_prompt"], [22, 3, 1, "", "train_model"], [22, 3, 1, "", "transcribe_audio"], [22, 3, 1, "", "transfer_style"], [22, 3, 1, "", "unset_feature_as_annotatable_feature"], [22, 3, 1, "", "update_agent"], [22, 3, 1, "", "update_agent_with_function"], [22, 3, 1, "", "update_algorithm"], [22, 3, 1, "", "update_algorithm_from_function"], [22, 3, 1, "", "update_annotation_status"], [22, 3, 1, "", "update_batch_prediction"], [22, 3, 1, "", "update_custom_loss_function"], [22, 3, 1, "", "update_custom_loss_function_with_source_code"], [22, 3, 1, "", "update_custom_metric"], [22, 3, 1, "", "update_custom_metric_from_function"], [22, 3, 1, "", "update_dataset_feature_group_feature_expression"], [22, 3, 1, "", "update_deployment"], [22, 3, 1, "", "update_feature"], [22, 3, 1, "", "update_feature_group"], [22, 3, 1, "", "update_feature_group_from_pandas_df"], [22, 3, 1, "", "update_feature_group_from_spark_df"], [22, 3, 1, "", "update_feature_group_function_definition"], [22, 3, 1, "", "update_feature_group_git"], [22, 3, 1, "", "update_feature_group_python_function"], [22, 3, 1, "", "update_feature_group_python_function_bindings"], [22, 3, 1, "", "update_feature_group_sql_definition"], [22, 3, 1, "", "update_feature_group_template"], [22, 3, 1, "", "update_feature_group_template_bindings"], [22, 3, 1, "", "update_feature_group_zip"], [22, 3, 1, "", "update_graph_dashboard"], [22, 3, 1, "", "update_graph_to_dashboard"], [22, 3, 1, "", "update_module"], [22, 3, 1, "", "update_module_from_notebook"], [22, 3, 1, "", "update_monitor_alert"], [22, 3, 1, "", "update_nested_feature"], [22, 3, 1, "", "update_pipeline"], [22, 3, 1, "", "update_pipeline_step"], [22, 3, 1, "", "update_pipeline_step_from_function"], [22, 3, 1, "", "update_point_in_time_feature"], [22, 3, 1, "", "update_point_in_time_group"], [22, 3, 1, "", "update_point_in_time_group_feature"], [22, 3, 1, "", "update_python_function"], [22, 3, 1, "", "update_python_function_code"], [22, 3, 1, "", "update_python_model"], [22, 3, 1, "", "update_python_model_git"], [22, 3, 1, "", "update_python_model_zip"], [22, 3, 1, "", "update_refresh_policy"], [22, 3, 1, "", "update_vector_store"], [22, 3, 1, "", "update_webhook"], [22, 3, 1, "", "upload_part"], [22, 3, 1, "", "upsert_data"], [22, 3, 1, "", "upsert_item_attributes"], [22, 3, 1, "", "upsert_item_embeddings"], [22, 3, 1, "", "upsert_multiple_data"], [22, 3, 1, "", "upsert_multiple_item_attributes"], [22, 3, 1, "", "upsert_multiple_item_embeddings"], [22, 3, 1, "", "upsert_multiple_user_attributes"], [22, 3, 1, "", "upsert_user_attributes"], [22, 3, 1, "", "use_feature_group_for_training"], [22, 3, 1, "", "verify_application_connector"], [22, 3, 1, "", "verify_database_connector"], [22, 3, 1, "", "verify_file_connector"], [22, 3, 1, "", "verify_streaming_connector"]], "abacusai.client.ApiException": [[22, 3, 1, "", "__str__"]], "abacusai.client.BaseApiClient": [[22, 3, 1, "", "_build_class"], [22, 3, 1, "", "_call_api"], [22, 3, 1, "", "_clean_api_objects"], [22, 3, 1, "", "_get_prediction_endpoint"], [22, 3, 1, "", "_get_streaming_endpoint"], [22, 3, 1, "", "_poll"], [22, 3, 1, "", "_request"], [22, 3, 1, "", "_upload_from_pandas"], [22, 3, 1, "", "_upload_from_spark"], [22, 3, 1, "", "_validate_pandas_df"], [22, 2, 1, "", "client_version"]], "abacusai.client.ReadOnlyClient": [[22, 3, 1, "", "delete_graph_from_dashboard"], [22, 3, 1, "", "describe_algorithm"], [22, 3, 1, "", "describe_batch_prediction"], [22, 3, 1, "", "describe_batch_prediction_version"], [22, 3, 1, "", "describe_custom_loss_function"], [22, 3, 1, "", "describe_custom_metric"], [22, 3, 1, "", "describe_custom_metric_version"], [22, 3, 1, "", "describe_dataset"], [22, 3, 1, "", "describe_dataset_version"], [22, 3, 1, "", "describe_deployment"], [22, 3, 1, "", "describe_eda"], [22, 3, 1, "", "describe_eda_version"], [22, 3, 1, "", "describe_feature_group"], [22, 3, 1, "", "describe_feature_group_by_table_name"], [22, 3, 1, "", "describe_feature_group_export"], [22, 3, 1, "", "describe_feature_group_template"], [22, 3, 1, "", "describe_feature_group_version"], [22, 3, 1, "", "describe_graph_dashboard"], [22, 3, 1, "", "describe_graph_for_dashboard"], [22, 3, 1, "", "describe_model"], [22, 3, 1, "", "describe_model_artifacts_export"], [22, 3, 1, "", "describe_model_monitor"], [22, 3, 1, "", "describe_model_monitor_version"], [22, 3, 1, "", "describe_model_version"], [22, 3, 1, "", "describe_module"], [22, 3, 1, "", "describe_monitor_alert"], [22, 3, 1, "", "describe_monitor_alert_version"], [22, 3, 1, "", "describe_organization_group"], [22, 3, 1, "", "describe_pipeline_step"], [22, 3, 1, "", "describe_pipeline_step_by_name"], [22, 3, 1, "", "describe_pipeline_version"], [22, 3, 1, "", "describe_problem_type"], [22, 3, 1, "", "describe_project"], [22, 3, 1, "", "describe_project_feature_group"], [22, 3, 1, "", "describe_python_function"], [22, 3, 1, "", "describe_refresh_pipeline_run"], [22, 3, 1, "", "describe_refresh_policy"], [22, 3, 1, "", "describe_train_test_data_split_feature_group"], [22, 3, 1, "", "describe_train_test_data_split_feature_group_version"], [22, 3, 1, "", "describe_upload"], [22, 3, 1, "", "describe_use_case_requirements"], [22, 3, 1, "", "describe_user"], [22, 3, 1, "", "describe_vector_store"], [22, 3, 1, "", "describe_vector_store_by_name"], [22, 3, 1, "", "describe_vector_store_version"], [22, 3, 1, "", "describe_webhook"], [22, 3, 1, "", "download_batch_prediction_result_chunk"], [22, 3, 1, "", "download_execute_feature_group_operation_result_part_chunk"], [22, 3, 1, "", "execute_async_feature_group_operation"], [22, 3, 1, "", "export_custom_model_version"], [22, 3, 1, "", "generate_natural_language_explanation"], [22, 3, 1, "", "get_annotations_status"], [22, 3, 1, "", "get_api_endpoint"], [22, 3, 1, "", "get_batch_prediction_connector_errors"], [22, 3, 1, "", "get_chat_session"], [22, 3, 1, "", "get_collinearity_for_feature"], [22, 3, 1, "", "get_database_connector_object_schema"], [22, 3, 1, "", "get_dataset_schema"], [22, 3, 1, "", "get_docstore_document"], [22, 3, 1, "", "get_docstore_image"], [22, 3, 1, "", "get_drift_for_feature"], [22, 3, 1, "", "get_eda_collinearity"], [22, 3, 1, "", "get_eda_data_consistency"], [22, 3, 1, "", "get_eda_forecasting_analysis"], [22, 3, 1, "", "get_execute_feature_group_operation_result_part_count"], [22, 3, 1, "", "get_feature_association"], [22, 3, 1, "", "get_feature_group_export_connector_errors"], [22, 3, 1, "", "get_feature_group_schema"], [22, 3, 1, "", "get_feature_group_version_export_download_url"], [22, 3, 1, "", "get_feature_importance_by_model_version"], [22, 3, 1, "", "get_file_connector_instructions"], [22, 3, 1, "", "get_materialization_logs"], [22, 3, 1, "", "get_model_metrics"], [22, 3, 1, "", "get_model_monitor_chart_from_organization"], [22, 3, 1, "", "get_model_monitor_summary"], [22, 3, 1, "", "get_model_monitor_summary_from_organization"], [22, 3, 1, "", "get_model_monitoring_logs"], [22, 3, 1, "", "get_model_training_types_for_deployment"], [22, 3, 1, "", "get_natural_language_explanation"], [22, 3, 1, "", "get_outliers_for_batch_prediction_feature"], [22, 3, 1, "", "get_outliers_for_feature"], [22, 3, 1, "", "get_prediction_drift"], [22, 3, 1, "", "get_project_feature_group_config"], [22, 3, 1, "", "get_recent_feature_group_streamed_data"], [22, 3, 1, "", "get_schema"], [22, 3, 1, "", "get_training_data_logs"], [22, 3, 1, "", "get_training_logs"], [22, 3, 1, "", "list_algorithms"], [22, 3, 1, "", "list_api_keys"], [22, 3, 1, "", "list_application_connector_objects"], [22, 3, 1, "", "list_application_connectors"], [22, 3, 1, "", "list_batch_prediction_versions"], [22, 3, 1, "", "list_batch_predictions"], [22, 3, 1, "", "list_chat_sessions"], [22, 3, 1, "", "list_custom_loss_functions"], [22, 3, 1, "", "list_custom_metrics"], [22, 3, 1, "", "list_database_connector_objects"], [22, 3, 1, "", "list_database_connectors"], [22, 3, 1, "", "list_dataset_versions"], [22, 3, 1, "", "list_datasets"], [22, 3, 1, "", "list_deployment_tokens"], [22, 3, 1, "", "list_deployment_webhooks"], [22, 3, 1, "", "list_deployments"], [22, 3, 1, "", "list_eda"], [22, 3, 1, "", "list_eda_versions"], [22, 3, 1, "", "list_feature_group_exports"], [22, 3, 1, "", "list_feature_group_modifiers"], [22, 3, 1, "", "list_feature_group_templates"], [22, 3, 1, "", "list_feature_group_versions"], [22, 3, 1, "", "list_feature_groups"], [22, 3, 1, "", "list_file_connectors"], [22, 3, 1, "", "list_graph_dashboards"], [22, 3, 1, "", "list_model_artifacts_exports"], [22, 3, 1, "", "list_model_monitor_versions"], [22, 3, 1, "", "list_model_monitors"], [22, 3, 1, "", "list_model_versions"], [22, 3, 1, "", "list_models"], [22, 3, 1, "", "list_modules"], [22, 3, 1, "", "list_monitor_alert_versions_for_monitor_version"], [22, 3, 1, "", "list_monitor_alerts_for_monitor"], [22, 3, 1, "", "list_organization_groups"], [22, 3, 1, "", "list_organization_model_monitors"], [22, 3, 1, "", "list_organization_users"], [22, 3, 1, "", "list_pipelines"], [22, 3, 1, "", "list_project_datasets"], [22, 3, 1, "", "list_project_feature_group_templates"], [22, 3, 1, "", "list_project_feature_groups"], [22, 3, 1, "", "list_projects"], [22, 3, 1, "", "list_python_function_feature_groups"], [22, 3, 1, "", "list_python_functions"], [22, 3, 1, "", "list_refresh_pipeline_runs"], [22, 3, 1, "", "list_refresh_policies"], [22, 3, 1, "", "list_streaming_connectors"], [22, 3, 1, "", "list_streaming_tokens"], [22, 3, 1, "", "list_uploads"], [22, 3, 1, "", "list_use_cases"], [22, 3, 1, "", "list_vector_store_versions"], [22, 3, 1, "", "list_vector_stores"], [22, 3, 1, "", "model_monitor_version_metric_data"], [22, 3, 1, "", "pause_pipeline_refresh_schedule"], [22, 3, 1, "", "query_feature_group_code_generator"], [22, 3, 1, "", "render_feature_group_data_for_llm"], [22, 3, 1, "", "resume_pipeline_refresh_schedule"], [22, 3, 1, "", "search_feature_groups"], [22, 3, 1, "", "set_dataset_database_connector_config"], [22, 3, 1, "", "set_default_model_algorithm"], [22, 3, 1, "", "set_model_objective"], [22, 3, 1, "", "suggest_feature_group_template_for_feature_group"], [22, 3, 1, "", "unset_pipeline_refresh_schedule"], [22, 3, 1, "", "validate_project"], [22, 3, 1, "", "verify_and_describe_annotation"]], "abacusai.code_source": [[23, 1, 1, "", "CodeSource"]], "abacusai.code_source.CodeSource": [[23, 3, 1, "", "__repr__"], [23, 3, 1, "", "to_dict"]], "abacusai.concatenation_config": [[24, 1, 1, "", "ConcatenationConfig"]], "abacusai.concatenation_config.ConcatenationConfig": [[24, 3, 1, "", "__repr__"], [24, 3, 1, "", "to_dict"]], "abacusai.cryptography": [[25, 6, 1, "", "get_public_key"], [25, 6, 1, "", "verify_response"]], "abacusai.custom_loss_function": [[26, 1, 1, "", "CustomLossFunction"]], "abacusai.custom_loss_function.CustomLossFunction": [[26, 3, 1, "", "__repr__"], [26, 3, 1, "", "to_dict"]], "abacusai.custom_metric": [[27, 1, 1, "", "CustomMetric"]], "abacusai.custom_metric.CustomMetric": [[27, 3, 1, "", "__repr__"], [27, 3, 1, "", "to_dict"]], "abacusai.custom_metric_version": [[28, 1, 1, "", "CustomMetricVersion"]], "abacusai.custom_metric_version.CustomMetricVersion": [[28, 3, 1, "", "__repr__"], [28, 3, 1, "", "describe"], [28, 3, 1, "", "refresh"], [28, 3, 1, "", "to_dict"]], "abacusai.custom_train_function_info": [[29, 1, 1, "", "CustomTrainFunctionInfo"]], "abacusai.custom_train_function_info.CustomTrainFunctionInfo": [[29, 3, 1, "", "__repr__"], [29, 3, 1, "", "to_dict"]], "abacusai.data_consistency_duplication": [[30, 1, 1, "", "DataConsistencyDuplication"]], "abacusai.data_consistency_duplication.DataConsistencyDuplication": [[30, 3, 1, "", "__repr__"], [30, 3, 1, "", "to_dict"]], "abacusai.data_prep_logs": [[31, 1, 1, "", "DataPrepLogs"]], "abacusai.data_prep_logs.DataPrepLogs": [[31, 3, 1, "", "__repr__"], [31, 3, 1, "", "to_dict"]], "abacusai.data_quality_results": [[32, 1, 1, "", "DataQualityResults"]], "abacusai.data_quality_results.DataQualityResults": [[32, 3, 1, "", "__repr__"], [32, 3, 1, "", "to_dict"]], "abacusai.database_connector": [[33, 1, 1, "", "DatabaseConnector"]], "abacusai.database_connector.DatabaseConnector": [[33, 3, 1, "", "__repr__"], [33, 3, 1, "", "delete"], [33, 3, 1, "", "get_object_schema"], [33, 3, 1, "", "list_objects"], [33, 3, 1, "", "rename"], [33, 3, 1, "", "to_dict"], [33, 3, 1, "", "verify"]], "abacusai.dataset": [[34, 1, 1, "", "Dataset"]], "abacusai.dataset.Dataset": [[34, 3, 1, "", "__repr__"], [34, 3, 1, "", "attach_to_project"], [34, 3, 1, "", "create_refresh_policy"], [34, 3, 1, "", "create_version_from_application_connector"], [34, 3, 1, "", "create_version_from_database_connector"], [34, 3, 1, "", "create_version_from_file_connector"], [34, 3, 1, "", "create_version_from_upload"], [34, 3, 1, "", "delete"], [34, 3, 1, "", "describe"], [34, 3, 1, "", "describe_feature_group"], [34, 3, 1, "", "get_schema"], [34, 3, 1, "", "get_status"], [34, 3, 1, "", "list_refresh_policies"], [34, 3, 1, "", "list_versions"], [34, 3, 1, "", "refresh"], [34, 3, 1, "", "remove_from_project"], [34, 3, 1, "", "set_column_data_type"], [34, 3, 1, "", "set_database_connector_config"], [34, 3, 1, "", "set_streaming_retention_policy"], [34, 3, 1, "", "snapshot_streaming_data"], [34, 3, 1, "", "to_dict"], [34, 3, 1, "", "wait_for_import"], [34, 3, 1, "", "wait_for_inspection"]], "abacusai.dataset_column": [[35, 1, 1, "", "DatasetColumn"]], "abacusai.dataset_column.DatasetColumn": [[35, 3, 1, "", "__repr__"], [35, 3, 1, "", "to_dict"]], "abacusai.dataset_version": [[36, 1, 1, "", "DatasetVersion"]], "abacusai.dataset_version.DatasetVersion": [[36, 3, 1, "", "__repr__"], [36, 3, 1, "", "describe"], [36, 3, 1, "", "get_status"], [36, 3, 1, "", "refresh"], [36, 3, 1, "", "to_dict"], [36, 3, 1, "", "wait_for_import"], [36, 3, 1, "", "wait_for_inspection"]], "abacusai.deployment": [[37, 1, 1, "", "Deployment"]], "abacusai.deployment.Deployment": [[37, 3, 1, "", "__repr__"], [37, 3, 1, "", "create_batch_prediction"], [37, 3, 1, "", "create_refresh_policy"], [37, 3, 1, "", "create_webhook"], [37, 3, 1, "", "delete"], [37, 3, 1, "", "describe"], [37, 3, 1, "", "get_status"], [37, 3, 1, "", "list_refresh_policies"], [37, 3, 1, "", "list_webhooks"], [37, 3, 1, "", "refresh"], [37, 3, 1, "", "remove_feature_group_export_output"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "set_auto"], [37, 3, 1, "", "set_feature_group_export_database_connector_output"], [37, 3, 1, "", "set_feature_group_export_file_connector_output"], [37, 3, 1, "", "set_feature_group_version"], [37, 3, 1, "", "set_model_version"], [37, 3, 1, "", "start"], [37, 3, 1, "", "stop"], [37, 3, 1, "", "to_dict"], [37, 3, 1, "", "update"], [37, 3, 1, "", "wait_for_deployment"], [37, 3, 1, "", "wait_for_pending_deployment_update"]], "abacusai.deployment_auth_token": [[38, 1, 1, "", "DeploymentAuthToken"]], "abacusai.deployment_auth_token.DeploymentAuthToken": [[38, 3, 1, "", "__repr__"], [38, 3, 1, "", "to_dict"]], "abacusai.document": [[39, 1, 1, "", "Document"]], "abacusai.document.Document": [[39, 3, 1, "", "__repr__"], [39, 3, 1, "", "to_dict"]], "abacusai.document_annotation": [[40, 1, 1, "", "DocumentAnnotation"]], "abacusai.document_annotation.DocumentAnnotation": [[40, 3, 1, "", "__repr__"], [40, 3, 1, "", "to_dict"]], "abacusai.document_store": [[41, 1, 1, "", "DocumentStore"]], "abacusai.document_store.DocumentStore": [[41, 3, 1, "", "__repr__"], [41, 3, 1, "", "to_dict"]], "abacusai.document_store_import": [[42, 1, 1, "", "DocumentStoreImport"]], "abacusai.document_store_import.DocumentStoreImport": [[42, 3, 1, "", "__repr__"], [42, 3, 1, "", "to_dict"]], "abacusai.drift_distribution": [[43, 1, 1, "", "DriftDistribution"]], "abacusai.drift_distribution.DriftDistribution": [[43, 3, 1, "", "__repr__"], [43, 3, 1, "", "to_dict"]], "abacusai.drift_distributions": [[44, 1, 1, "", "DriftDistributions"]], "abacusai.drift_distributions.DriftDistributions": [[44, 3, 1, "", "__repr__"], [44, 3, 1, "", "to_dict"]], "abacusai.eda": [[45, 1, 1, "", "Eda"]], "abacusai.eda.Eda": [[45, 3, 1, "", "__repr__"], [45, 3, 1, "", "delete"], [45, 3, 1, "", "describe"], [45, 3, 1, "", "list_versions"], [45, 3, 1, "", "refresh"], [45, 3, 1, "", "rename"], [45, 3, 1, "", "rerun"], [45, 3, 1, "", "to_dict"]], "abacusai.eda_chart_description": [[46, 1, 1, "", "EdaChartDescription"]], "abacusai.eda_chart_description.EdaChartDescription": [[46, 3, 1, "", "__repr__"], [46, 3, 1, "", "to_dict"]], "abacusai.eda_collinearity": [[47, 1, 1, "", "EdaCollinearity"]], "abacusai.eda_collinearity.EdaCollinearity": [[47, 3, 1, "", "__repr__"], [47, 3, 1, "", "to_dict"]], "abacusai.eda_data_consistency": [[48, 1, 1, "", "EdaDataConsistency"]], "abacusai.eda_data_consistency.EdaDataConsistency": [[48, 3, 1, "", "__repr__"], [48, 3, 1, "", "to_dict"]], "abacusai.eda_feature_association": [[49, 1, 1, "", "EdaFeatureAssociation"]], "abacusai.eda_feature_association.EdaFeatureAssociation": [[49, 3, 1, "", "__repr__"], [49, 3, 1, "", "to_dict"]], "abacusai.eda_feature_collinearity": [[50, 1, 1, "", "EdaFeatureCollinearity"]], "abacusai.eda_feature_collinearity.EdaFeatureCollinearity": [[50, 3, 1, "", "__repr__"], [50, 3, 1, "", "to_dict"]], "abacusai.eda_forecasting_analysis": [[51, 1, 1, "", "EdaForecastingAnalysis"]], "abacusai.eda_forecasting_analysis.EdaForecastingAnalysis": [[51, 3, 1, "", "__repr__"], [51, 3, 1, "", "to_dict"]], "abacusai.eda_version": [[52, 1, 1, "", "EdaVersion"]], "abacusai.eda_version.EdaVersion": [[52, 3, 1, "", "__repr__"], [52, 3, 1, "", "delete"], [52, 3, 1, "", "describe"], [52, 3, 1, "", "get_collinearity_for_feature"], [52, 3, 1, "", "get_eda_collinearity"], [52, 3, 1, "", "get_eda_data_consistency"], [52, 3, 1, "", "get_eda_forecasting_analysis"], [52, 3, 1, "", "get_feature_association"], [52, 3, 1, "", "get_status"], [52, 3, 1, "", "refresh"], [52, 3, 1, "", "to_dict"], [52, 3, 1, "", "wait_for_eda"]], "abacusai.embedding_feature_drift_distribution": [[53, 1, 1, "", "EmbeddingFeatureDriftDistribution"]], "abacusai.embedding_feature_drift_distribution.EmbeddingFeatureDriftDistribution": [[53, 3, 1, "", "__repr__"], [53, 3, 1, "", "to_dict"]], "abacusai.execute_feature_group_operation": [[54, 1, 1, "", "ExecuteFeatureGroupOperation"]], "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation": [[54, 3, 1, "", "__repr__"], [54, 3, 1, "", "_download_avro_file"], [54, 3, 1, "", "describe"], [54, 3, 1, "", "get_status"], [54, 3, 1, "", "load_as_pandas"], [54, 3, 1, "", "refresh"], [54, 3, 1, "", "to_dict"], [54, 3, 1, "", "wait_for_execution"], [54, 3, 1, "", "wait_for_results"]], "abacusai.feature": [[55, 1, 1, "", "Feature"]], "abacusai.feature.Feature": [[55, 3, 1, "", "__repr__"], [55, 3, 1, "", "to_dict"]], "abacusai.feature_distribution": [[56, 1, 1, "", "FeatureDistribution"]], "abacusai.feature_distribution.FeatureDistribution": [[56, 3, 1, "", "__repr__"], [56, 3, 1, "", "to_dict"]], "abacusai.feature_drift_summary": [[57, 1, 1, "", "FeatureDriftSummary"]], "abacusai.feature_drift_summary.FeatureDriftSummary": [[57, 3, 1, "", "__repr__"], [57, 3, 1, "", "to_dict"]], "abacusai.feature_group": [[58, 1, 1, "", "FeatureGroup"]], "abacusai.feature_group.FeatureGroup": [[58, 3, 1, "", "__repr__"], [58, 3, 1, "", "add_annotatable_feature"], [58, 3, 1, "", "add_annotation_label"], [58, 3, 1, "", "add_feature_tag"], [58, 3, 1, "", "add_organization_group_to_modifiers"], [58, 3, 1, "", "add_tag"], [58, 3, 1, "", "add_to_project"], [58, 3, 1, "", "add_user_to_modifiers"], [58, 3, 1, "", "append_data"], [58, 3, 1, "", "append_multiple_data"], [58, 3, 1, "", "concatenate_data"], [58, 3, 1, "", "create_feature"], [58, 3, 1, "", "create_nested_feature"], [58, 3, 1, "", "create_point_in_time_feature"], [58, 3, 1, "", "create_point_in_time_group"], [58, 3, 1, "", "create_point_in_time_group_feature"], [58, 3, 1, "", "create_sampling"], [58, 3, 1, "", "create_template"], [58, 3, 1, "", "create_version"], [58, 3, 1, "", "delete"], [58, 3, 1, "", "delete_feature"], [58, 3, 1, "", "delete_nested_feature"], [58, 3, 1, "", "delete_point_in_time_group"], [58, 3, 1, "", "describe"], [58, 3, 1, "", "describe_annotation"], [58, 3, 1, "", "describe_dataset"], [58, 3, 1, "", "detach_from_template"], [58, 3, 1, "", "generate_natural_language_explanation"], [58, 3, 1, "", "get_annotations_status"], [58, 3, 1, "", "get_document_to_annotate"], [58, 3, 1, "", "get_natural_language_explanation"], [58, 3, 1, "", "get_project_config"], [58, 3, 1, "", "get_recent_streamed_data"], [58, 3, 1, "", "get_schema"], [58, 3, 1, "", "get_status"], [58, 3, 1, "", "import_annotation_labels"], [58, 3, 1, "", "invalidate_streaming_data"], [58, 3, 1, "", "list_exports"], [58, 3, 1, "", "list_modifiers"], [58, 3, 1, "", "list_versions"], [58, 3, 1, "", "load_as_pandas"], [58, 3, 1, "", "materialize"], [58, 3, 1, "", "refresh"], [58, 3, 1, "", "remove_annotation_label"], [58, 3, 1, "", "remove_concatenation_config"], [58, 3, 1, "", "remove_feature_tag"], [58, 3, 1, "", "remove_from_project"], [58, 3, 1, "", "remove_organization_group_from_modifiers"], [58, 3, 1, "", "remove_tag"], [58, 3, 1, "", "remove_user_from_modifiers"], [58, 3, 1, "", "render_data_for_llm"], [58, 3, 1, "", "set_annotation_status_feature"], [58, 3, 1, "", "set_feature_as_annotatable_feature"], [58, 3, 1, "", "set_feature_type"], [58, 3, 1, "", "set_indexing_config"], [58, 3, 1, "", "set_merge_config"], [58, 3, 1, "", "set_modifier_lock"], [58, 3, 1, "", "set_project_config"], [58, 3, 1, "", "set_sampling_config"], [58, 3, 1, "", "set_schema"], [58, 3, 1, "", "set_transform_config"], [58, 3, 1, "", "set_type"], [58, 3, 1, "", "suggest_template_for"], [58, 3, 1, "", "to_dict"], [58, 3, 1, "", "unset_feature_as_annotatable_feature"], [58, 3, 1, "", "update"], [58, 3, 1, "", "update_annotation_status"], [58, 3, 1, "", "update_dataset_feature_expression"], [58, 3, 1, "", "update_feature"], [58, 3, 1, "", "update_function_definition"], [58, 3, 1, "", "update_git"], [58, 3, 1, "", "update_nested_feature"], [58, 3, 1, "", "update_point_in_time_feature"], [58, 3, 1, "", "update_point_in_time_group"], [58, 3, 1, "", "update_point_in_time_group_feature"], [58, 3, 1, "", "update_python_function"], [58, 3, 1, "", "update_python_function_bindings"], [58, 3, 1, "", "update_sql_definition"], [58, 3, 1, "", "update_template_bindings"], [58, 3, 1, "", "update_zip"], [58, 3, 1, "", "upsert_data"], [58, 3, 1, "", "upsert_multiple_data"], [58, 3, 1, "", "use_for_training"], [58, 3, 1, "", "verify_and_describe_annotation"], [58, 3, 1, "", "wait_for_dataset"], [58, 3, 1, "", "wait_for_materialization"], [58, 3, 1, "", "wait_for_streaming_ready"], [58, 3, 1, "", "wait_for_upload"]], "abacusai.feature_group_export": [[59, 1, 1, "", "FeatureGroupExport"]], "abacusai.feature_group_export.FeatureGroupExport": [[59, 3, 1, "", "__repr__"], [59, 3, 1, "", "describe"], [59, 3, 1, "", "get_connector_errors"], [59, 3, 1, "", "get_feature_group_version_export_download_url"], [59, 3, 1, "", "get_results"], [59, 3, 1, "", "get_status"], [59, 3, 1, "", "refresh"], [59, 3, 1, "", "to_dict"], [59, 3, 1, "", "wait_for_export"], [59, 3, 1, "", "wait_for_results"]], "abacusai.feature_group_export_config": [[60, 1, 1, "", "FeatureGroupExportConfig"]], "abacusai.feature_group_export_config.FeatureGroupExportConfig": [[60, 3, 1, "", "__repr__"], [60, 3, 1, "", "to_dict"]], "abacusai.feature_group_export_download_url": [[61, 1, 1, "", "FeatureGroupExportDownloadUrl"]], "abacusai.feature_group_export_download_url.FeatureGroupExportDownloadUrl": [[61, 3, 1, "", "__repr__"], [61, 3, 1, "", "to_dict"]], "abacusai.feature_group_lineage": [[62, 1, 1, "", "FeatureGroupLineage"]], "abacusai.feature_group_lineage.FeatureGroupLineage": [[62, 3, 1, "", "__repr__"], [62, 3, 1, "", "to_dict"]], "abacusai.feature_group_metrics": [[63, 1, 1, "", "FeatureGroupMetrics"]], "abacusai.feature_group_metrics.FeatureGroupMetrics": [[63, 3, 1, "", "__repr__"], [63, 3, 1, "", "to_dict"]], "abacusai.feature_group_refresh_export_config": [[64, 1, 1, "", "FeatureGroupRefreshExportConfig"]], "abacusai.feature_group_refresh_export_config.FeatureGroupRefreshExportConfig": [[64, 3, 1, "", "__repr__"], [64, 3, 1, "", "to_dict"]], "abacusai.feature_group_template": [[65, 1, 1, "", "FeatureGroupTemplate"]], "abacusai.feature_group_template.FeatureGroupTemplate": [[65, 3, 1, "", "__repr__"], [65, 3, 1, "", "delete"], [65, 3, 1, "", "describe"], [65, 3, 1, "", "preview_resolution"], [65, 3, 1, "", "refresh"], [65, 3, 1, "", "to_dict"], [65, 3, 1, "", "update"]], "abacusai.feature_group_template_variable_options": [[66, 1, 1, "", "FeatureGroupTemplateVariableOptions"]], "abacusai.feature_group_template_variable_options.FeatureGroupTemplateVariableOptions": [[66, 3, 1, "", "__repr__"], [66, 3, 1, "", "to_dict"]], "abacusai.feature_group_version": [[67, 1, 1, "", "FeatureGroupVersion"]], "abacusai.feature_group_version.FeatureGroupVersion": [[67, 3, 1, "", "__repr__"], [67, 3, 1, "", "_download_avro_file"], [67, 3, 1, "", "create_snapshot_feature_group"], [67, 3, 1, "", "describe"], [67, 3, 1, "", "export_to_console"], [67, 3, 1, "", "export_to_database_connector"], [67, 3, 1, "", "export_to_file_connector"], [67, 3, 1, "", "get_materialization_logs"], [67, 3, 1, "", "get_status"], [67, 3, 1, "", "load_as_pandas"], [67, 3, 1, "", "refresh"], [67, 3, 1, "", "to_dict"], [67, 3, 1, "", "wait_for_materialization"], [67, 3, 1, "", "wait_for_results"]], "abacusai.feature_importance": [[68, 1, 1, "", "FeatureImportance"]], "abacusai.feature_importance.FeatureImportance": [[68, 3, 1, "", "__repr__"], [68, 3, 1, "", "to_dict"]], "abacusai.feature_record": [[69, 1, 1, "", "FeatureRecord"]], "abacusai.feature_record.FeatureRecord": [[69, 3, 1, "", "__repr__"], [69, 3, 1, "", "to_dict"]], "abacusai.file_connector": [[70, 1, 1, "", "FileConnector"]], "abacusai.file_connector.FileConnector": [[70, 3, 1, "", "__repr__"], [70, 3, 1, "", "to_dict"]], "abacusai.file_connector_instructions": [[71, 1, 1, "", "FileConnectorInstructions"]], "abacusai.file_connector_instructions.FileConnectorInstructions": [[71, 3, 1, "", "__repr__"], [71, 3, 1, "", "to_dict"]], "abacusai.file_connector_verification": [[72, 1, 1, "", "FileConnectorVerification"]], "abacusai.file_connector_verification.FileConnectorVerification": [[72, 3, 1, "", "__repr__"], [72, 3, 1, "", "to_dict"]], "abacusai.forecasting_analysis_graph_data": [[73, 1, 1, "", "ForecastingAnalysisGraphData"]], "abacusai.forecasting_analysis_graph_data.ForecastingAnalysisGraphData": [[73, 3, 1, "", "__repr__"], [73, 3, 1, "", "to_dict"]], "abacusai.function_logs": [[74, 1, 1, "", "FunctionLogs"]], "abacusai.function_logs.FunctionLogs": [[74, 3, 1, "", "__repr__"], [74, 3, 1, "", "to_dict"]], "abacusai.generated_pit_feature_config_option": [[75, 1, 1, "", "GeneratedPitFeatureConfigOption"]], "abacusai.generated_pit_feature_config_option.GeneratedPitFeatureConfigOption": [[75, 3, 1, "", "__repr__"], [75, 3, 1, "", "to_dict"]], "abacusai.graph_dashboard": [[76, 1, 1, "", "GraphDashboard"]], "abacusai.graph_dashboard.GraphDashboard": [[76, 3, 1, "", "__repr__"], [76, 3, 1, "", "delete"], [76, 3, 1, "", "describe"], [76, 3, 1, "", "refresh"], [76, 3, 1, "", "to_dict"], [76, 3, 1, "", "update"]], "abacusai.indexing_config": [[78, 1, 1, "", "IndexingConfig"]], "abacusai.indexing_config.IndexingConfig": [[78, 3, 1, "", "__repr__"], [78, 3, 1, "", "to_dict"]], "abacusai.item_statistics": [[79, 1, 1, "", "ItemStatistics"]], "abacusai.item_statistics.ItemStatistics": [[79, 3, 1, "", "__repr__"], [79, 3, 1, "", "to_dict"]], "abacusai.llm_code_block": [[80, 1, 1, "", "LlmCodeBlock"]], "abacusai.llm_code_block.LlmCodeBlock": [[80, 3, 1, "", "__repr__"], [80, 3, 1, "", "to_dict"]], "abacusai.llm_input": [[81, 1, 1, "", "LlmInput"]], "abacusai.llm_input.LlmInput": [[81, 3, 1, "", "__repr__"], [81, 3, 1, "", "to_dict"]], "abacusai.llm_parameters": [[82, 1, 1, "", "LlmParameters"]], "abacusai.llm_parameters.LlmParameters": [[82, 3, 1, "", "__repr__"], [82, 3, 1, "", "to_dict"]], "abacusai.llm_response": [[83, 1, 1, "", "LlmResponse"]], "abacusai.llm_response.LlmResponse": [[83, 3, 1, "", "__repr__"], [83, 3, 1, "", "to_dict"]], "abacusai.model": [[84, 1, 1, "", "Model"]], "abacusai.model.Model": [[84, 3, 1, "", "__repr__"], [84, 3, 1, "", "create_refresh_policy"], [84, 3, 1, "", "delete"], [84, 3, 1, "", "describe"], [84, 3, 1, "", "describe_train_test_data_split_feature_group"], [84, 3, 1, "", "get_metrics"], [84, 3, 1, "", "get_status"], [84, 3, 1, "", "get_train_test_feature_group_as_pandas"], [84, 3, 1, "", "get_training_types_for_deployment"], [84, 3, 1, "", "list_artifacts_exports"], [84, 3, 1, "", "list_refresh_policies"], [84, 3, 1, "", "list_versions"], [84, 3, 1, "", "refresh"], [84, 3, 1, "", "rename"], [84, 3, 1, "", "retrain"], [84, 3, 1, "", "set_default_algorithm"], [84, 3, 1, "", "set_prediction_params"], [84, 3, 1, "", "set_training_config"], [84, 3, 1, "", "to_dict"], [84, 3, 1, "", "update_agent"], [84, 3, 1, "", "update_python"], [84, 3, 1, "", "update_python_git"], [84, 3, 1, "", "update_python_zip"], [84, 3, 1, "", "wait_for_evaluation"], [84, 3, 1, "", "wait_for_full_automl"], [84, 3, 1, "", "wait_for_publish"], [84, 3, 1, "", "wait_for_training"]], "abacusai.model_artifacts_export": [[85, 1, 1, "", "ModelArtifactsExport"]], "abacusai.model_artifacts_export.ModelArtifactsExport": [[85, 3, 1, "", "__repr__"], [85, 3, 1, "", "describe"], [85, 3, 1, "", "get_status"], [85, 3, 1, "", "refresh"], [85, 3, 1, "", "to_dict"], [85, 3, 1, "", "wait_for_results"]], "abacusai.model_blueprint_export": [[86, 1, 1, "", "ModelBlueprintExport"]], "abacusai.model_blueprint_export.ModelBlueprintExport": [[86, 3, 1, "", "__repr__"], [86, 3, 1, "", "to_dict"]], "abacusai.model_blueprint_stage": [[87, 1, 1, "", "ModelBlueprintStage"]], "abacusai.model_blueprint_stage.ModelBlueprintStage": [[87, 3, 1, "", "__repr__"], [87, 3, 1, "", "to_dict"]], "abacusai.model_location": [[88, 1, 1, "", "ModelLocation"]], "abacusai.model_location.ModelLocation": [[88, 3, 1, "", "__repr__"], [88, 3, 1, "", "to_dict"]], "abacusai.model_metrics": [[89, 1, 1, "", "ModelMetrics"]], "abacusai.model_metrics.ModelMetrics": [[89, 3, 1, "", "__repr__"], [89, 3, 1, "", "to_dict"]], "abacusai.model_monitor": [[90, 1, 1, "", "ModelMonitor"]], "abacusai.model_monitor.ModelMonitor": [[90, 3, 1, "", "__repr__"], [90, 3, 1, "", "delete"], [90, 3, 1, "", "describe"], [90, 3, 1, "", "get_summary"], [90, 3, 1, "", "list_monitor_alerts_for_monitor"], [90, 3, 1, "", "list_versions"], [90, 3, 1, "", "refresh"], [90, 3, 1, "", "rename"], [90, 3, 1, "", "rerun"], [90, 3, 1, "", "to_dict"]], "abacusai.model_monitor_org_summary": [[91, 1, 1, "", "ModelMonitorOrgSummary"]], "abacusai.model_monitor_org_summary.ModelMonitorOrgSummary": [[91, 3, 1, "", "__repr__"], [91, 3, 1, "", "to_dict"]], "abacusai.model_monitor_summary": [[92, 1, 1, "", "ModelMonitorSummary"]], "abacusai.model_monitor_summary.ModelMonitorSummary": [[92, 3, 1, "", "__repr__"], [92, 3, 1, "", "to_dict"]], "abacusai.model_monitor_summary_from_org": [[93, 1, 1, "", "ModelMonitorSummaryFromOrg"]], "abacusai.model_monitor_summary_from_org.ModelMonitorSummaryFromOrg": [[93, 3, 1, "", "__repr__"], [93, 3, 1, "", "to_dict"]], "abacusai.model_monitor_version": [[94, 1, 1, "", "ModelMonitorVersion"]], "abacusai.model_monitor_version.ModelMonitorVersion": [[94, 3, 1, "", "__repr__"], [94, 3, 1, "", "delete"], [94, 3, 1, "", "describe"], [94, 3, 1, "", "get_drift_for_feature"], [94, 3, 1, "", "get_model_monitoring_logs"], [94, 3, 1, "", "get_outliers_for_feature"], [94, 3, 1, "", "get_prediction_drift"], [94, 3, 1, "", "get_status"], [94, 3, 1, "", "list_monitor_alert_versions_for_monitor_version"], [94, 3, 1, "", "metric_data"], [94, 3, 1, "", "refresh"], [94, 3, 1, "", "to_dict"], [94, 3, 1, "", "wait_for_monitor"]], "abacusai.model_monitor_version_metric_data": [[95, 1, 1, "", "ModelMonitorVersionMetricData"]], "abacusai.model_monitor_version_metric_data.ModelMonitorVersionMetricData": [[95, 3, 1, "", "__repr__"], [95, 3, 1, "", "to_dict"]], "abacusai.model_training_type_for_deployment": [[96, 1, 1, "", "ModelTrainingTypeForDeployment"]], "abacusai.model_training_type_for_deployment.ModelTrainingTypeForDeployment": [[96, 3, 1, "", "__repr__"], [96, 3, 1, "", "to_dict"]], "abacusai.model_upload": [[97, 1, 1, "", "ModelUpload"]], "abacusai.model_upload.ModelUpload": [[97, 3, 1, "", "__repr__"], [97, 3, 1, "", "to_dict"]], "abacusai.model_version": [[98, 1, 1, "", "ModelVersion"]], "abacusai.model_version.ModelVersion": [[98, 3, 1, "", "__repr__"], [98, 3, 1, "", "delete"], [98, 3, 1, "", "describe"], [98, 3, 1, "", "describe_train_test_data_split_feature_group_version"], [98, 3, 1, "", "export_custom"], [98, 3, 1, "", "export_model_artifact_as_feature_group"], [98, 3, 1, "", "get_feature_importance_by"], [98, 3, 1, "", "get_status"], [98, 3, 1, "", "get_train_test_feature_group_as_pandas"], [98, 3, 1, "", "get_training_data_logs"], [98, 3, 1, "", "get_training_logs"], [98, 3, 1, "", "refresh"], [98, 3, 1, "", "set_model_objective"], [98, 3, 1, "", "to_dict"], [98, 3, 1, "", "wait_for_full_automl"], [98, 3, 1, "", "wait_for_training"]], "abacusai.modification_lock_info": [[99, 1, 1, "", "ModificationLockInfo"]], "abacusai.modification_lock_info.ModificationLockInfo": [[99, 3, 1, "", "__repr__"], [99, 3, 1, "", "to_dict"]], "abacusai.module": [[100, 1, 1, "", "Module"]], "abacusai.module.Module": [[100, 3, 1, "", "__repr__"], [100, 3, 1, "", "to_dict"]], "abacusai.monitor_alert": [[101, 1, 1, "", "MonitorAlert"]], "abacusai.monitor_alert.MonitorAlert": [[101, 3, 1, "", "__repr__"], [101, 3, 1, "", "delete"], [101, 3, 1, "", "describe"], [101, 3, 1, "", "refresh"], [101, 3, 1, "", "run"], [101, 3, 1, "", "to_dict"], [101, 3, 1, "", "update"]], "abacusai.monitor_alert_version": [[102, 1, 1, "", "MonitorAlertVersion"]], "abacusai.monitor_alert_version.MonitorAlertVersion": [[102, 3, 1, "", "__repr__"], [102, 3, 1, "", "describe"], [102, 3, 1, "", "get_status"], [102, 3, 1, "", "refresh"], [102, 3, 1, "", "to_dict"], [102, 3, 1, "", "wait_for_monitor_alert"]], "abacusai.natural_language_explanation": [[103, 1, 1, "", "NaturalLanguageExplanation"]], "abacusai.natural_language_explanation.NaturalLanguageExplanation": [[103, 3, 1, "", "__repr__"], [103, 3, 1, "", "to_dict"]], "abacusai.nested_feature": [[104, 1, 1, "", "NestedFeature"]], "abacusai.nested_feature.NestedFeature": [[104, 3, 1, "", "__repr__"], [104, 3, 1, "", "to_dict"]], "abacusai.null_violation": [[105, 1, 1, "", "NullViolation"]], "abacusai.null_violation.NullViolation": [[105, 3, 1, "", "__repr__"], [105, 3, 1, "", "to_dict"]], "abacusai.organization_group": [[106, 1, 1, "", "OrganizationGroup"]], "abacusai.organization_group.OrganizationGroup": [[106, 3, 1, "", "__repr__"], [106, 3, 1, "", "add_permission"], [106, 3, 1, "", "add_user_to"], [106, 3, 1, "", "delete"], [106, 3, 1, "", "describe"], [106, 3, 1, "", "refresh"], [106, 3, 1, "", "remove_permission"], [106, 3, 1, "", "remove_user_from"], [106, 3, 1, "", "set_default"], [106, 3, 1, "", "to_dict"]], "abacusai.organization_search_result": [[107, 1, 1, "", "OrganizationSearchResult"]], "abacusai.organization_search_result.OrganizationSearchResult": [[107, 3, 1, "", "__repr__"], [107, 3, 1, "", "to_dict"]], "abacusai.pipeline": [[108, 1, 1, "", "Pipeline"]], "abacusai.pipeline.Pipeline": [[108, 3, 1, "", "__repr__"], [108, 3, 1, "", "create_step"], [108, 3, 1, "", "delete"], [108, 3, 1, "", "describe"], [108, 3, 1, "", "describe_step_by_name"], [108, 3, 1, "", "list_versions"], [108, 3, 1, "", "pause_refresh_schedule"], [108, 3, 1, "", "refresh"], [108, 3, 1, "", "resume_refresh_schedule"], [108, 3, 1, "", "run"], [108, 3, 1, "", "to_dict"], [108, 3, 1, "", "unset_refresh_schedule"], [108, 3, 1, "", "update"]], "abacusai.pipeline_reference": [[109, 1, 1, "", "PipelineReference"]], "abacusai.pipeline_reference.PipelineReference": [[109, 3, 1, "", "__repr__"], [109, 3, 1, "", "to_dict"]], "abacusai.pipeline_step": [[110, 1, 1, "", "PipelineStep"]], "abacusai.pipeline_step.PipelineStep": [[110, 3, 1, "", "__repr__"], [110, 3, 1, "", "delete"], [110, 3, 1, "", "describe"], [110, 3, 1, "", "refresh"], [110, 3, 1, "", "to_dict"], [110, 3, 1, "", "update"]], "abacusai.pipeline_step_version": [[111, 1, 1, "", "PipelineStepVersion"]], "abacusai.pipeline_step_version.PipelineStepVersion": [[111, 3, 1, "", "__repr__"], [111, 3, 1, "", "to_dict"]], "abacusai.pipeline_step_version_reference": [[112, 1, 1, "", "PipelineStepVersionReference"]], "abacusai.pipeline_step_version_reference.PipelineStepVersionReference": [[112, 3, 1, "", "__repr__"], [112, 3, 1, "", "to_dict"]], "abacusai.pipeline_version": [[113, 1, 1, "", "PipelineVersion"]], "abacusai.pipeline_version.PipelineVersion": [[113, 3, 1, "", "__repr__"], [113, 3, 1, "", "describe"], [113, 3, 1, "", "get_status"], [113, 3, 1, "", "refresh"], [113, 3, 1, "", "to_dict"], [113, 3, 1, "", "wait_for_pipeline"]], "abacusai.point_in_time_feature": [[114, 1, 1, "", "PointInTimeFeature"]], "abacusai.point_in_time_feature.PointInTimeFeature": [[114, 3, 1, "", "__repr__"], [114, 3, 1, "", "to_dict"]], "abacusai.point_in_time_group": [[115, 1, 1, "", "PointInTimeGroup"]], "abacusai.point_in_time_group.PointInTimeGroup": [[115, 3, 1, "", "__repr__"], [115, 3, 1, "", "to_dict"]], "abacusai.point_in_time_group_feature": [[116, 1, 1, "", "PointInTimeGroupFeature"]], "abacusai.point_in_time_group_feature.PointInTimeGroupFeature": [[116, 3, 1, "", "__repr__"], [116, 3, 1, "", "to_dict"]], "abacusai.prediction_client": [[117, 1, 1, "", "PredictionClient"]], "abacusai.prediction_client.PredictionClient": [[117, 3, 1, "", "check_constraints"], [117, 3, 1, "", "classify_image"], [117, 3, 1, "", "classify_pdf"], [117, 3, 1, "", "describe_image"], [117, 3, 1, "", "execute_agent"], [117, 3, 1, "", "generate_image"], [117, 3, 1, "", "get_alternative_assignments"], [117, 3, 1, "", "get_anomalies"], [117, 3, 1, "", "get_assignments"], [117, 3, 1, "", "get_chat_response"], [117, 3, 1, "", "get_classification"], [117, 3, 1, "", "get_cluster"], [117, 3, 1, "", "get_entailment"], [117, 3, 1, "", "get_entities_from_pdf"], [117, 3, 1, "", "get_forecast"], [117, 3, 1, "", "get_k_nearest"], [117, 3, 1, "", "get_labels"], [117, 3, 1, "", "get_multiple_k_nearest"], [117, 3, 1, "", "get_objects_from_image"], [117, 3, 1, "", "get_personalized_ranking"], [117, 3, 1, "", "get_ranked_items"], [117, 3, 1, "", "get_recommendations"], [117, 3, 1, "", "get_related_items"], [117, 3, 1, "", "get_search_results"], [117, 3, 1, "", "get_sentiment"], [117, 3, 1, "", "get_summary"], [117, 3, 1, "", "is_anomaly"], [117, 3, 1, "", "lookup_features"], [117, 3, 1, "", "predict"], [117, 3, 1, "", "predict_churn"], [117, 3, 1, "", "predict_class"], [117, 3, 1, "", "predict_fraud"], [117, 3, 1, "", "predict_from_datasets"], [117, 3, 1, "", "predict_language"], [117, 3, 1, "", "predict_lead"], [117, 3, 1, "", "predict_multiple"], [117, 3, 1, "", "predict_raw"], [117, 3, 1, "", "predict_takeover"], [117, 3, 1, "", "predict_target"], [117, 3, 1, "", "predict_with_binary_data"], [117, 3, 1, "", "score_image"], [117, 3, 1, "", "transcribe_audio"], [117, 3, 1, "", "transfer_style"]], "abacusai.prediction_dataset": [[118, 1, 1, "", "PredictionDataset"]], "abacusai.prediction_dataset.PredictionDataset": [[118, 3, 1, "", "__repr__"], [118, 3, 1, "", "to_dict"]], "abacusai.prediction_feature_group": [[119, 1, 1, "", "PredictionFeatureGroup"]], "abacusai.prediction_feature_group.PredictionFeatureGroup": [[119, 3, 1, "", "__repr__"], [119, 3, 1, "", "to_dict"]], "abacusai.prediction_input": [[120, 1, 1, "", "PredictionInput"]], "abacusai.prediction_input.PredictionInput": [[120, 3, 1, "", "__repr__"], [120, 3, 1, "", "to_dict"]], "abacusai.prediction_metric": [[121, 1, 1, "", "PredictionMetric"]], "abacusai.prediction_metric.PredictionMetric": [[121, 3, 1, "", "__repr__"], [121, 3, 1, "", "to_dict"]], "abacusai.prediction_metric_version": [[122, 1, 1, "", "PredictionMetricVersion"]], "abacusai.prediction_metric_version.PredictionMetricVersion": [[122, 3, 1, "", "__repr__"], [122, 3, 1, "", "get_status"], [122, 3, 1, "", "to_dict"], [122, 3, 1, "", "wait_for_prediction_metric_version"]], "abacusai.problem_type": [[123, 1, 1, "", "ProblemType"]], "abacusai.problem_type.ProblemType": [[123, 3, 1, "", "__repr__"], [123, 3, 1, "", "to_dict"]], "abacusai.project": [[124, 1, 1, "", "Project"]], "abacusai.project.Project": [[124, 3, 1, "", "__repr__"], [124, 3, 1, "", "add_tags"], [124, 3, 1, "", "attach_dataset"], [124, 3, 1, "", "create_agent"], [124, 3, 1, "", "create_chat_session"], [124, 3, 1, "", "create_deployment_token"], [124, 3, 1, "", "create_eda"], [124, 3, 1, "", "create_graph_dashboard"], [124, 3, 1, "", "create_model_from_functions"], [124, 3, 1, "", "create_model_from_python"], [124, 3, 1, "", "create_model_monitor"], [124, 3, 1, "", "create_monitor_alert"], [124, 3, 1, "", "create_nlp_drift_monitor"], [124, 3, 1, "", "create_train_test_data_split_feature_group"], [124, 3, 1, "", "create_vector_store"], [124, 3, 1, "", "create_vision_drift_monitor"], [124, 3, 1, "", "delete"], [124, 3, 1, "", "describe"], [124, 3, 1, "", "describe_feature_group"], [124, 3, 1, "", "get_custom_train_function_info"], [124, 3, 1, "", "get_schema"], [124, 3, 1, "", "get_training_config_options"], [124, 3, 1, "", "list_batch_predictions"], [124, 3, 1, "", "list_builtin_algorithms"], [124, 3, 1, "", "list_datasets"], [124, 3, 1, "", "list_deployment_tokens"], [124, 3, 1, "", "list_deployments"], [124, 3, 1, "", "list_eda"], [124, 3, 1, "", "list_feature_group_templates"], [124, 3, 1, "", "list_feature_groups"], [124, 3, 1, "", "list_graph_dashboards"], [124, 3, 1, "", "list_model_monitors"], [124, 3, 1, "", "list_models"], [124, 3, 1, "", "list_pipelines"], [124, 3, 1, "", "list_refresh_policies"], [124, 3, 1, "", "list_vector_stores"], [124, 3, 1, "", "refresh"], [124, 3, 1, "", "remove_column_mapping"], [124, 3, 1, "", "remove_dataset"], [124, 3, 1, "", "remove_tags"], [124, 3, 1, "", "rename"], [124, 3, 1, "", "set_column_data_type"], [124, 3, 1, "", "set_column_mapping"], [124, 3, 1, "", "set_feature_mapping"], [124, 3, 1, "", "to_dict"], [124, 3, 1, "", "train_model"], [124, 3, 1, "", "validate"]], "abacusai.project_config": [[125, 1, 1, "", "ProjectConfig"]], "abacusai.project_config.ProjectConfig": [[125, 3, 1, "", "__repr__"], [125, 3, 1, "", "to_dict"]], "abacusai.project_dataset": [[126, 1, 1, "", "ProjectDataset"]], "abacusai.project_dataset.ProjectDataset": [[126, 3, 1, "", "__repr__"], [126, 3, 1, "", "to_dict"]], "abacusai.project_validation": [[127, 1, 1, "", "ProjectValidation"]], "abacusai.project_validation.ProjectValidation": [[127, 3, 1, "", "__repr__"], [127, 3, 1, "", "to_dict"]], "abacusai.python_function": [[128, 1, 1, "", "PythonFunction"]], "abacusai.python_function.PythonFunction": [[128, 3, 1, "", "__repr__"], [128, 3, 1, "", "add_graph_to_dashboard"], [128, 3, 1, "", "to_dict"], [128, 3, 1, "", "validate_locally"]], "abacusai.python_function_validator": [[129, 1, 1, "", "_MonkeyPatch"], [129, 6, 1, "", "validate_function_locally"]], "abacusai.python_function_validator._MonkeyPatch": [[129, 3, 1, "", "context"], [129, 3, 1, "", "syspath_prepend"], [129, 3, 1, "", "undo"]], "abacusai.python_plot_function": [[130, 1, 1, "", "PythonPlotFunction"]], "abacusai.python_plot_function.PythonPlotFunction": [[130, 3, 1, "", "__repr__"], [130, 3, 1, "", "to_dict"]], "abacusai.range_violation": [[131, 1, 1, "", "RangeViolation"]], "abacusai.range_violation.RangeViolation": [[131, 3, 1, "", "__repr__"], [131, 3, 1, "", "to_dict"]], "abacusai.refresh_pipeline_run": [[132, 1, 1, "", "RefreshPipelineRun"]], "abacusai.refresh_pipeline_run.RefreshPipelineRun": [[132, 3, 1, "", "__repr__"], [132, 3, 1, "", "describe"], [132, 3, 1, "", "get_status"], [132, 3, 1, "", "refresh"], [132, 3, 1, "", "to_dict"], [132, 3, 1, "", "wait_for_complete"]], "abacusai.refresh_policy": [[133, 1, 1, "", "RefreshPolicy"]], "abacusai.refresh_policy.RefreshPolicy": [[133, 3, 1, "", "__repr__"], [133, 3, 1, "", "delete"], [133, 3, 1, "", "describe"], [133, 3, 1, "", "list_refresh_pipeline_runs"], [133, 3, 1, "", "pause"], [133, 3, 1, "", "refresh"], [133, 3, 1, "", "resume"], [133, 3, 1, "", "run"], [133, 3, 1, "", "to_dict"], [133, 3, 1, "", "update"]], "abacusai.refresh_schedule": [[134, 1, 1, "", "RefreshSchedule"]], "abacusai.refresh_schedule.RefreshSchedule": [[134, 3, 1, "", "__repr__"], [134, 3, 1, "", "to_dict"]], "abacusai.resolved_feature_group_template": [[135, 1, 1, "", "ResolvedFeatureGroupTemplate"]], "abacusai.resolved_feature_group_template.ResolvedFeatureGroupTemplate": [[135, 3, 1, "", "__repr__"], [135, 3, 1, "", "to_dict"]], "abacusai.return_class": [[136, 1, 1, "", "AbstractApiClass"]], "abacusai.return_class.AbstractApiClass": [[136, 3, 1, "", "__eq__"], [136, 3, 1, "", "_get_attribute_as_dict"]], "abacusai.schema": [[137, 1, 1, "", "Schema"]], "abacusai.schema.Schema": [[137, 3, 1, "", "__repr__"], [137, 3, 1, "", "to_dict"]], "abacusai.streaming_auth_token": [[138, 1, 1, "", "StreamingAuthToken"]], "abacusai.streaming_auth_token.StreamingAuthToken": [[138, 3, 1, "", "__repr__"], [138, 3, 1, "", "to_dict"]], "abacusai.streaming_client": [[139, 1, 1, "", "StreamingClient"]], "abacusai.streaming_client.StreamingClient": [[139, 3, 1, "", "append_data"], [139, 3, 1, "", "append_multiple_data"], [139, 3, 1, "", "delete_item_embeddings"], [139, 3, 1, "", "upsert_data"], [139, 3, 1, "", "upsert_item_embeddings"], [139, 3, 1, "", "upsert_multiple_data"], [139, 3, 1, "", "upsert_multiple_item_embeddings"]], "abacusai.streaming_connector": [[140, 1, 1, "", "StreamingConnector"]], "abacusai.streaming_connector.StreamingConnector": [[140, 3, 1, "", "__repr__"], [140, 3, 1, "", "delete"], [140, 3, 1, "", "rename"], [140, 3, 1, "", "to_dict"], [140, 3, 1, "", "verify"]], "abacusai.training_config_options": [[141, 1, 1, "", "TrainingConfigOptions"]], "abacusai.training_config_options.TrainingConfigOptions": [[141, 3, 1, "", "__repr__"], [141, 3, 1, "", "to_dict"]], "abacusai.type_violation": [[142, 1, 1, "", "TypeViolation"]], "abacusai.type_violation.TypeViolation": [[142, 3, 1, "", "__repr__"], [142, 3, 1, "", "to_dict"]], "abacusai.upload": [[143, 1, 1, "", "Upload"]], "abacusai.upload.Upload": [[143, 3, 1, "", "__repr__"], [143, 3, 1, "", "_yield_upload_part"], [143, 3, 1, "", "cancel"], [143, 3, 1, "", "describe"], [143, 3, 1, "", "get_status"], [143, 3, 1, "", "mark_complete"], [143, 3, 1, "", "part"], [143, 3, 1, "", "refresh"], [143, 3, 1, "", "to_dict"], [143, 3, 1, "", "upload_file"], [143, 3, 1, "", "upload_part"], [143, 3, 1, "", "wait_for_join"]], "abacusai.upload_part": [[144, 1, 1, "", "UploadPart"]], "abacusai.upload_part.UploadPart": [[144, 3, 1, "", "__repr__"], [144, 3, 1, "", "to_dict"]], "abacusai.use_case": [[145, 1, 1, "", "UseCase"]], "abacusai.use_case.UseCase": [[145, 3, 1, "", "__repr__"], [145, 3, 1, "", "to_dict"]], "abacusai.use_case_requirements": [[146, 1, 1, "", "UseCaseRequirements"]], "abacusai.use_case_requirements.UseCaseRequirements": [[146, 3, 1, "", "__repr__"], [146, 3, 1, "", "to_dict"]], "abacusai.user": [[147, 1, 1, "", "User"]], "abacusai.user.User": [[147, 3, 1, "", "__repr__"], [147, 3, 1, "", "to_dict"]], "abacusai.user_exception": [[148, 1, 1, "", "UserException"]], "abacusai.user_exception.UserException": [[148, 3, 1, "", "__repr__"], [148, 3, 1, "", "to_dict"]], "abacusai.vector_store": [[149, 1, 1, "", "VectorStore"]], "abacusai.vector_store.VectorStore": [[149, 3, 1, "", "__repr__"], [149, 3, 1, "", "create_version"], [149, 3, 1, "", "delete"], [149, 3, 1, "", "describe"], [149, 3, 1, "", "get_status"], [149, 3, 1, "", "list_versions"], [149, 3, 1, "", "lookup"], [149, 3, 1, "", "refresh"], [149, 3, 1, "", "to_dict"], [149, 3, 1, "", "update"], [149, 3, 1, "", "wait_until_ready"]], "abacusai.vector_store_lookup_result": [[150, 1, 1, "", "VectorStoreLookupResult"]], "abacusai.vector_store_lookup_result.VectorStoreLookupResult": [[150, 3, 1, "", "__repr__"], [150, 3, 1, "", "to_dict"]], "abacusai.vector_store_version": [[151, 1, 1, "", "VectorStoreVersion"]], "abacusai.vector_store_version.VectorStoreVersion": [[151, 3, 1, "", "__repr__"], [151, 3, 1, "", "describe"], [151, 3, 1, "", "get_status"], [151, 3, 1, "", "refresh"], [151, 3, 1, "", "to_dict"], [151, 3, 1, "", "wait_for_results"], [151, 3, 1, "", "wait_until_ready"]], "abacusai.webhook": [[152, 1, 1, "", "Webhook"]], "abacusai.webhook.Webhook": [[152, 3, 1, "", "__repr__"], [152, 3, 1, "", "delete"], [152, 3, 1, "", "describe"], [152, 3, 1, "", "refresh"], [152, 3, 1, "", "to_dict"], [152, 3, 1, "", "update"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:exception", "5": "py:data", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"], "5": ["py", "data", "Python data"], "6": ["py", "function", "Python function"]}, "titleterms": {"abacusai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "algorithm": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "annot": 1, "annotation_entri": 3, "annotations_statu": 4, "api_class": [5, 6, 7, 8, 9, 10, 11, 12], "abstract": 5, "function": [5, 13, 22, 25, 129], "enum": 7, "feature_group": [8, 58], "submodul": [9, 77], "packag": [9, 77], "api_client_util": 13, "attribut": [5, 13, 22, 77], "api_kei": 15, "application_connector": 16, "batch_predict": 17, "batch_prediction_vers": 18, "categorical_range_viol": 19, "client": [22, 153], "code_sourc": 23, "concatenation_config": 24, "cryptographi": 25, "custom_loss_funct": 26, "custom_metr": 27, "custom_metric_vers": 28, "custom_train_function_info": 29, "data_consistency_dupl": 30, "data_filt": [], "data_prep_log": 31, "data_quality_result": 32, "database_connector": 33, "dataset": [6, 34], "dataset_column": 35, "dataset_vers": 36, "deploy": 37, "deployment_auth_token": 38, "document": 39, "document_annot": 40, "document_stor": 41, "document_store_import": 42, "drift_distribut": [43, 44], "eda": 45, "eda_collinear": 47, "eda_data_consist": 48, "eda_feature_associ": 49, "eda_feature_collinear": 50, "eda_forecasting_analysi": 51, "eda_vers": 52, "embedding_feature_drift_distribut": 53, "featur": 55, "feature_drift_summari": 57, "feature_group_export": 59, "feature_group_export_config": 60, "feature_group_export_download_url": 61, "feature_group_lineag": 62, "feature_group_templ": 65, "feature_group_template_variable_opt": 66, "feature_group_vers": 67, "feature_import": 68, "feature_record": 69, "file_connector": 70, "file_connector_instruct": 71, "file_connector_verif": 72, "forecasting_analysis_graph_data": 73, "function_log": 74, "generated_pit_feature_config_opt": 75, "graph_dashboard": 76, "subpackag": 77, "indexing_config": 78, "item_statist": 79, "model": [10, 84], "model_artifacts_export": 85, "model_loc": 88, "model_metr": 89, "model_monitor": 90, "model_monitor_org_summari": 91, "model_monitor_summari": 92, "model_monitor_summary_from_org": 93, "model_monitor_vers": 94, "model_monitor_version_metric_data": 95, "model_training_type_for_deploy": 96, "model_upload": 97, "model_vers": 98, "modification_lock_info": 99, "monitor_alert": 101, "monitor_alert_vers": 102, "nested_featur": 104, "null_viol": 105, "organization_group": 106, "point_in_time_featur": 114, "point_in_time_group": 115, "point_in_time_group_featur": 116, "prediction_cli": 117, "prediction_dataset": 118, "prediction_feature_group": 119, "prediction_input": 120, "prediction_metr": 121, "prediction_metric_vers": 122, "problem_typ": 123, "project": 124, "project_dataset": 126, "project_valid": 127, "python_funct": [11, 128], "python_plot_funct": 130, "range_viol": 131, "refresh_pipeline_run": 132, "refresh_polici": 133, "refresh_schedul": 134, "resolved_feature_group_templ": 135, "return_class": 136, "schema": 137, "streaming_auth_token": 138, "streaming_connector": 140, "training_config_opt": 141, "type_viol": 142, "upload": 143, "upload_part": 144, "use_cas": 145, "use_case_requir": 146, "user": 147, "user_except": 148, "webhook": 152, "abacu": 153, "ai": 153, "api": 153, "pydoc": 153, "indic": 153, "pretrained_use_cas": [], "eda_chart_descript": 46, "api_endpoint": 14, "chat_bot_respons": [], "natural_language_explan": 103, "python_function_valid": 129, "streaming_cli": 139, "annotation_config": 2, "feature_group_metr": 63, "pipelin": 108, "pipeline_step": 110, "pipeline_step_vers": 111, "pipeline_vers": 113, "chat_messag": 20, "chat_sess": 21, "execute_fg_oper": [], "llm_code_block": 80, "llm_input": 81, "llm_respons": 83, "llm_search_result": [], "pipeline_refer": 109, "pipeline_step_version_refer": 112, "execute_feature_group_oper": 54, "model_blueprint_export": 86, "model_blueprint_stag": 87, "refresh": 12, "feature_group_refresh_export_config": 64, "feature_distribut": 56, "vector_stor": 149, "vector_store_vers": 151, "python_function_argu": [], "organization_search_result": 107, "vector_store_lookup_result": 150, "llm_paramet": 82, "project_config": 125}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Abacus.AI API Client PyDocs": [[153, "abacus-ai-api-client-pydocs"]], "Indices": [[153, "indices"]], "abacusai.algorithm": [[0, "module-abacusai.algorithm"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [100, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [112, "module-contents"], [113, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [121, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"]], "Classes": [[0, "classes"], [1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [68, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [128, "classes"], [129, "classes"], [130, "classes"], [131, "classes"], [132, "classes"], [133, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"]], "abacusai.annotation": [[1, "module-abacusai.annotation"]], "abacusai.annotation_config": [[2, "module-abacusai.annotation_config"]], "abacusai.annotation_entry": [[3, "module-abacusai.annotation_entry"]], "abacusai.annotations_status": [[4, "module-abacusai.annotations_status"]], "abacusai.api_class.abstract": [[5, "module-abacusai.api_class.abstract"]], "Functions": [[5, "functions"], [13, "functions"], [22, "functions"], [25, "functions"], [129, "functions"]], "Attributes": [[5, "attributes"], [13, "attributes"], [22, "attributes"], [77, "attributes"]], "abacusai.api_class.dataset": [[6, "module-abacusai.api_class.dataset"]], "abacusai.api_class.enums": [[7, "module-abacusai.api_class.enums"]], "abacusai.api_class.feature_group": [[8, "module-abacusai.api_class.feature_group"]], "abacusai.api_class": [[9, "module-abacusai.api_class"]], "Submodules": [[9, "submodules"], [77, "submodules"]], "Package Contents": [[9, "package-contents"], [77, "package-contents"]], "abacusai.api_class.model": [[10, "module-abacusai.api_class.model"]], "abacusai.api_class.python_functions": [[11, "module-abacusai.api_class.python_functions"]], "abacusai.api_class.refresh": [[12, "module-abacusai.api_class.refresh"]], "abacusai.api_client_utils": [[13, "module-abacusai.api_client_utils"]], "abacusai.api_endpoint": [[14, "module-abacusai.api_endpoint"]], "abacusai.api_key": [[15, "module-abacusai.api_key"]], "abacusai.application_connector": [[16, "module-abacusai.application_connector"]], "abacusai.batch_prediction": [[17, "module-abacusai.batch_prediction"]], "abacusai.batch_prediction_version": [[18, "module-abacusai.batch_prediction_version"]], "abacusai.categorical_range_violation": [[19, "module-abacusai.categorical_range_violation"]], "abacusai.chat_message": [[20, "module-abacusai.chat_message"]], "abacusai.chat_session": [[21, "module-abacusai.chat_session"]], "abacusai.client": [[22, "module-abacusai.client"]], "abacusai.code_source": [[23, "module-abacusai.code_source"]], "abacusai.concatenation_config": [[24, "module-abacusai.concatenation_config"]], "abacusai.cryptography": [[25, "module-abacusai.cryptography"]], "abacusai.custom_loss_function": [[26, "module-abacusai.custom_loss_function"]], "abacusai.custom_metric": [[27, "module-abacusai.custom_metric"]], "abacusai.custom_metric_version": [[28, "module-abacusai.custom_metric_version"]], "abacusai.custom_train_function_info": [[29, "module-abacusai.custom_train_function_info"]], "abacusai.data_consistency_duplication": [[30, "module-abacusai.data_consistency_duplication"]], "abacusai.data_prep_logs": [[31, "module-abacusai.data_prep_logs"]], "abacusai.data_quality_results": [[32, "module-abacusai.data_quality_results"]], "abacusai.database_connector": [[33, "module-abacusai.database_connector"]], "abacusai.dataset": [[34, "module-abacusai.dataset"]], "abacusai.dataset_column": [[35, "module-abacusai.dataset_column"]], "abacusai.dataset_version": [[36, "module-abacusai.dataset_version"]], "abacusai.deployment": [[37, "module-abacusai.deployment"]], "abacusai.deployment_auth_token": [[38, "module-abacusai.deployment_auth_token"]], "abacusai.document": [[39, "module-abacusai.document"]], "abacusai.document_annotation": [[40, "module-abacusai.document_annotation"]], "abacusai.document_store": [[41, "module-abacusai.document_store"]], "abacusai.document_store_import": [[42, "module-abacusai.document_store_import"]], "abacusai.drift_distribution": [[43, "module-abacusai.drift_distribution"]], "abacusai.drift_distributions": [[44, "module-abacusai.drift_distributions"]], "abacusai.eda": [[45, "module-abacusai.eda"]], "abacusai.eda_chart_description": [[46, "module-abacusai.eda_chart_description"]], "abacusai.eda_collinearity": [[47, "module-abacusai.eda_collinearity"]], "abacusai.eda_data_consistency": [[48, "module-abacusai.eda_data_consistency"]], "abacusai.eda_feature_association": [[49, "module-abacusai.eda_feature_association"]], "abacusai.eda_feature_collinearity": [[50, "module-abacusai.eda_feature_collinearity"]], "abacusai.eda_forecasting_analysis": [[51, "module-abacusai.eda_forecasting_analysis"]], "abacusai.eda_version": [[52, "module-abacusai.eda_version"]], "abacusai.embedding_feature_drift_distribution": [[53, "module-abacusai.embedding_feature_drift_distribution"]], "abacusai.execute_feature_group_operation": [[54, "module-abacusai.execute_feature_group_operation"]], "abacusai.feature": [[55, "module-abacusai.feature"]], "abacusai.feature_distribution": [[56, "module-abacusai.feature_distribution"]], "abacusai.feature_drift_summary": [[57, "module-abacusai.feature_drift_summary"]], "abacusai.feature_group": [[58, "module-abacusai.feature_group"]], "abacusai.feature_group_export": [[59, "module-abacusai.feature_group_export"]], "abacusai.feature_group_export_config": [[60, "module-abacusai.feature_group_export_config"]], "abacusai.feature_group_export_download_url": [[61, "module-abacusai.feature_group_export_download_url"]], "abacusai.feature_group_lineage": [[62, "module-abacusai.feature_group_lineage"]], "abacusai.feature_group_metrics": [[63, "module-abacusai.feature_group_metrics"]], "abacusai.feature_group_refresh_export_config": [[64, "module-abacusai.feature_group_refresh_export_config"]], "abacusai.feature_group_template": [[65, "module-abacusai.feature_group_template"]], "abacusai.feature_group_template_variable_options": [[66, "module-abacusai.feature_group_template_variable_options"]], "abacusai.feature_group_version": [[67, "module-abacusai.feature_group_version"]], "abacusai.feature_importance": [[68, "module-abacusai.feature_importance"]], "abacusai.feature_record": [[69, "module-abacusai.feature_record"]], "abacusai.file_connector": [[70, "module-abacusai.file_connector"]], "abacusai.file_connector_instructions": [[71, "module-abacusai.file_connector_instructions"]], "abacusai.file_connector_verification": [[72, "module-abacusai.file_connector_verification"]], "abacusai.forecasting_analysis_graph_data": [[73, "module-abacusai.forecasting_analysis_graph_data"]], "abacusai.function_logs": [[74, "module-abacusai.function_logs"]], "abacusai.generated_pit_feature_config_option": [[75, "module-abacusai.generated_pit_feature_config_option"]], "abacusai.graph_dashboard": [[76, "module-abacusai.graph_dashboard"]], "abacusai": [[77, "module-abacusai"]], "Subpackages": [[77, "subpackages"]], "abacusai.indexing_config": [[78, "module-abacusai.indexing_config"]], "abacusai.item_statistics": [[79, "module-abacusai.item_statistics"]], "abacusai.llm_code_block": [[80, "module-abacusai.llm_code_block"]], "abacusai.llm_input": [[81, "module-abacusai.llm_input"]], "abacusai.llm_parameters": [[82, "module-abacusai.llm_parameters"]], "abacusai.llm_response": [[83, "module-abacusai.llm_response"]], "abacusai.model": [[84, "module-abacusai.model"]], "abacusai.model_artifacts_export": [[85, "module-abacusai.model_artifacts_export"]], "abacusai.model_blueprint_export": [[86, "module-abacusai.model_blueprint_export"]], "abacusai.model_blueprint_stage": [[87, "module-abacusai.model_blueprint_stage"]], "abacusai.model_location": [[88, "module-abacusai.model_location"]], "abacusai.model_metrics": [[89, "module-abacusai.model_metrics"]], "abacusai.model_monitor": [[90, "module-abacusai.model_monitor"]], "abacusai.model_monitor_org_summary": [[91, "module-abacusai.model_monitor_org_summary"]], "abacusai.model_monitor_summary": [[92, "module-abacusai.model_monitor_summary"]], "abacusai.model_monitor_summary_from_org": [[93, "module-abacusai.model_monitor_summary_from_org"]], "abacusai.model_monitor_version": [[94, "module-abacusai.model_monitor_version"]], "abacusai.model_monitor_version_metric_data": [[95, "module-abacusai.model_monitor_version_metric_data"]], "abacusai.model_training_type_for_deployment": [[96, "module-abacusai.model_training_type_for_deployment"]], "abacusai.model_upload": [[97, "module-abacusai.model_upload"]], "abacusai.model_version": [[98, "module-abacusai.model_version"]], "abacusai.modification_lock_info": [[99, "module-abacusai.modification_lock_info"]], "abacusai.module": [[100, "module-abacusai.module"]], "abacusai.monitor_alert": [[101, "module-abacusai.monitor_alert"]], "abacusai.monitor_alert_version": [[102, "module-abacusai.monitor_alert_version"]], "abacusai.natural_language_explanation": [[103, "module-abacusai.natural_language_explanation"]], "abacusai.nested_feature": [[104, "module-abacusai.nested_feature"]], "abacusai.null_violation": [[105, "module-abacusai.null_violation"]], "abacusai.organization_group": [[106, "module-abacusai.organization_group"]], "abacusai.organization_search_result": [[107, "module-abacusai.organization_search_result"]], "abacusai.pipeline": [[108, "module-abacusai.pipeline"]], "abacusai.pipeline_reference": [[109, "module-abacusai.pipeline_reference"]], "abacusai.pipeline_step": [[110, "module-abacusai.pipeline_step"]], "abacusai.pipeline_step_version": [[111, "module-abacusai.pipeline_step_version"]], "abacusai.pipeline_step_version_reference": [[112, "module-abacusai.pipeline_step_version_reference"]], "abacusai.pipeline_version": [[113, "module-abacusai.pipeline_version"]], "abacusai.point_in_time_feature": [[114, "module-abacusai.point_in_time_feature"]], "abacusai.point_in_time_group": [[115, "module-abacusai.point_in_time_group"]], "abacusai.point_in_time_group_feature": [[116, "module-abacusai.point_in_time_group_feature"]], "abacusai.prediction_client": [[117, "module-abacusai.prediction_client"]], "abacusai.prediction_dataset": [[118, "module-abacusai.prediction_dataset"]], "abacusai.prediction_feature_group": [[119, "module-abacusai.prediction_feature_group"]], "abacusai.prediction_input": [[120, "module-abacusai.prediction_input"]], "abacusai.prediction_metric": [[121, "module-abacusai.prediction_metric"]], "abacusai.prediction_metric_version": [[122, "module-abacusai.prediction_metric_version"]], "abacusai.problem_type": [[123, "module-abacusai.problem_type"]], "abacusai.project": [[124, "module-abacusai.project"]], "abacusai.project_config": [[125, "module-abacusai.project_config"]], "abacusai.project_dataset": [[126, "module-abacusai.project_dataset"]], "abacusai.project_validation": [[127, "module-abacusai.project_validation"]], "abacusai.python_function": [[128, "module-abacusai.python_function"]], "abacusai.python_function_validator": [[129, "module-abacusai.python_function_validator"]], "abacusai.python_plot_function": [[130, "module-abacusai.python_plot_function"]], "abacusai.range_violation": [[131, "module-abacusai.range_violation"]], "abacusai.refresh_pipeline_run": [[132, "module-abacusai.refresh_pipeline_run"]], "abacusai.refresh_policy": [[133, "module-abacusai.refresh_policy"]], "abacusai.refresh_schedule": [[134, "module-abacusai.refresh_schedule"]], "abacusai.resolved_feature_group_template": [[135, "module-abacusai.resolved_feature_group_template"]], "abacusai.return_class": [[136, "module-abacusai.return_class"]], "abacusai.schema": [[137, "module-abacusai.schema"]], "abacusai.streaming_auth_token": [[138, "module-abacusai.streaming_auth_token"]], "abacusai.streaming_client": [[139, "module-abacusai.streaming_client"]], "abacusai.streaming_connector": [[140, "module-abacusai.streaming_connector"]], "abacusai.training_config_options": [[141, "module-abacusai.training_config_options"]], "abacusai.type_violation": [[142, "module-abacusai.type_violation"]], "abacusai.upload": [[143, "module-abacusai.upload"]], "abacusai.upload_part": [[144, "module-abacusai.upload_part"]], "abacusai.use_case": [[145, "module-abacusai.use_case"]], "abacusai.use_case_requirements": [[146, "module-abacusai.use_case_requirements"]], "abacusai.user": [[147, "module-abacusai.user"]], "abacusai.user_exception": [[148, "module-abacusai.user_exception"]], "abacusai.vector_store": [[149, "module-abacusai.vector_store"]], "abacusai.vector_store_lookup_result": [[150, "module-abacusai.vector_store_lookup_result"]], "abacusai.vector_store_version": [[151, "module-abacusai.vector_store_version"]], "abacusai.webhook": [[152, "module-abacusai.webhook"]]}, "indexentries": {"algorithm (class in abacusai.algorithm)": [[0, "abacusai.algorithm.Algorithm"]], "__repr__() (abacusai.algorithm.algorithm method)": [[0, "abacusai.algorithm.Algorithm.__repr__"]], "abacusai.algorithm": [[0, "module-abacusai.algorithm"]], "module": [[0, "module-abacusai.algorithm"], [1, "module-abacusai.annotation"], [2, "module-abacusai.annotation_config"], [3, "module-abacusai.annotation_entry"], [4, "module-abacusai.annotations_status"], [5, "module-abacusai.api_class.abstract"], [6, "module-abacusai.api_class.dataset"], [7, "module-abacusai.api_class.enums"], [8, "module-abacusai.api_class.feature_group"], [9, "module-abacusai.api_class"], [10, "module-abacusai.api_class.model"], [11, "module-abacusai.api_class.python_functions"], [12, "module-abacusai.api_class.refresh"], [13, "module-abacusai.api_client_utils"], [14, "module-abacusai.api_endpoint"], [15, "module-abacusai.api_key"], [16, "module-abacusai.application_connector"], [17, "module-abacusai.batch_prediction"], [18, "module-abacusai.batch_prediction_version"], [19, "module-abacusai.categorical_range_violation"], [20, "module-abacusai.chat_message"], [21, "module-abacusai.chat_session"], [22, "module-abacusai.client"], [23, "module-abacusai.code_source"], [24, "module-abacusai.concatenation_config"], [25, "module-abacusai.cryptography"], [26, "module-abacusai.custom_loss_function"], [27, "module-abacusai.custom_metric"], [28, "module-abacusai.custom_metric_version"], [29, "module-abacusai.custom_train_function_info"], [30, "module-abacusai.data_consistency_duplication"], [31, "module-abacusai.data_prep_logs"], [32, "module-abacusai.data_quality_results"], [33, "module-abacusai.database_connector"], [34, "module-abacusai.dataset"], [35, "module-abacusai.dataset_column"], [36, "module-abacusai.dataset_version"], [37, "module-abacusai.deployment"], [38, "module-abacusai.deployment_auth_token"], [39, "module-abacusai.document"], [40, "module-abacusai.document_annotation"], [41, "module-abacusai.document_store"], [42, "module-abacusai.document_store_import"], [43, "module-abacusai.drift_distribution"], [44, "module-abacusai.drift_distributions"], [45, "module-abacusai.eda"], [46, "module-abacusai.eda_chart_description"], [47, "module-abacusai.eda_collinearity"], [48, "module-abacusai.eda_data_consistency"], [49, "module-abacusai.eda_feature_association"], [50, "module-abacusai.eda_feature_collinearity"], [51, "module-abacusai.eda_forecasting_analysis"], [52, "module-abacusai.eda_version"], [53, "module-abacusai.embedding_feature_drift_distribution"], [54, "module-abacusai.execute_feature_group_operation"], [55, "module-abacusai.feature"], [56, "module-abacusai.feature_distribution"], [57, "module-abacusai.feature_drift_summary"], [58, "module-abacusai.feature_group"], [59, "module-abacusai.feature_group_export"], [60, "module-abacusai.feature_group_export_config"], [61, "module-abacusai.feature_group_export_download_url"], [62, "module-abacusai.feature_group_lineage"], [63, "module-abacusai.feature_group_metrics"], [64, "module-abacusai.feature_group_refresh_export_config"], [65, "module-abacusai.feature_group_template"], [66, "module-abacusai.feature_group_template_variable_options"], [67, "module-abacusai.feature_group_version"], [68, "module-abacusai.feature_importance"], [69, "module-abacusai.feature_record"], [70, "module-abacusai.file_connector"], [71, "module-abacusai.file_connector_instructions"], [72, "module-abacusai.file_connector_verification"], [73, "module-abacusai.forecasting_analysis_graph_data"], [74, "module-abacusai.function_logs"], [75, "module-abacusai.generated_pit_feature_config_option"], [76, "module-abacusai.graph_dashboard"], [77, "module-abacusai"], [78, "module-abacusai.indexing_config"], [79, "module-abacusai.item_statistics"], [80, "module-abacusai.llm_code_block"], [81, "module-abacusai.llm_input"], [82, "module-abacusai.llm_parameters"], [83, "module-abacusai.llm_response"], [84, "module-abacusai.model"], [85, "module-abacusai.model_artifacts_export"], [86, "module-abacusai.model_blueprint_export"], [87, "module-abacusai.model_blueprint_stage"], [88, "module-abacusai.model_location"], [89, "module-abacusai.model_metrics"], [90, "module-abacusai.model_monitor"], [91, "module-abacusai.model_monitor_org_summary"], [92, "module-abacusai.model_monitor_summary"], [93, "module-abacusai.model_monitor_summary_from_org"], [94, "module-abacusai.model_monitor_version"], [95, "module-abacusai.model_monitor_version_metric_data"], [96, "module-abacusai.model_training_type_for_deployment"], [97, "module-abacusai.model_upload"], [98, "module-abacusai.model_version"], [99, "module-abacusai.modification_lock_info"], [100, "module-abacusai.module"], [101, "module-abacusai.monitor_alert"], [102, "module-abacusai.monitor_alert_version"], [103, "module-abacusai.natural_language_explanation"], [104, "module-abacusai.nested_feature"], [105, "module-abacusai.null_violation"], [106, "module-abacusai.organization_group"], [107, "module-abacusai.organization_search_result"], [108, "module-abacusai.pipeline"], [109, "module-abacusai.pipeline_reference"], [110, "module-abacusai.pipeline_step"], [111, "module-abacusai.pipeline_step_version"], [112, "module-abacusai.pipeline_step_version_reference"], [113, "module-abacusai.pipeline_version"], [114, "module-abacusai.point_in_time_feature"], [115, "module-abacusai.point_in_time_group"], [116, "module-abacusai.point_in_time_group_feature"], [117, "module-abacusai.prediction_client"], [118, "module-abacusai.prediction_dataset"], [119, "module-abacusai.prediction_feature_group"], [120, "module-abacusai.prediction_input"], [121, "module-abacusai.prediction_metric"], [122, "module-abacusai.prediction_metric_version"], [123, "module-abacusai.problem_type"], [124, "module-abacusai.project"], [125, "module-abacusai.project_config"], [126, "module-abacusai.project_dataset"], [127, "module-abacusai.project_validation"], [128, "module-abacusai.python_function"], [129, "module-abacusai.python_function_validator"], [130, "module-abacusai.python_plot_function"], [131, "module-abacusai.range_violation"], [132, "module-abacusai.refresh_pipeline_run"], [133, "module-abacusai.refresh_policy"], [134, "module-abacusai.refresh_schedule"], [135, "module-abacusai.resolved_feature_group_template"], [136, "module-abacusai.return_class"], [137, "module-abacusai.schema"], [138, "module-abacusai.streaming_auth_token"], [139, "module-abacusai.streaming_client"], [140, "module-abacusai.streaming_connector"], [141, "module-abacusai.training_config_options"], [142, "module-abacusai.type_violation"], [143, "module-abacusai.upload"], [144, "module-abacusai.upload_part"], [145, "module-abacusai.use_case"], [146, "module-abacusai.use_case_requirements"], [147, "module-abacusai.user"], [148, "module-abacusai.user_exception"], [149, "module-abacusai.vector_store"], [150, "module-abacusai.vector_store_lookup_result"], [151, "module-abacusai.vector_store_version"], [152, "module-abacusai.webhook"]], "to_dict() (abacusai.algorithm.algorithm method)": [[0, "abacusai.algorithm.Algorithm.to_dict"]], "annotation (class in abacusai.annotation)": [[1, "abacusai.annotation.Annotation"]], "__repr__() (abacusai.annotation.annotation method)": [[1, "abacusai.annotation.Annotation.__repr__"]], "abacusai.annotation": [[1, "module-abacusai.annotation"]], "to_dict() (abacusai.annotation.annotation method)": [[1, "abacusai.annotation.Annotation.to_dict"]], "annotationconfig (class in abacusai.annotation_config)": [[2, "abacusai.annotation_config.AnnotationConfig"]], "__repr__() (abacusai.annotation_config.annotationconfig method)": [[2, "abacusai.annotation_config.AnnotationConfig.__repr__"]], "abacusai.annotation_config": [[2, "module-abacusai.annotation_config"]], "to_dict() (abacusai.annotation_config.annotationconfig method)": [[2, "abacusai.annotation_config.AnnotationConfig.to_dict"]], "annotationentry (class in abacusai.annotation_entry)": [[3, "abacusai.annotation_entry.AnnotationEntry"]], "__repr__() (abacusai.annotation_entry.annotationentry method)": [[3, "abacusai.annotation_entry.AnnotationEntry.__repr__"]], "abacusai.annotation_entry": [[3, "module-abacusai.annotation_entry"]], "to_dict() (abacusai.annotation_entry.annotationentry method)": [[3, "abacusai.annotation_entry.AnnotationEntry.to_dict"]], "annotationsstatus (class in abacusai.annotations_status)": [[4, "abacusai.annotations_status.AnnotationsStatus"]], "__repr__() (abacusai.annotations_status.annotationsstatus method)": [[4, "abacusai.annotations_status.AnnotationsStatus.__repr__"]], "abacusai.annotations_status": [[4, "module-abacusai.annotations_status"]], "to_dict() (abacusai.annotations_status.annotationsstatus method)": [[4, "abacusai.annotations_status.AnnotationsStatus.to_dict"]], "all_cap_re (in module abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.ALL_CAP_RE"]], "apiclass (class in abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.ApiClass"]], "first_cap_re (in module abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.FIRST_CAP_RE"]], "_apiclassfactory (class in abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract._ApiClassFactory"]], "__post_init__() (abacusai.api_class.abstract.apiclass method)": [[5, "abacusai.api_class.abstract.ApiClass.__post_init__"]], "_support_kwargs (abacusai.api_class.abstract.apiclass attribute)": [[5, "abacusai.api_class.abstract.ApiClass._support_kwargs"]], "_upper_snake_case_keys (abacusai.api_class.abstract.apiclass attribute)": [[5, "abacusai.api_class.abstract.ApiClass._upper_snake_case_keys"]], "abacusai.api_class.abstract": [[5, "module-abacusai.api_class.abstract"]], "camel_case() (in module abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.camel_case"]], "config_abstract_class (abacusai.api_class.abstract._apiclassfactory attribute)": [[5, "abacusai.api_class.abstract._ApiClassFactory.config_abstract_class"]], "config_class_key (abacusai.api_class.abstract._apiclassfactory attribute)": [[5, "abacusai.api_class.abstract._ApiClassFactory.config_class_key"]], "config_class_map (abacusai.api_class.abstract._apiclassfactory attribute)": [[5, "abacusai.api_class.abstract._ApiClassFactory.config_class_map"]], "from_dict() (abacusai.api_class.abstract.apiclass class method)": [[5, "abacusai.api_class.abstract.ApiClass.from_dict"]], "from_dict() (abacusai.api_class.abstract._apiclassfactory class method)": [[5, "abacusai.api_class.abstract._ApiClassFactory.from_dict"]], "snake_case() (in module abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.snake_case"]], "to_dict() (abacusai.api_class.abstract.apiclass method)": [[5, "abacusai.api_class.abstract.ApiClass.to_dict"]], "upper_snake_case() (in module abacusai.api_class.abstract)": [[5, "abacusai.api_class.abstract.upper_snake_case"]], "parsingconfig (class in abacusai.api_class.dataset)": [[6, "abacusai.api_class.dataset.ParsingConfig"]], "abacusai.api_class.dataset": [[6, "module-abacusai.api_class.dataset"]], "csv_delimiter (abacusai.api_class.dataset.parsingconfig attribute)": [[6, "abacusai.api_class.dataset.ParsingConfig.csv_delimiter"]], "escape (abacusai.api_class.dataset.parsingconfig attribute)": [[6, "abacusai.api_class.dataset.ParsingConfig.escape"]], "file_path_with_schema (abacusai.api_class.dataset.parsingconfig attribute)": [[6, "abacusai.api_class.dataset.ParsingConfig.file_path_with_schema"]], "accuracy (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.ACCURACY"]], "accuracy (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.ACCURACY"]], "ai_agent (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.AI_AGENT"]], "ancestral_simulation (abacusai.api_class.enums.forecastingquanitlesextensionmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingQuanitlesExtensionMethod.ANCESTRAL_SIMULATION"]], "annotations_precision (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.ANNOTATIONS_PRECISION"]], "annotations_recall (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.ANNOTATIONS_RECALL"]], "anomaly_detection (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.ANOMALY_DETECTION"]], "anomaly_outliers (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.ANOMALY_OUTLIERS"]], "application (abacusai.api_class.enums.connectortype attribute)": [[7, "abacusai.api_class.enums.ConnectorType.APPLICATION"]], "asymmetric_mean_absolute_percentage_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "au (abacusai.api_class.enums.holidaycalendars attribute)": [[7, "abacusai.api_class.enums.HolidayCalendars.AU"]], "auc (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.AUC"]], "auc (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.AUC"]], "auto (abacusai.api_class.enums.forecastingdatasplittype attribute)": [[7, "abacusai.api_class.enums.ForecastingDataSplitType.AUTO"]], "auto (abacusai.api_class.enums.nlpdocumentformat attribute)": [[7, "abacusai.api_class.enums.NLPDocumentFormat.AUTO"]], "automatic (abacusai.api_class.enums.clusteringimputationmethod attribute)": [[7, "abacusai.api_class.enums.ClusteringImputationMethod.AUTOMATIC"]], "automatic (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.AUTOMATIC"]], "average (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.AVERAGE"]], "apienum (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ApiEnum"]], "back (abacusai.api_class.enums.forecastingfillmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingFillMethod.BACK"]], "backfill (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.BACKFILL"]], "batch_1024 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_1024"]], "batch_128 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_128"]], "batch_16 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_16"]], "batch_256 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_256"]], "batch_32 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_32"]], "batch_384 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_384"]], "batch_512 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_512"]], "batch_64 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_64"]], "batch_740 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_740"]], "batch_8 (abacusai.api_class.enums.batchsize attribute)": [[7, "abacusai.api_class.enums.BatchSize.BATCH_8"]], "batch_prediction_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.BATCH_PREDICTION_ID"]], "bias (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.BIAS"]], "boolean (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.BOOLEAN"]], "box_cox (abacusai.api_class.enums.regressiontargettransform attribute)": [[7, "abacusai.api_class.enums.RegressionTargetTransform.BOX_COX"]], "batchsize (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.BatchSize"]], "clustering (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.CLUSTERING"]], "clustering_timeseries (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.CLUSTERING_TIMESERIES"]], "cmape (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.CMAPE"]], "coverage (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.COVERAGE"]], "cross_entropy (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.CROSS_ENTROPY"]], "cumulative_forecasting (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.CUMULATIVE_FORECASTING"]], "custom (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.CUSTOM"]], "custom (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.CUSTOM"]], "custom (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.CUSTOM"]], "custom_algorithm (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.CUSTOM_ALGORITHM"]], "custom_trained_model (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.CUSTOM_TRAINED_MODEL"]], "cv (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.CV"]], "clusteringimputationmethod (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ClusteringImputationMethod"]], "connectortype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ConnectorType"]], "daily (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.DAILY"]], "database (abacusai.api_class.enums.connectortype attribute)": [[7, "abacusai.api_class.enums.ConnectorType.DATABASE"]], "dataset_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.DATASET_ID"]], "deployment_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.DEPLOYMENT_ID"]], "direct (abacusai.api_class.enums.forecastingquanitlesextensionmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingQuanitlesExtensionMethod.DIRECT"]], "doc (abacusai.api_class.enums.nlpdocumentformat attribute)": [[7, "abacusai.api_class.enums.NLPDocumentFormat.DOC"]], "document_classification (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.DOCUMENT_CLASSIFICATION"]], "document_summarization (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.DOCUMENT_SUMMARIZATION"]], "document_visualization (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.DOCUMENT_VISUALIZATION"]], "emotion (abacusai.api_class.enums.sentimenttype attribute)": [[7, "abacusai.api_class.enums.SentimentType.EMOTION"]], "experimental (abacusai.api_class.enums.personalizationtrainingmode attribute)": [[7, "abacusai.api_class.enums.PersonalizationTrainingMode.EXPERIMENTAL"]], "experimentationmode (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ExperimentationMode"]], "f1_score (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.F1_SCORE"]], "feature_group (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.FEATURE_GROUP"]], "feature_group_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.FEATURE_GROUP_ID"]], "feature_store (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.FEATURE_STORE"]], "file (abacusai.api_class.enums.connectortype attribute)": [[7, "abacusai.api_class.enums.ConnectorType.FILE"]], "float (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.FLOAT"]], "focal_cross_entropy (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.FOCAL_CROSS_ENTROPY"]], "forecasting (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.FORECASTING"]], "forwardfill (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.FORWARDFILL"]], "future (abacusai.api_class.enums.forecastingfillmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingFillMethod.FUTURE"]], "filllogic (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.FillLogic"]], "forecastingdatasplittype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingDataSplitType"]], "forecastingfillmethod (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingFillMethod"]], "forecastingfrequency (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingFrequency"]], "forecastinglocalscaling (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling"]], "forecastinglossfunction (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingLossFunction"]], "forecastingobjective (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingObjective"]], "forecastingquanitlesextensionmethod (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ForecastingQuanitlesExtensionMethod"]], "gaussian (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.GAUSSIAN"]], "gaussian_full_covariance (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.GAUSSIAN_FULL_COVARIANCE"]], "guassian_exponential (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.GUASSIAN_EXPONENTIAL"]], "hourly (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.HOURLY"]], "huber (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.HUBER"]], "holidaycalendars (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.HolidayCalendars"]], "image_classification (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.IMAGE_CLASSIFICATION"]], "image_value_prediction (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.IMAGE_VALUE_PREDICTION"]], "integer (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.INTEGER"]], "interpolate (abacusai.api_class.enums.clusteringimputationmethod attribute)": [[7, "abacusai.api_class.enums.ClusteringImputationMethod.INTERPOLATE"]], "item (abacusai.api_class.enums.forecastingdatasplittype attribute)": [[7, "abacusai.api_class.enums.ForecastingDataSplitType.ITEM"]], "item (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.ITEM"]], "json (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.JSON"]], "language_detection (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.LANGUAGE_DETECTION"]], "last_point (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.LAST_POINT"]], "learned (abacusai.api_class.enums.nermodeltype attribute)": [[7, "abacusai.api_class.enums.NERModelType.LEARNED"]], "linear (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.LINEAR"]], "list (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.LIST"]], "log (abacusai.api_class.enums.regressiontargettransform attribute)": [[7, "abacusai.api_class.enums.RegressionTargetTransform.LOG"]], "log_loss (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.LOG_LOSS"]], "log_loss (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.LOG_LOSS"]], "log_root_mean_square_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.LOG_ROOT_MEAN_SQUARE_ERROR"]], "mae (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.MAE"]], "mae (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.MAE"]], "map (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.MAP"]], "mape (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.MAPE"]], "mape (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.MAPE"]], "mape (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.MAPE"]], "map_10 (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.MAP_10"]], "map_5 (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.MAP_5"]], "max (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.MAX"]], "mean_absolute_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.MEAN_ABSOLUTE_ERROR"]], "mean_absolute_percentage_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "median (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.MEDIAN"]], "middle (abacusai.api_class.enums.forecastingfillmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingFillMethod.MIDDLE"]], "min (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.MIN"]], "min_max (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.MIN_MAX"]], "min_std (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.MIN_STD"]], "mix_gaussians (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.MIX_GAUSSIANS"]], "model_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.MODEL_ID"]], "model_monitoring (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.MODEL_MONITORING"]], "monitor_id (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.MONITOR_ID"]], "month_end (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.MONTH_END"]], "month_start (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.MONTH_START"]], "mrr (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.MRR"]], "mse (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.MSE"]], "msle (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.MSLE"]], "named_entity_extraction (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.NAMED_ENTITY_EXTRACTION"]], "natural_language_search (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.NATURAL_LANGUAGE_SEARCH"]], "ndcg (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.NDCG"]], "ndcg_10 (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.NDCG_10"]], "ndcg_5 (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.NDCG_5"]], "nearest (abacusai.api_class.enums.filllogic attribute)": [[7, "abacusai.api_class.enums.FillLogic.NEAREST"]], "negative_binomial (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.NEGATIVE_BINOMIAL"]], "nermodeltype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.NERModelType"]], "nerobjective (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.NERObjective"]], "nlpdocumentformat (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.NLPDocumentFormat"]], "normalized_mean_absolute_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.NORMALIZED_MEAN_ABSOLUTE_ERROR"]], "normalized_root_mean_square_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.NORMALIZED_ROOT_MEAN_SQUARE_ERROR"]], "n_sampling (abacusai.api_class.enums.samplingmethodtype attribute)": [[7, "abacusai.api_class.enums.SamplingMethodType.N_SAMPLING"]], "object_detection (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.OBJECT_DETECTION"]], "optimization (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.OPTIMIZATION"]], "peaks_mean_absolute_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.PEAKS_MEAN_ABSOLUTE_ERROR"]], "percent_sampling (abacusai.api_class.enums.samplingmethodtype attribute)": [[7, "abacusai.api_class.enums.SamplingMethodType.PERCENT_SAMPLING"]], "personalization (abacusai.api_class.enums.personalizationobjective attribute)": [[7, "abacusai.api_class.enums.PersonalizationObjective.PERSONALIZATION"]], "personalization (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.PERSONALIZATION"]], "pointwise_accuracy (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.POINTWISE_ACCURACY"]], "precision (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.PRECISION"]], "precision (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.PRECISION"]], "prediction_length (abacusai.api_class.enums.forecastingdatasplittype attribute)": [[7, "abacusai.api_class.enums.ForecastingDataSplitType.PREDICTION_LENGTH"]], "predictive_modeling (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.PREDICTIVE_MODELING"]], "pretrained_bert (abacusai.api_class.enums.nermodeltype attribute)": [[7, "abacusai.api_class.enums.NERModelType.PRETRAINED_BERT"]], "pretrained_models (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.PRETRAINED_MODELS"]], "pretrained_multilingual (abacusai.api_class.enums.nermodeltype attribute)": [[7, "abacusai.api_class.enums.NERModelType.PRETRAINED_MULTILINGUAL"]], "pretrained_roberta_27 (abacusai.api_class.enums.nermodeltype attribute)": [[7, "abacusai.api_class.enums.NERModelType.PRETRAINED_ROBERTA_27"]], "pretrained_roberta_43 (abacusai.api_class.enums.nermodeltype attribute)": [[7, "abacusai.api_class.enums.NERModelType.PRETRAINED_ROBERTA_43"]], "production (abacusai.api_class.enums.personalizationtrainingmode attribute)": [[7, "abacusai.api_class.enums.PersonalizationTrainingMode.PRODUCTION"]], "personalizationobjective (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.PersonalizationObjective"]], "personalizationtrainingmode (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.PersonalizationTrainingMode"]], "problemtype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.ProblemType"]], "pythonfunctionargumenttype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType"]], "quadratic (abacusai.api_class.enums.forecastingquanitlesextensionmethod attribute)": [[7, "abacusai.api_class.enums.ForecastingQuanitlesExtensionMethod.QUADRATIC"]], "quantile (abacusai.api_class.enums.regressiontargettransform attribute)": [[7, "abacusai.api_class.enums.RegressionTargetTransform.QUANTILE"]], "quarter_end (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.QUARTER_END"]], "quarter_start (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.QUARTER_START"]], "random (abacusai.api_class.enums.regressiontypeofsplit attribute)": [[7, "abacusai.api_class.enums.RegressionTypeOfSplit.RANDOM"]], "rapid (abacusai.api_class.enums.experimentationmode attribute)": [[7, "abacusai.api_class.enums.ExperimentationMode.RAPID"]], "rapid (abacusai.api_class.enums.regressiontreehpomode attribute)": [[7, "abacusai.api_class.enums.RegressionTreeHPOMode.RAPID"]], "recall (abacusai.api_class.enums.nerobjective attribute)": [[7, "abacusai.api_class.enums.NERObjective.RECALL"]], "recall (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.RECALL"]], "resample (abacusai.api_class.enums.regressionaugmentationstrategy attribute)": [[7, "abacusai.api_class.enums.RegressionAugmentationStrategy.RESAMPLE"]], "rmse (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.RMSE"]], "rmse (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.RMSE"]], "robust (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.ROBUST"]], "root_mean_square_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.ROOT_MEAN_SQUARE_ERROR"]], "row_indicator_based (abacusai.api_class.enums.regressiontypeofsplit attribute)": [[7, "abacusai.api_class.enums.RegressionTypeOfSplit.ROW_INDICATOR_BASED"]], "r_squared_coefficient_of_determination (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.R_SQUARED_COEFFICIENT_OF_DETERMINATION"]], "regressionaugmentationstrategy (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionAugmentationStrategy"]], "regressionlossfunction (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionLossFunction"]], "regressionobjective (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionObjective"]], "regressiontargettransform (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionTargetTransform"]], "regressiontimesplitmethod (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionTimeSplitMethod"]], "regressiontreehpomode (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionTreeHPOMode"]], "regressiontypeofsplit (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.RegressionTypeOfSplit"]], "sentence_boundary_detection (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.SENTENCE_BOUNDARY_DETECTION"]], "sentiment_detection (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.SENTIMENT_DETECTION"]], "sliding_zscore (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.SLIDING_ZSCORE"]], "smote (abacusai.api_class.enums.regressionaugmentationstrategy attribute)": [[7, "abacusai.api_class.enums.RegressionAugmentationStrategy.SMOTE"]], "srmse (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.SRMSE"]], "stable_standardized_mean_absolute_percentage_error (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "streaming (abacusai.api_class.enums.connectortype attribute)": [[7, "abacusai.api_class.enums.ConnectorType.STREAMING"]], "string (abacusai.api_class.enums.pythonfunctionargumenttype attribute)": [[7, "abacusai.api_class.enums.PythonFunctionArgumentType.STRING"]], "samplingmethodtype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.SamplingMethodType"]], "sentimenttype (class in abacusai.api_class.enums)": [[7, "abacusai.api_class.enums.SentimentType"]], "test_split_percentage_based (abacusai.api_class.enums.regressiontimesplitmethod attribute)": [[7, "abacusai.api_class.enums.RegressionTimeSplitMethod.TEST_SPLIT_PERCENTAGE_BASED"]], "test_start_timestamp_based (abacusai.api_class.enums.regressiontimesplitmethod attribute)": [[7, "abacusai.api_class.enums.RegressionTimeSplitMethod.TEST_START_TIMESTAMP_BASED"]], "text (abacusai.api_class.enums.nlpdocumentformat attribute)": [[7, "abacusai.api_class.enums.NLPDocumentFormat.TEXT"]], "theme_analysis (abacusai.api_class.enums.problemtype attribute)": [[7, "abacusai.api_class.enums.ProblemType.THEME_ANALYSIS"]], "thorough (abacusai.api_class.enums.experimentationmode attribute)": [[7, "abacusai.api_class.enums.ExperimentationMode.THOROUGH"]], "thorough (abacusai.api_class.enums.regressiontreehpomode attribute)": [[7, "abacusai.api_class.enums.RegressionTreeHPOMode.THOROUGH"]], "timestamp (abacusai.api_class.enums.forecastingdatasplittype attribute)": [[7, "abacusai.api_class.enums.ForecastingDataSplitType.TIMESTAMP"]], "timestamp_based (abacusai.api_class.enums.regressiontypeofsplit attribute)": [[7, "abacusai.api_class.enums.RegressionTypeOfSplit.TIMESTAMP_BASED"]], "tokens (abacusai.api_class.enums.nlpdocumentformat attribute)": [[7, "abacusai.api_class.enums.NLPDocumentFormat.TOKENS"]], "tweedie (abacusai.api_class.enums.regressionlossfunction attribute)": [[7, "abacusai.api_class.enums.RegressionLossFunction.TWEEDIE"]], "uk (abacusai.api_class.enums.holidaycalendars attribute)": [[7, "abacusai.api_class.enums.HolidayCalendars.UK"]], "us (abacusai.api_class.enums.holidaycalendars attribute)": [[7, "abacusai.api_class.enums.HolidayCalendars.US"]], "valence (abacusai.api_class.enums.sentimenttype attribute)": [[7, "abacusai.api_class.enums.SentimentType.VALENCE"]], "wape (abacusai.api_class.enums.forecastingobjective attribute)": [[7, "abacusai.api_class.enums.ForecastingObjective.WAPE"]], "wape (abacusai.api_class.enums.regressionobjective attribute)": [[7, "abacusai.api_class.enums.RegressionObjective.WAPE"]], "weekly_monday_start (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.WEEKLY_MONDAY_START"]], "weekly_saturday_start (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.WEEKLY_SATURDAY_START"]], "weekly_sunday_start (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.WEEKLY_SUNDAY_START"]], "weibull (abacusai.api_class.enums.forecastinglossfunction attribute)": [[7, "abacusai.api_class.enums.ForecastingLossFunction.WEIBULL"]], "yearly (abacusai.api_class.enums.forecastingfrequency attribute)": [[7, "abacusai.api_class.enums.ForecastingFrequency.YEARLY"]], "yeo_johnson (abacusai.api_class.enums.regressiontargettransform attribute)": [[7, "abacusai.api_class.enums.RegressionTargetTransform.YEO_JOHNSON"]], "zeros (abacusai.api_class.enums.clusteringimputationmethod attribute)": [[7, "abacusai.api_class.enums.ClusteringImputationMethod.ZEROS"]], "zscore (abacusai.api_class.enums.forecastinglocalscaling attribute)": [[7, "abacusai.api_class.enums.ForecastingLocalScaling.ZSCORE"]], "__eq__() (abacusai.api_class.enums.apienum method)": [[7, "abacusai.api_class.enums.ApiEnum.__eq__"]], "__hash__() (abacusai.api_class.enums.apienum method)": [[7, "abacusai.api_class.enums.ApiEnum.__hash__"]], "abacusai.api_class.enums": [[7, "module-abacusai.api_class.enums"]], "nsamplingconfig (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group.NSamplingConfig"]], "percentsamplingconfig (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group.PercentSamplingConfig"]], "samplingconfig (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group.SamplingConfig"]], "_samplingconfigfactory (class in abacusai.api_class.feature_group)": [[8, "abacusai.api_class.feature_group._SamplingConfigFactory"]], "__post_init__() (abacusai.api_class.feature_group.samplingconfig method)": [[8, "abacusai.api_class.feature_group.SamplingConfig.__post_init__"]], "abacusai.api_class.feature_group": [[8, "module-abacusai.api_class.feature_group"]], "config_class_key (abacusai.api_class.feature_group._samplingconfigfactory attribute)": [[8, "abacusai.api_class.feature_group._SamplingConfigFactory.config_class_key"]], "config_class_map (abacusai.api_class.feature_group._samplingconfigfactory attribute)": [[8, "abacusai.api_class.feature_group._SamplingConfigFactory.config_class_map"]], "key_columns (abacusai.api_class.feature_group.nsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.NSamplingConfig.key_columns"]], "key_columns (abacusai.api_class.feature_group.percentsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.PercentSamplingConfig.key_columns"]], "sample_count (abacusai.api_class.feature_group.nsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.NSamplingConfig.sample_count"]], "sample_percent (abacusai.api_class.feature_group.percentsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.PercentSamplingConfig.sample_percent"]], "sampling_method (abacusai.api_class.feature_group.nsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.NSamplingConfig.sampling_method"]], "sampling_method (abacusai.api_class.feature_group.percentsamplingconfig attribute)": [[8, "abacusai.api_class.feature_group.PercentSamplingConfig.sampling_method"]], "accuracy (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.ACCURACY"]], "accuracy (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.ACCURACY"]], "aiagenttrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.AIAgentTrainingConfig"]], "ai_agent (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.AI_AGENT"]], "ancestral_simulation (abacusai.api_class.forecastingquanitlesextensionmethod attribute)": [[9, "abacusai.api_class.ForecastingQuanitlesExtensionMethod.ANCESTRAL_SIMULATION"]], "annotations_precision (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.ANNOTATIONS_PRECISION"]], "annotations_recall (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.ANNOTATIONS_RECALL"]], "anomaly_detection (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.ANOMALY_DETECTION"]], "anomaly_outliers (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.ANOMALY_OUTLIERS"]], "application (abacusai.api_class.connectortype attribute)": [[9, "abacusai.api_class.ConnectorType.APPLICATION"]], "asymmetric_mean_absolute_percentage_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "au (abacusai.api_class.holidaycalendars attribute)": [[9, "abacusai.api_class.HolidayCalendars.AU"]], "auc (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.AUC"]], "auc (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.AUC"]], "auto (abacusai.api_class.forecastingdatasplittype attribute)": [[9, "abacusai.api_class.ForecastingDataSplitType.AUTO"]], "auto (abacusai.api_class.nlpdocumentformat attribute)": [[9, "abacusai.api_class.NLPDocumentFormat.AUTO"]], "automatic (abacusai.api_class.clusteringimputationmethod attribute)": [[9, "abacusai.api_class.ClusteringImputationMethod.AUTOMATIC"]], "automatic (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.AUTOMATIC"]], "average (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.AVERAGE"]], "anomalydetectiontrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig"]], "apiclass (class in abacusai.api_class)": [[9, "abacusai.api_class.ApiClass"], [9, "id0"], [9, "id17"], [9, "id23"], [9, "id6"]], "apienum (class in abacusai.api_class)": [[9, "abacusai.api_class.ApiEnum"]], "back (abacusai.api_class.forecastingfillmethod attribute)": [[9, "abacusai.api_class.ForecastingFillMethod.BACK"]], "backfill (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.BACKFILL"]], "batch_1024 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_1024"]], "batch_128 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_128"]], "batch_16 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_16"]], "batch_256 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_256"]], "batch_32 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_32"]], "batch_384 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_384"]], "batch_512 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_512"]], "batch_64 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_64"]], "batch_740 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_740"]], "batch_8 (abacusai.api_class.batchsize attribute)": [[9, "abacusai.api_class.BatchSize.BATCH_8"]], "batch_prediction_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.BATCH_PREDICTION_ID"]], "bias (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.BIAS"]], "boolean (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.BOOLEAN"]], "box_cox (abacusai.api_class.regressiontargettransform attribute)": [[9, "abacusai.api_class.RegressionTargetTransform.BOX_COX"]], "batchsize (class in abacusai.api_class)": [[9, "abacusai.api_class.BatchSize"]], "clustering (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.CLUSTERING"]], "clustering_timeseries (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.CLUSTERING_TIMESERIES"]], "cmape (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.CMAPE"]], "coverage (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.COVERAGE"]], "cross_entropy (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.CROSS_ENTROPY"]], "cumulative_forecasting (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.CUMULATIVE_FORECASTING"]], "custom (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.CUSTOM"]], "custom (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.CUSTOM"]], "custom (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.CUSTOM"]], "custom_algorithm (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.CUSTOM_ALGORITHM"]], "custom_trained_model (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.CUSTOM_TRAINED_MODEL"]], "cv (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.CV"]], "clusteringimputationmethod (class in abacusai.api_class)": [[9, "abacusai.api_class.ClusteringImputationMethod"]], "clusteringtimeseriestrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.ClusteringTimeseriesTrainingConfig"]], "clusteringtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.ClusteringTrainingConfig"]], "connectortype (class in abacusai.api_class)": [[9, "abacusai.api_class.ConnectorType"]], "cumulativeforecastingtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig"]], "customalgorithmtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig"]], "customtrainedmodeltrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig"]], "daily (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.DAILY"]], "database (abacusai.api_class.connectortype attribute)": [[9, "abacusai.api_class.ConnectorType.DATABASE"]], "dataset_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.DATASET_ID"]], "deployment_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.DEPLOYMENT_ID"]], "direct (abacusai.api_class.forecastingquanitlesextensionmethod attribute)": [[9, "abacusai.api_class.ForecastingQuanitlesExtensionMethod.DIRECT"]], "doc (abacusai.api_class.nlpdocumentformat attribute)": [[9, "abacusai.api_class.NLPDocumentFormat.DOC"]], "document_classification (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.DOCUMENT_CLASSIFICATION"]], "document_summarization (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.DOCUMENT_SUMMARIZATION"]], "document_visualization (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.DOCUMENT_VISUALIZATION"]], "databaseconnectorexportconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig"]], "documentclassificationtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig"]], "documentsummarizationtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.DocumentSummarizationTrainingConfig"]], "documentvisualizationtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.DocumentVisualizationTrainingConfig"]], "emotion (abacusai.api_class.sentimenttype attribute)": [[9, "abacusai.api_class.SentimentType.EMOTION"]], "experimental (abacusai.api_class.personalizationtrainingmode attribute)": [[9, "abacusai.api_class.PersonalizationTrainingMode.EXPERIMENTAL"]], "experimentationmode (class in abacusai.api_class)": [[9, "abacusai.api_class.ExperimentationMode"]], "f1_score (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.F1_SCORE"]], "feature_group (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.FEATURE_GROUP"]], "feature_group_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.FEATURE_GROUP_ID"]], "feature_store (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.FEATURE_STORE"]], "file (abacusai.api_class.connectortype attribute)": [[9, "abacusai.api_class.ConnectorType.FILE"]], "float (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.FLOAT"]], "focal_cross_entropy (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.FOCAL_CROSS_ENTROPY"]], "forecasting (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.FORECASTING"]], "forwardfill (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.FORWARDFILL"]], "future (abacusai.api_class.forecastingfillmethod attribute)": [[9, "abacusai.api_class.ForecastingFillMethod.FUTURE"]], "featuregroupexportconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.FeatureGroupExportConfig"]], "fileconnectorexportconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.FileConnectorExportConfig"]], "filllogic (class in abacusai.api_class)": [[9, "abacusai.api_class.FillLogic"]], "forecastingdatasplittype (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingDataSplitType"]], "forecastingfillmethod (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingFillMethod"]], "forecastingfrequency (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingFrequency"]], "forecastinglocalscaling (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingLocalScaling"]], "forecastinglossfunction (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingLossFunction"]], "forecastingobjective (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingObjective"]], "forecastingquanitlesextensionmethod (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingQuanitlesExtensionMethod"]], "forecastingtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.ForecastingTrainingConfig"]], "gaussian (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.GAUSSIAN"]], "gaussian_full_covariance (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.GAUSSIAN_FULL_COVARIANCE"]], "guassian_exponential (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.GUASSIAN_EXPONENTIAL"]], "hourly (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.HOURLY"]], "huber (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.HUBER"]], "holidaycalendars (class in abacusai.api_class)": [[9, "abacusai.api_class.HolidayCalendars"]], "image_classification (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.IMAGE_CLASSIFICATION"]], "image_value_prediction (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.IMAGE_VALUE_PREDICTION"]], "integer (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.INTEGER"]], "interpolate (abacusai.api_class.clusteringimputationmethod attribute)": [[9, "abacusai.api_class.ClusteringImputationMethod.INTERPOLATE"]], "item (abacusai.api_class.forecastingdatasplittype attribute)": [[9, "abacusai.api_class.ForecastingDataSplitType.ITEM"]], "item (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.ITEM"]], "json (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.JSON"]], "language_detection (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.LANGUAGE_DETECTION"]], "last_point (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.LAST_POINT"]], "learned (abacusai.api_class.nermodeltype attribute)": [[9, "abacusai.api_class.NERModelType.LEARNED"]], "linear (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.LINEAR"]], "list (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.LIST"]], "log (abacusai.api_class.regressiontargettransform attribute)": [[9, "abacusai.api_class.RegressionTargetTransform.LOG"]], "log_loss (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.LOG_LOSS"]], "log_loss (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.LOG_LOSS"]], "log_root_mean_square_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.LOG_ROOT_MEAN_SQUARE_ERROR"]], "mae (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.MAE"]], "mae (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.MAE"]], "map (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.MAP"]], "mape (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.MAPE"]], "mape (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.MAPE"]], "mape (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.MAPE"]], "map_10 (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.MAP_10"]], "map_5 (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.MAP_5"]], "max (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.MAX"]], "mean_absolute_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.MEAN_ABSOLUTE_ERROR"]], "mean_absolute_percentage_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "median (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.MEDIAN"]], "middle (abacusai.api_class.forecastingfillmethod attribute)": [[9, "abacusai.api_class.ForecastingFillMethod.MIDDLE"]], "min (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.MIN"]], "min_max (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.MIN_MAX"]], "min_std (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.MIN_STD"]], "mix_gaussians (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.MIX_GAUSSIANS"]], "model_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.MODEL_ID"]], "model_monitoring (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.MODEL_MONITORING"]], "monitor_id (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.MONITOR_ID"]], "month_end (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.MONTH_END"]], "month_start (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.MONTH_START"]], "mrr (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.MRR"]], "mse (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.MSE"]], "msle (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.MSLE"]], "named_entity_extraction (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.NAMED_ENTITY_EXTRACTION"]], "natural_language_search (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.NATURAL_LANGUAGE_SEARCH"]], "ndcg (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.NDCG"]], "ndcg_10 (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.NDCG_10"]], "ndcg_5 (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.NDCG_5"]], "nearest (abacusai.api_class.filllogic attribute)": [[9, "abacusai.api_class.FillLogic.NEAREST"]], "negative_binomial (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.NEGATIVE_BINOMIAL"]], "nermodeltype (class in abacusai.api_class)": [[9, "abacusai.api_class.NERModelType"]], "nerobjective (class in abacusai.api_class)": [[9, "abacusai.api_class.NERObjective"]], "nlpdocumentformat (class in abacusai.api_class)": [[9, "abacusai.api_class.NLPDocumentFormat"]], "normalized_mean_absolute_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.NORMALIZED_MEAN_ABSOLUTE_ERROR"]], "normalized_root_mean_square_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.NORMALIZED_ROOT_MEAN_SQUARE_ERROR"]], "nsamplingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.NSamplingConfig"]], "n_sampling (abacusai.api_class.samplingmethodtype attribute)": [[9, "abacusai.api_class.SamplingMethodType.N_SAMPLING"]], "namedentityextractiontrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig"]], "naturallanguagesearchtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig"]], "object_detection (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.OBJECT_DETECTION"]], "optimization (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.OPTIMIZATION"]], "optimizationtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.OptimizationTrainingConfig"]], "outputvariablemapping (class in abacusai.api_class)": [[9, "abacusai.api_class.OutputVariableMapping"]], "peaks_mean_absolute_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.PEAKS_MEAN_ABSOLUTE_ERROR"]], "percent_sampling (abacusai.api_class.samplingmethodtype attribute)": [[9, "abacusai.api_class.SamplingMethodType.PERCENT_SAMPLING"]], "personalization (abacusai.api_class.personalizationobjective attribute)": [[9, "abacusai.api_class.PersonalizationObjective.PERSONALIZATION"]], "personalization (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.PERSONALIZATION"]], "pointwise_accuracy (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.POINTWISE_ACCURACY"]], "precision (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.PRECISION"]], "precision (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.PRECISION"]], "prediction_length (abacusai.api_class.forecastingdatasplittype attribute)": [[9, "abacusai.api_class.ForecastingDataSplitType.PREDICTION_LENGTH"]], "predictive_modeling (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.PREDICTIVE_MODELING"]], "pretrained_bert (abacusai.api_class.nermodeltype attribute)": [[9, "abacusai.api_class.NERModelType.PRETRAINED_BERT"]], "pretrained_models (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.PRETRAINED_MODELS"]], "pretrained_multilingual (abacusai.api_class.nermodeltype attribute)": [[9, "abacusai.api_class.NERModelType.PRETRAINED_MULTILINGUAL"]], "pretrained_roberta_27 (abacusai.api_class.nermodeltype attribute)": [[9, "abacusai.api_class.NERModelType.PRETRAINED_ROBERTA_27"]], "pretrained_roberta_43 (abacusai.api_class.nermodeltype attribute)": [[9, "abacusai.api_class.NERModelType.PRETRAINED_ROBERTA_43"]], "production (abacusai.api_class.personalizationtrainingmode attribute)": [[9, "abacusai.api_class.PersonalizationTrainingMode.PRODUCTION"]], "parsingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.ParsingConfig"]], "percentsamplingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.PercentSamplingConfig"]], "personalizationobjective (class in abacusai.api_class)": [[9, "abacusai.api_class.PersonalizationObjective"]], "personalizationtrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.PersonalizationTrainingConfig"]], "personalizationtrainingmode (class in abacusai.api_class)": [[9, "abacusai.api_class.PersonalizationTrainingMode"]], "problemtype (class in abacusai.api_class)": [[9, "abacusai.api_class.ProblemType"]], "pythonfunctionargument (class in abacusai.api_class)": [[9, "abacusai.api_class.PythonFunctionArgument"]], "pythonfunctionargumenttype (class in abacusai.api_class)": [[9, "abacusai.api_class.PythonFunctionArgumentType"]], "quadratic (abacusai.api_class.forecastingquanitlesextensionmethod attribute)": [[9, "abacusai.api_class.ForecastingQuanitlesExtensionMethod.QUADRATIC"]], "quantile (abacusai.api_class.regressiontargettransform attribute)": [[9, "abacusai.api_class.RegressionTargetTransform.QUANTILE"]], "quarter_end (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.QUARTER_END"]], "quarter_start (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.QUARTER_START"]], "random (abacusai.api_class.regressiontypeofsplit attribute)": [[9, "abacusai.api_class.RegressionTypeOfSplit.RANDOM"]], "rapid (abacusai.api_class.experimentationmode attribute)": [[9, "abacusai.api_class.ExperimentationMode.RAPID"]], "rapid (abacusai.api_class.regressiontreehpomode attribute)": [[9, "abacusai.api_class.RegressionTreeHPOMode.RAPID"]], "recall (abacusai.api_class.nerobjective attribute)": [[9, "abacusai.api_class.NERObjective.RECALL"]], "recall (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.RECALL"]], "resample (abacusai.api_class.regressionaugmentationstrategy attribute)": [[9, "abacusai.api_class.RegressionAugmentationStrategy.RESAMPLE"]], "rmse (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.RMSE"]], "rmse (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.RMSE"]], "robust (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.ROBUST"]], "root_mean_square_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.ROOT_MEAN_SQUARE_ERROR"]], "row_indicator_based (abacusai.api_class.regressiontypeofsplit attribute)": [[9, "abacusai.api_class.RegressionTypeOfSplit.ROW_INDICATOR_BASED"]], "r_squared_coefficient_of_determination (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.R_SQUARED_COEFFICIENT_OF_DETERMINATION"]], "regressionaugmentationstrategy (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionAugmentationStrategy"]], "regressionlossfunction (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionLossFunction"]], "regressionobjective (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionObjective"]], "regressiontargettransform (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionTargetTransform"]], "regressiontimesplitmethod (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionTimeSplitMethod"]], "regressiontrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionTrainingConfig"]], "regressiontreehpomode (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionTreeHPOMode"]], "regressiontypeofsplit (class in abacusai.api_class)": [[9, "abacusai.api_class.RegressionTypeOfSplit"]], "sentence_boundary_detection (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.SENTENCE_BOUNDARY_DETECTION"]], "sentiment_detection (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.SENTIMENT_DETECTION"]], "sliding_zscore (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.SLIDING_ZSCORE"]], "smote (abacusai.api_class.regressionaugmentationstrategy attribute)": [[9, "abacusai.api_class.RegressionAugmentationStrategy.SMOTE"]], "srmse (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.SRMSE"]], "stable_standardized_mean_absolute_percentage_error (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "streaming (abacusai.api_class.connectortype attribute)": [[9, "abacusai.api_class.ConnectorType.STREAMING"]], "string (abacusai.api_class.pythonfunctionargumenttype attribute)": [[9, "abacusai.api_class.PythonFunctionArgumentType.STRING"]], "samplingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.SamplingConfig"]], "samplingmethodtype (class in abacusai.api_class)": [[9, "abacusai.api_class.SamplingMethodType"]], "sentenceboundarydetectiontrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig"]], "sentimentdetectiontrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig"]], "sentimenttype (class in abacusai.api_class)": [[9, "abacusai.api_class.SentimentType"]], "test_split_percentage_based (abacusai.api_class.regressiontimesplitmethod attribute)": [[9, "abacusai.api_class.RegressionTimeSplitMethod.TEST_SPLIT_PERCENTAGE_BASED"]], "test_start_timestamp_based (abacusai.api_class.regressiontimesplitmethod attribute)": [[9, "abacusai.api_class.RegressionTimeSplitMethod.TEST_START_TIMESTAMP_BASED"]], "text (abacusai.api_class.nlpdocumentformat attribute)": [[9, "abacusai.api_class.NLPDocumentFormat.TEXT"]], "theme_analysis (abacusai.api_class.problemtype attribute)": [[9, "abacusai.api_class.ProblemType.THEME_ANALYSIS"]], "thorough (abacusai.api_class.experimentationmode attribute)": [[9, "abacusai.api_class.ExperimentationMode.THOROUGH"]], "thorough (abacusai.api_class.regressiontreehpomode attribute)": [[9, "abacusai.api_class.RegressionTreeHPOMode.THOROUGH"]], "timestamp (abacusai.api_class.forecastingdatasplittype attribute)": [[9, "abacusai.api_class.ForecastingDataSplitType.TIMESTAMP"]], "timestamp_based (abacusai.api_class.regressiontypeofsplit attribute)": [[9, "abacusai.api_class.RegressionTypeOfSplit.TIMESTAMP_BASED"]], "tokens (abacusai.api_class.nlpdocumentformat attribute)": [[9, "abacusai.api_class.NLPDocumentFormat.TOKENS"]], "tweedie (abacusai.api_class.regressionlossfunction attribute)": [[9, "abacusai.api_class.RegressionLossFunction.TWEEDIE"]], "themeanalysistrainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.ThemeAnalysisTrainingConfig"]], "trainingconfig (class in abacusai.api_class)": [[9, "abacusai.api_class.TrainingConfig"]], "uk (abacusai.api_class.holidaycalendars attribute)": [[9, "abacusai.api_class.HolidayCalendars.UK"]], "us (abacusai.api_class.holidaycalendars attribute)": [[9, "abacusai.api_class.HolidayCalendars.US"]], "valence (abacusai.api_class.sentimenttype attribute)": [[9, "abacusai.api_class.SentimentType.VALENCE"]], "wape (abacusai.api_class.forecastingobjective attribute)": [[9, "abacusai.api_class.ForecastingObjective.WAPE"]], "wape (abacusai.api_class.regressionobjective attribute)": [[9, "abacusai.api_class.RegressionObjective.WAPE"]], "weekly_monday_start (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.WEEKLY_MONDAY_START"]], "weekly_saturday_start (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.WEEKLY_SATURDAY_START"]], "weekly_sunday_start (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.WEEKLY_SUNDAY_START"]], "weibull (abacusai.api_class.forecastinglossfunction attribute)": [[9, "abacusai.api_class.ForecastingLossFunction.WEIBULL"]], "yearly (abacusai.api_class.forecastingfrequency attribute)": [[9, "abacusai.api_class.ForecastingFrequency.YEARLY"]], "yeo_johnson (abacusai.api_class.regressiontargettransform attribute)": [[9, "abacusai.api_class.RegressionTargetTransform.YEO_JOHNSON"]], "zeros (abacusai.api_class.clusteringimputationmethod attribute)": [[9, "abacusai.api_class.ClusteringImputationMethod.ZEROS"]], "zscore (abacusai.api_class.forecastinglocalscaling attribute)": [[9, "abacusai.api_class.ForecastingLocalScaling.ZSCORE"]], "_apiclassfactory (class in abacusai.api_class)": [[9, "abacusai.api_class._ApiClassFactory"], [9, "id12"], [9, "id29"]], "_featuregroupexportconfigfactory (class in abacusai.api_class)": [[9, "abacusai.api_class._FeatureGroupExportConfigFactory"]], "_samplingconfigfactory (class in abacusai.api_class)": [[9, "abacusai.api_class._SamplingConfigFactory"]], "_trainingconfigfactory (class in abacusai.api_class)": [[9, "abacusai.api_class._TrainingConfigFactory"]], "__eq__() (abacusai.api_class.apienum method)": [[9, "abacusai.api_class.ApiEnum.__eq__"]], "__hash__() (abacusai.api_class.apienum method)": [[9, "abacusai.api_class.ApiEnum.__hash__"]], "__post_init__() (abacusai.api_class.apiclass method)": [[9, "abacusai.api_class.ApiClass.__post_init__"], [9, "id20"], [9, "id26"], [9, "id3"], [9, "id9"]], "__post_init__() (abacusai.api_class.samplingconfig method)": [[9, "abacusai.api_class.SamplingConfig.__post_init__"]], "_support_kwargs (abacusai.api_class.apiclass attribute)": [[9, "abacusai.api_class.ApiClass._support_kwargs"], [9, "id19"], [9, "id2"], [9, "id25"], [9, "id8"]], "_support_kwargs (abacusai.api_class.trainingconfig attribute)": [[9, "abacusai.api_class.TrainingConfig._support_kwargs"]], "_upper_snake_case_keys (abacusai.api_class.apiclass attribute)": [[9, "abacusai.api_class.ApiClass._upper_snake_case_keys"], [9, "id1"], [9, "id18"], [9, "id24"], [9, "id7"]], "_upper_snake_case_keys (abacusai.api_class.trainingconfig attribute)": [[9, "abacusai.api_class.TrainingConfig._upper_snake_case_keys"]], "abacus_internal_model (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.abacus_internal_model"]], "abacusai.api_class": [[9, "module-abacusai.api_class"]], "active_labels_column (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.active_labels_column"]], "active_labels_column (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.active_labels_column"]], "add_time_features (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.add_time_features"]], "additional_forecast_keys (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.additional_forecast_keys"]], "additional_id_columns (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.additional_id_columns"]], "augmentation_strategy (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.augmentation_strategy"]], "backtesting_window_step_size (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.backtesting_window_step_size"]], "batch_renormalization (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.batch_renormalization"]], "batch_size (abacusai.api_class.documentclassificationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.documentsummarizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentSummarizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.documentvisualizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentVisualizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.sentenceboundarydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.batch_size"]], "chunk_overlap_fraction (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.chunk_overlap_fraction"]], "compute_metrics (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.compute_metrics"]], "compute_rerank_metrics (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.compute_rerank_metrics"]], "compute_session_metrics (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.compute_session_metrics"]], "config_abstract_class (abacusai.api_class._apiclassfactory attribute)": [[9, "abacusai.api_class._ApiClassFactory.config_abstract_class"], [9, "id13"], [9, "id30"]], "config_abstract_class (abacusai.api_class._featuregroupexportconfigfactory attribute)": [[9, "abacusai.api_class._FeatureGroupExportConfigFactory.config_abstract_class"]], "config_abstract_class (abacusai.api_class._trainingconfigfactory attribute)": [[9, "abacusai.api_class._TrainingConfigFactory.config_abstract_class"]], "config_class_key (abacusai.api_class._apiclassfactory attribute)": [[9, "abacusai.api_class._ApiClassFactory.config_class_key"], [9, "id14"], [9, "id31"]], "config_class_key (abacusai.api_class._featuregroupexportconfigfactory attribute)": [[9, "abacusai.api_class._FeatureGroupExportConfigFactory.config_class_key"]], "config_class_key (abacusai.api_class._samplingconfigfactory attribute)": [[9, "abacusai.api_class._SamplingConfigFactory.config_class_key"]], "config_class_key (abacusai.api_class._trainingconfigfactory attribute)": [[9, "abacusai.api_class._TrainingConfigFactory.config_class_key"]], "config_class_map (abacusai.api_class._apiclassfactory attribute)": [[9, "abacusai.api_class._ApiClassFactory.config_class_map"], [9, "id15"], [9, "id32"]], "config_class_map (abacusai.api_class._featuregroupexportconfigfactory attribute)": [[9, "abacusai.api_class._FeatureGroupExportConfigFactory.config_class_map"]], "config_class_map (abacusai.api_class._samplingconfigfactory attribute)": [[9, "abacusai.api_class._SamplingConfigFactory.config_class_map"]], "config_class_map (abacusai.api_class._trainingconfigfactory attribute)": [[9, "abacusai.api_class._TrainingConfigFactory.config_class_map"]], "connector_type (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.connector_type"]], "connector_type (abacusai.api_class.featuregroupexportconfig attribute)": [[9, "abacusai.api_class.FeatureGroupExportConfig.connector_type"]], "connector_type (abacusai.api_class.fileconnectorexportconfig attribute)": [[9, "abacusai.api_class.FileConnectorExportConfig.connector_type"]], "convolution_filters (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.convolution_filters"]], "convolutional_layers (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.convolutional_layers"]], "csv_delimiter (abacusai.api_class.parsingconfig attribute)": [[9, "abacusai.api_class.ParsingConfig.csv_delimiter"]], "cumulative_prediction_lengths (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.cumulative_prediction_lengths"]], "custom_loss_functions (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.custom_loss_functions"]], "custom_loss_functions (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.custom_loss_functions"]], "custom_metrics (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.custom_metrics"]], "custom_metrics (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.custom_metrics"]], "data_columns (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.data_columns"]], "data_split_feature_group_table_name (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.data_split_feature_group_table_name"]], "database_connector_id (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.database_connector_id"]], "datetime_holiday_calendars (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.datetime_holiday_calendars"]], "description (abacusai.api_class.aiagenttrainingconfig attribute)": [[9, "abacusai.api_class.AIAgentTrainingConfig.description"]], "disable_gpu (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.disable_gpu"]], "disable_networks_without_analytic_quantiles (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.disable_networks_without_analytic_quantiles"]], "disable_test_val_fold (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.disable_test_val_fold"]], "disable_timestamp_scalar_features (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.disable_timestamp_scalar_features"]], "disable_transformer (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.disable_transformer"]], "docker_image_uri (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.docker_image_uri"]], "document_format (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.document_format"]], "downsample_item_popularity_percentile (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.downsample_item_popularity_percentile"]], "drop_original_categoricals (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.drop_original_categoricals"]], "dropout_rate (abacusai.api_class.documentclassificationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.documentsummarizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentSummarizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.documentvisualizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentVisualizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.sentenceboundarydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.dropout_rate"]], "enable_clustering (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.enable_clustering"]], "enable_cold_start (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.enable_cold_start"]], "enable_feature_selection (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.enable_feature_selection"]], "enable_multiple_backtests (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.enable_multiple_backtests"]], "escape (abacusai.api_class.parsingconfig attribute)": [[9, "abacusai.api_class.ParsingConfig.escape"]], "experimentation_mode (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.experimentation_mode"]], "explicit_time_split (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.explicit_time_split"]], "explore_lookback_hours (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.explore_lookback_hours"]], "export_file_format (abacusai.api_class.fileconnectorexportconfig attribute)": [[9, "abacusai.api_class.FileConnectorExportConfig.export_file_format"]], "feature_selection_intensity (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.feature_selection_intensity"]], "file_path_with_schema (abacusai.api_class.parsingconfig attribute)": [[9, "abacusai.api_class.ParsingConfig.file_path_with_schema"]], "fill_missing_values (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.fill_missing_values"]], "filter_history (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.filter_history"]], "filter_items (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.filter_items"]], "force_prediction_length (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.force_prediction_length"]], "forecast_frequency (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.forecast_frequency"]], "from_dict() (abacusai.api_class.apiclass class method)": [[9, "abacusai.api_class.ApiClass.from_dict"], [9, "id11"], [9, "id22"], [9, "id28"], [9, "id5"]], "from_dict() (abacusai.api_class._apiclassfactory class method)": [[9, "abacusai.api_class._ApiClassFactory.from_dict"], [9, "id16"], [9, "id33"]], "full_data_retraining (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.full_data_retraining"]], "full_data_retraining (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.full_data_retraining"]], "handle_zeros_as_missing_values (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.handle_zeros_as_missing_values"]], "historical_frequency (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.historical_frequency"]], "history_length (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.history_length"]], "id_column (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.id_column"]], "ignore_datetime_features (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.ignore_datetime_features"]], "imputation (abacusai.api_class.clusteringtimeseriestrainingconfig attribute)": [[9, "abacusai.api_class.ClusteringTimeseriesTrainingConfig.imputation"]], "include_longformer (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.include_longformer"]], "index_fraction (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.index_fraction"]], "index_output_path (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.index_output_path"]], "initial_learning_rate (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.initial_learning_rate"]], "is_multilingual (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.is_multilingual"]], "is_required (abacusai.api_class.pythonfunctionargument attribute)": [[9, "abacusai.api_class.PythonFunctionArgument.is_required"]], "item_attributes_weight_column (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.item_attributes_weight_column"]], "item_id_dropout (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.item_id_dropout"]], "k_fold_cross_validation (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.k_fold_cross_validation"]], "key_columns (abacusai.api_class.nsamplingconfig attribute)": [[9, "abacusai.api_class.NSamplingConfig.key_columns"]], "key_columns (abacusai.api_class.percentsamplingconfig attribute)": [[9, "abacusai.api_class.PercentSamplingConfig.key_columns"]], "kwargs (abacusai.api_class.trainingconfig attribute)": [[9, "abacusai.api_class.TrainingConfig.kwargs"]], "l2_regularization_factor (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.l2_regularization_factor"]], "larger_embeddings (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.larger_embeddings"]], "local_scaling_mode (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.local_scaling_mode"]], "location (abacusai.api_class.fileconnectorexportconfig attribute)": [[9, "abacusai.api_class.FileConnectorExportConfig.location"]], "loss_function (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.loss_function"]], "loss_function (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.loss_function"]], "loss_parameters (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.loss_parameters"]], "max_catalog_size (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.max_catalog_size"]], "max_dimension (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.max_dimension"]], "max_history_length (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.max_history_length"]], "max_scale_context (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.max_scale_context"]], "max_text_words (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.max_text_words"]], "max_user_history_len_percentile (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.max_user_history_len_percentile"]], "min_categorical_count (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.min_categorical_count"]], "mixture_of_gaussians (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.mixture_of_gaussians"]], "mode (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.mode"]], "name (abacusai.api_class.outputvariablemapping attribute)": [[9, "abacusai.api_class.OutputVariableMapping.name"]], "name (abacusai.api_class.pythonfunctionargument attribute)": [[9, "abacusai.api_class.PythonFunctionArgument.name"]], "ner_model_type (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.ner_model_type"]], "num_backtesting_windows (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.num_backtesting_windows"]], "num_clusters_selection (abacusai.api_class.clusteringtimeseriestrainingconfig attribute)": [[9, "abacusai.api_class.ClusteringTimeseriesTrainingConfig.num_clusters_selection"]], "num_clusters_selection (abacusai.api_class.clusteringtrainingconfig attribute)": [[9, "abacusai.api_class.ClusteringTrainingConfig.num_clusters_selection"]], "num_completion_tokens (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.num_completion_tokens"]], "num_cv_folds (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.num_cv_folds"]], "number_of_samples (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.number_of_samples"]], "numeric_clipping_percentile (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.numeric_clipping_percentile"]], "object_name (abacusai.api_class.databaseconnectorexportconfig attribute)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.object_name"]], "objective (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.objective"]], "objective (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.objective"]], "objective (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.objective"]], "objective (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.objective"]], "perform_feature_selection (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.perform_feature_selection"]], "pipeline_variable (abacusai.api_class.pythonfunctionargument attribute)": [[9, "abacusai.api_class.PythonFunctionArgument.pipeline_variable"]], "predict_function_name (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.predict_function_name"]], "predict_many_function_name (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.predict_many_function_name"]], "predict_module_name (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.predict_module_name"]], "predict_residuals (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.predict_residuals"]], "prediction_length (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.prediction_length"]], "prediction_step_size (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.prediction_step_size"]], "pretrained_model_name (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.pretrained_model_name"]], "probability_quantiles (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.probability_quantiles"]], "problem_type (abacusai.api_class.aiagenttrainingconfig attribute)": [[9, "abacusai.api_class.AIAgentTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.clusteringtimeseriestrainingconfig attribute)": [[9, "abacusai.api_class.ClusteringTimeseriesTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.clusteringtrainingconfig attribute)": [[9, "abacusai.api_class.ClusteringTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.documentclassificationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.documentsummarizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentSummarizationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.documentvisualizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentVisualizationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.optimizationtrainingconfig attribute)": [[9, "abacusai.api_class.OptimizationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.sentenceboundarydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.themeanalysistrainingconfig attribute)": [[9, "abacusai.api_class.ThemeAnalysisTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.trainingconfig attribute)": [[9, "abacusai.api_class.TrainingConfig.problem_type"]], "quantiles_extension_method (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.quantiles_extension_method"]], "rare_class_augmentation_threshold (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.rare_class_augmentation_threshold"]], "rebalance_classes (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.rebalance_classes"]], "recent_days_for_training (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.recent_days_for_training"]], "recurrent_layers (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.recurrent_layers"]], "recurrent_units (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.recurrent_units"]], "sample_count (abacusai.api_class.nsamplingconfig attribute)": [[9, "abacusai.api_class.NSamplingConfig.sample_count"]], "sample_percent (abacusai.api_class.percentsamplingconfig attribute)": [[9, "abacusai.api_class.PercentSamplingConfig.sample_percent"]], "sample_weight (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.sample_weight"]], "sampling_method (abacusai.api_class.nsamplingconfig attribute)": [[9, "abacusai.api_class.NSamplingConfig.sampling_method"]], "sampling_method (abacusai.api_class.percentsamplingconfig attribute)": [[9, "abacusai.api_class.PercentSamplingConfig.sampling_method"]], "sampling_unit_keys (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.sampling_unit_keys"]], "search_chunk_size (abacusai.api_class.naturallanguagesearchtrainingconfig attribute)": [[9, "abacusai.api_class.NaturalLanguageSearchTrainingConfig.search_chunk_size"]], "sentiment_type (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.sentiment_type"]], "sequential_training (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.sequential_training"]], "service_port (abacusai.api_class.customtrainedmodeltrainingconfig attribute)": [[9, "abacusai.api_class.CustomTrainedModelTrainingConfig.service_port"]], "session_event_types (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.session_event_types"]], "skip_input_transform (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.skip_input_transform"]], "skip_local_scale_target (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.skip_local_scale_target"]], "skip_missing (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.skip_missing"]], "skip_target_transform (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.skip_target_transform"]], "skip_timeseries_weight_scaling (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.skip_timeseries_weight_scaling"]], "smooth_history (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.smooth_history"]], "sort_objective (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.sort_objective"]], "spike_down (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.spike_down"]], "spike_up (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.spike_up"]], "symmetrize_quantiles (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.symmetrize_quantiles"]], "target_action_types (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.target_action_types"]], "target_action_weights (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.target_action_weights"]], "target_encode_categoricals (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.target_encode_categoricals"]], "target_transform (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.target_transform"]], "test_by_item (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.test_by_item"]], "test_last_items_length (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_last_items_length"]], "test_on_user_split (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_on_user_split"]], "test_row_indicator (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.test_row_indicator"]], "test_split (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.test_split"]], "test_split (abacusai.api_class.cumulativeforecastingtrainingconfig attribute)": [[9, "abacusai.api_class.CumulativeForecastingTrainingConfig.test_split"]], "test_split (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.test_split"]], "test_split (abacusai.api_class.documentclassificationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig.test_split"]], "test_split (abacusai.api_class.documentsummarizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentSummarizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.documentvisualizationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentVisualizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.test_split"]], "test_split (abacusai.api_class.namedentityextractiontrainingconfig attribute)": [[9, "abacusai.api_class.NamedEntityExtractionTrainingConfig.test_split"]], "test_split (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.test_split"]], "test_split (abacusai.api_class.sentenceboundarydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentenceBoundaryDetectionTrainingConfig.test_split"]], "test_split (abacusai.api_class.sentimentdetectiontrainingconfig attribute)": [[9, "abacusai.api_class.SentimentDetectionTrainingConfig.test_split"]], "test_split_on_last_k_items (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_split_on_last_k_items"]], "test_splitting_timestamp (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.test_splitting_timestamp"]], "test_start (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.test_start"]], "test_window_length_hours (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.test_window_length_hours"]], "timeseries_loss_weight_column (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.timeseries_loss_weight_column"]], "timeseries_weight_column (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.timeseries_weight_column"]], "timestamp_based_splitting_column (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.timestamp_based_splitting_column"]], "timestamp_based_splitting_method (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.timestamp_based_splitting_method"]], "to_dict() (abacusai.api_class.apiclass method)": [[9, "abacusai.api_class.ApiClass.to_dict"], [9, "id10"], [9, "id21"], [9, "id27"], [9, "id4"]], "to_dict() (abacusai.api_class.databaseconnectorexportconfig method)": [[9, "abacusai.api_class.DatabaseConnectorExportConfig.to_dict"]], "to_dict() (abacusai.api_class.fileconnectorexportconfig method)": [[9, "abacusai.api_class.FileConnectorExportConfig.to_dict"]], "train_function_name (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.train_function_name"]], "train_module_name (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.train_module_name"]], "training_input_tables (abacusai.api_class.customalgorithmtrainingconfig attribute)": [[9, "abacusai.api_class.CustomAlgorithmTrainingConfig.training_input_tables"]], "training_mode (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.training_mode"]], "training_point_overlap (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.training_point_overlap"]], "training_rows_downsample_ratio (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.training_rows_downsample_ratio"]], "training_start_date (abacusai.api_class.personalizationtrainingconfig attribute)": [[9, "abacusai.api_class.PersonalizationTrainingConfig.training_start_date"]], "tree_hpo_mode (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.tree_hpo_mode"]], "trend_change (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.trend_change"]], "type_of_split (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.type_of_split"]], "type_of_split (abacusai.api_class.regressiontrainingconfig attribute)": [[9, "abacusai.api_class.RegressionTrainingConfig.type_of_split"]], "underprediction_weight (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.underprediction_weight"]], "use_all_item_totals (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.use_all_item_totals"]], "use_item_id (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.use_item_id"]], "use_item_weights_in_objective (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.use_item_weights_in_objective"]], "use_log_transforms (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.use_log_transforms"]], "use_timeseries_weights_in_objective (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.use_timeseries_weights_in_objective"]], "value (abacusai.api_class.pythonfunctionargument attribute)": [[9, "abacusai.api_class.PythonFunctionArgument.value"]], "value_high (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.value_high"]], "variable_type (abacusai.api_class.outputvariablemapping attribute)": [[9, "abacusai.api_class.OutputVariableMapping.variable_type"]], "variable_type (abacusai.api_class.pythonfunctionargument attribute)": [[9, "abacusai.api_class.PythonFunctionArgument.variable_type"]], "variational_autoencoder (abacusai.api_class.anomalydetectiontrainingconfig attribute)": [[9, "abacusai.api_class.AnomalyDetectionTrainingConfig.variational_autoencoder"]], "zero_predictor (abacusai.api_class.forecastingtrainingconfig attribute)": [[9, "abacusai.api_class.ForecastingTrainingConfig.zero_predictor"]], "zero_shot_hypotheses (abacusai.api_class.documentclassificationtrainingconfig attribute)": [[9, "abacusai.api_class.DocumentClassificationTrainingConfig.zero_shot_hypotheses"]], "aiagenttrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.AIAgentTrainingConfig"]], "anomalydetectiontrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig"]], "clusteringtimeseriestrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.ClusteringTimeseriesTrainingConfig"]], "clusteringtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.ClusteringTrainingConfig"]], "cumulativeforecastingtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig"]], "customalgorithmtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig"]], "customtrainedmodeltrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig"]], "documentclassificationtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig"]], "documentsummarizationtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.DocumentSummarizationTrainingConfig"]], "documentvisualizationtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.DocumentVisualizationTrainingConfig"]], "forecastingtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig"]], "namedentityextractiontrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig"]], "naturallanguagesearchtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig"]], "optimizationtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.OptimizationTrainingConfig"]], "personalizationtrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig"]], "regressiontrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.RegressionTrainingConfig"]], "sentenceboundarydetectiontrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig"]], "sentimentdetectiontrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig"]], "themeanalysistrainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.ThemeAnalysisTrainingConfig"]], "trainingconfig (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model.TrainingConfig"]], "_trainingconfigfactory (class in abacusai.api_class.model)": [[10, "abacusai.api_class.model._TrainingConfigFactory"]], "_support_kwargs (abacusai.api_class.model.trainingconfig attribute)": [[10, "abacusai.api_class.model.TrainingConfig._support_kwargs"]], "_upper_snake_case_keys (abacusai.api_class.model.trainingconfig attribute)": [[10, "abacusai.api_class.model.TrainingConfig._upper_snake_case_keys"]], "abacus_internal_model (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.abacus_internal_model"]], "abacusai.api_class.model": [[10, "module-abacusai.api_class.model"]], "active_labels_column (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.active_labels_column"]], "active_labels_column (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.active_labels_column"]], "add_time_features (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.add_time_features"]], "additional_forecast_keys (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.additional_forecast_keys"]], "augmentation_strategy (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.augmentation_strategy"]], "backtesting_window_step_size (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.backtesting_window_step_size"]], "batch_renormalization (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.batch_renormalization"]], "batch_size (abacusai.api_class.model.documentclassificationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.documentsummarizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentSummarizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.documentvisualizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentVisualizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.sentenceboundarydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig.batch_size"]], "batch_size (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.batch_size"]], "chunk_overlap_fraction (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.chunk_overlap_fraction"]], "compute_metrics (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.compute_metrics"]], "compute_rerank_metrics (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.compute_rerank_metrics"]], "compute_session_metrics (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.compute_session_metrics"]], "config_abstract_class (abacusai.api_class.model._trainingconfigfactory attribute)": [[10, "abacusai.api_class.model._TrainingConfigFactory.config_abstract_class"]], "config_class_key (abacusai.api_class.model._trainingconfigfactory attribute)": [[10, "abacusai.api_class.model._TrainingConfigFactory.config_class_key"]], "config_class_map (abacusai.api_class.model._trainingconfigfactory attribute)": [[10, "abacusai.api_class.model._TrainingConfigFactory.config_class_map"]], "convolution_filters (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.convolution_filters"]], "convolutional_layers (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.convolutional_layers"]], "cumulative_prediction_lengths (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.cumulative_prediction_lengths"]], "custom_loss_functions (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.custom_loss_functions"]], "custom_loss_functions (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.custom_loss_functions"]], "custom_metrics (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.custom_metrics"]], "custom_metrics (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.custom_metrics"]], "data_split_feature_group_table_name (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.data_split_feature_group_table_name"]], "datetime_holiday_calendars (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.datetime_holiday_calendars"]], "description (abacusai.api_class.model.aiagenttrainingconfig attribute)": [[10, "abacusai.api_class.model.AIAgentTrainingConfig.description"]], "disable_gpu (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.disable_gpu"]], "disable_networks_without_analytic_quantiles (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.disable_networks_without_analytic_quantiles"]], "disable_test_val_fold (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.disable_test_val_fold"]], "disable_timestamp_scalar_features (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.disable_timestamp_scalar_features"]], "disable_transformer (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.disable_transformer"]], "docker_image_uri (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.docker_image_uri"]], "document_format (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.document_format"]], "downsample_item_popularity_percentile (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.downsample_item_popularity_percentile"]], "drop_original_categoricals (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.drop_original_categoricals"]], "dropout_rate (abacusai.api_class.model.documentclassificationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.documentsummarizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentSummarizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.documentvisualizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentVisualizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.sentenceboundarydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.dropout_rate"]], "enable_clustering (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.enable_clustering"]], "enable_cold_start (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.enable_cold_start"]], "enable_feature_selection (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.enable_feature_selection"]], "enable_multiple_backtests (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.enable_multiple_backtests"]], "experimentation_mode (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.experimentation_mode"]], "explicit_time_split (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.explicit_time_split"]], "explore_lookback_hours (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.explore_lookback_hours"]], "feature_selection_intensity (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.feature_selection_intensity"]], "fill_missing_values (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.fill_missing_values"]], "filter_history (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.filter_history"]], "filter_items (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.filter_items"]], "force_prediction_length (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.force_prediction_length"]], "forecast_frequency (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.forecast_frequency"]], "full_data_retraining (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.full_data_retraining"]], "full_data_retraining (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.full_data_retraining"]], "handle_zeros_as_missing_values (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.handle_zeros_as_missing_values"]], "historical_frequency (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.historical_frequency"]], "history_length (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.history_length"]], "ignore_datetime_features (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.ignore_datetime_features"]], "imputation (abacusai.api_class.model.clusteringtimeseriestrainingconfig attribute)": [[10, "abacusai.api_class.model.ClusteringTimeseriesTrainingConfig.imputation"]], "include_longformer (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.include_longformer"]], "index_fraction (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.index_fraction"]], "index_output_path (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.index_output_path"]], "initial_learning_rate (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.initial_learning_rate"]], "is_multilingual (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.is_multilingual"]], "item_attributes_weight_column (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.item_attributes_weight_column"]], "item_id_dropout (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.item_id_dropout"]], "k_fold_cross_validation (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.k_fold_cross_validation"]], "kwargs (abacusai.api_class.model.trainingconfig attribute)": [[10, "abacusai.api_class.model.TrainingConfig.kwargs"]], "l2_regularization_factor (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.l2_regularization_factor"]], "larger_embeddings (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.larger_embeddings"]], "local_scaling_mode (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.local_scaling_mode"]], "loss_function (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.loss_function"]], "loss_function (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.loss_function"]], "loss_parameters (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.loss_parameters"]], "max_catalog_size (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.max_catalog_size"]], "max_dimension (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.max_dimension"]], "max_history_length (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.max_history_length"]], "max_scale_context (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.max_scale_context"]], "max_text_words (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.max_text_words"]], "max_user_history_len_percentile (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.max_user_history_len_percentile"]], "min_categorical_count (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.min_categorical_count"]], "mixture_of_gaussians (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.mixture_of_gaussians"]], "ner_model_type (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.ner_model_type"]], "num_backtesting_windows (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.num_backtesting_windows"]], "num_clusters_selection (abacusai.api_class.model.clusteringtimeseriestrainingconfig attribute)": [[10, "abacusai.api_class.model.ClusteringTimeseriesTrainingConfig.num_clusters_selection"]], "num_clusters_selection (abacusai.api_class.model.clusteringtrainingconfig attribute)": [[10, "abacusai.api_class.model.ClusteringTrainingConfig.num_clusters_selection"]], "num_completion_tokens (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.num_completion_tokens"]], "num_cv_folds (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.num_cv_folds"]], "number_of_samples (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.number_of_samples"]], "numeric_clipping_percentile (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.numeric_clipping_percentile"]], "objective (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.objective"]], "objective (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.objective"]], "objective (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.objective"]], "objective (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.objective"]], "perform_feature_selection (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.perform_feature_selection"]], "predict_function_name (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.predict_function_name"]], "predict_many_function_name (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.predict_many_function_name"]], "predict_module_name (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.predict_module_name"]], "predict_residuals (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.predict_residuals"]], "prediction_length (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.prediction_length"]], "prediction_step_size (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.prediction_step_size"]], "pretrained_model_name (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.pretrained_model_name"]], "probability_quantiles (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.probability_quantiles"]], "problem_type (abacusai.api_class.model.aiagenttrainingconfig attribute)": [[10, "abacusai.api_class.model.AIAgentTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.clusteringtimeseriestrainingconfig attribute)": [[10, "abacusai.api_class.model.ClusteringTimeseriesTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.clusteringtrainingconfig attribute)": [[10, "abacusai.api_class.model.ClusteringTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.documentclassificationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.documentsummarizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentSummarizationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.documentvisualizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentVisualizationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.optimizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.OptimizationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.sentenceboundarydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.themeanalysistrainingconfig attribute)": [[10, "abacusai.api_class.model.ThemeAnalysisTrainingConfig.problem_type"]], "problem_type (abacusai.api_class.model.trainingconfig attribute)": [[10, "abacusai.api_class.model.TrainingConfig.problem_type"]], "quantiles_extension_method (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.quantiles_extension_method"]], "rare_class_augmentation_threshold (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.rare_class_augmentation_threshold"]], "rebalance_classes (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.rebalance_classes"]], "recent_days_for_training (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.recent_days_for_training"]], "recurrent_layers (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.recurrent_layers"]], "recurrent_units (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.recurrent_units"]], "sample_weight (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.sample_weight"]], "sampling_unit_keys (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.sampling_unit_keys"]], "search_chunk_size (abacusai.api_class.model.naturallanguagesearchtrainingconfig attribute)": [[10, "abacusai.api_class.model.NaturalLanguageSearchTrainingConfig.search_chunk_size"]], "sentiment_type (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.sentiment_type"]], "sequential_training (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.sequential_training"]], "service_port (abacusai.api_class.model.customtrainedmodeltrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomTrainedModelTrainingConfig.service_port"]], "session_event_types (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.session_event_types"]], "skip_input_transform (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.skip_input_transform"]], "skip_local_scale_target (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.skip_local_scale_target"]], "skip_missing (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.skip_missing"]], "skip_target_transform (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.skip_target_transform"]], "skip_timeseries_weight_scaling (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.skip_timeseries_weight_scaling"]], "smooth_history (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.smooth_history"]], "sort_objective (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.sort_objective"]], "sort_objective (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.sort_objective"]], "spike_down (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.spike_down"]], "spike_up (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.spike_up"]], "symmetrize_quantiles (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.symmetrize_quantiles"]], "target_action_types (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.target_action_types"]], "target_action_weights (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.target_action_weights"]], "target_encode_categoricals (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.target_encode_categoricals"]], "target_transform (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.target_transform"]], "test_by_item (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.test_by_item"]], "test_last_items_length (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_last_items_length"]], "test_on_user_split (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_on_user_split"]], "test_row_indicator (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.test_row_indicator"]], "test_split (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.cumulativeforecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.CumulativeForecastingTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.documentclassificationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.documentsummarizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentSummarizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.documentvisualizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentVisualizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.namedentityextractiontrainingconfig attribute)": [[10, "abacusai.api_class.model.NamedEntityExtractionTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.sentenceboundarydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentenceBoundaryDetectionTrainingConfig.test_split"]], "test_split (abacusai.api_class.model.sentimentdetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.SentimentDetectionTrainingConfig.test_split"]], "test_split_on_last_k_items (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_split_on_last_k_items"]], "test_splitting_timestamp (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.test_splitting_timestamp"]], "test_start (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.test_start"]], "test_window_length_hours (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.test_window_length_hours"]], "timeseries_loss_weight_column (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.timeseries_loss_weight_column"]], "timeseries_weight_column (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.timeseries_weight_column"]], "timestamp_based_splitting_column (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.timestamp_based_splitting_column"]], "timestamp_based_splitting_method (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.timestamp_based_splitting_method"]], "train_function_name (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.train_function_name"]], "train_module_name (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.train_module_name"]], "training_input_tables (abacusai.api_class.model.customalgorithmtrainingconfig attribute)": [[10, "abacusai.api_class.model.CustomAlgorithmTrainingConfig.training_input_tables"]], "training_mode (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.training_mode"]], "training_point_overlap (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.training_point_overlap"]], "training_rows_downsample_ratio (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.training_rows_downsample_ratio"]], "training_start_date (abacusai.api_class.model.personalizationtrainingconfig attribute)": [[10, "abacusai.api_class.model.PersonalizationTrainingConfig.training_start_date"]], "tree_hpo_mode (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.tree_hpo_mode"]], "trend_change (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.trend_change"]], "type_of_split (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.type_of_split"]], "type_of_split (abacusai.api_class.model.regressiontrainingconfig attribute)": [[10, "abacusai.api_class.model.RegressionTrainingConfig.type_of_split"]], "underprediction_weight (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.underprediction_weight"]], "use_all_item_totals (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.use_all_item_totals"]], "use_item_id (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.use_item_id"]], "use_item_weights_in_objective (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.use_item_weights_in_objective"]], "use_log_transforms (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.use_log_transforms"]], "use_timeseries_weights_in_objective (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.use_timeseries_weights_in_objective"]], "value_high (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.value_high"]], "variational_autoencoder (abacusai.api_class.model.anomalydetectiontrainingconfig attribute)": [[10, "abacusai.api_class.model.AnomalyDetectionTrainingConfig.variational_autoencoder"]], "zero_predictor (abacusai.api_class.model.forecastingtrainingconfig attribute)": [[10, "abacusai.api_class.model.ForecastingTrainingConfig.zero_predictor"]], "zero_shot_hypotheses (abacusai.api_class.model.documentclassificationtrainingconfig attribute)": [[10, "abacusai.api_class.model.DocumentClassificationTrainingConfig.zero_shot_hypotheses"]], "outputvariablemapping (class in abacusai.api_class.python_functions)": [[11, "abacusai.api_class.python_functions.OutputVariableMapping"]], "pythonfunctionargument (class in abacusai.api_class.python_functions)": [[11, "abacusai.api_class.python_functions.PythonFunctionArgument"]], "abacusai.api_class.python_functions": [[11, "module-abacusai.api_class.python_functions"]], "is_required (abacusai.api_class.python_functions.pythonfunctionargument attribute)": [[11, "abacusai.api_class.python_functions.PythonFunctionArgument.is_required"]], "name (abacusai.api_class.python_functions.outputvariablemapping attribute)": [[11, "abacusai.api_class.python_functions.OutputVariableMapping.name"]], "name (abacusai.api_class.python_functions.pythonfunctionargument attribute)": [[11, "abacusai.api_class.python_functions.PythonFunctionArgument.name"]], "pipeline_variable (abacusai.api_class.python_functions.pythonfunctionargument attribute)": [[11, "abacusai.api_class.python_functions.PythonFunctionArgument.pipeline_variable"]], "value (abacusai.api_class.python_functions.pythonfunctionargument attribute)": [[11, "abacusai.api_class.python_functions.PythonFunctionArgument.value"]], "variable_type (abacusai.api_class.python_functions.outputvariablemapping attribute)": [[11, "abacusai.api_class.python_functions.OutputVariableMapping.variable_type"]], "variable_type (abacusai.api_class.python_functions.pythonfunctionargument attribute)": [[11, "abacusai.api_class.python_functions.PythonFunctionArgument.variable_type"]], "databaseconnectorexportconfig (class in abacusai.api_class.refresh)": [[12, "abacusai.api_class.refresh.DatabaseConnectorExportConfig"]], "featuregroupexportconfig (class in abacusai.api_class.refresh)": [[12, "abacusai.api_class.refresh.FeatureGroupExportConfig"]], "fileconnectorexportconfig (class in abacusai.api_class.refresh)": [[12, "abacusai.api_class.refresh.FileConnectorExportConfig"]], "_featuregroupexportconfigfactory (class in abacusai.api_class.refresh)": [[12, "abacusai.api_class.refresh._FeatureGroupExportConfigFactory"]], "abacusai.api_class.refresh": [[12, "module-abacusai.api_class.refresh"]], "additional_id_columns (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[12, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.additional_id_columns"]], "config_abstract_class (abacusai.api_class.refresh._featuregroupexportconfigfactory attribute)": [[12, "abacusai.api_class.refresh._FeatureGroupExportConfigFactory.config_abstract_class"]], "config_class_key (abacusai.api_class.refresh._featuregroupexportconfigfactory attribute)": [[12, "abacusai.api_class.refresh._FeatureGroupExportConfigFactory.config_class_key"]], "config_class_map (abacusai.api_class.refresh._featuregroupexportconfigfactory attribute)": [[12, "abacusai.api_class.refresh._FeatureGroupExportConfigFactory.config_class_map"]], "connector_type (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[12, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.connector_type"]], "connector_type (abacusai.api_class.refresh.featuregroupexportconfig attribute)": [[12, "abacusai.api_class.refresh.FeatureGroupExportConfig.connector_type"]], "connector_type (abacusai.api_class.refresh.fileconnectorexportconfig attribute)": [[12, "abacusai.api_class.refresh.FileConnectorExportConfig.connector_type"]], "data_columns (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[12, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.data_columns"]], "database_connector_id (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[12, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.database_connector_id"]], "export_file_format (abacusai.api_class.refresh.fileconnectorexportconfig attribute)": [[12, "abacusai.api_class.refresh.FileConnectorExportConfig.export_file_format"]], "id_column (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[12, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.id_column"]], "location (abacusai.api_class.refresh.fileconnectorexportconfig attribute)": [[12, "abacusai.api_class.refresh.FileConnectorExportConfig.location"]], "mode (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[12, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.mode"]], "object_name (abacusai.api_class.refresh.databaseconnectorexportconfig attribute)": [[12, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.object_name"]], "to_dict() (abacusai.api_class.refresh.databaseconnectorexportconfig method)": [[12, "abacusai.api_class.refresh.DatabaseConnectorExportConfig.to_dict"]], "to_dict() (abacusai.api_class.refresh.fileconnectorexportconfig method)": [[12, "abacusai.api_class.refresh.FileConnectorExportConfig.to_dict"]], "invalid_pandas_column_name_characters (in module abacusai.api_client_utils)": [[13, "abacusai.api_client_utils.INVALID_PANDAS_COLUMN_NAME_CHARACTERS"]], "abacusai.api_client_utils": [[13, "module-abacusai.api_client_utils"]], "avro_to_pandas_dtype() (in module abacusai.api_client_utils)": [[13, "abacusai.api_client_utils.avro_to_pandas_dtype"]], "clean_column_name() (in module abacusai.api_client_utils)": [[13, "abacusai.api_client_utils.clean_column_name"]], "get_clean_function_source_code() (in module abacusai.api_client_utils)": [[13, "abacusai.api_client_utils.get_clean_function_source_code"]], "get_non_nullable_type() (in module abacusai.api_client_utils)": [[13, "abacusai.api_client_utils.get_non_nullable_type"]], "get_object_from_context() (in module abacusai.api_client_utils)": [[13, "abacusai.api_client_utils.get_object_from_context"]], "apiendpoint (class in abacusai.api_endpoint)": [[14, "abacusai.api_endpoint.ApiEndpoint"]], "__repr__() (abacusai.api_endpoint.apiendpoint method)": [[14, "abacusai.api_endpoint.ApiEndpoint.__repr__"]], "abacusai.api_endpoint": [[14, "module-abacusai.api_endpoint"]], "to_dict() (abacusai.api_endpoint.apiendpoint method)": [[14, "abacusai.api_endpoint.ApiEndpoint.to_dict"]], "apikey (class in abacusai.api_key)": [[15, "abacusai.api_key.ApiKey"]], "__repr__() (abacusai.api_key.apikey method)": [[15, "abacusai.api_key.ApiKey.__repr__"]], "abacusai.api_key": [[15, "module-abacusai.api_key"]], "delete() (abacusai.api_key.apikey method)": [[15, "abacusai.api_key.ApiKey.delete"]], "to_dict() (abacusai.api_key.apikey method)": [[15, "abacusai.api_key.ApiKey.to_dict"]], "applicationconnector (class in abacusai.application_connector)": [[16, "abacusai.application_connector.ApplicationConnector"]], "__repr__() (abacusai.application_connector.applicationconnector method)": [[16, "abacusai.application_connector.ApplicationConnector.__repr__"]], "abacusai.application_connector": [[16, "module-abacusai.application_connector"]], "delete() (abacusai.application_connector.applicationconnector method)": [[16, "abacusai.application_connector.ApplicationConnector.delete"]], "list_objects() (abacusai.application_connector.applicationconnector method)": [[16, "abacusai.application_connector.ApplicationConnector.list_objects"]], "rename() (abacusai.application_connector.applicationconnector method)": [[16, "abacusai.application_connector.ApplicationConnector.rename"]], "to_dict() (abacusai.application_connector.applicationconnector method)": [[16, "abacusai.application_connector.ApplicationConnector.to_dict"]], "verify() (abacusai.application_connector.applicationconnector method)": [[16, "abacusai.application_connector.ApplicationConnector.verify"]], "batchprediction (class in abacusai.batch_prediction)": [[17, "abacusai.batch_prediction.BatchPrediction"]], "__repr__() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.__repr__"]], "abacusai.batch_prediction": [[17, "module-abacusai.batch_prediction"]], "create_refresh_policy() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.create_refresh_policy"]], "delete() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.delete"]], "describe() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.describe"]], "describe_output_feature_group() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.describe_output_feature_group"]], "get_status() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.get_status"]], "list_refresh_policies() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.list_refresh_policies"]], "list_versions() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.list_versions"]], "refresh() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.refresh"]], "set_database_connector_output() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.set_database_connector_output"]], "set_dataset() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.set_dataset"]], "set_dataset_remap() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.set_dataset_remap"]], "set_feature_group() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.set_feature_group"]], "set_feature_group_output() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.set_feature_group_output"]], "set_file_connector_output() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.set_file_connector_output"]], "set_output_to_console() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.set_output_to_console"]], "start() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.start"]], "to_dict() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.to_dict"]], "update() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.update"]], "wait_for_drift_monitor() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.wait_for_drift_monitor"]], "wait_for_predictions() (abacusai.batch_prediction.batchprediction method)": [[17, "abacusai.batch_prediction.BatchPrediction.wait_for_predictions"]], "batchpredictionversion (class in abacusai.batch_prediction_version)": [[18, "abacusai.batch_prediction_version.BatchPredictionVersion"]], "__repr__() (abacusai.batch_prediction_version.batchpredictionversion method)": [[18, "abacusai.batch_prediction_version.BatchPredictionVersion.__repr__"]], "abacusai.batch_prediction_version": [[18, "module-abacusai.batch_prediction_version"]], "describe() (abacusai.batch_prediction_version.batchpredictionversion method)": [[18, "abacusai.batch_prediction_version.BatchPredictionVersion.describe"]], "download_batch_prediction_result_chunk() (abacusai.batch_prediction_version.batchpredictionversion method)": [[18, "abacusai.batch_prediction_version.BatchPredictionVersion.download_batch_prediction_result_chunk"]], "download_result_to_file() (abacusai.batch_prediction_version.batchpredictionversion method)": [[18, "abacusai.batch_prediction_version.BatchPredictionVersion.download_result_to_file"]], "get_batch_prediction_connector_errors() (abacusai.batch_prediction_version.batchpredictionversion method)": [[18, "abacusai.batch_prediction_version.BatchPredictionVersion.get_batch_prediction_connector_errors"]], "get_outliers_for_batch_prediction_feature() (abacusai.batch_prediction_version.batchpredictionversion method)": [[18, "abacusai.batch_prediction_version.BatchPredictionVersion.get_outliers_for_batch_prediction_feature"]], "get_status() (abacusai.batch_prediction_version.batchpredictionversion method)": [[18, "abacusai.batch_prediction_version.BatchPredictionVersion.get_status"]], "refresh() (abacusai.batch_prediction_version.batchpredictionversion method)": [[18, "abacusai.batch_prediction_version.BatchPredictionVersion.refresh"]], "to_dict() (abacusai.batch_prediction_version.batchpredictionversion method)": [[18, "abacusai.batch_prediction_version.BatchPredictionVersion.to_dict"]], "wait_for_drift_monitor() (abacusai.batch_prediction_version.batchpredictionversion method)": [[18, "abacusai.batch_prediction_version.BatchPredictionVersion.wait_for_drift_monitor"]], "wait_for_predictions() (abacusai.batch_prediction_version.batchpredictionversion method)": [[18, "abacusai.batch_prediction_version.BatchPredictionVersion.wait_for_predictions"]], "categoricalrangeviolation (class in abacusai.categorical_range_violation)": [[19, "abacusai.categorical_range_violation.CategoricalRangeViolation"]], "__repr__() (abacusai.categorical_range_violation.categoricalrangeviolation method)": [[19, "abacusai.categorical_range_violation.CategoricalRangeViolation.__repr__"]], "abacusai.categorical_range_violation": [[19, "module-abacusai.categorical_range_violation"]], "to_dict() (abacusai.categorical_range_violation.categoricalrangeviolation method)": [[19, "abacusai.categorical_range_violation.CategoricalRangeViolation.to_dict"]], "chatmessage (class in abacusai.chat_message)": [[20, "abacusai.chat_message.ChatMessage"]], "__repr__() (abacusai.chat_message.chatmessage method)": [[20, "abacusai.chat_message.ChatMessage.__repr__"]], "abacusai.chat_message": [[20, "module-abacusai.chat_message"]], "to_dict() (abacusai.chat_message.chatmessage method)": [[20, "abacusai.chat_message.ChatMessage.to_dict"]], "chatsession (class in abacusai.chat_session)": [[21, "abacusai.chat_session.ChatSession"]], "__repr__() (abacusai.chat_session.chatsession method)": [[21, "abacusai.chat_session.ChatSession.__repr__"]], "abacusai.chat_session": [[21, "module-abacusai.chat_session"]], "get() (abacusai.chat_session.chatsession method)": [[21, "abacusai.chat_session.ChatSession.get"]], "to_dict() (abacusai.chat_session.chatsession method)": [[21, "abacusai.chat_session.ChatSession.to_dict"]], "apiclient (class in abacusai.client)": [[22, "abacusai.client.ApiClient"]], "apiexception": [[22, "abacusai.client.ApiException"], [77, "abacusai.ApiException"]], "baseapiclient (class in abacusai.client)": [[22, "abacusai.client.BaseApiClient"]], "clientoptions (class in abacusai.client)": [[22, "abacusai.client.ClientOptions"]], "default_server (in module abacusai.client)": [[22, "abacusai.client.DEFAULT_SERVER"]], "readonlyclient (class in abacusai.client)": [[22, "abacusai.client.ReadOnlyClient"]], "__str__() (abacusai.client.apiexception method)": [[22, "abacusai.client.ApiException.__str__"]], "_build_class() (abacusai.client.baseapiclient method)": [[22, "abacusai.client.BaseApiClient._build_class"]], "_cached_endpoints (in module abacusai.client)": [[22, "abacusai.client._cached_endpoints"]], "_call_aiagent_asyncapp_sync_message() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient._call_aiagent_asyncapp_sync_message"]], "_call_api() (abacusai.client.baseapiclient method)": [[22, "abacusai.client.BaseApiClient._call_api"]], "_clean_api_objects() (abacusai.client.baseapiclient method)": [[22, "abacusai.client.BaseApiClient._clean_api_objects"]], "_discover_service_url() (in module abacusai.client)": [[22, "abacusai.client._discover_service_url"]], "_get_agent_async_app_caller() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient._get_agent_async_app_caller"]], "_get_agent_async_app_request_id() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient._get_agent_async_app_request_id"]], "_get_prediction_endpoint() (abacusai.client.baseapiclient method)": [[22, "abacusai.client.BaseApiClient._get_prediction_endpoint"]], "_get_streaming_endpoint() (abacusai.client.baseapiclient method)": [[22, "abacusai.client.BaseApiClient._get_streaming_endpoint"]], "_poll() (abacusai.client.baseapiclient method)": [[22, "abacusai.client.BaseApiClient._poll"]], "_request() (abacusai.client.baseapiclient method)": [[22, "abacusai.client.BaseApiClient._request"]], "_request_context (in module abacusai.client)": [[22, "abacusai.client._request_context"]], "_requests_retry_session() (in module abacusai.client)": [[22, "abacusai.client._requests_retry_session"]], "_stream_llm_call() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient._stream_llm_call"]], "_upload_from_pandas() (abacusai.client.baseapiclient method)": [[22, "abacusai.client.BaseApiClient._upload_from_pandas"]], "_upload_from_spark() (abacusai.client.baseapiclient method)": [[22, "abacusai.client.BaseApiClient._upload_from_spark"]], "_validate_pandas_df() (abacusai.client.baseapiclient method)": [[22, "abacusai.client.BaseApiClient._validate_pandas_df"]], "abacusai.client": [[22, "module-abacusai.client"]], "add_annotatable_feature() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.add_annotatable_feature"]], "add_annotation() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.add_annotation"]], "add_feature_group_annotation_label() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.add_feature_group_annotation_label"]], "add_feature_group_tag() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.add_feature_group_tag"]], "add_feature_group_to_project() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.add_feature_group_to_project"]], "add_feature_tag() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.add_feature_tag"]], "add_graph_to_dashboard() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.add_graph_to_dashboard"]], "add_multiple_user_item_interactions() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.add_multiple_user_item_interactions"]], "add_organization_group_permission() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.add_organization_group_permission"]], "add_organization_group_to_feature_group_modifiers() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.add_organization_group_to_feature_group_modifiers"]], "add_project_tags() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.add_project_tags"]], "add_user_item_interaction() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.add_user_item_interaction"]], "add_user_to_feature_group_modifiers() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.add_user_to_feature_group_modifiers"]], "add_user_to_organization() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.add_user_to_organization"]], "add_user_to_organization_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.add_user_to_organization_group"]], "append_data() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.append_data"]], "append_multiple_data() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.append_multiple_data"]], "attach_dataset_to_project() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.attach_dataset_to_project"]], "cancel_upload() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.cancel_upload"]], "check_constraints() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.check_constraints"]], "classify_image() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.classify_image"]], "classify_pdf() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.classify_pdf"]], "clear_agent_context() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.clear_agent_context"]], "client_version (abacusai.client.baseapiclient attribute)": [[22, "abacusai.client.BaseApiClient.client_version"]], "concatenate_feature_group_data() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.concatenate_feature_group_data"]], "create_agent() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_agent"]], "create_agent_from_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_agent_from_function"]], "create_algorithm() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_algorithm"]], "create_algorithm_from_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_algorithm_from_function"]], "create_batch_prediction() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_batch_prediction"]], "create_chat_session() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_chat_session"]], "create_custom_loss_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_custom_loss_function"]], "create_custom_loss_function_with_source_code() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_custom_loss_function_with_source_code"]], "create_custom_metric() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_custom_metric"]], "create_custom_metric_from_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_custom_metric_from_function"]], "create_dataset_from_application_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_dataset_from_application_connector"]], "create_dataset_from_database_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_dataset_from_database_connector"]], "create_dataset_from_file_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_dataset_from_file_connector"]], "create_dataset_from_pandas() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_dataset_from_pandas"]], "create_dataset_from_streaming_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_dataset_from_streaming_connector"]], "create_dataset_from_upload() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_dataset_from_upload"]], "create_dataset_version_from_application_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_dataset_version_from_application_connector"]], "create_dataset_version_from_database_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_dataset_version_from_database_connector"]], "create_dataset_version_from_file_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_dataset_version_from_file_connector"]], "create_dataset_version_from_pandas() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_dataset_version_from_pandas"]], "create_dataset_version_from_upload() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_dataset_version_from_upload"]], "create_deployment() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_deployment"]], "create_deployment_token() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_deployment_token"]], "create_deployment_webhook() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_deployment_webhook"]], "create_eda() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_eda"]], "create_feature() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_feature"]], "create_feature_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_feature_group"]], "create_feature_group_from_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_feature_group_from_function"]], "create_feature_group_from_pandas_df() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_feature_group_from_pandas_df"]], "create_feature_group_from_python_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_feature_group_from_python_function"]], "create_feature_group_from_spark_df() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_feature_group_from_spark_df"]], "create_feature_group_from_template() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_feature_group_from_template"]], "create_feature_group_template() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_feature_group_template"]], "create_feature_group_version() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_feature_group_version"]], "create_graph_dashboard() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_graph_dashboard"]], "create_merge_feature_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_merge_feature_group"]], "create_model_from_functions() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_model_from_functions"]], "create_model_from_python() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_model_from_python"]], "create_model_monitor() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_model_monitor"]], "create_module() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_module"]], "create_module_from_notebook() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_module_from_notebook"]], "create_monitor_alert() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_monitor_alert"]], "create_nested_feature() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_nested_feature"]], "create_nlp_drift_monitor() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_nlp_drift_monitor"]], "create_organization_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_organization_group"]], "create_pipeline() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_pipeline"]], "create_pipeline_step() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_pipeline_step"]], "create_pipeline_step_from_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_pipeline_step_from_function"]], "create_point_in_time_feature() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_point_in_time_feature"]], "create_point_in_time_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_point_in_time_group"]], "create_point_in_time_group_feature() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_point_in_time_group_feature"]], "create_project() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_project"]], "create_python_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_python_function"]], "create_refresh_policy() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_refresh_policy"]], "create_sampling_feature_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_sampling_feature_group"]], "create_snapshot_feature_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_snapshot_feature_group"]], "create_spark_df_from_feature_group_version() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_spark_df_from_feature_group_version"]], "create_streaming_dataset() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_streaming_dataset"]], "create_streaming_token() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_streaming_token"]], "create_train_test_data_split_feature_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_train_test_data_split_feature_group"]], "create_transform_feature_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_transform_feature_group"]], "create_vector_store() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_vector_store"]], "create_vector_store_version() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_vector_store_version"]], "create_vision_drift_monitor() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.create_vision_drift_monitor"]], "delete_algorithm() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_algorithm"]], "delete_api_key() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_api_key"]], "delete_application_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_application_connector"]], "delete_batch_prediction() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_batch_prediction"]], "delete_custom_loss_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_custom_loss_function"]], "delete_custom_metric() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_custom_metric"]], "delete_database_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_database_connector"]], "delete_dataset() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_dataset"]], "delete_deployment() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_deployment"]], "delete_deployment_token() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_deployment_token"]], "delete_eda() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_eda"]], "delete_eda_version() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_eda_version"]], "delete_feature() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_feature"]], "delete_feature_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_feature_group"]], "delete_feature_group_template() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_feature_group_template"]], "delete_file_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_file_connector"]], "delete_graph_dashboard() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_graph_dashboard"]], "delete_graph_from_dashboard() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.delete_graph_from_dashboard"]], "delete_item_embeddings() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_item_embeddings"]], "delete_model() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_model"]], "delete_model_monitor() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_model_monitor"]], "delete_model_monitor_version() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_model_monitor_version"]], "delete_model_version() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_model_version"]], "delete_module() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_module"]], "delete_monitor_alert() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_monitor_alert"]], "delete_nested_feature() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_nested_feature"]], "delete_organization_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_organization_group"]], "delete_pipeline() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_pipeline"]], "delete_pipeline_step() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_pipeline_step"]], "delete_point_in_time_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_point_in_time_group"]], "delete_project() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_project"]], "delete_python_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_python_function"]], "delete_refresh_policy() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_refresh_policy"]], "delete_streaming_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_streaming_connector"]], "delete_streaming_token() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_streaming_token"]], "delete_vector_store() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_vector_store"]], "delete_webhook() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.delete_webhook"]], "describe_algorithm() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_algorithm"]], "describe_annotation() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.describe_annotation"]], "describe_async_feature_group_operation() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.describe_async_feature_group_operation"]], "describe_batch_prediction() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_batch_prediction"]], "describe_batch_prediction_version() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_batch_prediction_version"]], "describe_custom_loss_function() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_custom_loss_function"]], "describe_custom_metric() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_custom_metric"]], "describe_custom_metric_version() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_custom_metric_version"]], "describe_dataset() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_dataset"]], "describe_dataset_version() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_dataset_version"]], "describe_deployment() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_deployment"]], "describe_eda() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_eda"]], "describe_eda_version() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_eda_version"]], "describe_feature_group() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_feature_group"]], "describe_feature_group_by_table_name() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_feature_group_by_table_name"]], "describe_feature_group_export() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_feature_group_export"]], "describe_feature_group_template() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_feature_group_template"]], "describe_feature_group_version() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_feature_group_version"]], "describe_graph_dashboard() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_graph_dashboard"]], "describe_graph_for_dashboard() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_graph_for_dashboard"]], "describe_image() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.describe_image"]], "describe_model() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_model"]], "describe_model_artifacts_export() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_model_artifacts_export"]], "describe_model_monitor() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_model_monitor"]], "describe_model_monitor_version() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_model_monitor_version"]], "describe_model_version() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_model_version"]], "describe_module() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_module"]], "describe_monitor_alert() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_monitor_alert"]], "describe_monitor_alert_version() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_monitor_alert_version"]], "describe_organization_group() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_organization_group"]], "describe_pipeline() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.describe_pipeline"]], "describe_pipeline_by_name() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.describe_pipeline_by_name"]], "describe_pipeline_step() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_pipeline_step"]], "describe_pipeline_step_by_name() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_pipeline_step_by_name"]], "describe_pipeline_version() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_pipeline_version"]], "describe_problem_type() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_problem_type"]], "describe_project() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_project"]], "describe_project_feature_group() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_project_feature_group"]], "describe_python_function() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_python_function"]], "describe_refresh_pipeline_run() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_refresh_pipeline_run"]], "describe_refresh_policy() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_refresh_policy"]], "describe_train_test_data_split_feature_group() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_train_test_data_split_feature_group"]], "describe_train_test_data_split_feature_group_version() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_train_test_data_split_feature_group_version"]], "describe_upload() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_upload"]], "describe_use_case_requirements() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_use_case_requirements"]], "describe_user() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_user"]], "describe_vector_store() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_vector_store"]], "describe_vector_store_by_name() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_vector_store_by_name"]], "describe_vector_store_version() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_vector_store_version"]], "describe_webhook() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.describe_webhook"]], "detach_feature_group_from_template() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.detach_feature_group_from_template"]], "download_batch_prediction_result_chunk() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.download_batch_prediction_result_chunk"]], "download_execute_feature_group_operation_result_part_chunk() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.download_execute_feature_group_operation_result_part_chunk"]], "evaluate_prompt() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.evaluate_prompt"]], "execute_agent() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.execute_agent"]], "execute_async_feature_group_operation() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.execute_async_feature_group_operation"]], "execute_feature_group_sql() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.execute_feature_group_sql"]], "export_custom_model_version() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.export_custom_model_version"]], "export_feature_group_version_to_console() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.export_feature_group_version_to_console"]], "export_feature_group_version_to_database_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.export_feature_group_version_to_database_connector"]], "export_feature_group_version_to_file_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.export_feature_group_version_to_file_connector"]], "export_model_artifact_as_feature_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.export_model_artifact_as_feature_group"]], "generate_image() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.generate_image"]], "generate_natural_language_explanation() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.generate_natural_language_explanation"]], "get_agent_context_chat_history() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_agent_context_chat_history"]], "get_alternative_assignments() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_alternative_assignments"]], "get_annotations_status() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_annotations_status"]], "get_anomalies() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_anomalies"]], "get_api_endpoint() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_api_endpoint"]], "get_assignments() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_assignments"]], "get_batch_prediction_connector_errors() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_batch_prediction_connector_errors"]], "get_chat_response() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_chat_response"]], "get_chat_session() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_chat_session"]], "get_classification() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_classification"]], "get_cluster() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_cluster"]], "get_collinearity_for_feature() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_collinearity_for_feature"]], "get_custom_train_function_info() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_custom_train_function_info"]], "get_database_connector_object_schema() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_database_connector_object_schema"]], "get_dataset_schema() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_dataset_schema"]], "get_docstore_document() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_docstore_document"]], "get_docstore_image() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_docstore_image"]], "get_document_to_annotate() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_document_to_annotate"]], "get_drift_for_feature() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_drift_for_feature"]], "get_eda_collinearity() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_eda_collinearity"]], "get_eda_data_consistency() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_eda_data_consistency"]], "get_eda_forecasting_analysis() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_eda_forecasting_analysis"]], "get_entailment() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_entailment"]], "get_entities_from_pdf() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_entities_from_pdf"]], "get_execute_feature_group_operation_result_part_count() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_execute_feature_group_operation_result_part_count"]], "get_feature_association() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_feature_association"]], "get_feature_group_export_connector_errors() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_feature_group_export_connector_errors"]], "get_feature_group_schema() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_feature_group_schema"]], "get_feature_group_version_export_download_url() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_feature_group_version_export_download_url"]], "get_feature_importance_by_model_version() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_feature_importance_by_model_version"]], "get_file_connector_instructions() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_file_connector_instructions"]], "get_forecast() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_forecast"]], "get_k_nearest() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_k_nearest"]], "get_labels() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_labels"]], "get_llm_parameters() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_llm_parameters"]], "get_materialization_logs() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_materialization_logs"]], "get_model_metrics() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_model_metrics"]], "get_model_monitor_chart_from_organization() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_model_monitor_chart_from_organization"]], "get_model_monitor_summary() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_model_monitor_summary"]], "get_model_monitor_summary_from_organization() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_model_monitor_summary_from_organization"]], "get_model_monitoring_logs() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_model_monitoring_logs"]], "get_model_training_types_for_deployment() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_model_training_types_for_deployment"]], "get_module_code_from_notebook() (in module abacusai.client)": [[22, "abacusai.client.get_module_code_from_notebook"]], "get_multiple_k_nearest() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_multiple_k_nearest"]], "get_natural_language_explanation() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_natural_language_explanation"]], "get_notebook_cell_completion() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_notebook_cell_completion"]], "get_objects_from_image() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_objects_from_image"]], "get_outliers_for_batch_prediction_feature() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_outliers_for_batch_prediction_feature"]], "get_outliers_for_feature() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_outliers_for_feature"]], "get_personalized_ranking() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_personalized_ranking"]], "get_prediction_drift() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_prediction_drift"]], "get_project_feature_group_config() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_project_feature_group_config"]], "get_ranked_items() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_ranked_items"]], "get_recent_feature_group_streamed_data() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_recent_feature_group_streamed_data"]], "get_recommendations() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_recommendations"]], "get_related_items() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_related_items"]], "get_schema() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_schema"]], "get_search_results() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_search_results"]], "get_sentiment() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_sentiment"]], "get_source_code_info() (in module abacusai.client)": [[22, "abacusai.client.get_source_code_info"]], "get_summary() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_summary"]], "get_train_function_input() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_train_function_input"]], "get_train_function_input_from_model_version() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_train_function_input_from_model_version"]], "get_training_config_options() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.get_training_config_options"]], "get_training_data_logs() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_training_data_logs"]], "get_training_logs() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.get_training_logs"]], "import_annotation_labels() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.import_annotation_labels"]], "import_module() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.import_module"]], "include_modules() (in module abacusai.client)": [[22, "abacusai.client.include_modules"]], "invalidate_streaming_feature_group_data() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.invalidate_streaming_feature_group_data"]], "is_anomaly() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.is_anomaly"]], "list_algorithms() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_algorithms"]], "list_api_keys() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_api_keys"]], "list_application_connector_objects() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_application_connector_objects"]], "list_application_connectors() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_application_connectors"]], "list_batch_prediction_versions() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_batch_prediction_versions"]], "list_batch_predictions() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_batch_predictions"]], "list_builtin_algorithms() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.list_builtin_algorithms"]], "list_chat_sessions() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_chat_sessions"]], "list_custom_loss_functions() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_custom_loss_functions"]], "list_custom_metrics() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_custom_metrics"]], "list_database_connector_objects() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_database_connector_objects"]], "list_database_connectors() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_database_connectors"]], "list_dataset_versions() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_dataset_versions"]], "list_datasets() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_datasets"]], "list_deployment_tokens() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_deployment_tokens"]], "list_deployment_webhooks() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_deployment_webhooks"]], "list_deployments() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_deployments"]], "list_eda() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_eda"]], "list_eda_versions() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_eda_versions"]], "list_feature_group_exports() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_feature_group_exports"]], "list_feature_group_modifiers() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_feature_group_modifiers"]], "list_feature_group_templates() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_feature_group_templates"]], "list_feature_group_versions() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_feature_group_versions"]], "list_feature_groups() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_feature_groups"]], "list_file_connectors() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_file_connectors"]], "list_graph_dashboards() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_graph_dashboards"]], "list_model_artifacts_exports() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_model_artifacts_exports"]], "list_model_monitor_versions() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_model_monitor_versions"]], "list_model_monitors() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_model_monitors"]], "list_model_versions() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_model_versions"]], "list_models() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_models"]], "list_modules() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_modules"]], "list_monitor_alert_versions_for_monitor_version() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_monitor_alert_versions_for_monitor_version"]], "list_monitor_alerts_for_monitor() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_monitor_alerts_for_monitor"]], "list_organization_groups() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_organization_groups"]], "list_organization_model_monitors() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_organization_model_monitors"]], "list_organization_users() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_organization_users"]], "list_pipeline_versions() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.list_pipeline_versions"]], "list_pipelines() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_pipelines"]], "list_project_datasets() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_project_datasets"]], "list_project_feature_group_templates() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_project_feature_group_templates"]], "list_project_feature_groups() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_project_feature_groups"]], "list_projects() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_projects"]], "list_python_function_feature_groups() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_python_function_feature_groups"]], "list_python_functions() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_python_functions"]], "list_refresh_pipeline_runs() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_refresh_pipeline_runs"]], "list_refresh_policies() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_refresh_policies"]], "list_streaming_connectors() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_streaming_connectors"]], "list_streaming_tokens() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_streaming_tokens"]], "list_uploads() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_uploads"]], "list_use_cases() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_use_cases"]], "list_vector_store_versions() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_vector_store_versions"]], "list_vector_stores() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.list_vector_stores"]], "lookup_features() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.lookup_features"]], "lookup_vector_store() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.lookup_vector_store"]], "mark_upload_complete() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.mark_upload_complete"]], "model_monitor_version_metric_data() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.model_monitor_version_metric_data"]], "pause_pipeline_refresh_schedule() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.pause_pipeline_refresh_schedule"]], "pause_refresh_policy() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.pause_refresh_policy"]], "predict() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.predict"]], "predict_churn() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.predict_churn"]], "predict_class() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.predict_class"]], "predict_fraud() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.predict_fraud"]], "predict_from_datasets() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.predict_from_datasets"]], "predict_language() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.predict_language"]], "predict_lead() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.predict_lead"]], "predict_multiple() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.predict_multiple"]], "predict_takeover() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.predict_takeover"]], "predict_target() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.predict_target"]], "predict_with_binary_data() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.predict_with_binary_data"]], "preview_feature_group_template_resolution() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.preview_feature_group_template_resolution"]], "query_feature_group_code_generator() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.query_feature_group_code_generator"]], "remove_column_mapping() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.remove_column_mapping"]], "remove_concatenation_config() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.remove_concatenation_config"]], "remove_dataset_from_project() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.remove_dataset_from_project"]], "remove_deployment_feature_group_export_output() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.remove_deployment_feature_group_export_output"]], "remove_feature_group_annotation_label() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.remove_feature_group_annotation_label"]], "remove_feature_group_from_project() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.remove_feature_group_from_project"]], "remove_feature_group_tag() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.remove_feature_group_tag"]], "remove_feature_tag() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.remove_feature_tag"]], "remove_organization_group_from_feature_group_modifiers() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.remove_organization_group_from_feature_group_modifiers"]], "remove_organization_group_permission() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.remove_organization_group_permission"]], "remove_project_tags() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.remove_project_tags"]], "remove_user_from_feature_group_modifiers() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.remove_user_from_feature_group_modifiers"]], "remove_user_from_organization() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.remove_user_from_organization"]], "remove_user_from_organization_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.remove_user_from_organization_group"]], "rename_application_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.rename_application_connector"]], "rename_database_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.rename_database_connector"]], "rename_deployment() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.rename_deployment"]], "rename_eda() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.rename_eda"]], "rename_model() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.rename_model"]], "rename_model_monitor() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.rename_model_monitor"]], "rename_project() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.rename_project"]], "rename_streaming_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.rename_streaming_connector"]], "render_feature_group_data_for_llm() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.render_feature_group_data_for_llm"]], "render_feature_groups_for_llm() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.render_feature_groups_for_llm"]], "rerun_eda() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.rerun_eda"]], "rerun_model_monitor() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.rerun_model_monitor"]], "resume_pipeline_refresh_schedule() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.resume_pipeline_refresh_schedule"]], "resume_refresh_policy() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.resume_refresh_policy"]], "retrain_model() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.retrain_model"]], "run_monitor_alert() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.run_monitor_alert"]], "run_pipeline() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.run_pipeline"]], "run_refresh_policy() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.run_refresh_policy"]], "score_image() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.score_image"]], "search_feature_groups() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.search_feature_groups"]], "set_agent_context_chat_history() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_agent_context_chat_history"]], "set_annotation_status_feature() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_annotation_status_feature"]], "set_auto_deployment() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_auto_deployment"]], "set_azure_blob_connection_string() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_azure_blob_connection_string"]], "set_batch_prediction_database_connector_output() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_batch_prediction_database_connector_output"]], "set_batch_prediction_dataset() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_batch_prediction_dataset"]], "set_batch_prediction_dataset_remap() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_batch_prediction_dataset_remap"]], "set_batch_prediction_feature_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_batch_prediction_feature_group"]], "set_batch_prediction_feature_group_output() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_batch_prediction_feature_group_output"]], "set_batch_prediction_file_connector_output() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_batch_prediction_file_connector_output"]], "set_batch_prediction_output_to_console() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_batch_prediction_output_to_console"]], "set_column_data_type() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_column_data_type"]], "set_column_mapping() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_column_mapping"]], "set_dataset_column_data_type() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_dataset_column_data_type"]], "set_dataset_database_connector_config() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.set_dataset_database_connector_config"]], "set_default_model_algorithm() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.set_default_model_algorithm"]], "set_default_organization_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_default_organization_group"]], "set_deployment_feature_group_export_database_connector_output() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_deployment_feature_group_export_database_connector_output"]], "set_deployment_feature_group_export_file_connector_output() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_deployment_feature_group_export_file_connector_output"]], "set_deployment_feature_group_version() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_deployment_feature_group_version"]], "set_deployment_model_version() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_deployment_model_version"]], "set_feature_as_annotatable_feature() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_feature_as_annotatable_feature"]], "set_feature_group_indexing_config() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_feature_group_indexing_config"]], "set_feature_group_merge_config() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_feature_group_merge_config"]], "set_feature_group_modifier_lock() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_feature_group_modifier_lock"]], "set_feature_group_sampling_config() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_feature_group_sampling_config"]], "set_feature_group_schema() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_feature_group_schema"]], "set_feature_group_transform_config() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_feature_group_transform_config"]], "set_feature_group_type() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_feature_group_type"]], "set_feature_mapping() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_feature_mapping"]], "set_feature_type() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_feature_type"]], "set_model_objective() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.set_model_objective"]], "set_model_prediction_params() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_model_prediction_params"]], "set_model_training_config() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_model_training_config"]], "set_natural_language_explanation() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_natural_language_explanation"]], "set_project_feature_group_config() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_project_feature_group_config"]], "set_streaming_retention_policy() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.set_streaming_retention_policy"]], "snapshot_streaming_data() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.snapshot_streaming_data"]], "start_batch_prediction() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.start_batch_prediction"]], "start_deployment() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.start_deployment"]], "stop_deployment() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.stop_deployment"]], "stream_message() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.stream_message"]], "streaming_evaluate_prompt() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.streaming_evaluate_prompt"]], "suggest_feature_group_template_for_feature_group() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.suggest_feature_group_template_for_feature_group"]], "train_model() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.train_model"]], "transcribe_audio() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.transcribe_audio"]], "transfer_style() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.transfer_style"]], "unset_feature_as_annotatable_feature() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.unset_feature_as_annotatable_feature"]], "unset_pipeline_refresh_schedule() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.unset_pipeline_refresh_schedule"]], "update_agent() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_agent"]], "update_agent_with_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_agent_with_function"]], "update_algorithm() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_algorithm"]], "update_algorithm_from_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_algorithm_from_function"]], "update_annotation_status() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_annotation_status"]], "update_batch_prediction() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_batch_prediction"]], "update_custom_loss_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_custom_loss_function"]], "update_custom_loss_function_with_source_code() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_custom_loss_function_with_source_code"]], "update_custom_metric() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_custom_metric"]], "update_custom_metric_from_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_custom_metric_from_function"]], "update_dataset_feature_group_feature_expression() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_dataset_feature_group_feature_expression"]], "update_deployment() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_deployment"]], "update_feature() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_feature"]], "update_feature_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_feature_group"]], "update_feature_group_from_pandas_df() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_feature_group_from_pandas_df"]], "update_feature_group_from_spark_df() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_feature_group_from_spark_df"]], "update_feature_group_function_definition() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_feature_group_function_definition"]], "update_feature_group_git() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_feature_group_git"]], "update_feature_group_python_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_feature_group_python_function"]], "update_feature_group_python_function_bindings() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_feature_group_python_function_bindings"]], "update_feature_group_sql_definition() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_feature_group_sql_definition"]], "update_feature_group_template() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_feature_group_template"]], "update_feature_group_template_bindings() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_feature_group_template_bindings"]], "update_feature_group_zip() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_feature_group_zip"]], "update_graph_dashboard() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_graph_dashboard"]], "update_graph_to_dashboard() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_graph_to_dashboard"]], "update_module() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_module"]], "update_module_from_notebook() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_module_from_notebook"]], "update_monitor_alert() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_monitor_alert"]], "update_nested_feature() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_nested_feature"]], "update_pipeline() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_pipeline"]], "update_pipeline_step() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_pipeline_step"]], "update_pipeline_step_from_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_pipeline_step_from_function"]], "update_point_in_time_feature() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_point_in_time_feature"]], "update_point_in_time_group() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_point_in_time_group"]], "update_point_in_time_group_feature() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_point_in_time_group_feature"]], "update_python_function() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_python_function"]], "update_python_function_code() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_python_function_code"]], "update_python_model() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_python_model"]], "update_python_model_git() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_python_model_git"]], "update_python_model_zip() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_python_model_zip"]], "update_refresh_policy() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_refresh_policy"]], "update_vector_store() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_vector_store"]], "update_webhook() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.update_webhook"]], "upload_part() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.upload_part"]], "upsert_data() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.upsert_data"]], "upsert_item_attributes() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.upsert_item_attributes"]], "upsert_item_embeddings() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.upsert_item_embeddings"]], "upsert_multiple_data() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.upsert_multiple_data"]], "upsert_multiple_item_attributes() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.upsert_multiple_item_attributes"]], "upsert_multiple_item_embeddings() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.upsert_multiple_item_embeddings"]], "upsert_multiple_user_attributes() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.upsert_multiple_user_attributes"]], "upsert_user_attributes() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.upsert_user_attributes"]], "use_feature_group_for_training() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.use_feature_group_for_training"]], "validate_project() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.validate_project"]], "verify_and_describe_annotation() (abacusai.client.readonlyclient method)": [[22, "abacusai.client.ReadOnlyClient.verify_and_describe_annotation"]], "verify_application_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.verify_application_connector"]], "verify_database_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.verify_database_connector"]], "verify_file_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.verify_file_connector"]], "verify_streaming_connector() (abacusai.client.apiclient method)": [[22, "abacusai.client.ApiClient.verify_streaming_connector"]], "codesource (class in abacusai.code_source)": [[23, "abacusai.code_source.CodeSource"]], "__repr__() (abacusai.code_source.codesource method)": [[23, "abacusai.code_source.CodeSource.__repr__"]], "abacusai.code_source": [[23, "module-abacusai.code_source"]], "to_dict() (abacusai.code_source.codesource method)": [[23, "abacusai.code_source.CodeSource.to_dict"]], "concatenationconfig (class in abacusai.concatenation_config)": [[24, "abacusai.concatenation_config.ConcatenationConfig"]], "__repr__() (abacusai.concatenation_config.concatenationconfig method)": [[24, "abacusai.concatenation_config.ConcatenationConfig.__repr__"]], "abacusai.concatenation_config": [[24, "module-abacusai.concatenation_config"]], "to_dict() (abacusai.concatenation_config.concatenationconfig method)": [[24, "abacusai.concatenation_config.ConcatenationConfig.to_dict"]], "abacusai.cryptography": [[25, "module-abacusai.cryptography"]], "get_public_key() (in module abacusai.cryptography)": [[25, "abacusai.cryptography.get_public_key"]], "verify_response() (in module abacusai.cryptography)": [[25, "abacusai.cryptography.verify_response"]], "customlossfunction (class in abacusai.custom_loss_function)": [[26, "abacusai.custom_loss_function.CustomLossFunction"]], "__repr__() (abacusai.custom_loss_function.customlossfunction method)": [[26, "abacusai.custom_loss_function.CustomLossFunction.__repr__"]], "abacusai.custom_loss_function": [[26, "module-abacusai.custom_loss_function"]], "to_dict() (abacusai.custom_loss_function.customlossfunction method)": [[26, "abacusai.custom_loss_function.CustomLossFunction.to_dict"]], "custommetric (class in abacusai.custom_metric)": [[27, "abacusai.custom_metric.CustomMetric"]], "__repr__() (abacusai.custom_metric.custommetric method)": [[27, "abacusai.custom_metric.CustomMetric.__repr__"]], "abacusai.custom_metric": [[27, "module-abacusai.custom_metric"]], "to_dict() (abacusai.custom_metric.custommetric method)": [[27, "abacusai.custom_metric.CustomMetric.to_dict"]], "custommetricversion (class in abacusai.custom_metric_version)": [[28, "abacusai.custom_metric_version.CustomMetricVersion"]], "__repr__() (abacusai.custom_metric_version.custommetricversion method)": [[28, "abacusai.custom_metric_version.CustomMetricVersion.__repr__"]], "abacusai.custom_metric_version": [[28, "module-abacusai.custom_metric_version"]], "describe() (abacusai.custom_metric_version.custommetricversion method)": [[28, "abacusai.custom_metric_version.CustomMetricVersion.describe"]], "refresh() (abacusai.custom_metric_version.custommetricversion method)": [[28, "abacusai.custom_metric_version.CustomMetricVersion.refresh"]], "to_dict() (abacusai.custom_metric_version.custommetricversion method)": [[28, "abacusai.custom_metric_version.CustomMetricVersion.to_dict"]], "customtrainfunctioninfo (class in abacusai.custom_train_function_info)": [[29, "abacusai.custom_train_function_info.CustomTrainFunctionInfo"]], "__repr__() (abacusai.custom_train_function_info.customtrainfunctioninfo method)": [[29, "abacusai.custom_train_function_info.CustomTrainFunctionInfo.__repr__"]], "abacusai.custom_train_function_info": [[29, "module-abacusai.custom_train_function_info"]], "to_dict() (abacusai.custom_train_function_info.customtrainfunctioninfo method)": [[29, "abacusai.custom_train_function_info.CustomTrainFunctionInfo.to_dict"]], "dataconsistencyduplication (class in abacusai.data_consistency_duplication)": [[30, "abacusai.data_consistency_duplication.DataConsistencyDuplication"]], "__repr__() (abacusai.data_consistency_duplication.dataconsistencyduplication method)": [[30, "abacusai.data_consistency_duplication.DataConsistencyDuplication.__repr__"]], "abacusai.data_consistency_duplication": [[30, "module-abacusai.data_consistency_duplication"]], "to_dict() (abacusai.data_consistency_duplication.dataconsistencyduplication method)": [[30, "abacusai.data_consistency_duplication.DataConsistencyDuplication.to_dict"]], "datapreplogs (class in abacusai.data_prep_logs)": [[31, "abacusai.data_prep_logs.DataPrepLogs"]], "__repr__() (abacusai.data_prep_logs.datapreplogs method)": [[31, "abacusai.data_prep_logs.DataPrepLogs.__repr__"]], "abacusai.data_prep_logs": [[31, "module-abacusai.data_prep_logs"]], "to_dict() (abacusai.data_prep_logs.datapreplogs method)": [[31, "abacusai.data_prep_logs.DataPrepLogs.to_dict"]], "dataqualityresults (class in abacusai.data_quality_results)": [[32, "abacusai.data_quality_results.DataQualityResults"]], "__repr__() (abacusai.data_quality_results.dataqualityresults method)": [[32, "abacusai.data_quality_results.DataQualityResults.__repr__"]], "abacusai.data_quality_results": [[32, "module-abacusai.data_quality_results"]], "to_dict() (abacusai.data_quality_results.dataqualityresults method)": [[32, "abacusai.data_quality_results.DataQualityResults.to_dict"]], "databaseconnector (class in abacusai.database_connector)": [[33, "abacusai.database_connector.DatabaseConnector"]], "__repr__() (abacusai.database_connector.databaseconnector method)": [[33, "abacusai.database_connector.DatabaseConnector.__repr__"]], "abacusai.database_connector": [[33, "module-abacusai.database_connector"]], "delete() (abacusai.database_connector.databaseconnector method)": [[33, "abacusai.database_connector.DatabaseConnector.delete"]], "get_object_schema() (abacusai.database_connector.databaseconnector method)": [[33, "abacusai.database_connector.DatabaseConnector.get_object_schema"]], "list_objects() (abacusai.database_connector.databaseconnector method)": [[33, "abacusai.database_connector.DatabaseConnector.list_objects"]], "rename() (abacusai.database_connector.databaseconnector method)": [[33, "abacusai.database_connector.DatabaseConnector.rename"]], "to_dict() (abacusai.database_connector.databaseconnector method)": [[33, "abacusai.database_connector.DatabaseConnector.to_dict"]], "verify() (abacusai.database_connector.databaseconnector method)": [[33, "abacusai.database_connector.DatabaseConnector.verify"]], "dataset (class in abacusai.dataset)": [[34, "abacusai.dataset.Dataset"]], "__repr__() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.__repr__"]], "abacusai.dataset": [[34, "module-abacusai.dataset"]], "attach_to_project() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.attach_to_project"]], "create_refresh_policy() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.create_refresh_policy"]], "create_version_from_application_connector() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.create_version_from_application_connector"]], "create_version_from_database_connector() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.create_version_from_database_connector"]], "create_version_from_file_connector() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.create_version_from_file_connector"]], "create_version_from_upload() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.create_version_from_upload"]], "delete() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.delete"]], "describe() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.describe"]], "describe_feature_group() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.describe_feature_group"]], "get_schema() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.get_schema"]], "get_status() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.get_status"]], "list_refresh_policies() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.list_refresh_policies"]], "list_versions() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.list_versions"]], "refresh() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.refresh"]], "remove_from_project() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.remove_from_project"]], "set_column_data_type() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.set_column_data_type"]], "set_database_connector_config() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.set_database_connector_config"]], "set_streaming_retention_policy() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.set_streaming_retention_policy"]], "snapshot_streaming_data() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.snapshot_streaming_data"]], "to_dict() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.to_dict"]], "wait_for_import() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.wait_for_import"]], "wait_for_inspection() (abacusai.dataset.dataset method)": [[34, "abacusai.dataset.Dataset.wait_for_inspection"]], "datasetcolumn (class in abacusai.dataset_column)": [[35, "abacusai.dataset_column.DatasetColumn"]], "__repr__() (abacusai.dataset_column.datasetcolumn method)": [[35, "abacusai.dataset_column.DatasetColumn.__repr__"]], "abacusai.dataset_column": [[35, "module-abacusai.dataset_column"]], "to_dict() (abacusai.dataset_column.datasetcolumn method)": [[35, "abacusai.dataset_column.DatasetColumn.to_dict"]], "datasetversion (class in abacusai.dataset_version)": [[36, "abacusai.dataset_version.DatasetVersion"]], "__repr__() (abacusai.dataset_version.datasetversion method)": [[36, "abacusai.dataset_version.DatasetVersion.__repr__"]], "abacusai.dataset_version": [[36, "module-abacusai.dataset_version"]], "describe() (abacusai.dataset_version.datasetversion method)": [[36, "abacusai.dataset_version.DatasetVersion.describe"]], "get_status() (abacusai.dataset_version.datasetversion method)": [[36, "abacusai.dataset_version.DatasetVersion.get_status"]], "refresh() (abacusai.dataset_version.datasetversion method)": [[36, "abacusai.dataset_version.DatasetVersion.refresh"]], "to_dict() (abacusai.dataset_version.datasetversion method)": [[36, "abacusai.dataset_version.DatasetVersion.to_dict"]], "wait_for_import() (abacusai.dataset_version.datasetversion method)": [[36, "abacusai.dataset_version.DatasetVersion.wait_for_import"]], "wait_for_inspection() (abacusai.dataset_version.datasetversion method)": [[36, "abacusai.dataset_version.DatasetVersion.wait_for_inspection"]], "deployment (class in abacusai.deployment)": [[37, "abacusai.deployment.Deployment"]], "__repr__() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.__repr__"]], "abacusai.deployment": [[37, "module-abacusai.deployment"]], "create_batch_prediction() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.create_batch_prediction"]], "create_refresh_policy() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.create_refresh_policy"]], "create_webhook() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.create_webhook"]], "delete() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.delete"]], "describe() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.describe"]], "get_status() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.get_status"]], "list_refresh_policies() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.list_refresh_policies"]], "list_webhooks() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.list_webhooks"]], "refresh() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.refresh"]], "remove_feature_group_export_output() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.remove_feature_group_export_output"]], "rename() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.rename"]], "set_auto() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.set_auto"]], "set_feature_group_export_database_connector_output() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.set_feature_group_export_database_connector_output"]], "set_feature_group_export_file_connector_output() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.set_feature_group_export_file_connector_output"]], "set_feature_group_version() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.set_feature_group_version"]], "set_model_version() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.set_model_version"]], "start() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.start"]], "stop() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.stop"]], "to_dict() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.to_dict"]], "update() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.update"]], "wait_for_deployment() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.wait_for_deployment"]], "wait_for_pending_deployment_update() (abacusai.deployment.deployment method)": [[37, "abacusai.deployment.Deployment.wait_for_pending_deployment_update"]], "deploymentauthtoken (class in abacusai.deployment_auth_token)": [[38, "abacusai.deployment_auth_token.DeploymentAuthToken"]], "__repr__() (abacusai.deployment_auth_token.deploymentauthtoken method)": [[38, "abacusai.deployment_auth_token.DeploymentAuthToken.__repr__"]], "abacusai.deployment_auth_token": [[38, "module-abacusai.deployment_auth_token"]], "to_dict() (abacusai.deployment_auth_token.deploymentauthtoken method)": [[38, "abacusai.deployment_auth_token.DeploymentAuthToken.to_dict"]], "document (class in abacusai.document)": [[39, "abacusai.document.Document"]], "__repr__() (abacusai.document.document method)": [[39, "abacusai.document.Document.__repr__"]], "abacusai.document": [[39, "module-abacusai.document"]], "to_dict() (abacusai.document.document method)": [[39, "abacusai.document.Document.to_dict"]], "documentannotation (class in abacusai.document_annotation)": [[40, "abacusai.document_annotation.DocumentAnnotation"]], "__repr__() (abacusai.document_annotation.documentannotation method)": [[40, "abacusai.document_annotation.DocumentAnnotation.__repr__"]], "abacusai.document_annotation": [[40, "module-abacusai.document_annotation"]], "to_dict() (abacusai.document_annotation.documentannotation method)": [[40, "abacusai.document_annotation.DocumentAnnotation.to_dict"]], "documentstore (class in abacusai.document_store)": [[41, "abacusai.document_store.DocumentStore"]], "__repr__() (abacusai.document_store.documentstore method)": [[41, "abacusai.document_store.DocumentStore.__repr__"]], "abacusai.document_store": [[41, "module-abacusai.document_store"]], "to_dict() (abacusai.document_store.documentstore method)": [[41, "abacusai.document_store.DocumentStore.to_dict"]], "documentstoreimport (class in abacusai.document_store_import)": [[42, "abacusai.document_store_import.DocumentStoreImport"]], "__repr__() (abacusai.document_store_import.documentstoreimport method)": [[42, "abacusai.document_store_import.DocumentStoreImport.__repr__"]], "abacusai.document_store_import": [[42, "module-abacusai.document_store_import"]], "to_dict() (abacusai.document_store_import.documentstoreimport method)": [[42, "abacusai.document_store_import.DocumentStoreImport.to_dict"]], "driftdistribution (class in abacusai.drift_distribution)": [[43, "abacusai.drift_distribution.DriftDistribution"]], "__repr__() (abacusai.drift_distribution.driftdistribution method)": [[43, "abacusai.drift_distribution.DriftDistribution.__repr__"]], "abacusai.drift_distribution": [[43, "module-abacusai.drift_distribution"]], "to_dict() (abacusai.drift_distribution.driftdistribution method)": [[43, "abacusai.drift_distribution.DriftDistribution.to_dict"]], "driftdistributions (class in abacusai.drift_distributions)": [[44, "abacusai.drift_distributions.DriftDistributions"]], "__repr__() (abacusai.drift_distributions.driftdistributions method)": [[44, "abacusai.drift_distributions.DriftDistributions.__repr__"]], "abacusai.drift_distributions": [[44, "module-abacusai.drift_distributions"]], "to_dict() (abacusai.drift_distributions.driftdistributions method)": [[44, "abacusai.drift_distributions.DriftDistributions.to_dict"]], "eda (class in abacusai.eda)": [[45, "abacusai.eda.Eda"]], "__repr__() (abacusai.eda.eda method)": [[45, "abacusai.eda.Eda.__repr__"]], "abacusai.eda": [[45, "module-abacusai.eda"]], "delete() (abacusai.eda.eda method)": [[45, "abacusai.eda.Eda.delete"]], "describe() (abacusai.eda.eda method)": [[45, "abacusai.eda.Eda.describe"]], "list_versions() (abacusai.eda.eda method)": [[45, "abacusai.eda.Eda.list_versions"]], "refresh() (abacusai.eda.eda method)": [[45, "abacusai.eda.Eda.refresh"]], "rename() (abacusai.eda.eda method)": [[45, "abacusai.eda.Eda.rename"]], "rerun() (abacusai.eda.eda method)": [[45, "abacusai.eda.Eda.rerun"]], "to_dict() (abacusai.eda.eda method)": [[45, "abacusai.eda.Eda.to_dict"]], "edachartdescription (class in abacusai.eda_chart_description)": [[46, "abacusai.eda_chart_description.EdaChartDescription"]], "__repr__() (abacusai.eda_chart_description.edachartdescription method)": [[46, "abacusai.eda_chart_description.EdaChartDescription.__repr__"]], "abacusai.eda_chart_description": [[46, "module-abacusai.eda_chart_description"]], "to_dict() (abacusai.eda_chart_description.edachartdescription method)": [[46, "abacusai.eda_chart_description.EdaChartDescription.to_dict"]], "edacollinearity (class in abacusai.eda_collinearity)": [[47, "abacusai.eda_collinearity.EdaCollinearity"]], "__repr__() (abacusai.eda_collinearity.edacollinearity method)": [[47, "abacusai.eda_collinearity.EdaCollinearity.__repr__"]], "abacusai.eda_collinearity": [[47, "module-abacusai.eda_collinearity"]], "to_dict() (abacusai.eda_collinearity.edacollinearity method)": [[47, "abacusai.eda_collinearity.EdaCollinearity.to_dict"]], "edadataconsistency (class in abacusai.eda_data_consistency)": [[48, "abacusai.eda_data_consistency.EdaDataConsistency"]], "__repr__() (abacusai.eda_data_consistency.edadataconsistency method)": [[48, "abacusai.eda_data_consistency.EdaDataConsistency.__repr__"]], "abacusai.eda_data_consistency": [[48, "module-abacusai.eda_data_consistency"]], "to_dict() (abacusai.eda_data_consistency.edadataconsistency method)": [[48, "abacusai.eda_data_consistency.EdaDataConsistency.to_dict"]], "edafeatureassociation (class in abacusai.eda_feature_association)": [[49, "abacusai.eda_feature_association.EdaFeatureAssociation"]], "__repr__() (abacusai.eda_feature_association.edafeatureassociation method)": [[49, "abacusai.eda_feature_association.EdaFeatureAssociation.__repr__"]], "abacusai.eda_feature_association": [[49, "module-abacusai.eda_feature_association"]], "to_dict() (abacusai.eda_feature_association.edafeatureassociation method)": [[49, "abacusai.eda_feature_association.EdaFeatureAssociation.to_dict"]], "edafeaturecollinearity (class in abacusai.eda_feature_collinearity)": [[50, "abacusai.eda_feature_collinearity.EdaFeatureCollinearity"]], "__repr__() (abacusai.eda_feature_collinearity.edafeaturecollinearity method)": [[50, "abacusai.eda_feature_collinearity.EdaFeatureCollinearity.__repr__"]], "abacusai.eda_feature_collinearity": [[50, "module-abacusai.eda_feature_collinearity"]], "to_dict() (abacusai.eda_feature_collinearity.edafeaturecollinearity method)": [[50, "abacusai.eda_feature_collinearity.EdaFeatureCollinearity.to_dict"]], "edaforecastinganalysis (class in abacusai.eda_forecasting_analysis)": [[51, "abacusai.eda_forecasting_analysis.EdaForecastingAnalysis"]], "__repr__() (abacusai.eda_forecasting_analysis.edaforecastinganalysis method)": [[51, "abacusai.eda_forecasting_analysis.EdaForecastingAnalysis.__repr__"]], "abacusai.eda_forecasting_analysis": [[51, "module-abacusai.eda_forecasting_analysis"]], "to_dict() (abacusai.eda_forecasting_analysis.edaforecastinganalysis method)": [[51, "abacusai.eda_forecasting_analysis.EdaForecastingAnalysis.to_dict"]], "edaversion (class in abacusai.eda_version)": [[52, "abacusai.eda_version.EdaVersion"]], "__repr__() (abacusai.eda_version.edaversion method)": [[52, "abacusai.eda_version.EdaVersion.__repr__"]], "abacusai.eda_version": [[52, "module-abacusai.eda_version"]], "delete() (abacusai.eda_version.edaversion method)": [[52, "abacusai.eda_version.EdaVersion.delete"]], "describe() (abacusai.eda_version.edaversion method)": [[52, "abacusai.eda_version.EdaVersion.describe"]], "get_collinearity_for_feature() (abacusai.eda_version.edaversion method)": [[52, "abacusai.eda_version.EdaVersion.get_collinearity_for_feature"]], "get_eda_collinearity() (abacusai.eda_version.edaversion method)": [[52, "abacusai.eda_version.EdaVersion.get_eda_collinearity"]], "get_eda_data_consistency() (abacusai.eda_version.edaversion method)": [[52, "abacusai.eda_version.EdaVersion.get_eda_data_consistency"]], "get_eda_forecasting_analysis() (abacusai.eda_version.edaversion method)": [[52, "abacusai.eda_version.EdaVersion.get_eda_forecasting_analysis"]], "get_feature_association() (abacusai.eda_version.edaversion method)": [[52, "abacusai.eda_version.EdaVersion.get_feature_association"]], "get_status() (abacusai.eda_version.edaversion method)": [[52, "abacusai.eda_version.EdaVersion.get_status"]], "refresh() (abacusai.eda_version.edaversion method)": [[52, "abacusai.eda_version.EdaVersion.refresh"]], "to_dict() (abacusai.eda_version.edaversion method)": [[52, "abacusai.eda_version.EdaVersion.to_dict"]], "wait_for_eda() (abacusai.eda_version.edaversion method)": [[52, "abacusai.eda_version.EdaVersion.wait_for_eda"]], "embeddingfeaturedriftdistribution (class in abacusai.embedding_feature_drift_distribution)": [[53, "abacusai.embedding_feature_drift_distribution.EmbeddingFeatureDriftDistribution"]], "__repr__() (abacusai.embedding_feature_drift_distribution.embeddingfeaturedriftdistribution method)": [[53, "abacusai.embedding_feature_drift_distribution.EmbeddingFeatureDriftDistribution.__repr__"]], "abacusai.embedding_feature_drift_distribution": [[53, "module-abacusai.embedding_feature_drift_distribution"]], "to_dict() (abacusai.embedding_feature_drift_distribution.embeddingfeaturedriftdistribution method)": [[53, "abacusai.embedding_feature_drift_distribution.EmbeddingFeatureDriftDistribution.to_dict"]], "executefeaturegroupoperation (class in abacusai.execute_feature_group_operation)": [[54, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation"]], "__repr__() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[54, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.__repr__"]], "_download_avro_file() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[54, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation._download_avro_file"]], "abacusai.execute_feature_group_operation": [[54, "module-abacusai.execute_feature_group_operation"]], "describe() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[54, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.describe"]], "get_status() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[54, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.get_status"]], "load_as_pandas() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[54, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.load_as_pandas"]], "refresh() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[54, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.refresh"]], "to_dict() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[54, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.to_dict"]], "wait_for_execution() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[54, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.wait_for_execution"]], "wait_for_results() (abacusai.execute_feature_group_operation.executefeaturegroupoperation method)": [[54, "abacusai.execute_feature_group_operation.ExecuteFeatureGroupOperation.wait_for_results"]], "feature (class in abacusai.feature)": [[55, "abacusai.feature.Feature"]], "__repr__() (abacusai.feature.feature method)": [[55, "abacusai.feature.Feature.__repr__"]], "abacusai.feature": [[55, "module-abacusai.feature"]], "to_dict() (abacusai.feature.feature method)": [[55, "abacusai.feature.Feature.to_dict"]], "featuredistribution (class in abacusai.feature_distribution)": [[56, "abacusai.feature_distribution.FeatureDistribution"]], "__repr__() (abacusai.feature_distribution.featuredistribution method)": [[56, "abacusai.feature_distribution.FeatureDistribution.__repr__"]], "abacusai.feature_distribution": [[56, "module-abacusai.feature_distribution"]], "to_dict() (abacusai.feature_distribution.featuredistribution method)": [[56, "abacusai.feature_distribution.FeatureDistribution.to_dict"]], "featuredriftsummary (class in abacusai.feature_drift_summary)": [[57, "abacusai.feature_drift_summary.FeatureDriftSummary"]], "__repr__() (abacusai.feature_drift_summary.featuredriftsummary method)": [[57, "abacusai.feature_drift_summary.FeatureDriftSummary.__repr__"]], "abacusai.feature_drift_summary": [[57, "module-abacusai.feature_drift_summary"]], "to_dict() (abacusai.feature_drift_summary.featuredriftsummary method)": [[57, "abacusai.feature_drift_summary.FeatureDriftSummary.to_dict"]], "featuregroup (class in abacusai.feature_group)": [[58, "abacusai.feature_group.FeatureGroup"]], "__repr__() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.__repr__"]], "abacusai.feature_group": [[58, "module-abacusai.feature_group"]], "add_annotatable_feature() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.add_annotatable_feature"]], "add_annotation_label() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.add_annotation_label"]], "add_feature_tag() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.add_feature_tag"]], "add_organization_group_to_modifiers() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.add_organization_group_to_modifiers"]], "add_tag() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.add_tag"]], "add_to_project() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.add_to_project"]], "add_user_to_modifiers() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.add_user_to_modifiers"]], "append_data() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.append_data"]], "append_multiple_data() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.append_multiple_data"]], "concatenate_data() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.concatenate_data"]], "create_feature() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.create_feature"]], "create_nested_feature() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.create_nested_feature"]], "create_point_in_time_feature() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.create_point_in_time_feature"]], "create_point_in_time_group() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.create_point_in_time_group"]], "create_point_in_time_group_feature() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.create_point_in_time_group_feature"]], "create_sampling() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.create_sampling"]], "create_template() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.create_template"]], "create_version() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.create_version"]], "delete() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.delete"]], "delete_feature() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.delete_feature"]], "delete_nested_feature() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.delete_nested_feature"]], "delete_point_in_time_group() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.delete_point_in_time_group"]], "describe() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.describe"]], "describe_annotation() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.describe_annotation"]], "describe_dataset() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.describe_dataset"]], "detach_from_template() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.detach_from_template"]], "generate_natural_language_explanation() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.generate_natural_language_explanation"]], "get_annotations_status() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.get_annotations_status"]], "get_document_to_annotate() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.get_document_to_annotate"]], "get_natural_language_explanation() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.get_natural_language_explanation"]], "get_project_config() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.get_project_config"]], "get_recent_streamed_data() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.get_recent_streamed_data"]], "get_schema() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.get_schema"]], "get_status() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.get_status"]], "import_annotation_labels() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.import_annotation_labels"]], "invalidate_streaming_data() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.invalidate_streaming_data"]], "list_exports() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.list_exports"]], "list_modifiers() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.list_modifiers"]], "list_versions() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.list_versions"]], "load_as_pandas() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.load_as_pandas"]], "materialize() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.materialize"]], "refresh() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.refresh"]], "remove_annotation_label() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.remove_annotation_label"]], "remove_concatenation_config() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.remove_concatenation_config"]], "remove_feature_tag() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.remove_feature_tag"]], "remove_from_project() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.remove_from_project"]], "remove_organization_group_from_modifiers() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.remove_organization_group_from_modifiers"]], "remove_tag() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.remove_tag"]], "remove_user_from_modifiers() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.remove_user_from_modifiers"]], "render_data_for_llm() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.render_data_for_llm"]], "set_annotation_status_feature() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.set_annotation_status_feature"]], "set_feature_as_annotatable_feature() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.set_feature_as_annotatable_feature"]], "set_feature_type() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.set_feature_type"]], "set_indexing_config() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.set_indexing_config"]], "set_merge_config() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.set_merge_config"]], "set_modifier_lock() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.set_modifier_lock"]], "set_project_config() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.set_project_config"]], "set_sampling_config() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.set_sampling_config"]], "set_schema() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.set_schema"]], "set_transform_config() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.set_transform_config"]], "set_type() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.set_type"]], "suggest_template_for() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.suggest_template_for"]], "to_dict() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.to_dict"]], "unset_feature_as_annotatable_feature() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.unset_feature_as_annotatable_feature"]], "update() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.update"]], "update_annotation_status() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.update_annotation_status"]], "update_dataset_feature_expression() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.update_dataset_feature_expression"]], "update_feature() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.update_feature"]], "update_function_definition() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.update_function_definition"]], "update_git() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.update_git"]], "update_nested_feature() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.update_nested_feature"]], "update_point_in_time_feature() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.update_point_in_time_feature"]], "update_point_in_time_group() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.update_point_in_time_group"]], "update_point_in_time_group_feature() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.update_point_in_time_group_feature"]], "update_python_function() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.update_python_function"]], "update_python_function_bindings() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.update_python_function_bindings"]], "update_sql_definition() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.update_sql_definition"]], "update_template_bindings() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.update_template_bindings"]], "update_zip() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.update_zip"]], "upsert_data() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.upsert_data"]], "upsert_multiple_data() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.upsert_multiple_data"]], "use_for_training() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.use_for_training"]], "verify_and_describe_annotation() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.verify_and_describe_annotation"]], "wait_for_dataset() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.wait_for_dataset"]], "wait_for_materialization() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.wait_for_materialization"]], "wait_for_streaming_ready() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.wait_for_streaming_ready"]], "wait_for_upload() (abacusai.feature_group.featuregroup method)": [[58, "abacusai.feature_group.FeatureGroup.wait_for_upload"]], "featuregroupexport (class in abacusai.feature_group_export)": [[59, "abacusai.feature_group_export.FeatureGroupExport"]], "__repr__() (abacusai.feature_group_export.featuregroupexport method)": [[59, "abacusai.feature_group_export.FeatureGroupExport.__repr__"]], "abacusai.feature_group_export": [[59, "module-abacusai.feature_group_export"]], "describe() (abacusai.feature_group_export.featuregroupexport method)": [[59, "abacusai.feature_group_export.FeatureGroupExport.describe"]], "get_connector_errors() (abacusai.feature_group_export.featuregroupexport method)": [[59, "abacusai.feature_group_export.FeatureGroupExport.get_connector_errors"]], "get_feature_group_version_export_download_url() (abacusai.feature_group_export.featuregroupexport method)": [[59, "abacusai.feature_group_export.FeatureGroupExport.get_feature_group_version_export_download_url"]], "get_results() (abacusai.feature_group_export.featuregroupexport method)": [[59, "abacusai.feature_group_export.FeatureGroupExport.get_results"]], "get_status() (abacusai.feature_group_export.featuregroupexport method)": [[59, "abacusai.feature_group_export.FeatureGroupExport.get_status"]], "refresh() (abacusai.feature_group_export.featuregroupexport method)": [[59, "abacusai.feature_group_export.FeatureGroupExport.refresh"]], "to_dict() (abacusai.feature_group_export.featuregroupexport method)": [[59, "abacusai.feature_group_export.FeatureGroupExport.to_dict"]], "wait_for_export() (abacusai.feature_group_export.featuregroupexport method)": [[59, "abacusai.feature_group_export.FeatureGroupExport.wait_for_export"]], "wait_for_results() (abacusai.feature_group_export.featuregroupexport method)": [[59, "abacusai.feature_group_export.FeatureGroupExport.wait_for_results"]], "featuregroupexportconfig (class in abacusai.feature_group_export_config)": [[60, "abacusai.feature_group_export_config.FeatureGroupExportConfig"]], "__repr__() (abacusai.feature_group_export_config.featuregroupexportconfig method)": [[60, "abacusai.feature_group_export_config.FeatureGroupExportConfig.__repr__"]], "abacusai.feature_group_export_config": [[60, "module-abacusai.feature_group_export_config"]], "to_dict() (abacusai.feature_group_export_config.featuregroupexportconfig method)": [[60, "abacusai.feature_group_export_config.FeatureGroupExportConfig.to_dict"]], "featuregroupexportdownloadurl (class in abacusai.feature_group_export_download_url)": [[61, "abacusai.feature_group_export_download_url.FeatureGroupExportDownloadUrl"]], "__repr__() (abacusai.feature_group_export_download_url.featuregroupexportdownloadurl method)": [[61, "abacusai.feature_group_export_download_url.FeatureGroupExportDownloadUrl.__repr__"]], "abacusai.feature_group_export_download_url": [[61, "module-abacusai.feature_group_export_download_url"]], "to_dict() (abacusai.feature_group_export_download_url.featuregroupexportdownloadurl method)": [[61, "abacusai.feature_group_export_download_url.FeatureGroupExportDownloadUrl.to_dict"]], "featuregrouplineage (class in abacusai.feature_group_lineage)": [[62, "abacusai.feature_group_lineage.FeatureGroupLineage"]], "__repr__() (abacusai.feature_group_lineage.featuregrouplineage method)": [[62, "abacusai.feature_group_lineage.FeatureGroupLineage.__repr__"]], "abacusai.feature_group_lineage": [[62, "module-abacusai.feature_group_lineage"]], "to_dict() (abacusai.feature_group_lineage.featuregrouplineage method)": [[62, "abacusai.feature_group_lineage.FeatureGroupLineage.to_dict"]], "featuregroupmetrics (class in abacusai.feature_group_metrics)": [[63, "abacusai.feature_group_metrics.FeatureGroupMetrics"]], "__repr__() (abacusai.feature_group_metrics.featuregroupmetrics method)": [[63, "abacusai.feature_group_metrics.FeatureGroupMetrics.__repr__"]], "abacusai.feature_group_metrics": [[63, "module-abacusai.feature_group_metrics"]], "to_dict() (abacusai.feature_group_metrics.featuregroupmetrics method)": [[63, "abacusai.feature_group_metrics.FeatureGroupMetrics.to_dict"]], "featuregrouprefreshexportconfig (class in abacusai.feature_group_refresh_export_config)": [[64, "abacusai.feature_group_refresh_export_config.FeatureGroupRefreshExportConfig"]], "__repr__() (abacusai.feature_group_refresh_export_config.featuregrouprefreshexportconfig method)": [[64, "abacusai.feature_group_refresh_export_config.FeatureGroupRefreshExportConfig.__repr__"]], "abacusai.feature_group_refresh_export_config": [[64, "module-abacusai.feature_group_refresh_export_config"]], "to_dict() (abacusai.feature_group_refresh_export_config.featuregrouprefreshexportconfig method)": [[64, "abacusai.feature_group_refresh_export_config.FeatureGroupRefreshExportConfig.to_dict"]], "featuregrouptemplate (class in abacusai.feature_group_template)": [[65, "abacusai.feature_group_template.FeatureGroupTemplate"]], "__repr__() (abacusai.feature_group_template.featuregrouptemplate method)": [[65, "abacusai.feature_group_template.FeatureGroupTemplate.__repr__"]], "abacusai.feature_group_template": [[65, "module-abacusai.feature_group_template"]], "delete() (abacusai.feature_group_template.featuregrouptemplate method)": [[65, "abacusai.feature_group_template.FeatureGroupTemplate.delete"]], "describe() (abacusai.feature_group_template.featuregrouptemplate method)": [[65, "abacusai.feature_group_template.FeatureGroupTemplate.describe"]], "preview_resolution() (abacusai.feature_group_template.featuregrouptemplate method)": [[65, "abacusai.feature_group_template.FeatureGroupTemplate.preview_resolution"]], "refresh() (abacusai.feature_group_template.featuregrouptemplate method)": [[65, "abacusai.feature_group_template.FeatureGroupTemplate.refresh"]], "to_dict() (abacusai.feature_group_template.featuregrouptemplate method)": [[65, "abacusai.feature_group_template.FeatureGroupTemplate.to_dict"]], "update() (abacusai.feature_group_template.featuregrouptemplate method)": [[65, "abacusai.feature_group_template.FeatureGroupTemplate.update"]], "featuregrouptemplatevariableoptions (class in abacusai.feature_group_template_variable_options)": [[66, "abacusai.feature_group_template_variable_options.FeatureGroupTemplateVariableOptions"]], "__repr__() (abacusai.feature_group_template_variable_options.featuregrouptemplatevariableoptions method)": [[66, "abacusai.feature_group_template_variable_options.FeatureGroupTemplateVariableOptions.__repr__"]], "abacusai.feature_group_template_variable_options": [[66, "module-abacusai.feature_group_template_variable_options"]], "to_dict() (abacusai.feature_group_template_variable_options.featuregrouptemplatevariableoptions method)": [[66, "abacusai.feature_group_template_variable_options.FeatureGroupTemplateVariableOptions.to_dict"]], "featuregroupversion (class in abacusai.feature_group_version)": [[67, "abacusai.feature_group_version.FeatureGroupVersion"]], "__repr__() (abacusai.feature_group_version.featuregroupversion method)": [[67, "abacusai.feature_group_version.FeatureGroupVersion.__repr__"]], "_download_avro_file() (abacusai.feature_group_version.featuregroupversion method)": [[67, "abacusai.feature_group_version.FeatureGroupVersion._download_avro_file"]], "abacusai.feature_group_version": [[67, "module-abacusai.feature_group_version"]], "create_snapshot_feature_group() (abacusai.feature_group_version.featuregroupversion method)": [[67, "abacusai.feature_group_version.FeatureGroupVersion.create_snapshot_feature_group"]], "describe() (abacusai.feature_group_version.featuregroupversion method)": [[67, "abacusai.feature_group_version.FeatureGroupVersion.describe"]], "export_to_console() (abacusai.feature_group_version.featuregroupversion method)": [[67, "abacusai.feature_group_version.FeatureGroupVersion.export_to_console"]], "export_to_database_connector() (abacusai.feature_group_version.featuregroupversion method)": [[67, "abacusai.feature_group_version.FeatureGroupVersion.export_to_database_connector"]], "export_to_file_connector() (abacusai.feature_group_version.featuregroupversion method)": [[67, "abacusai.feature_group_version.FeatureGroupVersion.export_to_file_connector"]], "get_materialization_logs() (abacusai.feature_group_version.featuregroupversion method)": [[67, "abacusai.feature_group_version.FeatureGroupVersion.get_materialization_logs"]], "get_status() (abacusai.feature_group_version.featuregroupversion method)": [[67, "abacusai.feature_group_version.FeatureGroupVersion.get_status"]], "load_as_pandas() (abacusai.feature_group_version.featuregroupversion method)": [[67, "abacusai.feature_group_version.FeatureGroupVersion.load_as_pandas"]], "refresh() (abacusai.feature_group_version.featuregroupversion method)": [[67, "abacusai.feature_group_version.FeatureGroupVersion.refresh"]], "to_dict() (abacusai.feature_group_version.featuregroupversion method)": [[67, "abacusai.feature_group_version.FeatureGroupVersion.to_dict"]], "wait_for_materialization() (abacusai.feature_group_version.featuregroupversion method)": [[67, "abacusai.feature_group_version.FeatureGroupVersion.wait_for_materialization"]], "wait_for_results() (abacusai.feature_group_version.featuregroupversion method)": [[67, "abacusai.feature_group_version.FeatureGroupVersion.wait_for_results"]], "featureimportance (class in abacusai.feature_importance)": [[68, "abacusai.feature_importance.FeatureImportance"]], "__repr__() (abacusai.feature_importance.featureimportance method)": [[68, "abacusai.feature_importance.FeatureImportance.__repr__"]], "abacusai.feature_importance": [[68, "module-abacusai.feature_importance"]], "to_dict() (abacusai.feature_importance.featureimportance method)": [[68, "abacusai.feature_importance.FeatureImportance.to_dict"]], "featurerecord (class in abacusai.feature_record)": [[69, "abacusai.feature_record.FeatureRecord"]], "__repr__() (abacusai.feature_record.featurerecord method)": [[69, "abacusai.feature_record.FeatureRecord.__repr__"]], "abacusai.feature_record": [[69, "module-abacusai.feature_record"]], "to_dict() (abacusai.feature_record.featurerecord method)": [[69, "abacusai.feature_record.FeatureRecord.to_dict"]], "fileconnector (class in abacusai.file_connector)": [[70, "abacusai.file_connector.FileConnector"]], "__repr__() (abacusai.file_connector.fileconnector method)": [[70, "abacusai.file_connector.FileConnector.__repr__"]], "abacusai.file_connector": [[70, "module-abacusai.file_connector"]], "to_dict() (abacusai.file_connector.fileconnector method)": [[70, "abacusai.file_connector.FileConnector.to_dict"]], "fileconnectorinstructions (class in abacusai.file_connector_instructions)": [[71, "abacusai.file_connector_instructions.FileConnectorInstructions"]], "__repr__() (abacusai.file_connector_instructions.fileconnectorinstructions method)": [[71, "abacusai.file_connector_instructions.FileConnectorInstructions.__repr__"]], "abacusai.file_connector_instructions": [[71, "module-abacusai.file_connector_instructions"]], "to_dict() (abacusai.file_connector_instructions.fileconnectorinstructions method)": [[71, "abacusai.file_connector_instructions.FileConnectorInstructions.to_dict"]], "fileconnectorverification (class in abacusai.file_connector_verification)": [[72, "abacusai.file_connector_verification.FileConnectorVerification"]], "__repr__() (abacusai.file_connector_verification.fileconnectorverification method)": [[72, "abacusai.file_connector_verification.FileConnectorVerification.__repr__"]], "abacusai.file_connector_verification": [[72, "module-abacusai.file_connector_verification"]], "to_dict() (abacusai.file_connector_verification.fileconnectorverification method)": [[72, "abacusai.file_connector_verification.FileConnectorVerification.to_dict"]], "forecastinganalysisgraphdata (class in abacusai.forecasting_analysis_graph_data)": [[73, "abacusai.forecasting_analysis_graph_data.ForecastingAnalysisGraphData"]], "__repr__() (abacusai.forecasting_analysis_graph_data.forecastinganalysisgraphdata method)": [[73, "abacusai.forecasting_analysis_graph_data.ForecastingAnalysisGraphData.__repr__"]], "abacusai.forecasting_analysis_graph_data": [[73, "module-abacusai.forecasting_analysis_graph_data"]], "to_dict() (abacusai.forecasting_analysis_graph_data.forecastinganalysisgraphdata method)": [[73, "abacusai.forecasting_analysis_graph_data.ForecastingAnalysisGraphData.to_dict"]], "functionlogs (class in abacusai.function_logs)": [[74, "abacusai.function_logs.FunctionLogs"]], "__repr__() (abacusai.function_logs.functionlogs method)": [[74, "abacusai.function_logs.FunctionLogs.__repr__"]], "abacusai.function_logs": [[74, "module-abacusai.function_logs"]], "to_dict() (abacusai.function_logs.functionlogs method)": [[74, "abacusai.function_logs.FunctionLogs.to_dict"]], "generatedpitfeatureconfigoption (class in abacusai.generated_pit_feature_config_option)": [[75, "abacusai.generated_pit_feature_config_option.GeneratedPitFeatureConfigOption"]], "__repr__() (abacusai.generated_pit_feature_config_option.generatedpitfeatureconfigoption method)": [[75, "abacusai.generated_pit_feature_config_option.GeneratedPitFeatureConfigOption.__repr__"]], "abacusai.generated_pit_feature_config_option": [[75, "module-abacusai.generated_pit_feature_config_option"]], "to_dict() (abacusai.generated_pit_feature_config_option.generatedpitfeatureconfigoption method)": [[75, "abacusai.generated_pit_feature_config_option.GeneratedPitFeatureConfigOption.to_dict"]], "graphdashboard (class in abacusai.graph_dashboard)": [[76, "abacusai.graph_dashboard.GraphDashboard"]], "__repr__() (abacusai.graph_dashboard.graphdashboard method)": [[76, "abacusai.graph_dashboard.GraphDashboard.__repr__"]], "abacusai.graph_dashboard": [[76, "module-abacusai.graph_dashboard"]], "delete() (abacusai.graph_dashboard.graphdashboard method)": [[76, "abacusai.graph_dashboard.GraphDashboard.delete"]], "describe() (abacusai.graph_dashboard.graphdashboard method)": [[76, "abacusai.graph_dashboard.GraphDashboard.describe"]], "refresh() (abacusai.graph_dashboard.graphdashboard method)": [[76, "abacusai.graph_dashboard.GraphDashboard.refresh"]], "to_dict() (abacusai.graph_dashboard.graphdashboard method)": [[76, "abacusai.graph_dashboard.GraphDashboard.to_dict"]], "update() (abacusai.graph_dashboard.graphdashboard method)": [[76, "abacusai.graph_dashboard.GraphDashboard.update"]], "accuracy (abacusai.forecastingobjective attribute)": [[77, "abacusai.ForecastingObjective.ACCURACY"]], "accuracy (abacusai.regressionobjective attribute)": [[77, "abacusai.RegressionObjective.ACCURACY"]], "aiagenttrainingconfig (class in abacusai)": [[77, "abacusai.AIAgentTrainingConfig"]], "ai_agent (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.AI_AGENT"]], "ancestral_simulation (abacusai.forecastingquanitlesextensionmethod attribute)": [[77, "abacusai.ForecastingQuanitlesExtensionMethod.ANCESTRAL_SIMULATION"]], "annotations_precision (abacusai.nerobjective attribute)": [[77, "abacusai.NERObjective.ANNOTATIONS_PRECISION"]], "annotations_recall (abacusai.nerobjective attribute)": [[77, "abacusai.NERObjective.ANNOTATIONS_RECALL"]], "anomaly_detection (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.ANOMALY_DETECTION"]], "anomaly_outliers (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.ANOMALY_OUTLIERS"]], "application (abacusai.connectortype attribute)": [[77, "abacusai.ConnectorType.APPLICATION"]], "asymmetric_mean_absolute_percentage_error (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.ASYMMETRIC_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "au (abacusai.holidaycalendars attribute)": [[77, "abacusai.HolidayCalendars.AU"]], "auc (abacusai.nerobjective attribute)": [[77, "abacusai.NERObjective.AUC"]], "auc (abacusai.regressionobjective attribute)": [[77, "abacusai.RegressionObjective.AUC"]], "auto (abacusai.forecastingdatasplittype attribute)": [[77, "abacusai.ForecastingDataSplitType.AUTO"]], "auto (abacusai.nlpdocumentformat attribute)": [[77, "abacusai.NLPDocumentFormat.AUTO"]], "automatic (abacusai.clusteringimputationmethod attribute)": [[77, "abacusai.ClusteringImputationMethod.AUTOMATIC"]], "automatic (abacusai.regressionlossfunction attribute)": [[77, "abacusai.RegressionLossFunction.AUTOMATIC"]], "average (abacusai.filllogic attribute)": [[77, "abacusai.FillLogic.AVERAGE"]], "anomalydetectiontrainingconfig (class in abacusai)": [[77, "abacusai.AnomalyDetectionTrainingConfig"]], "apiclass (class in abacusai)": [[77, "abacusai.ApiClass"]], "apiclient (class in abacusai)": [[77, "abacusai.ApiClient"]], "apienum (class in abacusai)": [[77, "abacusai.ApiEnum"]], "back (abacusai.forecastingfillmethod attribute)": [[77, "abacusai.ForecastingFillMethod.BACK"]], "backfill (abacusai.filllogic attribute)": [[77, "abacusai.FillLogic.BACKFILL"]], "batch_1024 (abacusai.batchsize attribute)": [[77, "abacusai.BatchSize.BATCH_1024"]], "batch_128 (abacusai.batchsize attribute)": [[77, "abacusai.BatchSize.BATCH_128"]], "batch_16 (abacusai.batchsize attribute)": [[77, "abacusai.BatchSize.BATCH_16"]], "batch_256 (abacusai.batchsize attribute)": [[77, "abacusai.BatchSize.BATCH_256"]], "batch_32 (abacusai.batchsize attribute)": [[77, "abacusai.BatchSize.BATCH_32"]], "batch_384 (abacusai.batchsize attribute)": [[77, "abacusai.BatchSize.BATCH_384"]], "batch_512 (abacusai.batchsize attribute)": [[77, "abacusai.BatchSize.BATCH_512"]], "batch_64 (abacusai.batchsize attribute)": [[77, "abacusai.BatchSize.BATCH_64"]], "batch_740 (abacusai.batchsize attribute)": [[77, "abacusai.BatchSize.BATCH_740"]], "batch_8 (abacusai.batchsize attribute)": [[77, "abacusai.BatchSize.BATCH_8"]], "batch_prediction_id (abacusai.pythonfunctionargumenttype attribute)": [[77, "abacusai.PythonFunctionArgumentType.BATCH_PREDICTION_ID"]], "bias (abacusai.forecastingobjective attribute)": [[77, "abacusai.ForecastingObjective.BIAS"]], "boolean (abacusai.pythonfunctionargumenttype attribute)": [[77, "abacusai.PythonFunctionArgumentType.BOOLEAN"]], "box_cox (abacusai.regressiontargettransform attribute)": [[77, "abacusai.RegressionTargetTransform.BOX_COX"]], "batchsize (class in abacusai)": [[77, "abacusai.BatchSize"]], "clustering (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.CLUSTERING"]], "clustering_timeseries (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.CLUSTERING_TIMESERIES"]], "cmape (abacusai.forecastingobjective attribute)": [[77, "abacusai.ForecastingObjective.CMAPE"]], "coverage (abacusai.personalizationobjective attribute)": [[77, "abacusai.PersonalizationObjective.COVERAGE"]], "cross_entropy (abacusai.regressionlossfunction attribute)": [[77, "abacusai.RegressionLossFunction.CROSS_ENTROPY"]], "cumulative_forecasting (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.CUMULATIVE_FORECASTING"]], "custom (abacusai.filllogic attribute)": [[77, "abacusai.FillLogic.CUSTOM"]], "custom (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.CUSTOM"]], "custom (abacusai.regressionlossfunction attribute)": [[77, "abacusai.RegressionLossFunction.CUSTOM"]], "custom_algorithm (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.CUSTOM_ALGORITHM"]], "custom_trained_model (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.CUSTOM_TRAINED_MODEL"]], "cv (abacusai.forecastingobjective attribute)": [[77, "abacusai.ForecastingObjective.CV"]], "clientoptions (class in abacusai)": [[77, "abacusai.ClientOptions"]], "clusteringimputationmethod (class in abacusai)": [[77, "abacusai.ClusteringImputationMethod"]], "clusteringtimeseriestrainingconfig (class in abacusai)": [[77, "abacusai.ClusteringTimeseriesTrainingConfig"]], "clusteringtrainingconfig (class in abacusai)": [[77, "abacusai.ClusteringTrainingConfig"]], "connectortype (class in abacusai)": [[77, "abacusai.ConnectorType"]], "cumulativeforecastingtrainingconfig (class in abacusai)": [[77, "abacusai.CumulativeForecastingTrainingConfig"]], "customalgorithmtrainingconfig (class in abacusai)": [[77, "abacusai.CustomAlgorithmTrainingConfig"]], "customtrainedmodeltrainingconfig (class in abacusai)": [[77, "abacusai.CustomTrainedModelTrainingConfig"]], "daily (abacusai.forecastingfrequency attribute)": [[77, "abacusai.ForecastingFrequency.DAILY"]], "database (abacusai.connectortype attribute)": [[77, "abacusai.ConnectorType.DATABASE"]], "dataset_id (abacusai.pythonfunctionargumenttype attribute)": [[77, "abacusai.PythonFunctionArgumentType.DATASET_ID"]], "deployment_id (abacusai.pythonfunctionargumenttype attribute)": [[77, "abacusai.PythonFunctionArgumentType.DEPLOYMENT_ID"]], "direct (abacusai.forecastingquanitlesextensionmethod attribute)": [[77, "abacusai.ForecastingQuanitlesExtensionMethod.DIRECT"]], "doc (abacusai.nlpdocumentformat attribute)": [[77, "abacusai.NLPDocumentFormat.DOC"]], "document_classification (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.DOCUMENT_CLASSIFICATION"]], "document_summarization (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.DOCUMENT_SUMMARIZATION"]], "document_visualization (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.DOCUMENT_VISUALIZATION"]], "databaseconnectorexportconfig (class in abacusai)": [[77, "abacusai.DatabaseConnectorExportConfig"]], "documentclassificationtrainingconfig (class in abacusai)": [[77, "abacusai.DocumentClassificationTrainingConfig"]], "documentsummarizationtrainingconfig (class in abacusai)": [[77, "abacusai.DocumentSummarizationTrainingConfig"]], "documentvisualizationtrainingconfig (class in abacusai)": [[77, "abacusai.DocumentVisualizationTrainingConfig"]], "emotion (abacusai.sentimenttype attribute)": [[77, "abacusai.SentimentType.EMOTION"]], "experimental (abacusai.personalizationtrainingmode attribute)": [[77, "abacusai.PersonalizationTrainingMode.EXPERIMENTAL"]], "experimentationmode (class in abacusai)": [[77, "abacusai.ExperimentationMode"]], "f1_score (abacusai.regressionobjective attribute)": [[77, "abacusai.RegressionObjective.F1_SCORE"]], "feature_group (abacusai.pythonfunctionargumenttype attribute)": [[77, "abacusai.PythonFunctionArgumentType.FEATURE_GROUP"]], "feature_group_id (abacusai.pythonfunctionargumenttype attribute)": [[77, "abacusai.PythonFunctionArgumentType.FEATURE_GROUP_ID"]], "feature_store (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.FEATURE_STORE"]], "file (abacusai.connectortype attribute)": [[77, "abacusai.ConnectorType.FILE"]], "float (abacusai.pythonfunctionargumenttype attribute)": [[77, "abacusai.PythonFunctionArgumentType.FLOAT"]], "focal_cross_entropy (abacusai.regressionlossfunction attribute)": [[77, "abacusai.RegressionLossFunction.FOCAL_CROSS_ENTROPY"]], "forecasting (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.FORECASTING"]], "forwardfill (abacusai.filllogic attribute)": [[77, "abacusai.FillLogic.FORWARDFILL"]], "future (abacusai.forecastingfillmethod attribute)": [[77, "abacusai.ForecastingFillMethod.FUTURE"]], "featuregroupexportconfig (class in abacusai)": [[77, "abacusai.FeatureGroupExportConfig"]], "fileconnectorexportconfig (class in abacusai)": [[77, "abacusai.FileConnectorExportConfig"]], "filllogic (class in abacusai)": [[77, "abacusai.FillLogic"]], "forecastingdatasplittype (class in abacusai)": [[77, "abacusai.ForecastingDataSplitType"]], "forecastingfillmethod (class in abacusai)": [[77, "abacusai.ForecastingFillMethod"]], "forecastingfrequency (class in abacusai)": [[77, "abacusai.ForecastingFrequency"]], "forecastinglocalscaling (class in abacusai)": [[77, "abacusai.ForecastingLocalScaling"]], "forecastinglossfunction (class in abacusai)": [[77, "abacusai.ForecastingLossFunction"]], "forecastingobjective (class in abacusai)": [[77, "abacusai.ForecastingObjective"]], "forecastingquanitlesextensionmethod (class in abacusai)": [[77, "abacusai.ForecastingQuanitlesExtensionMethod"]], "forecastingtrainingconfig (class in abacusai)": [[77, "abacusai.ForecastingTrainingConfig"]], "gaussian (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.GAUSSIAN"]], "gaussian_full_covariance (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.GAUSSIAN_FULL_COVARIANCE"]], "guassian_exponential (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.GUASSIAN_EXPONENTIAL"]], "hourly (abacusai.forecastingfrequency attribute)": [[77, "abacusai.ForecastingFrequency.HOURLY"]], "huber (abacusai.regressionlossfunction attribute)": [[77, "abacusai.RegressionLossFunction.HUBER"]], "holidaycalendars (class in abacusai)": [[77, "abacusai.HolidayCalendars"]], "image_classification (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.IMAGE_CLASSIFICATION"]], "image_value_prediction (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.IMAGE_VALUE_PREDICTION"]], "integer (abacusai.pythonfunctionargumenttype attribute)": [[77, "abacusai.PythonFunctionArgumentType.INTEGER"]], "interpolate (abacusai.clusteringimputationmethod attribute)": [[77, "abacusai.ClusteringImputationMethod.INTERPOLATE"]], "item (abacusai.forecastingdatasplittype attribute)": [[77, "abacusai.ForecastingDataSplitType.ITEM"]], "item (abacusai.forecastinglocalscaling attribute)": [[77, "abacusai.ForecastingLocalScaling.ITEM"]], "json (abacusai.pythonfunctionargumenttype attribute)": [[77, "abacusai.PythonFunctionArgumentType.JSON"]], "language_detection (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.LANGUAGE_DETECTION"]], "last_point (abacusai.forecastinglocalscaling attribute)": [[77, "abacusai.ForecastingLocalScaling.LAST_POINT"]], "learned (abacusai.nermodeltype attribute)": [[77, "abacusai.NERModelType.LEARNED"]], "linear (abacusai.filllogic attribute)": [[77, "abacusai.FillLogic.LINEAR"]], "list (abacusai.pythonfunctionargumenttype attribute)": [[77, "abacusai.PythonFunctionArgumentType.LIST"]], "log (abacusai.regressiontargettransform attribute)": [[77, "abacusai.RegressionTargetTransform.LOG"]], "log_loss (abacusai.nerobjective attribute)": [[77, "abacusai.NERObjective.LOG_LOSS"]], "log_loss (abacusai.regressionobjective attribute)": [[77, "abacusai.RegressionObjective.LOG_LOSS"]], "log_root_mean_square_error (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.LOG_ROOT_MEAN_SQUARE_ERROR"]], "mae (abacusai.regressionlossfunction attribute)": [[77, "abacusai.RegressionLossFunction.MAE"]], "mae (abacusai.regressionobjective attribute)": [[77, "abacusai.RegressionObjective.MAE"]], "map (abacusai.personalizationobjective attribute)": [[77, "abacusai.PersonalizationObjective.MAP"]], "mape (abacusai.forecastingobjective attribute)": [[77, "abacusai.ForecastingObjective.MAPE"]], "mape (abacusai.regressionlossfunction attribute)": [[77, "abacusai.RegressionLossFunction.MAPE"]], "mape (abacusai.regressionobjective attribute)": [[77, "abacusai.RegressionObjective.MAPE"]], "map_10 (abacusai.personalizationobjective attribute)": [[77, "abacusai.PersonalizationObjective.MAP_10"]], "map_5 (abacusai.personalizationobjective attribute)": [[77, "abacusai.PersonalizationObjective.MAP_5"]], "max (abacusai.filllogic attribute)": [[77, "abacusai.FillLogic.MAX"]], "mean_absolute_error (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.MEAN_ABSOLUTE_ERROR"]], "mean_absolute_percentage_error (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "median (abacusai.filllogic attribute)": [[77, "abacusai.FillLogic.MEDIAN"]], "middle (abacusai.forecastingfillmethod attribute)": [[77, "abacusai.ForecastingFillMethod.MIDDLE"]], "min (abacusai.filllogic attribute)": [[77, "abacusai.FillLogic.MIN"]], "min_max (abacusai.forecastinglocalscaling attribute)": [[77, "abacusai.ForecastingLocalScaling.MIN_MAX"]], "min_std (abacusai.forecastinglocalscaling attribute)": [[77, "abacusai.ForecastingLocalScaling.MIN_STD"]], "mix_gaussians (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.MIX_GAUSSIANS"]], "model_id (abacusai.pythonfunctionargumenttype attribute)": [[77, "abacusai.PythonFunctionArgumentType.MODEL_ID"]], "model_monitoring (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.MODEL_MONITORING"]], "monitor_id (abacusai.pythonfunctionargumenttype attribute)": [[77, "abacusai.PythonFunctionArgumentType.MONITOR_ID"]], "month_end (abacusai.forecastingfrequency attribute)": [[77, "abacusai.ForecastingFrequency.MONTH_END"]], "month_start (abacusai.forecastingfrequency attribute)": [[77, "abacusai.ForecastingFrequency.MONTH_START"]], "mrr (abacusai.personalizationobjective attribute)": [[77, "abacusai.PersonalizationObjective.MRR"]], "mse (abacusai.regressionlossfunction attribute)": [[77, "abacusai.RegressionLossFunction.MSE"]], "msle (abacusai.regressionlossfunction attribute)": [[77, "abacusai.RegressionLossFunction.MSLE"]], "named_entity_extraction (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.NAMED_ENTITY_EXTRACTION"]], "natural_language_search (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.NATURAL_LANGUAGE_SEARCH"]], "ndcg (abacusai.personalizationobjective attribute)": [[77, "abacusai.PersonalizationObjective.NDCG"]], "ndcg_10 (abacusai.personalizationobjective attribute)": [[77, "abacusai.PersonalizationObjective.NDCG_10"]], "ndcg_5 (abacusai.personalizationobjective attribute)": [[77, "abacusai.PersonalizationObjective.NDCG_5"]], "nearest (abacusai.filllogic attribute)": [[77, "abacusai.FillLogic.NEAREST"]], "negative_binomial (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.NEGATIVE_BINOMIAL"]], "nermodeltype (class in abacusai)": [[77, "abacusai.NERModelType"]], "nerobjective (class in abacusai)": [[77, "abacusai.NERObjective"]], "nlpdocumentformat (class in abacusai)": [[77, "abacusai.NLPDocumentFormat"]], "normalized_mean_absolute_error (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.NORMALIZED_MEAN_ABSOLUTE_ERROR"]], "normalized_root_mean_square_error (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.NORMALIZED_ROOT_MEAN_SQUARE_ERROR"]], "nsamplingconfig (class in abacusai)": [[77, "abacusai.NSamplingConfig"]], "n_sampling (abacusai.samplingmethodtype attribute)": [[77, "abacusai.SamplingMethodType.N_SAMPLING"]], "namedentityextractiontrainingconfig (class in abacusai)": [[77, "abacusai.NamedEntityExtractionTrainingConfig"]], "naturallanguagesearchtrainingconfig (class in abacusai)": [[77, "abacusai.NaturalLanguageSearchTrainingConfig"]], "object_detection (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.OBJECT_DETECTION"]], "optimization (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.OPTIMIZATION"]], "optimizationtrainingconfig (class in abacusai)": [[77, "abacusai.OptimizationTrainingConfig"]], "outputvariablemapping (class in abacusai)": [[77, "abacusai.OutputVariableMapping"]], "peaks_mean_absolute_error (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.PEAKS_MEAN_ABSOLUTE_ERROR"]], "percent_sampling (abacusai.samplingmethodtype attribute)": [[77, "abacusai.SamplingMethodType.PERCENT_SAMPLING"]], "personalization (abacusai.personalizationobjective attribute)": [[77, "abacusai.PersonalizationObjective.PERSONALIZATION"]], "personalization (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.PERSONALIZATION"]], "pointwise_accuracy (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.POINTWISE_ACCURACY"]], "precision (abacusai.nerobjective attribute)": [[77, "abacusai.NERObjective.PRECISION"]], "precision (abacusai.regressionobjective attribute)": [[77, "abacusai.RegressionObjective.PRECISION"]], "prediction_length (abacusai.forecastingdatasplittype attribute)": [[77, "abacusai.ForecastingDataSplitType.PREDICTION_LENGTH"]], "predictive_modeling (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.PREDICTIVE_MODELING"]], "pretrained_bert (abacusai.nermodeltype attribute)": [[77, "abacusai.NERModelType.PRETRAINED_BERT"]], "pretrained_models (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.PRETRAINED_MODELS"]], "pretrained_multilingual (abacusai.nermodeltype attribute)": [[77, "abacusai.NERModelType.PRETRAINED_MULTILINGUAL"]], "pretrained_roberta_27 (abacusai.nermodeltype attribute)": [[77, "abacusai.NERModelType.PRETRAINED_ROBERTA_27"]], "pretrained_roberta_43 (abacusai.nermodeltype attribute)": [[77, "abacusai.NERModelType.PRETRAINED_ROBERTA_43"]], "production (abacusai.personalizationtrainingmode attribute)": [[77, "abacusai.PersonalizationTrainingMode.PRODUCTION"]], "parsingconfig (class in abacusai)": [[77, "abacusai.ParsingConfig"]], "percentsamplingconfig (class in abacusai)": [[77, "abacusai.PercentSamplingConfig"]], "personalizationobjective (class in abacusai)": [[77, "abacusai.PersonalizationObjective"]], "personalizationtrainingconfig (class in abacusai)": [[77, "abacusai.PersonalizationTrainingConfig"]], "personalizationtrainingmode (class in abacusai)": [[77, "abacusai.PersonalizationTrainingMode"]], "predictionclient (class in abacusai)": [[77, "abacusai.PredictionClient"]], "problemtype (class in abacusai)": [[77, "abacusai.ProblemType"]], "pythonfunctionargument (class in abacusai)": [[77, "abacusai.PythonFunctionArgument"]], "pythonfunctionargumenttype (class in abacusai)": [[77, "abacusai.PythonFunctionArgumentType"]], "quadratic (abacusai.forecastingquanitlesextensionmethod attribute)": [[77, "abacusai.ForecastingQuanitlesExtensionMethod.QUADRATIC"]], "quantile (abacusai.regressiontargettransform attribute)": [[77, "abacusai.RegressionTargetTransform.QUANTILE"]], "quarter_end (abacusai.forecastingfrequency attribute)": [[77, "abacusai.ForecastingFrequency.QUARTER_END"]], "quarter_start (abacusai.forecastingfrequency attribute)": [[77, "abacusai.ForecastingFrequency.QUARTER_START"]], "random (abacusai.regressiontypeofsplit attribute)": [[77, "abacusai.RegressionTypeOfSplit.RANDOM"]], "rapid (abacusai.experimentationmode attribute)": [[77, "abacusai.ExperimentationMode.RAPID"]], "rapid (abacusai.regressiontreehpomode attribute)": [[77, "abacusai.RegressionTreeHPOMode.RAPID"]], "recall (abacusai.nerobjective attribute)": [[77, "abacusai.NERObjective.RECALL"]], "recall (abacusai.regressionobjective attribute)": [[77, "abacusai.RegressionObjective.RECALL"]], "resample (abacusai.regressionaugmentationstrategy attribute)": [[77, "abacusai.RegressionAugmentationStrategy.RESAMPLE"]], "rmse (abacusai.forecastingobjective attribute)": [[77, "abacusai.ForecastingObjective.RMSE"]], "rmse (abacusai.regressionobjective attribute)": [[77, "abacusai.RegressionObjective.RMSE"]], "robust (abacusai.forecastinglocalscaling attribute)": [[77, "abacusai.ForecastingLocalScaling.ROBUST"]], "root_mean_square_error (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.ROOT_MEAN_SQUARE_ERROR"]], "row_indicator_based (abacusai.regressiontypeofsplit attribute)": [[77, "abacusai.RegressionTypeOfSplit.ROW_INDICATOR_BASED"]], "r_squared_coefficient_of_determination (abacusai.regressionobjective attribute)": [[77, "abacusai.RegressionObjective.R_SQUARED_COEFFICIENT_OF_DETERMINATION"]], "readonlyclient (class in abacusai)": [[77, "abacusai.ReadOnlyClient"]], "regressionaugmentationstrategy (class in abacusai)": [[77, "abacusai.RegressionAugmentationStrategy"]], "regressionlossfunction (class in abacusai)": [[77, "abacusai.RegressionLossFunction"]], "regressionobjective (class in abacusai)": [[77, "abacusai.RegressionObjective"]], "regressiontargettransform (class in abacusai)": [[77, "abacusai.RegressionTargetTransform"]], "regressiontimesplitmethod (class in abacusai)": [[77, "abacusai.RegressionTimeSplitMethod"]], "regressiontrainingconfig (class in abacusai)": [[77, "abacusai.RegressionTrainingConfig"]], "regressiontreehpomode (class in abacusai)": [[77, "abacusai.RegressionTreeHPOMode"]], "regressiontypeofsplit (class in abacusai)": [[77, "abacusai.RegressionTypeOfSplit"]], "sentence_boundary_detection (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.SENTENCE_BOUNDARY_DETECTION"]], "sentiment_detection (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.SENTIMENT_DETECTION"]], "sliding_zscore (abacusai.forecastinglocalscaling attribute)": [[77, "abacusai.ForecastingLocalScaling.SLIDING_ZSCORE"]], "smote (abacusai.regressionaugmentationstrategy attribute)": [[77, "abacusai.RegressionAugmentationStrategy.SMOTE"]], "srmse (abacusai.forecastingobjective attribute)": [[77, "abacusai.ForecastingObjective.SRMSE"]], "stable_standardized_mean_absolute_percentage_error (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.STABLE_STANDARDIZED_MEAN_ABSOLUTE_PERCENTAGE_ERROR"]], "streaming (abacusai.connectortype attribute)": [[77, "abacusai.ConnectorType.STREAMING"]], "string (abacusai.pythonfunctionargumenttype attribute)": [[77, "abacusai.PythonFunctionArgumentType.STRING"]], "samplingconfig (class in abacusai)": [[77, "abacusai.SamplingConfig"]], "samplingmethodtype (class in abacusai)": [[77, "abacusai.SamplingMethodType"]], "sentenceboundarydetectiontrainingconfig (class in abacusai)": [[77, "abacusai.SentenceBoundaryDetectionTrainingConfig"]], "sentimentdetectiontrainingconfig (class in abacusai)": [[77, "abacusai.SentimentDetectionTrainingConfig"]], "sentimenttype (class in abacusai)": [[77, "abacusai.SentimentType"]], "streamingclient (class in abacusai)": [[77, "abacusai.StreamingClient"]], "test_split_percentage_based (abacusai.regressiontimesplitmethod attribute)": [[77, "abacusai.RegressionTimeSplitMethod.TEST_SPLIT_PERCENTAGE_BASED"]], "test_start_timestamp_based (abacusai.regressiontimesplitmethod attribute)": [[77, "abacusai.RegressionTimeSplitMethod.TEST_START_TIMESTAMP_BASED"]], "text (abacusai.nlpdocumentformat attribute)": [[77, "abacusai.NLPDocumentFormat.TEXT"]], "theme_analysis (abacusai.problemtype attribute)": [[77, "abacusai.ProblemType.THEME_ANALYSIS"]], "thorough (abacusai.experimentationmode attribute)": [[77, "abacusai.ExperimentationMode.THOROUGH"]], "thorough (abacusai.regressiontreehpomode attribute)": [[77, "abacusai.RegressionTreeHPOMode.THOROUGH"]], "timestamp (abacusai.forecastingdatasplittype attribute)": [[77, "abacusai.ForecastingDataSplitType.TIMESTAMP"]], "timestamp_based (abacusai.regressiontypeofsplit attribute)": [[77, "abacusai.RegressionTypeOfSplit.TIMESTAMP_BASED"]], "tokens (abacusai.nlpdocumentformat attribute)": [[77, "abacusai.NLPDocumentFormat.TOKENS"]], "tweedie (abacusai.regressionlossfunction attribute)": [[77, "abacusai.RegressionLossFunction.TWEEDIE"]], "themeanalysistrainingconfig (class in abacusai)": [[77, "abacusai.ThemeAnalysisTrainingConfig"]], "trainingconfig (class in abacusai)": [[77, "abacusai.TrainingConfig"]], "uk (abacusai.holidaycalendars attribute)": [[77, "abacusai.HolidayCalendars.UK"]], "us (abacusai.holidaycalendars attribute)": [[77, "abacusai.HolidayCalendars.US"]], "valence (abacusai.sentimenttype attribute)": [[77, "abacusai.SentimentType.VALENCE"]], "wape (abacusai.forecastingobjective attribute)": [[77, "abacusai.ForecastingObjective.WAPE"]], "wape (abacusai.regressionobjective attribute)": [[77, "abacusai.RegressionObjective.WAPE"]], "weekly_monday_start (abacusai.forecastingfrequency attribute)": [[77, "abacusai.ForecastingFrequency.WEEKLY_MONDAY_START"]], "weekly_saturday_start (abacusai.forecastingfrequency attribute)": [[77, "abacusai.ForecastingFrequency.WEEKLY_SATURDAY_START"]], "weekly_sunday_start (abacusai.forecastingfrequency attribute)": [[77, "abacusai.ForecastingFrequency.WEEKLY_SUNDAY_START"]], "weibull (abacusai.forecastinglossfunction attribute)": [[77, "abacusai.ForecastingLossFunction.WEIBULL"]], "yearly (abacusai.forecastingfrequency attribute)": [[77, "abacusai.ForecastingFrequency.YEARLY"]], "yeo_johnson (abacusai.regressiontargettransform attribute)": [[77, "abacusai.RegressionTargetTransform.YEO_JOHNSON"]], "zeros (abacusai.clusteringimputationmethod attribute)": [[77, "abacusai.ClusteringImputationMethod.ZEROS"]], "zscore (abacusai.forecastinglocalscaling attribute)": [[77, "abacusai.ForecastingLocalScaling.ZSCORE"]], "_apiclassfactory (class in abacusai)": [[77, "abacusai._ApiClassFactory"]], "_featuregroupexportconfigfactory (class in abacusai)": [[77, "abacusai._FeatureGroupExportConfigFactory"]], "_samplingconfigfactory (class in abacusai)": [[77, "abacusai._SamplingConfigFactory"]], "_trainingconfigfactory (class in abacusai)": [[77, "abacusai._TrainingConfigFactory"]], "__eq__() (abacusai.apienum method)": [[77, "abacusai.ApiEnum.__eq__"]], "__hash__() (abacusai.apienum method)": [[77, "abacusai.ApiEnum.__hash__"]], "__post_init__() (abacusai.apiclass method)": [[77, "abacusai.ApiClass.__post_init__"]], "__post_init__() (abacusai.samplingconfig method)": [[77, "abacusai.SamplingConfig.__post_init__"]], "__str__() (abacusai.apiexception method)": [[77, "abacusai.ApiException.__str__"]], "__version__ (in module abacusai)": [[77, "abacusai.__version__"]], "_call_aiagent_asyncapp_sync_message() (abacusai.apiclient method)": [[77, "abacusai.ApiClient._call_aiagent_asyncapp_sync_message"]], "_get_agent_async_app_caller() (abacusai.apiclient method)": [[77, "abacusai.ApiClient._get_agent_async_app_caller"]], "_get_agent_async_app_request_id() (abacusai.apiclient method)": [[77, "abacusai.ApiClient._get_agent_async_app_request_id"]], "_request_context (in module abacusai)": [[77, "abacusai._request_context"]], "_stream_llm_call() (abacusai.apiclient method)": [[77, "abacusai.ApiClient._stream_llm_call"]], "_support_kwargs (abacusai.apiclass attribute)": [[77, "abacusai.ApiClass._support_kwargs"]], "_support_kwargs (abacusai.trainingconfig attribute)": [[77, "abacusai.TrainingConfig._support_kwargs"]], "_upper_snake_case_keys (abacusai.apiclass attribute)": [[77, "abacusai.ApiClass._upper_snake_case_keys"]], "_upper_snake_case_keys (abacusai.trainingconfig attribute)": [[77, "abacusai.TrainingConfig._upper_snake_case_keys"]], "abacus_internal_model (abacusai.naturallanguagesearchtrainingconfig attribute)": [[77, "abacusai.NaturalLanguageSearchTrainingConfig.abacus_internal_model"]], "abacusai": [[77, "module-abacusai"]], "active_labels_column (abacusai.namedentityextractiontrainingconfig attribute)": [[77, "abacusai.NamedEntityExtractionTrainingConfig.active_labels_column"]], "active_labels_column (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.active_labels_column"]], "add_annotatable_feature() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.add_annotatable_feature"]], "add_annotation() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.add_annotation"]], "add_feature_group_annotation_label() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.add_feature_group_annotation_label"]], "add_feature_group_tag() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.add_feature_group_tag"]], "add_feature_group_to_project() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.add_feature_group_to_project"]], "add_feature_tag() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.add_feature_tag"]], "add_graph_to_dashboard() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.add_graph_to_dashboard"]], "add_multiple_user_item_interactions() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.add_multiple_user_item_interactions"]], "add_organization_group_permission() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.add_organization_group_permission"]], "add_organization_group_to_feature_group_modifiers() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.add_organization_group_to_feature_group_modifiers"]], "add_project_tags() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.add_project_tags"]], "add_time_features (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.add_time_features"]], "add_user_item_interaction() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.add_user_item_interaction"]], "add_user_to_feature_group_modifiers() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.add_user_to_feature_group_modifiers"]], "add_user_to_organization() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.add_user_to_organization"]], "add_user_to_organization_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.add_user_to_organization_group"]], "additional_forecast_keys (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.additional_forecast_keys"]], "additional_id_columns (abacusai.databaseconnectorexportconfig attribute)": [[77, "abacusai.DatabaseConnectorExportConfig.additional_id_columns"]], "append_data() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.append_data"]], "append_data() (abacusai.streamingclient method)": [[77, "abacusai.StreamingClient.append_data"]], "append_multiple_data() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.append_multiple_data"]], "append_multiple_data() (abacusai.streamingclient method)": [[77, "abacusai.StreamingClient.append_multiple_data"]], "attach_dataset_to_project() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.attach_dataset_to_project"]], "augmentation_strategy (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.augmentation_strategy"]], "backtesting_window_step_size (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.backtesting_window_step_size"]], "batch_renormalization (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.batch_renormalization"]], "batch_size (abacusai.documentclassificationtrainingconfig attribute)": [[77, "abacusai.DocumentClassificationTrainingConfig.batch_size"]], "batch_size (abacusai.documentsummarizationtrainingconfig attribute)": [[77, "abacusai.DocumentSummarizationTrainingConfig.batch_size"]], "batch_size (abacusai.documentvisualizationtrainingconfig attribute)": [[77, "abacusai.DocumentVisualizationTrainingConfig.batch_size"]], "batch_size (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.batch_size"]], "batch_size (abacusai.namedentityextractiontrainingconfig attribute)": [[77, "abacusai.NamedEntityExtractionTrainingConfig.batch_size"]], "batch_size (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.batch_size"]], "batch_size (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.batch_size"]], "batch_size (abacusai.sentenceboundarydetectiontrainingconfig attribute)": [[77, "abacusai.SentenceBoundaryDetectionTrainingConfig.batch_size"]], "batch_size (abacusai.sentimentdetectiontrainingconfig attribute)": [[77, "abacusai.SentimentDetectionTrainingConfig.batch_size"]], "cancel_upload() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.cancel_upload"]], "check_constraints() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.check_constraints"]], "check_constraints() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.check_constraints"]], "chunk_overlap_fraction (abacusai.naturallanguagesearchtrainingconfig attribute)": [[77, "abacusai.NaturalLanguageSearchTrainingConfig.chunk_overlap_fraction"]], "classify_image() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.classify_image"]], "classify_image() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.classify_image"]], "classify_pdf() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.classify_pdf"]], "classify_pdf() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.classify_pdf"]], "clear_agent_context() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.clear_agent_context"]], "compute_metrics (abacusai.sentimentdetectiontrainingconfig attribute)": [[77, "abacusai.SentimentDetectionTrainingConfig.compute_metrics"]], "compute_rerank_metrics (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.compute_rerank_metrics"]], "compute_session_metrics (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.compute_session_metrics"]], "concatenate_feature_group_data() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.concatenate_feature_group_data"]], "config_abstract_class (abacusai._apiclassfactory attribute)": [[77, "abacusai._ApiClassFactory.config_abstract_class"]], "config_abstract_class (abacusai._featuregroupexportconfigfactory attribute)": [[77, "abacusai._FeatureGroupExportConfigFactory.config_abstract_class"]], "config_abstract_class (abacusai._trainingconfigfactory attribute)": [[77, "abacusai._TrainingConfigFactory.config_abstract_class"]], "config_class_key (abacusai._apiclassfactory attribute)": [[77, "abacusai._ApiClassFactory.config_class_key"]], "config_class_key (abacusai._featuregroupexportconfigfactory attribute)": [[77, "abacusai._FeatureGroupExportConfigFactory.config_class_key"]], "config_class_key (abacusai._samplingconfigfactory attribute)": [[77, "abacusai._SamplingConfigFactory.config_class_key"]], "config_class_key (abacusai._trainingconfigfactory attribute)": [[77, "abacusai._TrainingConfigFactory.config_class_key"]], "config_class_map (abacusai._apiclassfactory attribute)": [[77, "abacusai._ApiClassFactory.config_class_map"]], "config_class_map (abacusai._featuregroupexportconfigfactory attribute)": [[77, "abacusai._FeatureGroupExportConfigFactory.config_class_map"]], "config_class_map (abacusai._samplingconfigfactory attribute)": [[77, "abacusai._SamplingConfigFactory.config_class_map"]], "config_class_map (abacusai._trainingconfigfactory attribute)": [[77, "abacusai._TrainingConfigFactory.config_class_map"]], "connector_type (abacusai.databaseconnectorexportconfig attribute)": [[77, "abacusai.DatabaseConnectorExportConfig.connector_type"]], "connector_type (abacusai.featuregroupexportconfig attribute)": [[77, "abacusai.FeatureGroupExportConfig.connector_type"]], "connector_type (abacusai.fileconnectorexportconfig attribute)": [[77, "abacusai.FileConnectorExportConfig.connector_type"]], "convolution_filters (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.convolution_filters"]], "convolutional_layers (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.convolutional_layers"]], "create_agent() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_agent"]], "create_agent_from_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_agent_from_function"]], "create_algorithm() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_algorithm"]], "create_algorithm_from_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_algorithm_from_function"]], "create_batch_prediction() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_batch_prediction"]], "create_chat_session() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_chat_session"]], "create_custom_loss_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_custom_loss_function"]], "create_custom_loss_function_with_source_code() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_custom_loss_function_with_source_code"]], "create_custom_metric() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_custom_metric"]], "create_custom_metric_from_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_custom_metric_from_function"]], "create_dataset_from_application_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_dataset_from_application_connector"]], "create_dataset_from_database_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_dataset_from_database_connector"]], "create_dataset_from_file_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_dataset_from_file_connector"]], "create_dataset_from_pandas() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_dataset_from_pandas"]], "create_dataset_from_streaming_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_dataset_from_streaming_connector"]], "create_dataset_from_upload() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_dataset_from_upload"]], "create_dataset_version_from_application_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_dataset_version_from_application_connector"]], "create_dataset_version_from_database_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_dataset_version_from_database_connector"]], "create_dataset_version_from_file_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_dataset_version_from_file_connector"]], "create_dataset_version_from_pandas() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_dataset_version_from_pandas"]], "create_dataset_version_from_upload() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_dataset_version_from_upload"]], "create_deployment() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_deployment"]], "create_deployment_token() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_deployment_token"]], "create_deployment_webhook() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_deployment_webhook"]], "create_eda() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_eda"]], "create_feature() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_feature"]], "create_feature_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_feature_group"]], "create_feature_group_from_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_feature_group_from_function"]], "create_feature_group_from_pandas_df() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_feature_group_from_pandas_df"]], "create_feature_group_from_python_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_feature_group_from_python_function"]], "create_feature_group_from_spark_df() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_feature_group_from_spark_df"]], "create_feature_group_from_template() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_feature_group_from_template"]], "create_feature_group_template() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_feature_group_template"]], "create_feature_group_version() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_feature_group_version"]], "create_graph_dashboard() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_graph_dashboard"]], "create_merge_feature_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_merge_feature_group"]], "create_model_from_functions() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_model_from_functions"]], "create_model_from_python() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_model_from_python"]], "create_model_monitor() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_model_monitor"]], "create_module() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_module"]], "create_module_from_notebook() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_module_from_notebook"]], "create_monitor_alert() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_monitor_alert"]], "create_nested_feature() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_nested_feature"]], "create_nlp_drift_monitor() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_nlp_drift_monitor"]], "create_organization_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_organization_group"]], "create_pipeline() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_pipeline"]], "create_pipeline_step() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_pipeline_step"]], "create_pipeline_step_from_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_pipeline_step_from_function"]], "create_point_in_time_feature() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_point_in_time_feature"]], "create_point_in_time_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_point_in_time_group"]], "create_point_in_time_group_feature() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_point_in_time_group_feature"]], "create_project() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_project"]], "create_python_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_python_function"]], "create_refresh_policy() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_refresh_policy"]], "create_sampling_feature_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_sampling_feature_group"]], "create_snapshot_feature_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_snapshot_feature_group"]], "create_spark_df_from_feature_group_version() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_spark_df_from_feature_group_version"]], "create_streaming_dataset() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_streaming_dataset"]], "create_streaming_token() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_streaming_token"]], "create_train_test_data_split_feature_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_train_test_data_split_feature_group"]], "create_transform_feature_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_transform_feature_group"]], "create_vector_store() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_vector_store"]], "create_vector_store_version() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_vector_store_version"]], "create_vision_drift_monitor() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.create_vision_drift_monitor"]], "csv_delimiter (abacusai.parsingconfig attribute)": [[77, "abacusai.ParsingConfig.csv_delimiter"]], "cumulative_prediction_lengths (abacusai.cumulativeforecastingtrainingconfig attribute)": [[77, "abacusai.CumulativeForecastingTrainingConfig.cumulative_prediction_lengths"]], "custom_loss_functions (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.custom_loss_functions"]], "custom_loss_functions (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.custom_loss_functions"]], "custom_metrics (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.custom_metrics"]], "custom_metrics (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.custom_metrics"]], "data_columns (abacusai.databaseconnectorexportconfig attribute)": [[77, "abacusai.DatabaseConnectorExportConfig.data_columns"]], "data_split_feature_group_table_name (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.data_split_feature_group_table_name"]], "data_split_feature_group_table_name (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.data_split_feature_group_table_name"]], "database_connector_id (abacusai.databaseconnectorexportconfig attribute)": [[77, "abacusai.DatabaseConnectorExportConfig.database_connector_id"]], "datetime_holiday_calendars (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.datetime_holiday_calendars"]], "delete_algorithm() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_algorithm"]], "delete_api_key() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_api_key"]], "delete_application_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_application_connector"]], "delete_batch_prediction() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_batch_prediction"]], "delete_custom_loss_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_custom_loss_function"]], "delete_custom_metric() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_custom_metric"]], "delete_database_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_database_connector"]], "delete_dataset() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_dataset"]], "delete_deployment() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_deployment"]], "delete_deployment_token() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_deployment_token"]], "delete_eda() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_eda"]], "delete_eda_version() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_eda_version"]], "delete_feature() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_feature"]], "delete_feature_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_feature_group"]], "delete_feature_group_template() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_feature_group_template"]], "delete_file_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_file_connector"]], "delete_graph_dashboard() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_graph_dashboard"]], "delete_graph_from_dashboard() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.delete_graph_from_dashboard"]], "delete_item_embeddings() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_item_embeddings"]], "delete_item_embeddings() (abacusai.streamingclient method)": [[77, "abacusai.StreamingClient.delete_item_embeddings"]], "delete_model() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_model"]], "delete_model_monitor() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_model_monitor"]], "delete_model_monitor_version() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_model_monitor_version"]], "delete_model_version() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_model_version"]], "delete_module() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_module"]], "delete_monitor_alert() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_monitor_alert"]], "delete_nested_feature() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_nested_feature"]], "delete_organization_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_organization_group"]], "delete_pipeline() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_pipeline"]], "delete_pipeline_step() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_pipeline_step"]], "delete_point_in_time_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_point_in_time_group"]], "delete_project() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_project"]], "delete_python_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_python_function"]], "delete_refresh_policy() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_refresh_policy"]], "delete_streaming_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_streaming_connector"]], "delete_streaming_token() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_streaming_token"]], "delete_vector_store() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_vector_store"]], "delete_webhook() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.delete_webhook"]], "describe_algorithm() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_algorithm"]], "describe_annotation() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.describe_annotation"]], "describe_async_feature_group_operation() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.describe_async_feature_group_operation"]], "describe_batch_prediction() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_batch_prediction"]], "describe_batch_prediction_version() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_batch_prediction_version"]], "describe_custom_loss_function() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_custom_loss_function"]], "describe_custom_metric() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_custom_metric"]], "describe_custom_metric_version() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_custom_metric_version"]], "describe_dataset() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_dataset"]], "describe_dataset_version() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_dataset_version"]], "describe_deployment() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_deployment"]], "describe_eda() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_eda"]], "describe_eda_version() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_eda_version"]], "describe_feature_group() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_feature_group"]], "describe_feature_group_by_table_name() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_feature_group_by_table_name"]], "describe_feature_group_export() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_feature_group_export"]], "describe_feature_group_template() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_feature_group_template"]], "describe_feature_group_version() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_feature_group_version"]], "describe_graph_dashboard() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_graph_dashboard"]], "describe_graph_for_dashboard() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_graph_for_dashboard"]], "describe_image() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.describe_image"]], "describe_image() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.describe_image"]], "describe_model() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_model"]], "describe_model_artifacts_export() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_model_artifacts_export"]], "describe_model_monitor() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_model_monitor"]], "describe_model_monitor_version() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_model_monitor_version"]], "describe_model_version() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_model_version"]], "describe_module() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_module"]], "describe_monitor_alert() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_monitor_alert"]], "describe_monitor_alert_version() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_monitor_alert_version"]], "describe_organization_group() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_organization_group"]], "describe_pipeline() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.describe_pipeline"]], "describe_pipeline_by_name() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.describe_pipeline_by_name"]], "describe_pipeline_step() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_pipeline_step"]], "describe_pipeline_step_by_name() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_pipeline_step_by_name"]], "describe_pipeline_version() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_pipeline_version"]], "describe_problem_type() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_problem_type"]], "describe_project() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_project"]], "describe_project_feature_group() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_project_feature_group"]], "describe_python_function() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_python_function"]], "describe_refresh_pipeline_run() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_refresh_pipeline_run"]], "describe_refresh_policy() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_refresh_policy"]], "describe_train_test_data_split_feature_group() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_train_test_data_split_feature_group"]], "describe_train_test_data_split_feature_group_version() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_train_test_data_split_feature_group_version"]], "describe_upload() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_upload"]], "describe_use_case_requirements() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_use_case_requirements"]], "describe_user() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_user"]], "describe_vector_store() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_vector_store"]], "describe_vector_store_by_name() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_vector_store_by_name"]], "describe_vector_store_version() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_vector_store_version"]], "describe_webhook() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.describe_webhook"]], "description (abacusai.aiagenttrainingconfig attribute)": [[77, "abacusai.AIAgentTrainingConfig.description"]], "detach_feature_group_from_template() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.detach_feature_group_from_template"]], "disable_gpu (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.disable_gpu"]], "disable_networks_without_analytic_quantiles (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.disable_networks_without_analytic_quantiles"]], "disable_test_val_fold (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.disable_test_val_fold"]], "disable_timestamp_scalar_features (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.disable_timestamp_scalar_features"]], "disable_transformer (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.disable_transformer"]], "docker_image_uri (abacusai.customtrainedmodeltrainingconfig attribute)": [[77, "abacusai.CustomTrainedModelTrainingConfig.docker_image_uri"]], "document_format (abacusai.namedentityextractiontrainingconfig attribute)": [[77, "abacusai.NamedEntityExtractionTrainingConfig.document_format"]], "download_batch_prediction_result_chunk() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.download_batch_prediction_result_chunk"]], "download_execute_feature_group_operation_result_part_chunk() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.download_execute_feature_group_operation_result_part_chunk"]], "downsample_item_popularity_percentile (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.downsample_item_popularity_percentile"]], "drop_original_categoricals (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.drop_original_categoricals"]], "dropout_rate (abacusai.documentclassificationtrainingconfig attribute)": [[77, "abacusai.DocumentClassificationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.documentsummarizationtrainingconfig attribute)": [[77, "abacusai.DocumentSummarizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.documentvisualizationtrainingconfig attribute)": [[77, "abacusai.DocumentVisualizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.namedentityextractiontrainingconfig attribute)": [[77, "abacusai.NamedEntityExtractionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.sentenceboundarydetectiontrainingconfig attribute)": [[77, "abacusai.SentenceBoundaryDetectionTrainingConfig.dropout_rate"]], "dropout_rate (abacusai.sentimentdetectiontrainingconfig attribute)": [[77, "abacusai.SentimentDetectionTrainingConfig.dropout_rate"]], "enable_clustering (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.enable_clustering"]], "enable_cold_start (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.enable_cold_start"]], "enable_feature_selection (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.enable_feature_selection"]], "enable_multiple_backtests (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.enable_multiple_backtests"]], "escape (abacusai.parsingconfig attribute)": [[77, "abacusai.ParsingConfig.escape"]], "evaluate_prompt() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.evaluate_prompt"]], "execute_agent() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.execute_agent"]], "execute_agent() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.execute_agent"]], "execute_async_feature_group_operation() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.execute_async_feature_group_operation"]], "execute_feature_group_sql() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.execute_feature_group_sql"]], "experimentation_mode (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.experimentation_mode"]], "explicit_time_split (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.explicit_time_split"]], "explore_lookback_hours (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.explore_lookback_hours"]], "export_custom_model_version() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.export_custom_model_version"]], "export_feature_group_version_to_console() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.export_feature_group_version_to_console"]], "export_feature_group_version_to_database_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.export_feature_group_version_to_database_connector"]], "export_feature_group_version_to_file_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.export_feature_group_version_to_file_connector"]], "export_file_format (abacusai.fileconnectorexportconfig attribute)": [[77, "abacusai.FileConnectorExportConfig.export_file_format"]], "export_model_artifact_as_feature_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.export_model_artifact_as_feature_group"]], "feature_selection_intensity (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.feature_selection_intensity"]], "file_path_with_schema (abacusai.parsingconfig attribute)": [[77, "abacusai.ParsingConfig.file_path_with_schema"]], "fill_missing_values (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.fill_missing_values"]], "filter_history (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.filter_history"]], "filter_items (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.filter_items"]], "force_prediction_length (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.force_prediction_length"]], "forecast_frequency (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.forecast_frequency"]], "from_dict() (abacusai.apiclass class method)": [[77, "abacusai.ApiClass.from_dict"]], "from_dict() (abacusai._apiclassfactory class method)": [[77, "abacusai._ApiClassFactory.from_dict"]], "full_data_retraining (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.full_data_retraining"]], "full_data_retraining (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.full_data_retraining"]], "generate_image() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.generate_image"]], "generate_image() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.generate_image"]], "generate_natural_language_explanation() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.generate_natural_language_explanation"]], "get_agent_context_chat_history() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_agent_context_chat_history"]], "get_alternative_assignments() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_alternative_assignments"]], "get_alternative_assignments() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_alternative_assignments"]], "get_annotations_status() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_annotations_status"]], "get_anomalies() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_anomalies"]], "get_anomalies() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_anomalies"]], "get_api_endpoint() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_api_endpoint"]], "get_assignments() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_assignments"]], "get_assignments() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_assignments"]], "get_batch_prediction_connector_errors() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_batch_prediction_connector_errors"]], "get_chat_response() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_chat_response"]], "get_chat_response() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_chat_response"]], "get_chat_session() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_chat_session"]], "get_classification() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_classification"]], "get_classification() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_classification"]], "get_cluster() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_cluster"]], "get_cluster() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_cluster"]], "get_collinearity_for_feature() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_collinearity_for_feature"]], "get_custom_train_function_info() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_custom_train_function_info"]], "get_database_connector_object_schema() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_database_connector_object_schema"]], "get_dataset_schema() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_dataset_schema"]], "get_docstore_document() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_docstore_document"]], "get_docstore_image() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_docstore_image"]], "get_document_to_annotate() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_document_to_annotate"]], "get_drift_for_feature() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_drift_for_feature"]], "get_eda_collinearity() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_eda_collinearity"]], "get_eda_data_consistency() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_eda_data_consistency"]], "get_eda_forecasting_analysis() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_eda_forecasting_analysis"]], "get_entailment() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_entailment"]], "get_entailment() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_entailment"]], "get_entities_from_pdf() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_entities_from_pdf"]], "get_entities_from_pdf() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_entities_from_pdf"]], "get_execute_feature_group_operation_result_part_count() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_execute_feature_group_operation_result_part_count"]], "get_feature_association() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_feature_association"]], "get_feature_group_export_connector_errors() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_feature_group_export_connector_errors"]], "get_feature_group_schema() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_feature_group_schema"]], "get_feature_group_version_export_download_url() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_feature_group_version_export_download_url"]], "get_feature_importance_by_model_version() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_feature_importance_by_model_version"]], "get_file_connector_instructions() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_file_connector_instructions"]], "get_forecast() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_forecast"]], "get_forecast() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_forecast"]], "get_k_nearest() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_k_nearest"]], "get_k_nearest() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_k_nearest"]], "get_labels() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_labels"]], "get_labels() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_labels"]], "get_llm_parameters() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_llm_parameters"]], "get_materialization_logs() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_materialization_logs"]], "get_model_metrics() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_model_metrics"]], "get_model_monitor_chart_from_organization() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_model_monitor_chart_from_organization"]], "get_model_monitor_summary() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_model_monitor_summary"]], "get_model_monitor_summary_from_organization() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_model_monitor_summary_from_organization"]], "get_model_monitoring_logs() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_model_monitoring_logs"]], "get_model_training_types_for_deployment() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_model_training_types_for_deployment"]], "get_multiple_k_nearest() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_multiple_k_nearest"]], "get_multiple_k_nearest() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_multiple_k_nearest"]], "get_natural_language_explanation() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_natural_language_explanation"]], "get_notebook_cell_completion() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_notebook_cell_completion"]], "get_objects_from_image() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_objects_from_image"]], "get_objects_from_image() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_objects_from_image"]], "get_outliers_for_batch_prediction_feature() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_outliers_for_batch_prediction_feature"]], "get_outliers_for_feature() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_outliers_for_feature"]], "get_personalized_ranking() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_personalized_ranking"]], "get_personalized_ranking() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_personalized_ranking"]], "get_prediction_drift() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_prediction_drift"]], "get_project_feature_group_config() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_project_feature_group_config"]], "get_ranked_items() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_ranked_items"]], "get_ranked_items() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_ranked_items"]], "get_recent_feature_group_streamed_data() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_recent_feature_group_streamed_data"]], "get_recommendations() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_recommendations"]], "get_recommendations() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_recommendations"]], "get_related_items() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_related_items"]], "get_related_items() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_related_items"]], "get_schema() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_schema"]], "get_search_results() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_search_results"]], "get_search_results() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_search_results"]], "get_sentiment() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_sentiment"]], "get_sentiment() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_sentiment"]], "get_summary() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_summary"]], "get_summary() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.get_summary"]], "get_train_function_input() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_train_function_input"]], "get_train_function_input_from_model_version() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_train_function_input_from_model_version"]], "get_training_config_options() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.get_training_config_options"]], "get_training_data_logs() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_training_data_logs"]], "get_training_logs() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.get_training_logs"]], "handle_zeros_as_missing_values (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.handle_zeros_as_missing_values"]], "historical_frequency (abacusai.cumulativeforecastingtrainingconfig attribute)": [[77, "abacusai.CumulativeForecastingTrainingConfig.historical_frequency"]], "history_length (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.history_length"]], "id_column (abacusai.databaseconnectorexportconfig attribute)": [[77, "abacusai.DatabaseConnectorExportConfig.id_column"]], "ignore_datetime_features (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.ignore_datetime_features"]], "import_annotation_labels() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.import_annotation_labels"]], "import_module() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.import_module"]], "imputation (abacusai.clusteringtimeseriestrainingconfig attribute)": [[77, "abacusai.ClusteringTimeseriesTrainingConfig.imputation"]], "include_longformer (abacusai.namedentityextractiontrainingconfig attribute)": [[77, "abacusai.NamedEntityExtractionTrainingConfig.include_longformer"]], "index_fraction (abacusai.naturallanguagesearchtrainingconfig attribute)": [[77, "abacusai.NaturalLanguageSearchTrainingConfig.index_fraction"]], "index_output_path (abacusai.customtrainedmodeltrainingconfig attribute)": [[77, "abacusai.CustomTrainedModelTrainingConfig.index_output_path"]], "initial_learning_rate (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.initial_learning_rate"]], "invalidate_streaming_feature_group_data() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.invalidate_streaming_feature_group_data"]], "is_anomaly() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.is_anomaly"]], "is_anomaly() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.is_anomaly"]], "is_multilingual (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.is_multilingual"]], "is_required (abacusai.pythonfunctionargument attribute)": [[77, "abacusai.PythonFunctionArgument.is_required"]], "item_attributes_weight_column (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.item_attributes_weight_column"]], "item_id_dropout (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.item_id_dropout"]], "k_fold_cross_validation (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.k_fold_cross_validation"]], "key_columns (abacusai.nsamplingconfig attribute)": [[77, "abacusai.NSamplingConfig.key_columns"]], "key_columns (abacusai.percentsamplingconfig attribute)": [[77, "abacusai.PercentSamplingConfig.key_columns"]], "kwargs (abacusai.trainingconfig attribute)": [[77, "abacusai.TrainingConfig.kwargs"]], "l2_regularization_factor (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.l2_regularization_factor"]], "larger_embeddings (abacusai.naturallanguagesearchtrainingconfig attribute)": [[77, "abacusai.NaturalLanguageSearchTrainingConfig.larger_embeddings"]], "list_algorithms() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_algorithms"]], "list_api_keys() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_api_keys"]], "list_application_connector_objects() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_application_connector_objects"]], "list_application_connectors() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_application_connectors"]], "list_batch_prediction_versions() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_batch_prediction_versions"]], "list_batch_predictions() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_batch_predictions"]], "list_builtin_algorithms() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.list_builtin_algorithms"]], "list_chat_sessions() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_chat_sessions"]], "list_custom_loss_functions() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_custom_loss_functions"]], "list_custom_metrics() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_custom_metrics"]], "list_database_connector_objects() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_database_connector_objects"]], "list_database_connectors() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_database_connectors"]], "list_dataset_versions() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_dataset_versions"]], "list_datasets() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_datasets"]], "list_deployment_tokens() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_deployment_tokens"]], "list_deployment_webhooks() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_deployment_webhooks"]], "list_deployments() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_deployments"]], "list_eda() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_eda"]], "list_eda_versions() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_eda_versions"]], "list_feature_group_exports() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_feature_group_exports"]], "list_feature_group_modifiers() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_feature_group_modifiers"]], "list_feature_group_templates() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_feature_group_templates"]], "list_feature_group_versions() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_feature_group_versions"]], "list_feature_groups() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_feature_groups"]], "list_file_connectors() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_file_connectors"]], "list_graph_dashboards() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_graph_dashboards"]], "list_model_artifacts_exports() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_model_artifacts_exports"]], "list_model_monitor_versions() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_model_monitor_versions"]], "list_model_monitors() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_model_monitors"]], "list_model_versions() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_model_versions"]], "list_models() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_models"]], "list_modules() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_modules"]], "list_monitor_alert_versions_for_monitor_version() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_monitor_alert_versions_for_monitor_version"]], "list_monitor_alerts_for_monitor() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_monitor_alerts_for_monitor"]], "list_organization_groups() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_organization_groups"]], "list_organization_model_monitors() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_organization_model_monitors"]], "list_organization_users() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_organization_users"]], "list_pipeline_versions() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.list_pipeline_versions"]], "list_pipelines() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_pipelines"]], "list_project_datasets() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_project_datasets"]], "list_project_feature_group_templates() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_project_feature_group_templates"]], "list_project_feature_groups() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_project_feature_groups"]], "list_projects() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_projects"]], "list_python_function_feature_groups() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_python_function_feature_groups"]], "list_python_functions() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_python_functions"]], "list_refresh_pipeline_runs() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_refresh_pipeline_runs"]], "list_refresh_policies() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_refresh_policies"]], "list_streaming_connectors() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_streaming_connectors"]], "list_streaming_tokens() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_streaming_tokens"]], "list_uploads() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_uploads"]], "list_use_cases() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_use_cases"]], "list_vector_store_versions() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_vector_store_versions"]], "list_vector_stores() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.list_vector_stores"]], "local_scaling_mode (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.local_scaling_mode"]], "location (abacusai.fileconnectorexportconfig attribute)": [[77, "abacusai.FileConnectorExportConfig.location"]], "lookup_features() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.lookup_features"]], "lookup_features() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.lookup_features"]], "lookup_vector_store() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.lookup_vector_store"]], "loss_function (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.loss_function"]], "loss_function (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.loss_function"]], "loss_parameters (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.loss_parameters"]], "mark_upload_complete() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.mark_upload_complete"]], "max_catalog_size (abacusai.customtrainedmodeltrainingconfig attribute)": [[77, "abacusai.CustomTrainedModelTrainingConfig.max_catalog_size"]], "max_dimension (abacusai.customtrainedmodeltrainingconfig attribute)": [[77, "abacusai.CustomTrainedModelTrainingConfig.max_dimension"]], "max_history_length (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.max_history_length"]], "max_scale_context (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.max_scale_context"]], "max_text_words (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.max_text_words"]], "max_user_history_len_percentile (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.max_user_history_len_percentile"]], "min_categorical_count (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.min_categorical_count"]], "mixture_of_gaussians (abacusai.anomalydetectiontrainingconfig attribute)": [[77, "abacusai.AnomalyDetectionTrainingConfig.mixture_of_gaussians"]], "mode (abacusai.databaseconnectorexportconfig attribute)": [[77, "abacusai.DatabaseConnectorExportConfig.mode"]], "model_monitor_version_metric_data() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.model_monitor_version_metric_data"]], "name (abacusai.outputvariablemapping attribute)": [[77, "abacusai.OutputVariableMapping.name"]], "name (abacusai.pythonfunctionargument attribute)": [[77, "abacusai.PythonFunctionArgument.name"]], "ner_model_type (abacusai.namedentityextractiontrainingconfig attribute)": [[77, "abacusai.NamedEntityExtractionTrainingConfig.ner_model_type"]], "num_backtesting_windows (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.num_backtesting_windows"]], "num_clusters_selection (abacusai.clusteringtimeseriestrainingconfig attribute)": [[77, "abacusai.ClusteringTimeseriesTrainingConfig.num_clusters_selection"]], "num_clusters_selection (abacusai.clusteringtrainingconfig attribute)": [[77, "abacusai.ClusteringTrainingConfig.num_clusters_selection"]], "num_completion_tokens (abacusai.naturallanguagesearchtrainingconfig attribute)": [[77, "abacusai.NaturalLanguageSearchTrainingConfig.num_completion_tokens"]], "num_cv_folds (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.num_cv_folds"]], "number_of_samples (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.number_of_samples"]], "numeric_clipping_percentile (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.numeric_clipping_percentile"]], "object_name (abacusai.databaseconnectorexportconfig attribute)": [[77, "abacusai.DatabaseConnectorExportConfig.object_name"]], "objective (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.objective"]], "objective (abacusai.namedentityextractiontrainingconfig attribute)": [[77, "abacusai.NamedEntityExtractionTrainingConfig.objective"]], "objective (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.objective"]], "objective (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.objective"]], "pause_pipeline_refresh_schedule() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.pause_pipeline_refresh_schedule"]], "pause_refresh_policy() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.pause_refresh_policy"]], "perform_feature_selection (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.perform_feature_selection"]], "pipeline_variable (abacusai.pythonfunctionargument attribute)": [[77, "abacusai.PythonFunctionArgument.pipeline_variable"]], "predict() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.predict"]], "predict() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.predict"]], "predict_churn() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.predict_churn"]], "predict_churn() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.predict_churn"]], "predict_class() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.predict_class"]], "predict_class() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.predict_class"]], "predict_fraud() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.predict_fraud"]], "predict_fraud() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.predict_fraud"]], "predict_from_datasets() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.predict_from_datasets"]], "predict_from_datasets() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.predict_from_datasets"]], "predict_function_name (abacusai.customalgorithmtrainingconfig attribute)": [[77, "abacusai.CustomAlgorithmTrainingConfig.predict_function_name"]], "predict_language() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.predict_language"]], "predict_language() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.predict_language"]], "predict_lead() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.predict_lead"]], "predict_lead() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.predict_lead"]], "predict_many_function_name (abacusai.customalgorithmtrainingconfig attribute)": [[77, "abacusai.CustomAlgorithmTrainingConfig.predict_many_function_name"]], "predict_module_name (abacusai.customalgorithmtrainingconfig attribute)": [[77, "abacusai.CustomAlgorithmTrainingConfig.predict_module_name"]], "predict_multiple() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.predict_multiple"]], "predict_multiple() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.predict_multiple"]], "predict_raw() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.predict_raw"]], "predict_residuals (abacusai.cumulativeforecastingtrainingconfig attribute)": [[77, "abacusai.CumulativeForecastingTrainingConfig.predict_residuals"]], "predict_takeover() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.predict_takeover"]], "predict_takeover() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.predict_takeover"]], "predict_target() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.predict_target"]], "predict_target() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.predict_target"]], "predict_with_binary_data() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.predict_with_binary_data"]], "predict_with_binary_data() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.predict_with_binary_data"]], "prediction_length (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.prediction_length"]], "prediction_step_size (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.prediction_step_size"]], "pretrained_model_name (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.pretrained_model_name"]], "preview_feature_group_template_resolution() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.preview_feature_group_template_resolution"]], "probability_quantiles (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.probability_quantiles"]], "problem_type (abacusai.aiagenttrainingconfig attribute)": [[77, "abacusai.AIAgentTrainingConfig.problem_type"]], "problem_type (abacusai.anomalydetectiontrainingconfig attribute)": [[77, "abacusai.AnomalyDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.clusteringtimeseriestrainingconfig attribute)": [[77, "abacusai.ClusteringTimeseriesTrainingConfig.problem_type"]], "problem_type (abacusai.clusteringtrainingconfig attribute)": [[77, "abacusai.ClusteringTrainingConfig.problem_type"]], "problem_type (abacusai.cumulativeforecastingtrainingconfig attribute)": [[77, "abacusai.CumulativeForecastingTrainingConfig.problem_type"]], "problem_type (abacusai.customalgorithmtrainingconfig attribute)": [[77, "abacusai.CustomAlgorithmTrainingConfig.problem_type"]], "problem_type (abacusai.customtrainedmodeltrainingconfig attribute)": [[77, "abacusai.CustomTrainedModelTrainingConfig.problem_type"]], "problem_type (abacusai.documentclassificationtrainingconfig attribute)": [[77, "abacusai.DocumentClassificationTrainingConfig.problem_type"]], "problem_type (abacusai.documentsummarizationtrainingconfig attribute)": [[77, "abacusai.DocumentSummarizationTrainingConfig.problem_type"]], "problem_type (abacusai.documentvisualizationtrainingconfig attribute)": [[77, "abacusai.DocumentVisualizationTrainingConfig.problem_type"]], "problem_type (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.problem_type"]], "problem_type (abacusai.namedentityextractiontrainingconfig attribute)": [[77, "abacusai.NamedEntityExtractionTrainingConfig.problem_type"]], "problem_type (abacusai.naturallanguagesearchtrainingconfig attribute)": [[77, "abacusai.NaturalLanguageSearchTrainingConfig.problem_type"]], "problem_type (abacusai.optimizationtrainingconfig attribute)": [[77, "abacusai.OptimizationTrainingConfig.problem_type"]], "problem_type (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.problem_type"]], "problem_type (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.problem_type"]], "problem_type (abacusai.sentenceboundarydetectiontrainingconfig attribute)": [[77, "abacusai.SentenceBoundaryDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.sentimentdetectiontrainingconfig attribute)": [[77, "abacusai.SentimentDetectionTrainingConfig.problem_type"]], "problem_type (abacusai.themeanalysistrainingconfig attribute)": [[77, "abacusai.ThemeAnalysisTrainingConfig.problem_type"]], "problem_type (abacusai.trainingconfig attribute)": [[77, "abacusai.TrainingConfig.problem_type"]], "quantiles_extension_method (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.quantiles_extension_method"]], "query_feature_group_code_generator() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.query_feature_group_code_generator"]], "rare_class_augmentation_threshold (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.rare_class_augmentation_threshold"]], "rebalance_classes (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.rebalance_classes"]], "recent_days_for_training (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.recent_days_for_training"]], "recurrent_layers (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.recurrent_layers"]], "recurrent_units (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.recurrent_units"]], "remove_column_mapping() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.remove_column_mapping"]], "remove_concatenation_config() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.remove_concatenation_config"]], "remove_dataset_from_project() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.remove_dataset_from_project"]], "remove_deployment_feature_group_export_output() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.remove_deployment_feature_group_export_output"]], "remove_feature_group_annotation_label() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.remove_feature_group_annotation_label"]], "remove_feature_group_from_project() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.remove_feature_group_from_project"]], "remove_feature_group_tag() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.remove_feature_group_tag"]], "remove_feature_tag() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.remove_feature_tag"]], "remove_organization_group_from_feature_group_modifiers() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.remove_organization_group_from_feature_group_modifiers"]], "remove_organization_group_permission() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.remove_organization_group_permission"]], "remove_project_tags() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.remove_project_tags"]], "remove_user_from_feature_group_modifiers() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.remove_user_from_feature_group_modifiers"]], "remove_user_from_organization() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.remove_user_from_organization"]], "remove_user_from_organization_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.remove_user_from_organization_group"]], "rename_application_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.rename_application_connector"]], "rename_database_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.rename_database_connector"]], "rename_deployment() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.rename_deployment"]], "rename_eda() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.rename_eda"]], "rename_model() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.rename_model"]], "rename_model_monitor() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.rename_model_monitor"]], "rename_project() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.rename_project"]], "rename_streaming_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.rename_streaming_connector"]], "render_feature_group_data_for_llm() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.render_feature_group_data_for_llm"]], "render_feature_groups_for_llm() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.render_feature_groups_for_llm"]], "rerun_eda() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.rerun_eda"]], "rerun_model_monitor() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.rerun_model_monitor"]], "resume_pipeline_refresh_schedule() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.resume_pipeline_refresh_schedule"]], "resume_refresh_policy() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.resume_refresh_policy"]], "retrain_model() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.retrain_model"]], "run_monitor_alert() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.run_monitor_alert"]], "run_pipeline() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.run_pipeline"]], "run_refresh_policy() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.run_refresh_policy"]], "sample_count (abacusai.nsamplingconfig attribute)": [[77, "abacusai.NSamplingConfig.sample_count"]], "sample_percent (abacusai.percentsamplingconfig attribute)": [[77, "abacusai.PercentSamplingConfig.sample_percent"]], "sample_weight (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.sample_weight"]], "sampling_method (abacusai.nsamplingconfig attribute)": [[77, "abacusai.NSamplingConfig.sampling_method"]], "sampling_method (abacusai.percentsamplingconfig attribute)": [[77, "abacusai.PercentSamplingConfig.sampling_method"]], "sampling_unit_keys (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.sampling_unit_keys"]], "score_image() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.score_image"]], "score_image() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.score_image"]], "search_chunk_size (abacusai.naturallanguagesearchtrainingconfig attribute)": [[77, "abacusai.NaturalLanguageSearchTrainingConfig.search_chunk_size"]], "search_feature_groups() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.search_feature_groups"]], "sentiment_type (abacusai.sentimentdetectiontrainingconfig attribute)": [[77, "abacusai.SentimentDetectionTrainingConfig.sentiment_type"]], "sequential_training (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.sequential_training"]], "service_port (abacusai.customtrainedmodeltrainingconfig attribute)": [[77, "abacusai.CustomTrainedModelTrainingConfig.service_port"]], "session_event_types (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.session_event_types"]], "set_agent_context_chat_history() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_agent_context_chat_history"]], "set_annotation_status_feature() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_annotation_status_feature"]], "set_auto_deployment() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_auto_deployment"]], "set_azure_blob_connection_string() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_azure_blob_connection_string"]], "set_batch_prediction_database_connector_output() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_batch_prediction_database_connector_output"]], "set_batch_prediction_dataset() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_batch_prediction_dataset"]], "set_batch_prediction_dataset_remap() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_batch_prediction_dataset_remap"]], "set_batch_prediction_feature_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_batch_prediction_feature_group"]], "set_batch_prediction_feature_group_output() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_batch_prediction_feature_group_output"]], "set_batch_prediction_file_connector_output() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_batch_prediction_file_connector_output"]], "set_batch_prediction_output_to_console() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_batch_prediction_output_to_console"]], "set_column_data_type() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_column_data_type"]], "set_column_mapping() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_column_mapping"]], "set_dataset_column_data_type() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_dataset_column_data_type"]], "set_dataset_database_connector_config() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.set_dataset_database_connector_config"]], "set_default_model_algorithm() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.set_default_model_algorithm"]], "set_default_organization_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_default_organization_group"]], "set_deployment_feature_group_export_database_connector_output() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_deployment_feature_group_export_database_connector_output"]], "set_deployment_feature_group_export_file_connector_output() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_deployment_feature_group_export_file_connector_output"]], "set_deployment_feature_group_version() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_deployment_feature_group_version"]], "set_deployment_model_version() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_deployment_model_version"]], "set_feature_as_annotatable_feature() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_feature_as_annotatable_feature"]], "set_feature_group_indexing_config() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_feature_group_indexing_config"]], "set_feature_group_merge_config() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_feature_group_merge_config"]], "set_feature_group_modifier_lock() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_feature_group_modifier_lock"]], "set_feature_group_sampling_config() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_feature_group_sampling_config"]], "set_feature_group_schema() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_feature_group_schema"]], "set_feature_group_transform_config() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_feature_group_transform_config"]], "set_feature_group_type() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_feature_group_type"]], "set_feature_mapping() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_feature_mapping"]], "set_feature_type() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_feature_type"]], "set_model_objective() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.set_model_objective"]], "set_model_prediction_params() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_model_prediction_params"]], "set_model_training_config() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_model_training_config"]], "set_natural_language_explanation() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_natural_language_explanation"]], "set_project_feature_group_config() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_project_feature_group_config"]], "set_streaming_retention_policy() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.set_streaming_retention_policy"]], "skip_input_transform (abacusai.cumulativeforecastingtrainingconfig attribute)": [[77, "abacusai.CumulativeForecastingTrainingConfig.skip_input_transform"]], "skip_local_scale_target (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.skip_local_scale_target"]], "skip_missing (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.skip_missing"]], "skip_target_transform (abacusai.cumulativeforecastingtrainingconfig attribute)": [[77, "abacusai.CumulativeForecastingTrainingConfig.skip_target_transform"]], "skip_timeseries_weight_scaling (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.skip_timeseries_weight_scaling"]], "smooth_history (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.smooth_history"]], "snapshot_streaming_data() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.snapshot_streaming_data"]], "sort_objective (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.sort_objective"]], "sort_objective (abacusai.namedentityextractiontrainingconfig attribute)": [[77, "abacusai.NamedEntityExtractionTrainingConfig.sort_objective"]], "sort_objective (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.sort_objective"]], "sort_objective (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.sort_objective"]], "spike_down (abacusai.anomalydetectiontrainingconfig attribute)": [[77, "abacusai.AnomalyDetectionTrainingConfig.spike_down"]], "spike_up (abacusai.anomalydetectiontrainingconfig attribute)": [[77, "abacusai.AnomalyDetectionTrainingConfig.spike_up"]], "start_batch_prediction() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.start_batch_prediction"]], "start_deployment() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.start_deployment"]], "stop_deployment() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.stop_deployment"]], "stream_message() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.stream_message"]], "streaming_evaluate_prompt() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.streaming_evaluate_prompt"]], "suggest_feature_group_template_for_feature_group() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.suggest_feature_group_template_for_feature_group"]], "symmetrize_quantiles (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.symmetrize_quantiles"]], "target_action_types (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.target_action_types"]], "target_action_weights (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.target_action_weights"]], "target_encode_categoricals (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.target_encode_categoricals"]], "target_transform (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.target_transform"]], "test_by_item (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.test_by_item"]], "test_last_items_length (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.test_last_items_length"]], "test_on_user_split (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.test_on_user_split"]], "test_row_indicator (abacusai.namedentityextractiontrainingconfig attribute)": [[77, "abacusai.NamedEntityExtractionTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.test_row_indicator"]], "test_row_indicator (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.test_row_indicator"]], "test_split (abacusai.anomalydetectiontrainingconfig attribute)": [[77, "abacusai.AnomalyDetectionTrainingConfig.test_split"]], "test_split (abacusai.cumulativeforecastingtrainingconfig attribute)": [[77, "abacusai.CumulativeForecastingTrainingConfig.test_split"]], "test_split (abacusai.customalgorithmtrainingconfig attribute)": [[77, "abacusai.CustomAlgorithmTrainingConfig.test_split"]], "test_split (abacusai.documentclassificationtrainingconfig attribute)": [[77, "abacusai.DocumentClassificationTrainingConfig.test_split"]], "test_split (abacusai.documentsummarizationtrainingconfig attribute)": [[77, "abacusai.DocumentSummarizationTrainingConfig.test_split"]], "test_split (abacusai.documentvisualizationtrainingconfig attribute)": [[77, "abacusai.DocumentVisualizationTrainingConfig.test_split"]], "test_split (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.test_split"]], "test_split (abacusai.namedentityextractiontrainingconfig attribute)": [[77, "abacusai.NamedEntityExtractionTrainingConfig.test_split"]], "test_split (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.test_split"]], "test_split (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.test_split"]], "test_split (abacusai.sentenceboundarydetectiontrainingconfig attribute)": [[77, "abacusai.SentenceBoundaryDetectionTrainingConfig.test_split"]], "test_split (abacusai.sentimentdetectiontrainingconfig attribute)": [[77, "abacusai.SentimentDetectionTrainingConfig.test_split"]], "test_split_on_last_k_items (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.test_split_on_last_k_items"]], "test_splitting_timestamp (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.test_splitting_timestamp"]], "test_start (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.test_start"]], "test_window_length_hours (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.test_window_length_hours"]], "timeseries_loss_weight_column (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.timeseries_loss_weight_column"]], "timeseries_weight_column (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.timeseries_weight_column"]], "timestamp_based_splitting_column (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.timestamp_based_splitting_column"]], "timestamp_based_splitting_method (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.timestamp_based_splitting_method"]], "to_dict() (abacusai.apiclass method)": [[77, "abacusai.ApiClass.to_dict"]], "to_dict() (abacusai.databaseconnectorexportconfig method)": [[77, "abacusai.DatabaseConnectorExportConfig.to_dict"]], "to_dict() (abacusai.fileconnectorexportconfig method)": [[77, "abacusai.FileConnectorExportConfig.to_dict"]], "train_function_name (abacusai.customalgorithmtrainingconfig attribute)": [[77, "abacusai.CustomAlgorithmTrainingConfig.train_function_name"]], "train_model() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.train_model"]], "train_module_name (abacusai.customalgorithmtrainingconfig attribute)": [[77, "abacusai.CustomAlgorithmTrainingConfig.train_module_name"]], "training_input_tables (abacusai.customalgorithmtrainingconfig attribute)": [[77, "abacusai.CustomAlgorithmTrainingConfig.training_input_tables"]], "training_mode (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.training_mode"]], "training_point_overlap (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.training_point_overlap"]], "training_rows_downsample_ratio (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.training_rows_downsample_ratio"]], "training_start_date (abacusai.personalizationtrainingconfig attribute)": [[77, "abacusai.PersonalizationTrainingConfig.training_start_date"]], "transcribe_audio() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.transcribe_audio"]], "transcribe_audio() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.transcribe_audio"]], "transfer_style() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.transfer_style"]], "transfer_style() (abacusai.predictionclient method)": [[77, "abacusai.PredictionClient.transfer_style"]], "tree_hpo_mode (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.tree_hpo_mode"]], "trend_change (abacusai.anomalydetectiontrainingconfig attribute)": [[77, "abacusai.AnomalyDetectionTrainingConfig.trend_change"]], "type_of_split (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.type_of_split"]], "type_of_split (abacusai.regressiontrainingconfig attribute)": [[77, "abacusai.RegressionTrainingConfig.type_of_split"]], "underprediction_weight (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.underprediction_weight"]], "unset_feature_as_annotatable_feature() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.unset_feature_as_annotatable_feature"]], "unset_pipeline_refresh_schedule() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.unset_pipeline_refresh_schedule"]], "update_agent() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_agent"]], "update_agent_with_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_agent_with_function"]], "update_algorithm() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_algorithm"]], "update_algorithm_from_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_algorithm_from_function"]], "update_annotation_status() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_annotation_status"]], "update_batch_prediction() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_batch_prediction"]], "update_custom_loss_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_custom_loss_function"]], "update_custom_loss_function_with_source_code() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_custom_loss_function_with_source_code"]], "update_custom_metric() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_custom_metric"]], "update_custom_metric_from_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_custom_metric_from_function"]], "update_dataset_feature_group_feature_expression() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_dataset_feature_group_feature_expression"]], "update_deployment() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_deployment"]], "update_feature() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_feature"]], "update_feature_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_feature_group"]], "update_feature_group_from_pandas_df() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_feature_group_from_pandas_df"]], "update_feature_group_from_spark_df() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_feature_group_from_spark_df"]], "update_feature_group_function_definition() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_feature_group_function_definition"]], "update_feature_group_git() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_feature_group_git"]], "update_feature_group_python_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_feature_group_python_function"]], "update_feature_group_python_function_bindings() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_feature_group_python_function_bindings"]], "update_feature_group_sql_definition() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_feature_group_sql_definition"]], "update_feature_group_template() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_feature_group_template"]], "update_feature_group_template_bindings() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_feature_group_template_bindings"]], "update_feature_group_zip() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_feature_group_zip"]], "update_graph_dashboard() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_graph_dashboard"]], "update_graph_to_dashboard() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_graph_to_dashboard"]], "update_module() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_module"]], "update_module_from_notebook() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_module_from_notebook"]], "update_monitor_alert() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_monitor_alert"]], "update_nested_feature() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_nested_feature"]], "update_pipeline() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_pipeline"]], "update_pipeline_step() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_pipeline_step"]], "update_pipeline_step_from_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_pipeline_step_from_function"]], "update_point_in_time_feature() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_point_in_time_feature"]], "update_point_in_time_group() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_point_in_time_group"]], "update_point_in_time_group_feature() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_point_in_time_group_feature"]], "update_python_function() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_python_function"]], "update_python_function_code() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_python_function_code"]], "update_python_model() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_python_model"]], "update_python_model_git() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_python_model_git"]], "update_python_model_zip() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_python_model_zip"]], "update_refresh_policy() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_refresh_policy"]], "update_vector_store() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_vector_store"]], "update_webhook() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.update_webhook"]], "upload_part() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.upload_part"]], "upsert_data() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.upsert_data"]], "upsert_data() (abacusai.streamingclient method)": [[77, "abacusai.StreamingClient.upsert_data"]], "upsert_item_attributes() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.upsert_item_attributes"]], "upsert_item_embeddings() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.upsert_item_embeddings"]], "upsert_item_embeddings() (abacusai.streamingclient method)": [[77, "abacusai.StreamingClient.upsert_item_embeddings"]], "upsert_multiple_data() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.upsert_multiple_data"]], "upsert_multiple_data() (abacusai.streamingclient method)": [[77, "abacusai.StreamingClient.upsert_multiple_data"]], "upsert_multiple_item_attributes() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.upsert_multiple_item_attributes"]], "upsert_multiple_item_embeddings() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.upsert_multiple_item_embeddings"]], "upsert_multiple_item_embeddings() (abacusai.streamingclient method)": [[77, "abacusai.StreamingClient.upsert_multiple_item_embeddings"]], "upsert_multiple_user_attributes() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.upsert_multiple_user_attributes"]], "upsert_user_attributes() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.upsert_user_attributes"]], "use_all_item_totals (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.use_all_item_totals"]], "use_feature_group_for_training() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.use_feature_group_for_training"]], "use_item_id (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.use_item_id"]], "use_item_weights_in_objective (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.use_item_weights_in_objective"]], "use_log_transforms (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.use_log_transforms"]], "use_timeseries_weights_in_objective (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.use_timeseries_weights_in_objective"]], "validate_project() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.validate_project"]], "value (abacusai.pythonfunctionargument attribute)": [[77, "abacusai.PythonFunctionArgument.value"]], "value_high (abacusai.anomalydetectiontrainingconfig attribute)": [[77, "abacusai.AnomalyDetectionTrainingConfig.value_high"]], "variable_type (abacusai.outputvariablemapping attribute)": [[77, "abacusai.OutputVariableMapping.variable_type"]], "variable_type (abacusai.pythonfunctionargument attribute)": [[77, "abacusai.PythonFunctionArgument.variable_type"]], "variational_autoencoder (abacusai.anomalydetectiontrainingconfig attribute)": [[77, "abacusai.AnomalyDetectionTrainingConfig.variational_autoencoder"]], "verify_and_describe_annotation() (abacusai.readonlyclient method)": [[77, "abacusai.ReadOnlyClient.verify_and_describe_annotation"]], "verify_application_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.verify_application_connector"]], "verify_database_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.verify_database_connector"]], "verify_file_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.verify_file_connector"]], "verify_streaming_connector() (abacusai.apiclient method)": [[77, "abacusai.ApiClient.verify_streaming_connector"]], "zero_predictor (abacusai.forecastingtrainingconfig attribute)": [[77, "abacusai.ForecastingTrainingConfig.zero_predictor"]], "zero_shot_hypotheses (abacusai.documentclassificationtrainingconfig attribute)": [[77, "abacusai.DocumentClassificationTrainingConfig.zero_shot_hypotheses"]], "indexingconfig (class in abacusai.indexing_config)": [[78, "abacusai.indexing_config.IndexingConfig"]], "__repr__() (abacusai.indexing_config.indexingconfig method)": [[78, "abacusai.indexing_config.IndexingConfig.__repr__"]], "abacusai.indexing_config": [[78, "module-abacusai.indexing_config"]], "to_dict() (abacusai.indexing_config.indexingconfig method)": [[78, "abacusai.indexing_config.IndexingConfig.to_dict"]], "itemstatistics (class in abacusai.item_statistics)": [[79, "abacusai.item_statistics.ItemStatistics"]], "__repr__() (abacusai.item_statistics.itemstatistics method)": [[79, "abacusai.item_statistics.ItemStatistics.__repr__"]], "abacusai.item_statistics": [[79, "module-abacusai.item_statistics"]], "to_dict() (abacusai.item_statistics.itemstatistics method)": [[79, "abacusai.item_statistics.ItemStatistics.to_dict"]], "llmcodeblock (class in abacusai.llm_code_block)": [[80, "abacusai.llm_code_block.LlmCodeBlock"]], "__repr__() (abacusai.llm_code_block.llmcodeblock method)": [[80, "abacusai.llm_code_block.LlmCodeBlock.__repr__"]], "abacusai.llm_code_block": [[80, "module-abacusai.llm_code_block"]], "to_dict() (abacusai.llm_code_block.llmcodeblock method)": [[80, "abacusai.llm_code_block.LlmCodeBlock.to_dict"]], "llminput (class in abacusai.llm_input)": [[81, "abacusai.llm_input.LlmInput"]], "__repr__() (abacusai.llm_input.llminput method)": [[81, "abacusai.llm_input.LlmInput.__repr__"]], "abacusai.llm_input": [[81, "module-abacusai.llm_input"]], "to_dict() (abacusai.llm_input.llminput method)": [[81, "abacusai.llm_input.LlmInput.to_dict"]], "llmparameters (class in abacusai.llm_parameters)": [[82, "abacusai.llm_parameters.LlmParameters"]], "__repr__() (abacusai.llm_parameters.llmparameters method)": [[82, "abacusai.llm_parameters.LlmParameters.__repr__"]], "abacusai.llm_parameters": [[82, "module-abacusai.llm_parameters"]], "to_dict() (abacusai.llm_parameters.llmparameters method)": [[82, "abacusai.llm_parameters.LlmParameters.to_dict"]], "llmresponse (class in abacusai.llm_response)": [[83, "abacusai.llm_response.LlmResponse"]], "__repr__() (abacusai.llm_response.llmresponse method)": [[83, "abacusai.llm_response.LlmResponse.__repr__"]], "abacusai.llm_response": [[83, "module-abacusai.llm_response"]], "to_dict() (abacusai.llm_response.llmresponse method)": [[83, "abacusai.llm_response.LlmResponse.to_dict"]], "model (class in abacusai.model)": [[84, "abacusai.model.Model"]], "__repr__() (abacusai.model.model method)": [[84, "abacusai.model.Model.__repr__"]], "abacusai.model": [[84, "module-abacusai.model"]], "create_refresh_policy() (abacusai.model.model method)": [[84, "abacusai.model.Model.create_refresh_policy"]], "delete() (abacusai.model.model method)": [[84, "abacusai.model.Model.delete"]], "describe() (abacusai.model.model method)": [[84, "abacusai.model.Model.describe"]], "describe_train_test_data_split_feature_group() (abacusai.model.model method)": [[84, "abacusai.model.Model.describe_train_test_data_split_feature_group"]], "get_metrics() (abacusai.model.model method)": [[84, "abacusai.model.Model.get_metrics"]], "get_status() (abacusai.model.model method)": [[84, "abacusai.model.Model.get_status"]], "get_train_test_feature_group_as_pandas() (abacusai.model.model method)": [[84, "abacusai.model.Model.get_train_test_feature_group_as_pandas"]], "get_training_types_for_deployment() (abacusai.model.model method)": [[84, "abacusai.model.Model.get_training_types_for_deployment"]], "list_artifacts_exports() (abacusai.model.model method)": [[84, "abacusai.model.Model.list_artifacts_exports"]], "list_refresh_policies() (abacusai.model.model method)": [[84, "abacusai.model.Model.list_refresh_policies"]], "list_versions() (abacusai.model.model method)": [[84, "abacusai.model.Model.list_versions"]], "refresh() (abacusai.model.model method)": [[84, "abacusai.model.Model.refresh"]], "rename() (abacusai.model.model method)": [[84, "abacusai.model.Model.rename"]], "retrain() (abacusai.model.model method)": [[84, "abacusai.model.Model.retrain"]], "set_default_algorithm() (abacusai.model.model method)": [[84, "abacusai.model.Model.set_default_algorithm"]], "set_prediction_params() (abacusai.model.model method)": [[84, "abacusai.model.Model.set_prediction_params"]], "set_training_config() (abacusai.model.model method)": [[84, "abacusai.model.Model.set_training_config"]], "to_dict() (abacusai.model.model method)": [[84, "abacusai.model.Model.to_dict"]], "update_agent() (abacusai.model.model method)": [[84, "abacusai.model.Model.update_agent"]], "update_python() (abacusai.model.model method)": [[84, "abacusai.model.Model.update_python"]], "update_python_git() (abacusai.model.model method)": [[84, "abacusai.model.Model.update_python_git"]], "update_python_zip() (abacusai.model.model method)": [[84, "abacusai.model.Model.update_python_zip"]], "wait_for_evaluation() (abacusai.model.model method)": [[84, "abacusai.model.Model.wait_for_evaluation"]], "wait_for_full_automl() (abacusai.model.model method)": [[84, "abacusai.model.Model.wait_for_full_automl"]], "wait_for_publish() (abacusai.model.model method)": [[84, "abacusai.model.Model.wait_for_publish"]], "wait_for_training() (abacusai.model.model method)": [[84, "abacusai.model.Model.wait_for_training"]], "modelartifactsexport (class in abacusai.model_artifacts_export)": [[85, "abacusai.model_artifacts_export.ModelArtifactsExport"]], "__repr__() (abacusai.model_artifacts_export.modelartifactsexport method)": [[85, "abacusai.model_artifacts_export.ModelArtifactsExport.__repr__"]], "abacusai.model_artifacts_export": [[85, "module-abacusai.model_artifacts_export"]], "describe() (abacusai.model_artifacts_export.modelartifactsexport method)": [[85, "abacusai.model_artifacts_export.ModelArtifactsExport.describe"]], "get_status() (abacusai.model_artifacts_export.modelartifactsexport method)": [[85, "abacusai.model_artifacts_export.ModelArtifactsExport.get_status"]], "refresh() (abacusai.model_artifacts_export.modelartifactsexport method)": [[85, "abacusai.model_artifacts_export.ModelArtifactsExport.refresh"]], "to_dict() (abacusai.model_artifacts_export.modelartifactsexport method)": [[85, "abacusai.model_artifacts_export.ModelArtifactsExport.to_dict"]], "wait_for_results() (abacusai.model_artifacts_export.modelartifactsexport method)": [[85, "abacusai.model_artifacts_export.ModelArtifactsExport.wait_for_results"]], "modelblueprintexport (class in abacusai.model_blueprint_export)": [[86, "abacusai.model_blueprint_export.ModelBlueprintExport"]], "__repr__() (abacusai.model_blueprint_export.modelblueprintexport method)": [[86, "abacusai.model_blueprint_export.ModelBlueprintExport.__repr__"]], "abacusai.model_blueprint_export": [[86, "module-abacusai.model_blueprint_export"]], "to_dict() (abacusai.model_blueprint_export.modelblueprintexport method)": [[86, "abacusai.model_blueprint_export.ModelBlueprintExport.to_dict"]], "modelblueprintstage (class in abacusai.model_blueprint_stage)": [[87, "abacusai.model_blueprint_stage.ModelBlueprintStage"]], "__repr__() (abacusai.model_blueprint_stage.modelblueprintstage method)": [[87, "abacusai.model_blueprint_stage.ModelBlueprintStage.__repr__"]], "abacusai.model_blueprint_stage": [[87, "module-abacusai.model_blueprint_stage"]], "to_dict() (abacusai.model_blueprint_stage.modelblueprintstage method)": [[87, "abacusai.model_blueprint_stage.ModelBlueprintStage.to_dict"]], "modellocation (class in abacusai.model_location)": [[88, "abacusai.model_location.ModelLocation"]], "__repr__() (abacusai.model_location.modellocation method)": [[88, "abacusai.model_location.ModelLocation.__repr__"]], "abacusai.model_location": [[88, "module-abacusai.model_location"]], "to_dict() (abacusai.model_location.modellocation method)": [[88, "abacusai.model_location.ModelLocation.to_dict"]], "modelmetrics (class in abacusai.model_metrics)": [[89, "abacusai.model_metrics.ModelMetrics"]], "__repr__() (abacusai.model_metrics.modelmetrics method)": [[89, "abacusai.model_metrics.ModelMetrics.__repr__"]], "abacusai.model_metrics": [[89, "module-abacusai.model_metrics"]], "to_dict() (abacusai.model_metrics.modelmetrics method)": [[89, "abacusai.model_metrics.ModelMetrics.to_dict"]], "modelmonitor (class in abacusai.model_monitor)": [[90, "abacusai.model_monitor.ModelMonitor"]], "__repr__() (abacusai.model_monitor.modelmonitor method)": [[90, "abacusai.model_monitor.ModelMonitor.__repr__"]], "abacusai.model_monitor": [[90, "module-abacusai.model_monitor"]], "delete() (abacusai.model_monitor.modelmonitor method)": [[90, "abacusai.model_monitor.ModelMonitor.delete"]], "describe() (abacusai.model_monitor.modelmonitor method)": [[90, "abacusai.model_monitor.ModelMonitor.describe"]], "get_summary() (abacusai.model_monitor.modelmonitor method)": [[90, "abacusai.model_monitor.ModelMonitor.get_summary"]], "list_monitor_alerts_for_monitor() (abacusai.model_monitor.modelmonitor method)": [[90, "abacusai.model_monitor.ModelMonitor.list_monitor_alerts_for_monitor"]], "list_versions() (abacusai.model_monitor.modelmonitor method)": [[90, "abacusai.model_monitor.ModelMonitor.list_versions"]], "refresh() (abacusai.model_monitor.modelmonitor method)": [[90, "abacusai.model_monitor.ModelMonitor.refresh"]], "rename() (abacusai.model_monitor.modelmonitor method)": [[90, "abacusai.model_monitor.ModelMonitor.rename"]], "rerun() (abacusai.model_monitor.modelmonitor method)": [[90, "abacusai.model_monitor.ModelMonitor.rerun"]], "to_dict() (abacusai.model_monitor.modelmonitor method)": [[90, "abacusai.model_monitor.ModelMonitor.to_dict"]], "modelmonitororgsummary (class in abacusai.model_monitor_org_summary)": [[91, "abacusai.model_monitor_org_summary.ModelMonitorOrgSummary"]], "__repr__() (abacusai.model_monitor_org_summary.modelmonitororgsummary method)": [[91, "abacusai.model_monitor_org_summary.ModelMonitorOrgSummary.__repr__"]], "abacusai.model_monitor_org_summary": [[91, "module-abacusai.model_monitor_org_summary"]], "to_dict() (abacusai.model_monitor_org_summary.modelmonitororgsummary method)": [[91, "abacusai.model_monitor_org_summary.ModelMonitorOrgSummary.to_dict"]], "modelmonitorsummary (class in abacusai.model_monitor_summary)": [[92, "abacusai.model_monitor_summary.ModelMonitorSummary"]], "__repr__() (abacusai.model_monitor_summary.modelmonitorsummary method)": [[92, "abacusai.model_monitor_summary.ModelMonitorSummary.__repr__"]], "abacusai.model_monitor_summary": [[92, "module-abacusai.model_monitor_summary"]], "to_dict() (abacusai.model_monitor_summary.modelmonitorsummary method)": [[92, "abacusai.model_monitor_summary.ModelMonitorSummary.to_dict"]], "modelmonitorsummaryfromorg (class in abacusai.model_monitor_summary_from_org)": [[93, "abacusai.model_monitor_summary_from_org.ModelMonitorSummaryFromOrg"]], "__repr__() (abacusai.model_monitor_summary_from_org.modelmonitorsummaryfromorg method)": [[93, "abacusai.model_monitor_summary_from_org.ModelMonitorSummaryFromOrg.__repr__"]], "abacusai.model_monitor_summary_from_org": [[93, "module-abacusai.model_monitor_summary_from_org"]], "to_dict() (abacusai.model_monitor_summary_from_org.modelmonitorsummaryfromorg method)": [[93, "abacusai.model_monitor_summary_from_org.ModelMonitorSummaryFromOrg.to_dict"]], "modelmonitorversion (class in abacusai.model_monitor_version)": [[94, "abacusai.model_monitor_version.ModelMonitorVersion"]], "__repr__() (abacusai.model_monitor_version.modelmonitorversion method)": [[94, "abacusai.model_monitor_version.ModelMonitorVersion.__repr__"]], "abacusai.model_monitor_version": [[94, "module-abacusai.model_monitor_version"]], "delete() (abacusai.model_monitor_version.modelmonitorversion method)": [[94, "abacusai.model_monitor_version.ModelMonitorVersion.delete"]], "describe() (abacusai.model_monitor_version.modelmonitorversion method)": [[94, "abacusai.model_monitor_version.ModelMonitorVersion.describe"]], "get_drift_for_feature() (abacusai.model_monitor_version.modelmonitorversion method)": [[94, "abacusai.model_monitor_version.ModelMonitorVersion.get_drift_for_feature"]], "get_model_monitoring_logs() (abacusai.model_monitor_version.modelmonitorversion method)": [[94, "abacusai.model_monitor_version.ModelMonitorVersion.get_model_monitoring_logs"]], "get_outliers_for_feature() (abacusai.model_monitor_version.modelmonitorversion method)": [[94, "abacusai.model_monitor_version.ModelMonitorVersion.get_outliers_for_feature"]], "get_prediction_drift() (abacusai.model_monitor_version.modelmonitorversion method)": [[94, "abacusai.model_monitor_version.ModelMonitorVersion.get_prediction_drift"]], "get_status() (abacusai.model_monitor_version.modelmonitorversion method)": [[94, "abacusai.model_monitor_version.ModelMonitorVersion.get_status"]], "list_monitor_alert_versions_for_monitor_version() (abacusai.model_monitor_version.modelmonitorversion method)": [[94, "abacusai.model_monitor_version.ModelMonitorVersion.list_monitor_alert_versions_for_monitor_version"]], "metric_data() (abacusai.model_monitor_version.modelmonitorversion method)": [[94, "abacusai.model_monitor_version.ModelMonitorVersion.metric_data"]], "refresh() (abacusai.model_monitor_version.modelmonitorversion method)": [[94, "abacusai.model_monitor_version.ModelMonitorVersion.refresh"]], "to_dict() (abacusai.model_monitor_version.modelmonitorversion method)": [[94, "abacusai.model_monitor_version.ModelMonitorVersion.to_dict"]], "wait_for_monitor() (abacusai.model_monitor_version.modelmonitorversion method)": [[94, "abacusai.model_monitor_version.ModelMonitorVersion.wait_for_monitor"]], "modelmonitorversionmetricdata (class in abacusai.model_monitor_version_metric_data)": [[95, "abacusai.model_monitor_version_metric_data.ModelMonitorVersionMetricData"]], "__repr__() (abacusai.model_monitor_version_metric_data.modelmonitorversionmetricdata method)": [[95, "abacusai.model_monitor_version_metric_data.ModelMonitorVersionMetricData.__repr__"]], "abacusai.model_monitor_version_metric_data": [[95, "module-abacusai.model_monitor_version_metric_data"]], "to_dict() (abacusai.model_monitor_version_metric_data.modelmonitorversionmetricdata method)": [[95, "abacusai.model_monitor_version_metric_data.ModelMonitorVersionMetricData.to_dict"]], "modeltrainingtypefordeployment (class in abacusai.model_training_type_for_deployment)": [[96, "abacusai.model_training_type_for_deployment.ModelTrainingTypeForDeployment"]], "__repr__() (abacusai.model_training_type_for_deployment.modeltrainingtypefordeployment method)": [[96, "abacusai.model_training_type_for_deployment.ModelTrainingTypeForDeployment.__repr__"]], "abacusai.model_training_type_for_deployment": [[96, "module-abacusai.model_training_type_for_deployment"]], "to_dict() (abacusai.model_training_type_for_deployment.modeltrainingtypefordeployment method)": [[96, "abacusai.model_training_type_for_deployment.ModelTrainingTypeForDeployment.to_dict"]], "modelupload (class in abacusai.model_upload)": [[97, "abacusai.model_upload.ModelUpload"]], "__repr__() (abacusai.model_upload.modelupload method)": [[97, "abacusai.model_upload.ModelUpload.__repr__"]], "abacusai.model_upload": [[97, "module-abacusai.model_upload"]], "to_dict() (abacusai.model_upload.modelupload method)": [[97, "abacusai.model_upload.ModelUpload.to_dict"]], "modelversion (class in abacusai.model_version)": [[98, "abacusai.model_version.ModelVersion"]], "__repr__() (abacusai.model_version.modelversion method)": [[98, "abacusai.model_version.ModelVersion.__repr__"]], "abacusai.model_version": [[98, "module-abacusai.model_version"]], "delete() (abacusai.model_version.modelversion method)": [[98, "abacusai.model_version.ModelVersion.delete"]], "describe() (abacusai.model_version.modelversion method)": [[98, "abacusai.model_version.ModelVersion.describe"]], "describe_train_test_data_split_feature_group_version() (abacusai.model_version.modelversion method)": [[98, "abacusai.model_version.ModelVersion.describe_train_test_data_split_feature_group_version"]], "export_custom() (abacusai.model_version.modelversion method)": [[98, "abacusai.model_version.ModelVersion.export_custom"]], "export_model_artifact_as_feature_group() (abacusai.model_version.modelversion method)": [[98, "abacusai.model_version.ModelVersion.export_model_artifact_as_feature_group"]], "get_feature_importance_by() (abacusai.model_version.modelversion method)": [[98, "abacusai.model_version.ModelVersion.get_feature_importance_by"]], "get_status() (abacusai.model_version.modelversion method)": [[98, "abacusai.model_version.ModelVersion.get_status"]], "get_train_test_feature_group_as_pandas() (abacusai.model_version.modelversion method)": [[98, "abacusai.model_version.ModelVersion.get_train_test_feature_group_as_pandas"]], "get_training_data_logs() (abacusai.model_version.modelversion method)": [[98, "abacusai.model_version.ModelVersion.get_training_data_logs"]], "get_training_logs() (abacusai.model_version.modelversion method)": [[98, "abacusai.model_version.ModelVersion.get_training_logs"]], "refresh() (abacusai.model_version.modelversion method)": [[98, "abacusai.model_version.ModelVersion.refresh"]], "set_model_objective() (abacusai.model_version.modelversion method)": [[98, "abacusai.model_version.ModelVersion.set_model_objective"]], "to_dict() (abacusai.model_version.modelversion method)": [[98, "abacusai.model_version.ModelVersion.to_dict"]], "wait_for_full_automl() (abacusai.model_version.modelversion method)": [[98, "abacusai.model_version.ModelVersion.wait_for_full_automl"]], "wait_for_training() (abacusai.model_version.modelversion method)": [[98, "abacusai.model_version.ModelVersion.wait_for_training"]], "modificationlockinfo (class in abacusai.modification_lock_info)": [[99, "abacusai.modification_lock_info.ModificationLockInfo"]], "__repr__() (abacusai.modification_lock_info.modificationlockinfo method)": [[99, "abacusai.modification_lock_info.ModificationLockInfo.__repr__"]], "abacusai.modification_lock_info": [[99, "module-abacusai.modification_lock_info"]], "to_dict() (abacusai.modification_lock_info.modificationlockinfo method)": [[99, "abacusai.modification_lock_info.ModificationLockInfo.to_dict"]], "module (class in abacusai.module)": [[100, "abacusai.module.Module"]], "__repr__() (abacusai.module.module method)": [[100, "abacusai.module.Module.__repr__"]], "abacusai.module": [[100, "module-abacusai.module"]], "to_dict() (abacusai.module.module method)": [[100, "abacusai.module.Module.to_dict"]], "monitoralert (class in abacusai.monitor_alert)": [[101, "abacusai.monitor_alert.MonitorAlert"]], "__repr__() (abacusai.monitor_alert.monitoralert method)": [[101, "abacusai.monitor_alert.MonitorAlert.__repr__"]], "abacusai.monitor_alert": [[101, "module-abacusai.monitor_alert"]], "delete() (abacusai.monitor_alert.monitoralert method)": [[101, "abacusai.monitor_alert.MonitorAlert.delete"]], "describe() (abacusai.monitor_alert.monitoralert method)": [[101, "abacusai.monitor_alert.MonitorAlert.describe"]], "refresh() (abacusai.monitor_alert.monitoralert method)": [[101, "abacusai.monitor_alert.MonitorAlert.refresh"]], "run() (abacusai.monitor_alert.monitoralert method)": [[101, "abacusai.monitor_alert.MonitorAlert.run"]], "to_dict() (abacusai.monitor_alert.monitoralert method)": [[101, "abacusai.monitor_alert.MonitorAlert.to_dict"]], "update() (abacusai.monitor_alert.monitoralert method)": [[101, "abacusai.monitor_alert.MonitorAlert.update"]], "monitoralertversion (class in abacusai.monitor_alert_version)": [[102, "abacusai.monitor_alert_version.MonitorAlertVersion"]], "__repr__() (abacusai.monitor_alert_version.monitoralertversion method)": [[102, "abacusai.monitor_alert_version.MonitorAlertVersion.__repr__"]], "abacusai.monitor_alert_version": [[102, "module-abacusai.monitor_alert_version"]], "describe() (abacusai.monitor_alert_version.monitoralertversion method)": [[102, "abacusai.monitor_alert_version.MonitorAlertVersion.describe"]], "get_status() (abacusai.monitor_alert_version.monitoralertversion method)": [[102, "abacusai.monitor_alert_version.MonitorAlertVersion.get_status"]], "refresh() (abacusai.monitor_alert_version.monitoralertversion method)": [[102, "abacusai.monitor_alert_version.MonitorAlertVersion.refresh"]], "to_dict() (abacusai.monitor_alert_version.monitoralertversion method)": [[102, "abacusai.monitor_alert_version.MonitorAlertVersion.to_dict"]], "wait_for_monitor_alert() (abacusai.monitor_alert_version.monitoralertversion method)": [[102, "abacusai.monitor_alert_version.MonitorAlertVersion.wait_for_monitor_alert"]], "naturallanguageexplanation (class in abacusai.natural_language_explanation)": [[103, "abacusai.natural_language_explanation.NaturalLanguageExplanation"]], "__repr__() (abacusai.natural_language_explanation.naturallanguageexplanation method)": [[103, "abacusai.natural_language_explanation.NaturalLanguageExplanation.__repr__"]], "abacusai.natural_language_explanation": [[103, "module-abacusai.natural_language_explanation"]], "to_dict() (abacusai.natural_language_explanation.naturallanguageexplanation method)": [[103, "abacusai.natural_language_explanation.NaturalLanguageExplanation.to_dict"]], "nestedfeature (class in abacusai.nested_feature)": [[104, "abacusai.nested_feature.NestedFeature"]], "__repr__() (abacusai.nested_feature.nestedfeature method)": [[104, "abacusai.nested_feature.NestedFeature.__repr__"]], "abacusai.nested_feature": [[104, "module-abacusai.nested_feature"]], "to_dict() (abacusai.nested_feature.nestedfeature method)": [[104, "abacusai.nested_feature.NestedFeature.to_dict"]], "nullviolation (class in abacusai.null_violation)": [[105, "abacusai.null_violation.NullViolation"]], "__repr__() (abacusai.null_violation.nullviolation method)": [[105, "abacusai.null_violation.NullViolation.__repr__"]], "abacusai.null_violation": [[105, "module-abacusai.null_violation"]], "to_dict() (abacusai.null_violation.nullviolation method)": [[105, "abacusai.null_violation.NullViolation.to_dict"]], "organizationgroup (class in abacusai.organization_group)": [[106, "abacusai.organization_group.OrganizationGroup"]], "__repr__() (abacusai.organization_group.organizationgroup method)": [[106, "abacusai.organization_group.OrganizationGroup.__repr__"]], "abacusai.organization_group": [[106, "module-abacusai.organization_group"]], "add_permission() (abacusai.organization_group.organizationgroup method)": [[106, "abacusai.organization_group.OrganizationGroup.add_permission"]], "add_user_to() (abacusai.organization_group.organizationgroup method)": [[106, "abacusai.organization_group.OrganizationGroup.add_user_to"]], "delete() (abacusai.organization_group.organizationgroup method)": [[106, "abacusai.organization_group.OrganizationGroup.delete"]], "describe() (abacusai.organization_group.organizationgroup method)": [[106, "abacusai.organization_group.OrganizationGroup.describe"]], "refresh() (abacusai.organization_group.organizationgroup method)": [[106, "abacusai.organization_group.OrganizationGroup.refresh"]], "remove_permission() (abacusai.organization_group.organizationgroup method)": [[106, "abacusai.organization_group.OrganizationGroup.remove_permission"]], "remove_user_from() (abacusai.organization_group.organizationgroup method)": [[106, "abacusai.organization_group.OrganizationGroup.remove_user_from"]], "set_default() (abacusai.organization_group.organizationgroup method)": [[106, "abacusai.organization_group.OrganizationGroup.set_default"]], "to_dict() (abacusai.organization_group.organizationgroup method)": [[106, "abacusai.organization_group.OrganizationGroup.to_dict"]], "organizationsearchresult (class in abacusai.organization_search_result)": [[107, "abacusai.organization_search_result.OrganizationSearchResult"]], "__repr__() (abacusai.organization_search_result.organizationsearchresult method)": [[107, "abacusai.organization_search_result.OrganizationSearchResult.__repr__"]], "abacusai.organization_search_result": [[107, "module-abacusai.organization_search_result"]], "to_dict() (abacusai.organization_search_result.organizationsearchresult method)": [[107, "abacusai.organization_search_result.OrganizationSearchResult.to_dict"]], "pipeline (class in abacusai.pipeline)": [[108, "abacusai.pipeline.Pipeline"]], "__repr__() (abacusai.pipeline.pipeline method)": [[108, "abacusai.pipeline.Pipeline.__repr__"]], "abacusai.pipeline": [[108, "module-abacusai.pipeline"]], "create_step() (abacusai.pipeline.pipeline method)": [[108, "abacusai.pipeline.Pipeline.create_step"]], "delete() (abacusai.pipeline.pipeline method)": [[108, "abacusai.pipeline.Pipeline.delete"]], "describe() (abacusai.pipeline.pipeline method)": [[108, "abacusai.pipeline.Pipeline.describe"]], "describe_step_by_name() (abacusai.pipeline.pipeline method)": [[108, "abacusai.pipeline.Pipeline.describe_step_by_name"]], "list_versions() (abacusai.pipeline.pipeline method)": [[108, "abacusai.pipeline.Pipeline.list_versions"]], "pause_refresh_schedule() (abacusai.pipeline.pipeline method)": [[108, "abacusai.pipeline.Pipeline.pause_refresh_schedule"]], "refresh() (abacusai.pipeline.pipeline method)": [[108, "abacusai.pipeline.Pipeline.refresh"]], "resume_refresh_schedule() (abacusai.pipeline.pipeline method)": [[108, "abacusai.pipeline.Pipeline.resume_refresh_schedule"]], "run() (abacusai.pipeline.pipeline method)": [[108, "abacusai.pipeline.Pipeline.run"]], "to_dict() (abacusai.pipeline.pipeline method)": [[108, "abacusai.pipeline.Pipeline.to_dict"]], "unset_refresh_schedule() (abacusai.pipeline.pipeline method)": [[108, "abacusai.pipeline.Pipeline.unset_refresh_schedule"]], "update() (abacusai.pipeline.pipeline method)": [[108, "abacusai.pipeline.Pipeline.update"]], "pipelinereference (class in abacusai.pipeline_reference)": [[109, "abacusai.pipeline_reference.PipelineReference"]], "__repr__() (abacusai.pipeline_reference.pipelinereference method)": [[109, "abacusai.pipeline_reference.PipelineReference.__repr__"]], "abacusai.pipeline_reference": [[109, "module-abacusai.pipeline_reference"]], "to_dict() (abacusai.pipeline_reference.pipelinereference method)": [[109, "abacusai.pipeline_reference.PipelineReference.to_dict"]], "pipelinestep (class in abacusai.pipeline_step)": [[110, "abacusai.pipeline_step.PipelineStep"]], "__repr__() (abacusai.pipeline_step.pipelinestep method)": [[110, "abacusai.pipeline_step.PipelineStep.__repr__"]], "abacusai.pipeline_step": [[110, "module-abacusai.pipeline_step"]], "delete() (abacusai.pipeline_step.pipelinestep method)": [[110, "abacusai.pipeline_step.PipelineStep.delete"]], "describe() (abacusai.pipeline_step.pipelinestep method)": [[110, "abacusai.pipeline_step.PipelineStep.describe"]], "refresh() (abacusai.pipeline_step.pipelinestep method)": [[110, "abacusai.pipeline_step.PipelineStep.refresh"]], "to_dict() (abacusai.pipeline_step.pipelinestep method)": [[110, "abacusai.pipeline_step.PipelineStep.to_dict"]], "update() (abacusai.pipeline_step.pipelinestep method)": [[110, "abacusai.pipeline_step.PipelineStep.update"]], "pipelinestepversion (class in abacusai.pipeline_step_version)": [[111, "abacusai.pipeline_step_version.PipelineStepVersion"]], "__repr__() (abacusai.pipeline_step_version.pipelinestepversion method)": [[111, "abacusai.pipeline_step_version.PipelineStepVersion.__repr__"]], "abacusai.pipeline_step_version": [[111, "module-abacusai.pipeline_step_version"]], "to_dict() (abacusai.pipeline_step_version.pipelinestepversion method)": [[111, "abacusai.pipeline_step_version.PipelineStepVersion.to_dict"]], "pipelinestepversionreference (class in abacusai.pipeline_step_version_reference)": [[112, "abacusai.pipeline_step_version_reference.PipelineStepVersionReference"]], "__repr__() (abacusai.pipeline_step_version_reference.pipelinestepversionreference method)": [[112, "abacusai.pipeline_step_version_reference.PipelineStepVersionReference.__repr__"]], "abacusai.pipeline_step_version_reference": [[112, "module-abacusai.pipeline_step_version_reference"]], "to_dict() (abacusai.pipeline_step_version_reference.pipelinestepversionreference method)": [[112, "abacusai.pipeline_step_version_reference.PipelineStepVersionReference.to_dict"]], "pipelineversion (class in abacusai.pipeline_version)": [[113, "abacusai.pipeline_version.PipelineVersion"]], "__repr__() (abacusai.pipeline_version.pipelineversion method)": [[113, "abacusai.pipeline_version.PipelineVersion.__repr__"]], "abacusai.pipeline_version": [[113, "module-abacusai.pipeline_version"]], "describe() (abacusai.pipeline_version.pipelineversion method)": [[113, "abacusai.pipeline_version.PipelineVersion.describe"]], "get_status() (abacusai.pipeline_version.pipelineversion method)": [[113, "abacusai.pipeline_version.PipelineVersion.get_status"]], "refresh() (abacusai.pipeline_version.pipelineversion method)": [[113, "abacusai.pipeline_version.PipelineVersion.refresh"]], "to_dict() (abacusai.pipeline_version.pipelineversion method)": [[113, "abacusai.pipeline_version.PipelineVersion.to_dict"]], "wait_for_pipeline() (abacusai.pipeline_version.pipelineversion method)": [[113, "abacusai.pipeline_version.PipelineVersion.wait_for_pipeline"]], "pointintimefeature (class in abacusai.point_in_time_feature)": [[114, "abacusai.point_in_time_feature.PointInTimeFeature"]], "__repr__() (abacusai.point_in_time_feature.pointintimefeature method)": [[114, "abacusai.point_in_time_feature.PointInTimeFeature.__repr__"]], "abacusai.point_in_time_feature": [[114, "module-abacusai.point_in_time_feature"]], "to_dict() (abacusai.point_in_time_feature.pointintimefeature method)": [[114, "abacusai.point_in_time_feature.PointInTimeFeature.to_dict"]], "pointintimegroup (class in abacusai.point_in_time_group)": [[115, "abacusai.point_in_time_group.PointInTimeGroup"]], "__repr__() (abacusai.point_in_time_group.pointintimegroup method)": [[115, "abacusai.point_in_time_group.PointInTimeGroup.__repr__"]], "abacusai.point_in_time_group": [[115, "module-abacusai.point_in_time_group"]], "to_dict() (abacusai.point_in_time_group.pointintimegroup method)": [[115, "abacusai.point_in_time_group.PointInTimeGroup.to_dict"]], "pointintimegroupfeature (class in abacusai.point_in_time_group_feature)": [[116, "abacusai.point_in_time_group_feature.PointInTimeGroupFeature"]], "__repr__() (abacusai.point_in_time_group_feature.pointintimegroupfeature method)": [[116, "abacusai.point_in_time_group_feature.PointInTimeGroupFeature.__repr__"]], "abacusai.point_in_time_group_feature": [[116, "module-abacusai.point_in_time_group_feature"]], "to_dict() (abacusai.point_in_time_group_feature.pointintimegroupfeature method)": [[116, "abacusai.point_in_time_group_feature.PointInTimeGroupFeature.to_dict"]], "predictionclient (class in abacusai.prediction_client)": [[117, "abacusai.prediction_client.PredictionClient"]], "abacusai.prediction_client": [[117, "module-abacusai.prediction_client"]], "check_constraints() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.check_constraints"]], "classify_image() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.classify_image"]], "classify_pdf() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.classify_pdf"]], "describe_image() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.describe_image"]], "execute_agent() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.execute_agent"]], "generate_image() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.generate_image"]], "get_alternative_assignments() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_alternative_assignments"]], "get_anomalies() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_anomalies"]], "get_assignments() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_assignments"]], "get_chat_response() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_chat_response"]], "get_classification() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_classification"]], "get_cluster() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_cluster"]], "get_entailment() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_entailment"]], "get_entities_from_pdf() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_entities_from_pdf"]], "get_forecast() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_forecast"]], "get_k_nearest() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_k_nearest"]], "get_labels() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_labels"]], "get_multiple_k_nearest() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_multiple_k_nearest"]], "get_objects_from_image() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_objects_from_image"]], "get_personalized_ranking() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_personalized_ranking"]], "get_ranked_items() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_ranked_items"]], "get_recommendations() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_recommendations"]], "get_related_items() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_related_items"]], "get_search_results() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_search_results"]], "get_sentiment() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_sentiment"]], "get_summary() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.get_summary"]], "is_anomaly() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.is_anomaly"]], "lookup_features() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.lookup_features"]], "predict() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.predict"]], "predict_churn() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.predict_churn"]], "predict_class() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.predict_class"]], "predict_fraud() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.predict_fraud"]], "predict_from_datasets() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.predict_from_datasets"]], "predict_language() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.predict_language"]], "predict_lead() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.predict_lead"]], "predict_multiple() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.predict_multiple"]], "predict_raw() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.predict_raw"]], "predict_takeover() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.predict_takeover"]], "predict_target() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.predict_target"]], "predict_with_binary_data() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.predict_with_binary_data"]], "score_image() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.score_image"]], "transcribe_audio() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.transcribe_audio"]], "transfer_style() (abacusai.prediction_client.predictionclient method)": [[117, "abacusai.prediction_client.PredictionClient.transfer_style"]], "predictiondataset (class in abacusai.prediction_dataset)": [[118, "abacusai.prediction_dataset.PredictionDataset"]], "__repr__() (abacusai.prediction_dataset.predictiondataset method)": [[118, "abacusai.prediction_dataset.PredictionDataset.__repr__"]], "abacusai.prediction_dataset": [[118, "module-abacusai.prediction_dataset"]], "to_dict() (abacusai.prediction_dataset.predictiondataset method)": [[118, "abacusai.prediction_dataset.PredictionDataset.to_dict"]], "predictionfeaturegroup (class in abacusai.prediction_feature_group)": [[119, "abacusai.prediction_feature_group.PredictionFeatureGroup"]], "__repr__() (abacusai.prediction_feature_group.predictionfeaturegroup method)": [[119, "abacusai.prediction_feature_group.PredictionFeatureGroup.__repr__"]], "abacusai.prediction_feature_group": [[119, "module-abacusai.prediction_feature_group"]], "to_dict() (abacusai.prediction_feature_group.predictionfeaturegroup method)": [[119, "abacusai.prediction_feature_group.PredictionFeatureGroup.to_dict"]], "predictioninput (class in abacusai.prediction_input)": [[120, "abacusai.prediction_input.PredictionInput"]], "__repr__() (abacusai.prediction_input.predictioninput method)": [[120, "abacusai.prediction_input.PredictionInput.__repr__"]], "abacusai.prediction_input": [[120, "module-abacusai.prediction_input"]], "to_dict() (abacusai.prediction_input.predictioninput method)": [[120, "abacusai.prediction_input.PredictionInput.to_dict"]], "predictionmetric (class in abacusai.prediction_metric)": [[121, "abacusai.prediction_metric.PredictionMetric"]], "__repr__() (abacusai.prediction_metric.predictionmetric method)": [[121, "abacusai.prediction_metric.PredictionMetric.__repr__"]], "abacusai.prediction_metric": [[121, "module-abacusai.prediction_metric"]], "to_dict() (abacusai.prediction_metric.predictionmetric method)": [[121, "abacusai.prediction_metric.PredictionMetric.to_dict"]], "predictionmetricversion (class in abacusai.prediction_metric_version)": [[122, "abacusai.prediction_metric_version.PredictionMetricVersion"]], "__repr__() (abacusai.prediction_metric_version.predictionmetricversion method)": [[122, "abacusai.prediction_metric_version.PredictionMetricVersion.__repr__"]], "abacusai.prediction_metric_version": [[122, "module-abacusai.prediction_metric_version"]], "get_status() (abacusai.prediction_metric_version.predictionmetricversion method)": [[122, "abacusai.prediction_metric_version.PredictionMetricVersion.get_status"]], "to_dict() (abacusai.prediction_metric_version.predictionmetricversion method)": [[122, "abacusai.prediction_metric_version.PredictionMetricVersion.to_dict"]], "wait_for_prediction_metric_version() (abacusai.prediction_metric_version.predictionmetricversion method)": [[122, "abacusai.prediction_metric_version.PredictionMetricVersion.wait_for_prediction_metric_version"]], "problemtype (class in abacusai.problem_type)": [[123, "abacusai.problem_type.ProblemType"]], "__repr__() (abacusai.problem_type.problemtype method)": [[123, "abacusai.problem_type.ProblemType.__repr__"]], "abacusai.problem_type": [[123, "module-abacusai.problem_type"]], "to_dict() (abacusai.problem_type.problemtype method)": [[123, "abacusai.problem_type.ProblemType.to_dict"]], "project (class in abacusai.project)": [[124, "abacusai.project.Project"]], "__repr__() (abacusai.project.project method)": [[124, "abacusai.project.Project.__repr__"]], "abacusai.project": [[124, "module-abacusai.project"]], "add_tags() (abacusai.project.project method)": [[124, "abacusai.project.Project.add_tags"]], "attach_dataset() (abacusai.project.project method)": [[124, "abacusai.project.Project.attach_dataset"]], "create_agent() (abacusai.project.project method)": [[124, "abacusai.project.Project.create_agent"]], "create_chat_session() (abacusai.project.project method)": [[124, "abacusai.project.Project.create_chat_session"]], "create_deployment_token() (abacusai.project.project method)": [[124, "abacusai.project.Project.create_deployment_token"]], "create_eda() (abacusai.project.project method)": [[124, "abacusai.project.Project.create_eda"]], "create_graph_dashboard() (abacusai.project.project method)": [[124, "abacusai.project.Project.create_graph_dashboard"]], "create_model_from_functions() (abacusai.project.project method)": [[124, "abacusai.project.Project.create_model_from_functions"]], "create_model_from_python() (abacusai.project.project method)": [[124, "abacusai.project.Project.create_model_from_python"]], "create_model_monitor() (abacusai.project.project method)": [[124, "abacusai.project.Project.create_model_monitor"]], "create_monitor_alert() (abacusai.project.project method)": [[124, "abacusai.project.Project.create_monitor_alert"]], "create_nlp_drift_monitor() (abacusai.project.project method)": [[124, "abacusai.project.Project.create_nlp_drift_monitor"]], "create_train_test_data_split_feature_group() (abacusai.project.project method)": [[124, "abacusai.project.Project.create_train_test_data_split_feature_group"]], "create_vector_store() (abacusai.project.project method)": [[124, "abacusai.project.Project.create_vector_store"]], "create_vision_drift_monitor() (abacusai.project.project method)": [[124, "abacusai.project.Project.create_vision_drift_monitor"]], "delete() (abacusai.project.project method)": [[124, "abacusai.project.Project.delete"]], "describe() (abacusai.project.project method)": [[124, "abacusai.project.Project.describe"]], "describe_feature_group() (abacusai.project.project method)": [[124, "abacusai.project.Project.describe_feature_group"]], "get_custom_train_function_info() (abacusai.project.project method)": [[124, "abacusai.project.Project.get_custom_train_function_info"]], "get_schema() (abacusai.project.project method)": [[124, "abacusai.project.Project.get_schema"]], "get_training_config_options() (abacusai.project.project method)": [[124, "abacusai.project.Project.get_training_config_options"]], "list_batch_predictions() (abacusai.project.project method)": [[124, "abacusai.project.Project.list_batch_predictions"]], "list_builtin_algorithms() (abacusai.project.project method)": [[124, "abacusai.project.Project.list_builtin_algorithms"]], "list_datasets() (abacusai.project.project method)": [[124, "abacusai.project.Project.list_datasets"]], "list_deployment_tokens() (abacusai.project.project method)": [[124, "abacusai.project.Project.list_deployment_tokens"]], "list_deployments() (abacusai.project.project method)": [[124, "abacusai.project.Project.list_deployments"]], "list_eda() (abacusai.project.project method)": [[124, "abacusai.project.Project.list_eda"]], "list_feature_group_templates() (abacusai.project.project method)": [[124, "abacusai.project.Project.list_feature_group_templates"]], "list_feature_groups() (abacusai.project.project method)": [[124, "abacusai.project.Project.list_feature_groups"]], "list_graph_dashboards() (abacusai.project.project method)": [[124, "abacusai.project.Project.list_graph_dashboards"]], "list_model_monitors() (abacusai.project.project method)": [[124, "abacusai.project.Project.list_model_monitors"]], "list_models() (abacusai.project.project method)": [[124, "abacusai.project.Project.list_models"]], "list_pipelines() (abacusai.project.project method)": [[124, "abacusai.project.Project.list_pipelines"]], "list_refresh_policies() (abacusai.project.project method)": [[124, "abacusai.project.Project.list_refresh_policies"]], "list_vector_stores() (abacusai.project.project method)": [[124, "abacusai.project.Project.list_vector_stores"]], "refresh() (abacusai.project.project method)": [[124, "abacusai.project.Project.refresh"]], "remove_column_mapping() (abacusai.project.project method)": [[124, "abacusai.project.Project.remove_column_mapping"]], "remove_dataset() (abacusai.project.project method)": [[124, "abacusai.project.Project.remove_dataset"]], "remove_tags() (abacusai.project.project method)": [[124, "abacusai.project.Project.remove_tags"]], "rename() (abacusai.project.project method)": [[124, "abacusai.project.Project.rename"]], "set_column_data_type() (abacusai.project.project method)": [[124, "abacusai.project.Project.set_column_data_type"]], "set_column_mapping() (abacusai.project.project method)": [[124, "abacusai.project.Project.set_column_mapping"]], "set_feature_mapping() (abacusai.project.project method)": [[124, "abacusai.project.Project.set_feature_mapping"]], "to_dict() (abacusai.project.project method)": [[124, "abacusai.project.Project.to_dict"]], "train_model() (abacusai.project.project method)": [[124, "abacusai.project.Project.train_model"]], "validate() (abacusai.project.project method)": [[124, "abacusai.project.Project.validate"]], "projectconfig (class in abacusai.project_config)": [[125, "abacusai.project_config.ProjectConfig"]], "__repr__() (abacusai.project_config.projectconfig method)": [[125, "abacusai.project_config.ProjectConfig.__repr__"]], "abacusai.project_config": [[125, "module-abacusai.project_config"]], "to_dict() (abacusai.project_config.projectconfig method)": [[125, "abacusai.project_config.ProjectConfig.to_dict"]], "projectdataset (class in abacusai.project_dataset)": [[126, "abacusai.project_dataset.ProjectDataset"]], "__repr__() (abacusai.project_dataset.projectdataset method)": [[126, "abacusai.project_dataset.ProjectDataset.__repr__"]], "abacusai.project_dataset": [[126, "module-abacusai.project_dataset"]], "to_dict() (abacusai.project_dataset.projectdataset method)": [[126, "abacusai.project_dataset.ProjectDataset.to_dict"]], "projectvalidation (class in abacusai.project_validation)": [[127, "abacusai.project_validation.ProjectValidation"]], "__repr__() (abacusai.project_validation.projectvalidation method)": [[127, "abacusai.project_validation.ProjectValidation.__repr__"]], "abacusai.project_validation": [[127, "module-abacusai.project_validation"]], "to_dict() (abacusai.project_validation.projectvalidation method)": [[127, "abacusai.project_validation.ProjectValidation.to_dict"]], "pythonfunction (class in abacusai.python_function)": [[128, "abacusai.python_function.PythonFunction"]], "__repr__() (abacusai.python_function.pythonfunction method)": [[128, "abacusai.python_function.PythonFunction.__repr__"]], "abacusai.python_function": [[128, "module-abacusai.python_function"]], "add_graph_to_dashboard() (abacusai.python_function.pythonfunction method)": [[128, "abacusai.python_function.PythonFunction.add_graph_to_dashboard"]], "to_dict() (abacusai.python_function.pythonfunction method)": [[128, "abacusai.python_function.PythonFunction.to_dict"]], "validate_locally() (abacusai.python_function.pythonfunction method)": [[128, "abacusai.python_function.PythonFunction.validate_locally"]], "_monkeypatch (class in abacusai.python_function_validator)": [[129, "abacusai.python_function_validator._MonkeyPatch"]], "abacusai.python_function_validator": [[129, "module-abacusai.python_function_validator"]], "context() (abacusai.python_function_validator._monkeypatch class method)": [[129, "abacusai.python_function_validator._MonkeyPatch.context"]], "syspath_prepend() (abacusai.python_function_validator._monkeypatch method)": [[129, "abacusai.python_function_validator._MonkeyPatch.syspath_prepend"]], "undo() (abacusai.python_function_validator._monkeypatch method)": [[129, "abacusai.python_function_validator._MonkeyPatch.undo"]], "validate_function_locally() (in module abacusai.python_function_validator)": [[129, "abacusai.python_function_validator.validate_function_locally"]], "pythonplotfunction (class in abacusai.python_plot_function)": [[130, "abacusai.python_plot_function.PythonPlotFunction"]], "__repr__() (abacusai.python_plot_function.pythonplotfunction method)": [[130, "abacusai.python_plot_function.PythonPlotFunction.__repr__"]], "abacusai.python_plot_function": [[130, "module-abacusai.python_plot_function"]], "to_dict() (abacusai.python_plot_function.pythonplotfunction method)": [[130, "abacusai.python_plot_function.PythonPlotFunction.to_dict"]], "rangeviolation (class in abacusai.range_violation)": [[131, "abacusai.range_violation.RangeViolation"]], "__repr__() (abacusai.range_violation.rangeviolation method)": [[131, "abacusai.range_violation.RangeViolation.__repr__"]], "abacusai.range_violation": [[131, "module-abacusai.range_violation"]], "to_dict() (abacusai.range_violation.rangeviolation method)": [[131, "abacusai.range_violation.RangeViolation.to_dict"]], "refreshpipelinerun (class in abacusai.refresh_pipeline_run)": [[132, "abacusai.refresh_pipeline_run.RefreshPipelineRun"]], "__repr__() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[132, "abacusai.refresh_pipeline_run.RefreshPipelineRun.__repr__"]], "abacusai.refresh_pipeline_run": [[132, "module-abacusai.refresh_pipeline_run"]], "describe() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[132, "abacusai.refresh_pipeline_run.RefreshPipelineRun.describe"]], "get_status() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[132, "abacusai.refresh_pipeline_run.RefreshPipelineRun.get_status"]], "refresh() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[132, "abacusai.refresh_pipeline_run.RefreshPipelineRun.refresh"]], "to_dict() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[132, "abacusai.refresh_pipeline_run.RefreshPipelineRun.to_dict"]], "wait_for_complete() (abacusai.refresh_pipeline_run.refreshpipelinerun method)": [[132, "abacusai.refresh_pipeline_run.RefreshPipelineRun.wait_for_complete"]], "refreshpolicy (class in abacusai.refresh_policy)": [[133, "abacusai.refresh_policy.RefreshPolicy"]], "__repr__() (abacusai.refresh_policy.refreshpolicy method)": [[133, "abacusai.refresh_policy.RefreshPolicy.__repr__"]], "abacusai.refresh_policy": [[133, "module-abacusai.refresh_policy"]], "delete() (abacusai.refresh_policy.refreshpolicy method)": [[133, "abacusai.refresh_policy.RefreshPolicy.delete"]], "describe() (abacusai.refresh_policy.refreshpolicy method)": [[133, "abacusai.refresh_policy.RefreshPolicy.describe"]], "list_refresh_pipeline_runs() (abacusai.refresh_policy.refreshpolicy method)": [[133, "abacusai.refresh_policy.RefreshPolicy.list_refresh_pipeline_runs"]], "pause() (abacusai.refresh_policy.refreshpolicy method)": [[133, "abacusai.refresh_policy.RefreshPolicy.pause"]], "refresh() (abacusai.refresh_policy.refreshpolicy method)": [[133, "abacusai.refresh_policy.RefreshPolicy.refresh"]], "resume() (abacusai.refresh_policy.refreshpolicy method)": [[133, "abacusai.refresh_policy.RefreshPolicy.resume"]], "run() (abacusai.refresh_policy.refreshpolicy method)": [[133, "abacusai.refresh_policy.RefreshPolicy.run"]], "to_dict() (abacusai.refresh_policy.refreshpolicy method)": [[133, "abacusai.refresh_policy.RefreshPolicy.to_dict"]], "update() (abacusai.refresh_policy.refreshpolicy method)": [[133, "abacusai.refresh_policy.RefreshPolicy.update"]], "refreshschedule (class in abacusai.refresh_schedule)": [[134, "abacusai.refresh_schedule.RefreshSchedule"]], "__repr__() (abacusai.refresh_schedule.refreshschedule method)": [[134, "abacusai.refresh_schedule.RefreshSchedule.__repr__"]], "abacusai.refresh_schedule": [[134, "module-abacusai.refresh_schedule"]], "to_dict() (abacusai.refresh_schedule.refreshschedule method)": [[134, "abacusai.refresh_schedule.RefreshSchedule.to_dict"]], "resolvedfeaturegrouptemplate (class in abacusai.resolved_feature_group_template)": [[135, "abacusai.resolved_feature_group_template.ResolvedFeatureGroupTemplate"]], "__repr__() (abacusai.resolved_feature_group_template.resolvedfeaturegrouptemplate method)": [[135, "abacusai.resolved_feature_group_template.ResolvedFeatureGroupTemplate.__repr__"]], "abacusai.resolved_feature_group_template": [[135, "module-abacusai.resolved_feature_group_template"]], "to_dict() (abacusai.resolved_feature_group_template.resolvedfeaturegrouptemplate method)": [[135, "abacusai.resolved_feature_group_template.ResolvedFeatureGroupTemplate.to_dict"]], "abstractapiclass (class in abacusai.return_class)": [[136, "abacusai.return_class.AbstractApiClass"]], "__eq__() (abacusai.return_class.abstractapiclass method)": [[136, "abacusai.return_class.AbstractApiClass.__eq__"]], "_get_attribute_as_dict() (abacusai.return_class.abstractapiclass method)": [[136, "abacusai.return_class.AbstractApiClass._get_attribute_as_dict"]], "abacusai.return_class": [[136, "module-abacusai.return_class"]], "schema (class in abacusai.schema)": [[137, "abacusai.schema.Schema"]], "__repr__() (abacusai.schema.schema method)": [[137, "abacusai.schema.Schema.__repr__"]], "abacusai.schema": [[137, "module-abacusai.schema"]], "to_dict() (abacusai.schema.schema method)": [[137, "abacusai.schema.Schema.to_dict"]], "streamingauthtoken (class in abacusai.streaming_auth_token)": [[138, "abacusai.streaming_auth_token.StreamingAuthToken"]], "__repr__() (abacusai.streaming_auth_token.streamingauthtoken method)": [[138, "abacusai.streaming_auth_token.StreamingAuthToken.__repr__"]], "abacusai.streaming_auth_token": [[138, "module-abacusai.streaming_auth_token"]], "to_dict() (abacusai.streaming_auth_token.streamingauthtoken method)": [[138, "abacusai.streaming_auth_token.StreamingAuthToken.to_dict"]], "streamingclient (class in abacusai.streaming_client)": [[139, "abacusai.streaming_client.StreamingClient"]], "abacusai.streaming_client": [[139, "module-abacusai.streaming_client"]], "append_data() (abacusai.streaming_client.streamingclient method)": [[139, "abacusai.streaming_client.StreamingClient.append_data"]], "append_multiple_data() (abacusai.streaming_client.streamingclient method)": [[139, "abacusai.streaming_client.StreamingClient.append_multiple_data"]], "delete_item_embeddings() (abacusai.streaming_client.streamingclient method)": [[139, "abacusai.streaming_client.StreamingClient.delete_item_embeddings"]], "upsert_data() (abacusai.streaming_client.streamingclient method)": [[139, "abacusai.streaming_client.StreamingClient.upsert_data"]], "upsert_item_embeddings() (abacusai.streaming_client.streamingclient method)": [[139, "abacusai.streaming_client.StreamingClient.upsert_item_embeddings"]], "upsert_multiple_data() (abacusai.streaming_client.streamingclient method)": [[139, "abacusai.streaming_client.StreamingClient.upsert_multiple_data"]], "upsert_multiple_item_embeddings() (abacusai.streaming_client.streamingclient method)": [[139, "abacusai.streaming_client.StreamingClient.upsert_multiple_item_embeddings"]], "streamingconnector (class in abacusai.streaming_connector)": [[140, "abacusai.streaming_connector.StreamingConnector"]], "__repr__() (abacusai.streaming_connector.streamingconnector method)": [[140, "abacusai.streaming_connector.StreamingConnector.__repr__"]], "abacusai.streaming_connector": [[140, "module-abacusai.streaming_connector"]], "delete() (abacusai.streaming_connector.streamingconnector method)": [[140, "abacusai.streaming_connector.StreamingConnector.delete"]], "rename() (abacusai.streaming_connector.streamingconnector method)": [[140, "abacusai.streaming_connector.StreamingConnector.rename"]], "to_dict() (abacusai.streaming_connector.streamingconnector method)": [[140, "abacusai.streaming_connector.StreamingConnector.to_dict"]], "verify() (abacusai.streaming_connector.streamingconnector method)": [[140, "abacusai.streaming_connector.StreamingConnector.verify"]], "trainingconfigoptions (class in abacusai.training_config_options)": [[141, "abacusai.training_config_options.TrainingConfigOptions"]], "__repr__() (abacusai.training_config_options.trainingconfigoptions method)": [[141, "abacusai.training_config_options.TrainingConfigOptions.__repr__"]], "abacusai.training_config_options": [[141, "module-abacusai.training_config_options"]], "to_dict() (abacusai.training_config_options.trainingconfigoptions method)": [[141, "abacusai.training_config_options.TrainingConfigOptions.to_dict"]], "typeviolation (class in abacusai.type_violation)": [[142, "abacusai.type_violation.TypeViolation"]], "__repr__() (abacusai.type_violation.typeviolation method)": [[142, "abacusai.type_violation.TypeViolation.__repr__"]], "abacusai.type_violation": [[142, "module-abacusai.type_violation"]], "to_dict() (abacusai.type_violation.typeviolation method)": [[142, "abacusai.type_violation.TypeViolation.to_dict"]], "upload (class in abacusai.upload)": [[143, "abacusai.upload.Upload"]], "__repr__() (abacusai.upload.upload method)": [[143, "abacusai.upload.Upload.__repr__"]], "_yield_upload_part() (abacusai.upload.upload method)": [[143, "abacusai.upload.Upload._yield_upload_part"]], "abacusai.upload": [[143, "module-abacusai.upload"]], "cancel() (abacusai.upload.upload method)": [[143, "abacusai.upload.Upload.cancel"]], "describe() (abacusai.upload.upload method)": [[143, "abacusai.upload.Upload.describe"]], "get_status() (abacusai.upload.upload method)": [[143, "abacusai.upload.Upload.get_status"]], "mark_complete() (abacusai.upload.upload method)": [[143, "abacusai.upload.Upload.mark_complete"]], "part() (abacusai.upload.upload method)": [[143, "abacusai.upload.Upload.part"]], "refresh() (abacusai.upload.upload method)": [[143, "abacusai.upload.Upload.refresh"]], "to_dict() (abacusai.upload.upload method)": [[143, "abacusai.upload.Upload.to_dict"]], "upload_file() (abacusai.upload.upload method)": [[143, "abacusai.upload.Upload.upload_file"]], "upload_part() (abacusai.upload.upload method)": [[143, "abacusai.upload.Upload.upload_part"]], "wait_for_join() (abacusai.upload.upload method)": [[143, "abacusai.upload.Upload.wait_for_join"]], "uploadpart (class in abacusai.upload_part)": [[144, "abacusai.upload_part.UploadPart"]], "__repr__() (abacusai.upload_part.uploadpart method)": [[144, "abacusai.upload_part.UploadPart.__repr__"]], "abacusai.upload_part": [[144, "module-abacusai.upload_part"]], "to_dict() (abacusai.upload_part.uploadpart method)": [[144, "abacusai.upload_part.UploadPart.to_dict"]], "usecase (class in abacusai.use_case)": [[145, "abacusai.use_case.UseCase"]], "__repr__() (abacusai.use_case.usecase method)": [[145, "abacusai.use_case.UseCase.__repr__"]], "abacusai.use_case": [[145, "module-abacusai.use_case"]], "to_dict() (abacusai.use_case.usecase method)": [[145, "abacusai.use_case.UseCase.to_dict"]], "usecaserequirements (class in abacusai.use_case_requirements)": [[146, "abacusai.use_case_requirements.UseCaseRequirements"]], "__repr__() (abacusai.use_case_requirements.usecaserequirements method)": [[146, "abacusai.use_case_requirements.UseCaseRequirements.__repr__"]], "abacusai.use_case_requirements": [[146, "module-abacusai.use_case_requirements"]], "to_dict() (abacusai.use_case_requirements.usecaserequirements method)": [[146, "abacusai.use_case_requirements.UseCaseRequirements.to_dict"]], "user (class in abacusai.user)": [[147, "abacusai.user.User"]], "__repr__() (abacusai.user.user method)": [[147, "abacusai.user.User.__repr__"]], "abacusai.user": [[147, "module-abacusai.user"]], "to_dict() (abacusai.user.user method)": [[147, "abacusai.user.User.to_dict"]], "userexception (class in abacusai.user_exception)": [[148, "abacusai.user_exception.UserException"]], "__repr__() (abacusai.user_exception.userexception method)": [[148, "abacusai.user_exception.UserException.__repr__"]], "abacusai.user_exception": [[148, "module-abacusai.user_exception"]], "to_dict() (abacusai.user_exception.userexception method)": [[148, "abacusai.user_exception.UserException.to_dict"]], "vectorstore (class in abacusai.vector_store)": [[149, "abacusai.vector_store.VectorStore"]], "__repr__() (abacusai.vector_store.vectorstore method)": [[149, "abacusai.vector_store.VectorStore.__repr__"]], "abacusai.vector_store": [[149, "module-abacusai.vector_store"]], "create_version() (abacusai.vector_store.vectorstore method)": [[149, "abacusai.vector_store.VectorStore.create_version"]], "delete() (abacusai.vector_store.vectorstore method)": [[149, "abacusai.vector_store.VectorStore.delete"]], "describe() (abacusai.vector_store.vectorstore method)": [[149, "abacusai.vector_store.VectorStore.describe"]], "get_status() (abacusai.vector_store.vectorstore method)": [[149, "abacusai.vector_store.VectorStore.get_status"]], "list_versions() (abacusai.vector_store.vectorstore method)": [[149, "abacusai.vector_store.VectorStore.list_versions"]], "lookup() (abacusai.vector_store.vectorstore method)": [[149, "abacusai.vector_store.VectorStore.lookup"]], "refresh() (abacusai.vector_store.vectorstore method)": [[149, "abacusai.vector_store.VectorStore.refresh"]], "to_dict() (abacusai.vector_store.vectorstore method)": [[149, "abacusai.vector_store.VectorStore.to_dict"]], "update() (abacusai.vector_store.vectorstore method)": [[149, "abacusai.vector_store.VectorStore.update"]], "wait_until_ready() (abacusai.vector_store.vectorstore method)": [[149, "abacusai.vector_store.VectorStore.wait_until_ready"]], "vectorstorelookupresult (class in abacusai.vector_store_lookup_result)": [[150, "abacusai.vector_store_lookup_result.VectorStoreLookupResult"]], "__repr__() (abacusai.vector_store_lookup_result.vectorstorelookupresult method)": [[150, "abacusai.vector_store_lookup_result.VectorStoreLookupResult.__repr__"]], "abacusai.vector_store_lookup_result": [[150, "module-abacusai.vector_store_lookup_result"]], "to_dict() (abacusai.vector_store_lookup_result.vectorstorelookupresult method)": [[150, "abacusai.vector_store_lookup_result.VectorStoreLookupResult.to_dict"]], "vectorstoreversion (class in abacusai.vector_store_version)": [[151, "abacusai.vector_store_version.VectorStoreVersion"]], "__repr__() (abacusai.vector_store_version.vectorstoreversion method)": [[151, "abacusai.vector_store_version.VectorStoreVersion.__repr__"]], "abacusai.vector_store_version": [[151, "module-abacusai.vector_store_version"]], "describe() (abacusai.vector_store_version.vectorstoreversion method)": [[151, "abacusai.vector_store_version.VectorStoreVersion.describe"]], "get_status() (abacusai.vector_store_version.vectorstoreversion method)": [[151, "abacusai.vector_store_version.VectorStoreVersion.get_status"]], "refresh() (abacusai.vector_store_version.vectorstoreversion method)": [[151, "abacusai.vector_store_version.VectorStoreVersion.refresh"]], "to_dict() (abacusai.vector_store_version.vectorstoreversion method)": [[151, "abacusai.vector_store_version.VectorStoreVersion.to_dict"]], "wait_for_results() (abacusai.vector_store_version.vectorstoreversion method)": [[151, "abacusai.vector_store_version.VectorStoreVersion.wait_for_results"]], "wait_until_ready() (abacusai.vector_store_version.vectorstoreversion method)": [[151, "abacusai.vector_store_version.VectorStoreVersion.wait_until_ready"]], "webhook (class in abacusai.webhook)": [[152, "abacusai.webhook.Webhook"]], "__repr__() (abacusai.webhook.webhook method)": [[152, "abacusai.webhook.Webhook.__repr__"]], "abacusai.webhook": [[152, "module-abacusai.webhook"]], "delete() (abacusai.webhook.webhook method)": [[152, "abacusai.webhook.Webhook.delete"]], "describe() (abacusai.webhook.webhook method)": [[152, "abacusai.webhook.Webhook.describe"]], "refresh() (abacusai.webhook.webhook method)": [[152, "abacusai.webhook.Webhook.refresh"]], "to_dict() (abacusai.webhook.webhook method)": [[152, "abacusai.webhook.Webhook.to_dict"]], "update() (abacusai.webhook.webhook method)": [[152, "abacusai.webhook.Webhook.update"]]}})