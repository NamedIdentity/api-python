:py:mod:`abacusai.model_monitor_version`
========================================

.. py:module:: abacusai.model_monitor_version


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   abacusai.model_monitor_version.ModelMonitorVersion




.. py:class:: ModelMonitorVersion(client, modelMonitorVersion=None, status=None, modelMonitorId=None, monitoringStartedAt=None, monitoringCompletedAt=None, trainingFeatureGroupVersion=None, predictionFeatureGroupVersion=None, error=None, pendingDeploymentIds=None, failedDeploymentIds=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`

   A version of a model monitor

   .. py:method:: __repr__(self)

      Return repr(self).


   .. py:method:: to_dict(self)


   .. py:method:: refresh(self)

      Calls describe and refreshes the current object's fields


   .. py:method:: describe(self)

      Retrieves a full description of the specified model monitor version


   .. py:method:: delete(self)

      Deletes the specified model monitor version.


   .. py:method:: get_model_monitoring_logs(self, stdout=False, stderr=False)

      Returns monitoring logs for the model.


   .. py:method:: get_drift_for_feature(self, feature_name)

      Gets the feature drift associated with a single feature in an output feature group from a prediction.


   .. py:method:: get_outliers_for_feature(self, feature_name=None)

      Gets a list of outliers measured by a single feature (or overall) in an output feature group from a prediction.


   .. py:method:: wait_for_monitor(self, timeout=1200)

      A waiting call until model monitor version is ready.

      :param timeout: The waiting time given to the call to finish, if it doesn't finish by the allocated time, the call is said to be timed out. Default value given is 1200 milliseconds.
      :type timeout: int, optional

      :returns: None


   .. py:method:: get_status(self)

      Gets the status of the model monitor version.

      :returns: A string describing the status of the model monitor version, for e.g., pending, complete, etc.
      :rtype: Enum (string)



